{
  "root": true,
  "env": {
    "browser": true,
    "node": true,
    "es2022": true,
    "jest": true
  },
  "extends": [
    "eslint:recommended",
    "@typescript-eslint/recommended",
    "@typescript-eslint/recommended-requiring-type-checking"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2022,
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "plugins": [
    "@typescript-eslint",
    "security",
    "sonarjs",
    "import"
  ],
  "rules": {
    // Security Rules (Critical for Enterprise)
    "security/detect-object-injection": "error",
    "security/detect-non-literal-regexp": "warn",
    "security/detect-unsafe-regex": "error",
    "security/detect-buffer-noassert": "error",
    "security/detect-child-process": "warn",
    "security/detect-disable-mustache-escape": "error",
    "security/detect-eval-with-expression": "error",
    "security/detect-no-csrf-before-method-override": "error",
    "security/detect-non-literal-fs-filename": "warn",
    "security/detect-non-literal-require": "warn",
    "security/detect-possible-timing-attacks": "warn",
    "security/detect-pseudoRandomBytes": "error",
    
    // TypeScript Rules (Type Safety)
    "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/explicit-function-return-type": "warn",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/prefer-readonly": "warn",
    "@typescript-eslint/strict-boolean-expressions": "error",
    
    // Code Quality Rules
    "sonarjs/no-duplicate-string": "warn",
    "sonarjs/cognitive-complexity": ["warn", 15],
    "sonarjs/no-identical-functions": "error",
    "sonarjs/no-duplicated-branches": "error",
    "sonarjs/no-small-switch": "warn",
    "sonarjs/prefer-immediate-return": "warn",
    
    // Import Rules
    "import/order": ["error", {
      "groups": [
        "builtin",
        "external", 
        "internal",
        "parent",
        "sibling",
        "index"
      ],
      "newlines-between": "always",
      "alphabetize": {
        "order": "asc",
        "caseInsensitive": true
      }
    }],
    "import/no-unresolved": "error",
    "import/no-cycle": "error",
    "import/no-unused-modules": "warn",
    
    // General ESLint Rules
    "no-console": "warn",
    "no-debugger": "error",
    "no-alert": "error",
    "no-eval": "error",
    "no-implied-eval": "error",
    "no-new-func": "error",
    "no-script-url": "error",
    "prefer-const": "error",
    "no-var": "error",
    "eqeqeq": ["error", "always"],
    "curly": ["error", "all"],
    "dot-notation": "error",
    "no-multi-spaces": "error",
    "no-trailing-spaces": "error",
    "no-multiple-empty-lines": ["error", { "max": 2, "maxEOF": 1 }],
    "comma-dangle": ["error", "always-multiline"],
    "semi": ["error", "always"],
    "quotes": ["error", "single", { "avoidEscape": true }]
  },
  "overrides": [
    {
      "files": ["**/*.js"],
      "rules": {
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/explicit-function-return-type": "off"
      }
    },
    {
      "files": ["**/*.test.ts", "**/*.test.tsx", "**/*.spec.ts", "**/*.spec.tsx"],
      "env": {
        "jest": true
      },
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "sonarjs/no-duplicate-string": "off"
      }
    },
    {
      "files": ["frontend/**/*.tsx", "frontend/**/*.ts"],
      "extends": [
        "next/core-web-vitals"
      ],
      "env": {
        "browser": true
      },
      "rules": {
        "react/react-in-jsx-scope": "off",
        "react-hooks/exhaustive-deps": "error"
      }
    },
    {
      "files": ["backend/**/*.ts", "auth/**/*.ts"],
      "env": {
        "node": true
      },
      "rules": {
        "no-console": "off"
      }
    }
  ],
  "settings": {
    "import/resolver": {
      "typescript": {
        "project": [
          "./tsconfig.json",
          "./backend/tsconfig.json", 
          "./frontend/tsconfig.json",
          "./auth/tsconfig.json"
        ]
      }
    }
  },
  "ignorePatterns": [
    "node_modules/",
    "dist/",
    "build/",
    ".next/",
    "coverage/",
    "*.min.js",
    "*.bundle.js"
  ]
}