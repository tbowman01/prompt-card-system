# GitHub Actions Configuration and Optimization
# This file documents the optimized workflow configuration for the prompt-card-system

repository:
  name: prompt-card-system
  owner: tbowman01
  default_branch: develop
  
workflow_optimization:
  # Performance improvements implemented
  cache_strategy: "manual"  # Removed problematic 'npm' cache, using manual cache strategy
  dependency_caching: true
  artifact_management: true
  parallel_execution: true
  
  # Security enhancements
  permissions:
    contents: read
    issues: write
    pull-requests: write
    checks: write
    actions: read
    security-events: write
    statuses: write
    deployments: write
  
  # Workflow triggers optimized for efficiency
  triggers:
    push_branches: [main, develop]
    pull_request_branches: [main, develop]
    workflow_dispatch: true
    schedule: "0 6 * * *"  # Daily at 6 AM UTC
  
  # Matrix strategy for comprehensive testing
  node_versions: [20, 22]
  test_environments: [development, staging, production]
  
secrets_required:
  # Required secrets for full functionality
  - GITHUB_TOKEN  # Automatically provided
  - DOCKER_USERNAME  # For Docker Hub publishing
  - DOCKER_PASSWORD  # For Docker Hub authentication
  - SLACK_WEBHOOK_URL  # For notifications (optional)
  - CODECOV_TOKEN  # For coverage reporting (optional)

features_enabled:
  - auto_labeling: true
  - issue_triage: true
  - pr_quality_checks: true
  - project_board_automation: true
  - label_synchronization: true
  - development_kickoff: true
  - security_scanning: true
  - performance_monitoring: true
  - progress_tracking: true

workflow_status:
  # Current workflow states
  ci_pipeline: "optimized"  # Using ci-minimal.yml for emergency
  pr_quality: "active"
  issue_management: "active"
  automation: "active"
  security: "active"
  
branch_protection:
  develop:
    required_status_checks: true
    required_reviews: 1
    dismiss_stale_reviews: true
    enforce_admins: false
    allow_force_pushes: false
    
  main:
    required_status_checks: true
    required_reviews: 2
    dismiss_stale_reviews: true
    enforce_admins: true
    allow_force_pushes: false
    
automation_features:
  # Automated processes
  branch_creation: true  # Creates feature branches automatically
  issue_linking: true    # Links PRs to issues automatically
  status_updates: true   # Updates issue/PR status automatically
  quality_checks: true   # Runs quality gates automatically
  notifications: true    # Sends status notifications
  metrics_tracking: true # Tracks development metrics
  
performance_optimizations:
  # Implemented performance improvements
  - "Removed problematic npm cache, using manual cache strategy"
  - "Added system dependency installation for SQLite"
  - "Implemented parallel job execution"
  - "Added artifact caching for build outputs"
  - "Optimized Docker build process with cache layers"
  - "Streamlined dependency installation process"
  
quality_gates:
  # Quality requirements
  code_coverage: 80
  linting: required
  type_checking: required
  security_scan: required
  test_passing: required
  build_success: required
  
notifications:
  channels:
    - slack: "#ci-cd"
    - github_comments: true
    - status_checks: true
    - email: false  # Disabled to reduce noise