# üõ°Ô∏è GitLeaks Security Configuration
# Enterprise-grade secret detection for vLLM Swarm Platform

title = "GitLeaks Security Configuration for vLLM Enterprise Platform"

[extend]
# Use GitLeaks default configuration as baseline
useDefault = true

[[rules]]
id = "jwt-secret"
description = "JWT Secret Key"
regex = '''(?i)(jwt[_-]?secret|jwt[_-]?key|secret[_-]?key)\s*[:=]\s*['"]?([a-zA-Z0-9_\-\+/=]{32,})['"]?'''
tags = ["jwt", "secret", "authentication"]
severity = "high"

[[rules]]
id = "api-key-generic"
description = "Generic API Key"
regex = '''(?i)(api[_-]?key|apikey)\s*[:=]\s*['"]?([a-zA-Z0-9_\-]{16,})['"]?'''
tags = ["api", "key", "authentication"]
severity = "high"

[[rules]]
id = "database-url"
description = "Database Connection URL"
regex = '''(?i)(database[_-]?url|db[_-]?url|connection[_-]?string)\s*[:=]\s*['"]?(postgres|mysql|mongodb|redis)://[^'";\s]+['"]?'''
tags = ["database", "connection", "credentials"]
severity = "critical"

[[rules]]
id = "redis-password"
description = "Redis Password"
regex = '''(?i)(redis[_-]?password|redis[_-]?auth)\s*[:=]\s*['"]?([a-zA-Z0-9_\-\+/=]{8,})['"]?'''
tags = ["redis", "password", "database"]
severity = "high"

[[rules]]
id = "docker-secret"
description = "Docker Secret"
regex = '''(?i)(docker[_-]?password|registry[_-]?token)\s*[:=]\s*['"]?([a-zA-Z0-9_\-\+/=]{16,})['"]?'''
tags = ["docker", "secret", "registry"]
severity = "medium"

[[rules]]
id = "github-token"
description = "GitHub Token"
regex = '''gh[pousr]_[A-Za-z0-9_]{36,255}'''
tags = ["github", "token", "api"]
severity = "critical"

[[rules]]
id = "openai-api-key"
description = "OpenAI API Key"
regex = '''sk-[a-zA-Z0-9]{20}T3BlbkFJ[a-zA-Z0-9]{20}'''
tags = ["openai", "api", "llm"]
severity = "critical"

[[rules]]
id = "anthropic-api-key"
description = "Anthropic API Key"
regex = '''sk-ant-api03-[a-zA-Z0-9\-_]{95}'''
tags = ["anthropic", "api", "llm"]
severity = "critical"

[[rules]]
id = "aws-access-key"
description = "AWS Access Key"
regex = '''AKIA[0-9A-Z]{16}'''
tags = ["aws", "access", "key"]
severity = "critical"

[[rules]]
id = "aws-secret-key"
description = "AWS Secret Key"
regex = '''(?i)(aws[_-]?secret|secret[_-]?access[_-]?key)\s*[:=]\s*['"]?([a-zA-Z0-9/+=]{40})['"]?'''
tags = ["aws", "secret", "key"]
severity = "critical"

[[rules]]
id = "private-key-rsa"
description = "RSA Private Key"
regex = '''-----BEGIN RSA PRIVATE KEY-----'''
tags = ["private", "key", "rsa"]
severity = "critical"

[[rules]]
id = "private-key-openssh"
description = "OpenSSH Private Key"
regex = '''-----BEGIN OPENSSH PRIVATE KEY-----'''
tags = ["private", "key", "openssh"]
severity = "critical"

[[rules]]
id = "slack-webhook"
description = "Slack Webhook URL"
regex = '''https://hooks\.slack\.com/services/[A-Z0-9]{9}/[A-Z0-9]{9}/[a-zA-Z0-9]{24}'''
tags = ["slack", "webhook", "notification"]
severity = "medium"

[[rules]]
id = "discord-webhook"
description = "Discord Webhook URL"
regex = '''https://discord(app)?\.com/api/webhooks/[0-9]{18}/[a-zA-Z0-9\-_]{68}'''
tags = ["discord", "webhook", "notification"]
severity = "medium"

[[rules]]
id = "smtp-password"
description = "SMTP Password"
regex = '''(?i)(smtp[_-]?password|mail[_-]?password)\s*[:=]\s*['"]?([a-zA-Z0-9_\-\+/=]{8,})['"]?'''
tags = ["smtp", "email", "password"]
severity = "medium"

[[rules]]
id = "encryption-key"
description = "Encryption Key"
regex = '''(?i)(encryption[_-]?key|cipher[_-]?key|crypto[_-]?key)\s*[:=]\s*['"]?([a-zA-Z0-9_\-\+/=]{32,})['"]?'''
tags = ["encryption", "key", "crypto"]
severity = "high"

[[rules]]
id = "vllm-api-key"
description = "vLLM API Key"
regex = '''(?i)(vllm[_-]?api[_-]?key|vllm[_-]?token)\s*[:=]\s*['"]?([a-zA-Z0-9_\-\+/=]{16,})['"]?'''
tags = ["vllm", "api", "key"]
severity = "high"

[[rules]]
id = "langfuse-secret"
description = "Langfuse Secret Key"
regex = '''(?i)(langfuse[_-]?secret|langfuse[_-]?key)\s*[:=]\s*['"]?([a-zA-Z0-9_\-\+/=]{16,})['"]?'''
tags = ["langfuse", "secret", "observability"]
severity = "high"

[[rules]]
id = "oauth-secret"
description = "OAuth Client Secret"
regex = '''(?i)(client[_-]?secret|oauth[_-]?secret)\s*[:=]\s*['"]?([a-zA-Z0-9_\-\+/=]{16,})['"]?'''
tags = ["oauth", "secret", "authentication"]
severity = "high"

[[rules]]
id = "session-secret"
description = "Session Secret"
regex = '''(?i)(session[_-]?secret|session[_-]?key)\s*[:=]\s*['"]?([a-zA-Z0-9_\-\+/=]{16,})['"]?'''
tags = ["session", "secret", "authentication"]
severity = "high"

# ===== ALLOWLIST CONFIGURATION =====

[[allowlist]]
description = "Ignore test files and examples"
paths = [
    '''.*test.*''',
    '''.*spec.*''',
    '''.*example.*''',
    '''.*sample.*''',
    '''.*mock.*''',
    '''.*/tests/.*''',
    '''.*/examples/.*''',
    '''.*/samples/.*''',
    '''.*/mocks/.*''',
]

[[allowlist]]
description = "Ignore documentation and configuration files"
paths = [
    '''.*\.md$''',
    '''.*\.txt$''',
    '''.*\.rst$''',
    '''.*\.yml$''',
    '''.*\.yaml$''',
    '''.*\.json$''',
    '''.*\.toml$''',
    '''.*\.ini$''',
    '''.*\.cfg$''',
    '''.*\.conf$''',
]

[[allowlist]]
description = "Ignore specific safe patterns"
regexes = [
    '''example\.com''',
    '''localhost''',
    '''127\.0\.0\.1''',
    '''0\.0\.0\.0''',
    '''your-secret-here''',
    '''replace-with-actual''',
    '''CHANGEME''',
    '''TODO''',
    '''FIXME''',
    '''XXX''',
]

[[allowlist]]
description = "Ignore development and build artifacts"
paths = [
    '''.*/node_modules/.*''',
    '''.*/dist/.*''',
    '''.*/build/.*''',
    '''.*/coverage/.*''',
    '''.*/\.next/.*''',
    '''.*/\.git/.*''',
    '''.*/\.vscode/.*''',
    '''.*/\.idea/.*''',
]

[[allowlist]]
description = "Ignore specific file types that commonly contain false positives"
paths = [
    '''.*\.lock$''',
    '''.*\.log$''',
    '''.*\.min\.js$''',
    '''.*\.min\.css$''',
    '''.*\.map$''',
    '''.*\.svg$''',
    '''.*\.png$''',
    '''.*\.jpg$''',
    '''.*\.jpeg$''',
    '''.*\.gif$''',
    '''.*\.ico$''',
    '''.*\.woff$''',
    '''.*\.woff2$''',
    '''.*\.ttf$''',
    '''.*\.eot$''',
]

# ===== ENTROPY DETECTION =====

[[rules]]
id = "high-entropy-base64"
description = "High entropy base64 string"
regex = '''[A-Za-z0-9+/]{40,}={0,2}'''
entropy = 4.5
tags = ["entropy", "base64", "potential-secret"]
severity = "medium"

[[rules]]
id = "high-entropy-hex"
description = "High entropy hexadecimal string"
regex = '''[a-fA-F0-9]{32,}'''
entropy = 3.5
tags = ["entropy", "hex", "potential-secret"]
severity = "medium"

# ===== GLOBAL CONFIGURATION =====

[allowlist]
description = "Global allowlist for common false positives"
files = [
    '''package-lock\.json$''',
    '''yarn\.lock$''',
    '''pnpm-lock\.yaml$''',
    '''Pipfile\.lock$''',
    '''poetry\.lock$''',
    '''Cargo\.lock$''',
    '''go\.sum$''',
]

# ===== SECURITY NOTES =====
#
# This GitLeaks configuration is specifically designed for the vLLM Enterprise Platform:
#
# 1. COMPREHENSIVE DETECTION:
#    - JWT secrets and API keys
#    - Database connection strings
#    - Cloud provider credentials (AWS, etc.)
#    - LLM API keys (OpenAI, Anthropic)
#    - Platform-specific secrets (vLLM, Langfuse)
#    - Standard secrets (SSH keys, webhooks)
#
# 2. ENTROPY DETECTION:
#    - Base64 encoded secrets
#    - Hexadecimal secrets
#    - High-entropy strings that might be tokens
#
# 3. SMART ALLOWLISTING:
#    - Test files and examples excluded
#    - Documentation files excluded
#    - Build artifacts and dependencies excluded
#    - Common false positive patterns excluded
#
# 4. SEVERITY LEVELS:
#    - CRITICAL: Production credentials, private keys
#    - HIGH: API keys, authentication secrets
#    - MEDIUM: Webhooks, development tokens
#
# 5. PERFORMANCE OPTIMIZATION:
#    - Targeted regex patterns for speed
#    - Comprehensive allowlists to reduce false positives
#    - Entropy thresholds tuned for accuracy
#
# USAGE:
#   - Pre-commit hook: Automatically runs on commit
#   - Manual scan: gitleaks detect --config .gitleaks.toml
#   - CI/CD: Integrated into security-enhanced.yml workflow
#   - Historical scan: gitleaks detect --config .gitleaks.toml --log-level debug
#
# CUSTOMIZATION:
#   - Add new rules for project-specific secrets
#   - Adjust entropy thresholds based on findings
#   - Update allowlists for new file patterns
#   - Modify severity levels based on risk assessment