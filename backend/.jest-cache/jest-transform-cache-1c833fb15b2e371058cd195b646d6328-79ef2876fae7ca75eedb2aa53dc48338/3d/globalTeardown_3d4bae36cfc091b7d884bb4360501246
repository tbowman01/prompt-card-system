ac459abdd7eabfd8da537270ad1166f5
// Global test teardown - runs once after all tests
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return globalTeardown;
    }
});
const _fs = /*#__PURE__*/ _interop_require_default(require("fs"));
const _path = /*#__PURE__*/ _interop_require_default(require("path"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
async function globalTeardown() {
    console.log('üß™ Cleaning up global test environment...');
    // Clean up test database
    const testDbPath = process.env.DATABASE_PATH || _path.default.join(__dirname, '../../data/test.sqlite');
    try {
        if (_fs.default.existsSync(testDbPath)) {
            _fs.default.unlinkSync(testDbPath);
            console.log('‚úÖ Test database cleaned up');
        }
        // Clean up WAL and SHM files if they exist
        const walFile = testDbPath + '-wal';
        const shmFile = testDbPath + '-shm';
        if (_fs.default.existsSync(walFile)) _fs.default.unlinkSync(walFile);
        if (_fs.default.existsSync(shmFile)) _fs.default.unlinkSync(shmFile);
    } catch (error) {
        console.error('‚ùå Error cleaning up test database:', error);
    }
    console.log('‚úÖ Global test teardown complete');
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL3Byb21wdC1jYXJkLXN5c3RlbS9iYWNrZW5kL3NyYy90ZXN0cy9nbG9iYWxUZWFyZG93bi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBHbG9iYWwgdGVzdCB0ZWFyZG93biAtIHJ1bnMgb25jZSBhZnRlciBhbGwgdGVzdHNcbmltcG9ydCBmcyBmcm9tICdmcyc7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gZ2xvYmFsVGVhcmRvd24oKTogUHJvbWlzZTx2b2lkPiB7XG4gIGNvbnNvbGUubG9nKCfwn6eqIENsZWFuaW5nIHVwIGdsb2JhbCB0ZXN0IGVudmlyb25tZW50Li4uJyk7XG4gIFxuICAvLyBDbGVhbiB1cCB0ZXN0IGRhdGFiYXNlXG4gIGNvbnN0IHRlc3REYlBhdGggPSBwcm9jZXNzLmVudi5EQVRBQkFTRV9QQVRIIHx8IHBhdGguam9pbihfX2Rpcm5hbWUsICcuLi8uLi9kYXRhL3Rlc3Quc3FsaXRlJyk7XG4gIFxuICB0cnkge1xuICAgIGlmIChmcy5leGlzdHNTeW5jKHRlc3REYlBhdGgpKSB7XG4gICAgICBmcy51bmxpbmtTeW5jKHRlc3REYlBhdGgpO1xuICAgICAgY29uc29sZS5sb2coJ+KchSBUZXN0IGRhdGFiYXNlIGNsZWFuZWQgdXAnKTtcbiAgICB9XG4gICAgXG4gICAgLy8gQ2xlYW4gdXAgV0FMIGFuZCBTSE0gZmlsZXMgaWYgdGhleSBleGlzdFxuICAgIGNvbnN0IHdhbEZpbGUgPSB0ZXN0RGJQYXRoICsgJy13YWwnO1xuICAgIGNvbnN0IHNobUZpbGUgPSB0ZXN0RGJQYXRoICsgJy1zaG0nO1xuICAgIFxuICAgIGlmIChmcy5leGlzdHNTeW5jKHdhbEZpbGUpKSBmcy51bmxpbmtTeW5jKHdhbEZpbGUpO1xuICAgIGlmIChmcy5leGlzdHNTeW5jKHNobUZpbGUpKSBmcy51bmxpbmtTeW5jKHNobUZpbGUpO1xuICAgIFxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBFcnJvciBjbGVhbmluZyB1cCB0ZXN0IGRhdGFiYXNlOicsIGVycm9yKTtcbiAgfVxuICBcbiAgY29uc29sZS5sb2coJ+KchSBHbG9iYWwgdGVzdCB0ZWFyZG93biBjb21wbGV0ZScpO1xufSJdLCJuYW1lcyI6WyJnbG9iYWxUZWFyZG93biIsImNvbnNvbGUiLCJsb2ciLCJ0ZXN0RGJQYXRoIiwicHJvY2VzcyIsImVudiIsIkRBVEFCQVNFX1BBVEgiLCJwYXRoIiwiam9pbiIsIl9fZGlybmFtZSIsImZzIiwiZXhpc3RzU3luYyIsInVubGlua1N5bmMiLCJ3YWxGaWxlIiwic2htRmlsZSIsImVycm9yIl0sIm1hcHBpbmdzIjoiQUFBQSxtREFBbUQ7Ozs7OytCQUluRDs7O2VBQThCQTs7OzJEQUhmOzZEQUNFOzs7Ozs7QUFFRixlQUFlQTtJQUM1QkMsUUFBUUMsR0FBRyxDQUFDO0lBRVoseUJBQXlCO0lBQ3pCLE1BQU1DLGFBQWFDLFFBQVFDLEdBQUcsQ0FBQ0MsYUFBYSxJQUFJQyxhQUFJLENBQUNDLElBQUksQ0FBQ0MsV0FBVztJQUVyRSxJQUFJO1FBQ0YsSUFBSUMsV0FBRSxDQUFDQyxVQUFVLENBQUNSLGFBQWE7WUFDN0JPLFdBQUUsQ0FBQ0UsVUFBVSxDQUFDVDtZQUNkRixRQUFRQyxHQUFHLENBQUM7UUFDZDtRQUVBLDJDQUEyQztRQUMzQyxNQUFNVyxVQUFVVixhQUFhO1FBQzdCLE1BQU1XLFVBQVVYLGFBQWE7UUFFN0IsSUFBSU8sV0FBRSxDQUFDQyxVQUFVLENBQUNFLFVBQVVILFdBQUUsQ0FBQ0UsVUFBVSxDQUFDQztRQUMxQyxJQUFJSCxXQUFFLENBQUNDLFVBQVUsQ0FBQ0csVUFBVUosV0FBRSxDQUFDRSxVQUFVLENBQUNFO0lBRTVDLEVBQUUsT0FBT0MsT0FBTztRQUNkZCxRQUFRYyxLQUFLLENBQUMsc0NBQXNDQTtJQUN0RDtJQUVBZCxRQUFRQyxHQUFHLENBQUM7QUFDZCJ9