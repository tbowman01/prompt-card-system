2d7c6f97d24a5a9a928379d5c49aa4c1
// Test setup for backend tests
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
require("reflect-metadata");
const _jesttimeouts = require("./jest.timeouts");
// Mock environment variables for testing
process.env.NODE_ENV = 'test';
process.env.JWT_SECRET = 'test-jwt-secret';
process.env.DATABASE_PATH = ':memory:';
process.env.LOG_LEVEL = 'error';
// Mock console methods to reduce noise in tests
const originalConsole = {
    ...console
};
beforeAll(()=>{
    // Suppress console output during tests unless LOG_LEVEL is debug
    if (process.env.LOG_LEVEL !== 'debug') {
        console.log = jest.fn();
        console.info = jest.fn();
        console.warn = jest.fn();
    // Keep console.error for debugging failed tests
    }
});
afterAll(()=>{
    // Restore console methods
    Object.assign(console, originalConsole);
});
// Global test timeout - default to integration timeout
jest.setTimeout(_jesttimeouts.TestTimeouts.INTEGRATION);
// Mock fetch for Node.js environment
global.fetch = jest.fn();
// Clean up after each test
afterEach(()=>{
    jest.clearAllMocks();
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL3Byb21wdC1jYXJkLXN5c3RlbS9iYWNrZW5kL3NyYy90ZXN0cy9zZXR1cC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUZXN0IHNldHVwIGZvciBiYWNrZW5kIHRlc3RzXG5pbXBvcnQgJ3JlZmxlY3QtbWV0YWRhdGEnO1xuaW1wb3J0IHsgVGVzdFRpbWVvdXRzIH0gZnJvbSAnLi9qZXN0LnRpbWVvdXRzJztcblxuLy8gTW9jayBlbnZpcm9ubWVudCB2YXJpYWJsZXMgZm9yIHRlc3RpbmdcbnByb2Nlc3MuZW52Lk5PREVfRU5WID0gJ3Rlc3QnO1xucHJvY2Vzcy5lbnYuSldUX1NFQ1JFVCA9ICd0ZXN0LWp3dC1zZWNyZXQnO1xucHJvY2Vzcy5lbnYuREFUQUJBU0VfUEFUSCA9ICc6bWVtb3J5Oic7XG5wcm9jZXNzLmVudi5MT0dfTEVWRUwgPSAnZXJyb3InO1xuXG4vLyBNb2NrIGNvbnNvbGUgbWV0aG9kcyB0byByZWR1Y2Ugbm9pc2UgaW4gdGVzdHNcbmNvbnN0IG9yaWdpbmFsQ29uc29sZSA9IHsgLi4uY29uc29sZSB9O1xuXG5iZWZvcmVBbGwoKCkgPT4ge1xuICAvLyBTdXBwcmVzcyBjb25zb2xlIG91dHB1dCBkdXJpbmcgdGVzdHMgdW5sZXNzIExPR19MRVZFTCBpcyBkZWJ1Z1xuICBpZiAocHJvY2Vzcy5lbnYuTE9HX0xFVkVMICE9PSAnZGVidWcnKSB7XG4gICAgY29uc29sZS5sb2cgPSBqZXN0LmZuKCk7XG4gICAgY29uc29sZS5pbmZvID0gamVzdC5mbigpO1xuICAgIGNvbnNvbGUud2FybiA9IGplc3QuZm4oKTtcbiAgICAvLyBLZWVwIGNvbnNvbGUuZXJyb3IgZm9yIGRlYnVnZ2luZyBmYWlsZWQgdGVzdHNcbiAgfVxufSk7XG5cbmFmdGVyQWxsKCgpID0+IHtcbiAgLy8gUmVzdG9yZSBjb25zb2xlIG1ldGhvZHNcbiAgT2JqZWN0LmFzc2lnbihjb25zb2xlLCBvcmlnaW5hbENvbnNvbGUpO1xufSk7XG5cbi8vIEdsb2JhbCB0ZXN0IHRpbWVvdXQgLSBkZWZhdWx0IHRvIGludGVncmF0aW9uIHRpbWVvdXRcbmplc3Quc2V0VGltZW91dChUZXN0VGltZW91dHMuSU5URUdSQVRJT04pO1xuXG4vLyBNb2NrIGZldGNoIGZvciBOb2RlLmpzIGVudmlyb25tZW50XG5nbG9iYWwuZmV0Y2ggPSBqZXN0LmZuKCk7XG5cbi8vIENsZWFuIHVwIGFmdGVyIGVhY2ggdGVzdFxuYWZ0ZXJFYWNoKCgpID0+IHtcbiAgamVzdC5jbGVhckFsbE1vY2tzKCk7XG59KTsiXSwibmFtZXMiOlsicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwiSldUX1NFQ1JFVCIsIkRBVEFCQVNFX1BBVEgiLCJMT0dfTEVWRUwiLCJvcmlnaW5hbENvbnNvbGUiLCJjb25zb2xlIiwiYmVmb3JlQWxsIiwibG9nIiwiamVzdCIsImZuIiwiaW5mbyIsIndhcm4iLCJhZnRlckFsbCIsIk9iamVjdCIsImFzc2lnbiIsInNldFRpbWVvdXQiLCJUZXN0VGltZW91dHMiLCJJTlRFR1JBVElPTiIsImdsb2JhbCIsImZldGNoIiwiYWZ0ZXJFYWNoIiwiY2xlYXJBbGxNb2NrcyJdLCJtYXBwaW5ncyI6IkFBQUEsK0JBQStCOzs7OztRQUN4Qjs4QkFDc0I7QUFFN0IseUNBQXlDO0FBQ3pDQSxRQUFRQyxHQUFHLENBQUNDLFFBQVEsR0FBRztBQUN2QkYsUUFBUUMsR0FBRyxDQUFDRSxVQUFVLEdBQUc7QUFDekJILFFBQVFDLEdBQUcsQ0FBQ0csYUFBYSxHQUFHO0FBQzVCSixRQUFRQyxHQUFHLENBQUNJLFNBQVMsR0FBRztBQUV4QixnREFBZ0Q7QUFDaEQsTUFBTUMsa0JBQWtCO0lBQUUsR0FBR0MsT0FBTztBQUFDO0FBRXJDQyxVQUFVO0lBQ1IsaUVBQWlFO0lBQ2pFLElBQUlSLFFBQVFDLEdBQUcsQ0FBQ0ksU0FBUyxLQUFLLFNBQVM7UUFDckNFLFFBQVFFLEdBQUcsR0FBR0MsS0FBS0MsRUFBRTtRQUNyQkosUUFBUUssSUFBSSxHQUFHRixLQUFLQyxFQUFFO1FBQ3RCSixRQUFRTSxJQUFJLEdBQUdILEtBQUtDLEVBQUU7SUFDdEIsZ0RBQWdEO0lBQ2xEO0FBQ0Y7QUFFQUcsU0FBUztJQUNQLDBCQUEwQjtJQUMxQkMsT0FBT0MsTUFBTSxDQUFDVCxTQUFTRDtBQUN6QjtBQUVBLHVEQUF1RDtBQUN2REksS0FBS08sVUFBVSxDQUFDQywwQkFBWSxDQUFDQyxXQUFXO0FBRXhDLHFDQUFxQztBQUNyQ0MsT0FBT0MsS0FBSyxHQUFHWCxLQUFLQyxFQUFFO0FBRXRCLDJCQUEyQjtBQUMzQlcsVUFBVTtJQUNSWixLQUFLYSxhQUFhO0FBQ3BCIn0=