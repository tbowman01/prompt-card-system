a8527db61ce850c982d675240b1153ef
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "healthRoutes", {
    enumerable: true,
    get: function() {
        return router;
    }
});
const _express = require("express");
const _connection = require("../database/connection");
const router = (0, _express.Router)();
// Health check endpoint
router.get('/', (req, res)=>{
    try {
        // Check database connection
        const dbCheck = _connection.db.prepare('SELECT 1').get();
        // Check Ollama connection (basic check)
        const ollamaUrl = process.env.OLLAMA_BASE_URL || 'http://ollama:11434';
        res.json({
            status: 'healthy',
            timestamp: new Date().toISOString(),
            services: {
                database: dbCheck ? 'connected' : 'disconnected',
                ollama: {
                    url: ollamaUrl,
                    status: 'configured' // Will be enhanced in Phase 3
                }
            },
            environment: process.env.NODE_ENV || 'development'
        });
    } catch (error) {
        res.status(500).json({
            status: 'unhealthy',
            error: error instanceof Error ? error.message : 'Unknown error',
            timestamp: new Date().toISOString()
        });
    }
});
// Database status endpoint
router.get('/db', (req, res)=>{
    try {
        const promptCardCount = _connection.db.prepare('SELECT COUNT(*) as count FROM prompt_cards').get();
        const testCaseCount = _connection.db.prepare('SELECT COUNT(*) as count FROM test_cases').get();
        res.json({
            status: 'connected',
            stats: {
                prompt_cards: promptCardCount.count,
                test_cases: testCaseCount.count
            },
            database_path: process.env.DATABASE_PATH
        });
    } catch (error) {
        res.status(500).json({
            status: 'error',
            error: error instanceof Error ? error.message : 'Database connection failed'
        });
    }
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL3Byb21wdC1jYXJkLXN5c3RlbS9iYWNrZW5kL3NyYy9yb3V0ZXMvaGVhbHRoLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciwgUmVxdWVzdCwgUmVzcG9uc2UgfSBmcm9tICdleHByZXNzJztcbmltcG9ydCB7IGRiIH0gZnJvbSAnLi4vZGF0YWJhc2UvY29ubmVjdGlvbic7XG5cbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xuXG4vLyBIZWFsdGggY2hlY2sgZW5kcG9pbnRcbnJvdXRlci5nZXQoJy8nLCAocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKSA9PiB7XG4gIHRyeSB7XG4gICAgLy8gQ2hlY2sgZGF0YWJhc2UgY29ubmVjdGlvblxuICAgIGNvbnN0IGRiQ2hlY2sgPSBkYi5wcmVwYXJlKCdTRUxFQ1QgMScpLmdldCgpO1xuICAgIFxuICAgIC8vIENoZWNrIE9sbGFtYSBjb25uZWN0aW9uIChiYXNpYyBjaGVjaylcbiAgICBjb25zdCBvbGxhbWFVcmwgPSBwcm9jZXNzLmVudi5PTExBTUFfQkFTRV9VUkwgfHwgJ2h0dHA6Ly9vbGxhbWE6MTE0MzQnO1xuICAgIFxuICAgIHJlcy5qc29uKHtcbiAgICAgIHN0YXR1czogJ2hlYWx0aHknLFxuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICBzZXJ2aWNlczoge1xuICAgICAgICBkYXRhYmFzZTogZGJDaGVjayA/ICdjb25uZWN0ZWQnIDogJ2Rpc2Nvbm5lY3RlZCcsXG4gICAgICAgIG9sbGFtYToge1xuICAgICAgICAgIHVybDogb2xsYW1hVXJsLFxuICAgICAgICAgIHN0YXR1czogJ2NvbmZpZ3VyZWQnIC8vIFdpbGwgYmUgZW5oYW5jZWQgaW4gUGhhc2UgM1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgZW52aXJvbm1lbnQ6IHByb2Nlc3MuZW52Lk5PREVfRU5WIHx8ICdkZXZlbG9wbWVudCdcbiAgICB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICBzdGF0dXM6ICd1bmhlYWx0aHknLFxuICAgICAgZXJyb3I6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1Vua25vd24gZXJyb3InLFxuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICB9KTtcbiAgfVxufSk7XG5cbi8vIERhdGFiYXNlIHN0YXR1cyBlbmRwb2ludFxucm91dGVyLmdldCgnL2RiJywgKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSkgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHByb21wdENhcmRDb3VudCA9IGRiLnByZXBhcmUoJ1NFTEVDVCBDT1VOVCgqKSBhcyBjb3VudCBGUk9NIHByb21wdF9jYXJkcycpLmdldCgpIGFzIHsgY291bnQ6IG51bWJlciB9O1xuICAgIGNvbnN0IHRlc3RDYXNlQ291bnQgPSBkYi5wcmVwYXJlKCdTRUxFQ1QgQ09VTlQoKikgYXMgY291bnQgRlJPTSB0ZXN0X2Nhc2VzJykuZ2V0KCkgYXMgeyBjb3VudDogbnVtYmVyIH07XG4gICAgXG4gICAgcmVzLmpzb24oe1xuICAgICAgc3RhdHVzOiAnY29ubmVjdGVkJyxcbiAgICAgIHN0YXRzOiB7XG4gICAgICAgIHByb21wdF9jYXJkczogcHJvbXB0Q2FyZENvdW50LmNvdW50LFxuICAgICAgICB0ZXN0X2Nhc2VzOiB0ZXN0Q2FzZUNvdW50LmNvdW50XG4gICAgICB9LFxuICAgICAgZGF0YWJhc2VfcGF0aDogcHJvY2Vzcy5lbnYuREFUQUJBU0VfUEFUSFxuICAgIH0pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcbiAgICAgIHN0YXR1czogJ2Vycm9yJyxcbiAgICAgIGVycm9yOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdEYXRhYmFzZSBjb25uZWN0aW9uIGZhaWxlZCdcbiAgICB9KTtcbiAgfVxufSk7XG5cbmV4cG9ydCB7IHJvdXRlciBhcyBoZWFsdGhSb3V0ZXMgfTsiXSwibmFtZXMiOlsiaGVhbHRoUm91dGVzIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwiZGJDaGVjayIsImRiIiwicHJlcGFyZSIsIm9sbGFtYVVybCIsInByb2Nlc3MiLCJlbnYiLCJPTExBTUFfQkFTRV9VUkwiLCJqc29uIiwic3RhdHVzIiwidGltZXN0YW1wIiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwic2VydmljZXMiLCJkYXRhYmFzZSIsIm9sbGFtYSIsInVybCIsImVudmlyb25tZW50IiwiTk9ERV9FTlYiLCJlcnJvciIsIkVycm9yIiwibWVzc2FnZSIsInByb21wdENhcmRDb3VudCIsInRlc3RDYXNlQ291bnQiLCJzdGF0cyIsInByb21wdF9jYXJkcyIsImNvdW50IiwidGVzdF9jYXNlcyIsImRhdGFiYXNlX3BhdGgiLCJEQVRBQkFTRV9QQVRIIl0sIm1hcHBpbmdzIjoiOzs7OytCQXlEbUJBOzs7ZUFBVkM7Ozt5QkF6RGlDOzRCQUN2QjtBQUVuQixNQUFNQSxTQUFTQyxJQUFBQSxlQUFNO0FBRXJCLHdCQUF3QjtBQUN4QkQsT0FBT0UsR0FBRyxDQUFDLEtBQUssQ0FBQ0MsS0FBY0M7SUFDN0IsSUFBSTtRQUNGLDRCQUE0QjtRQUM1QixNQUFNQyxVQUFVQyxjQUFFLENBQUNDLE9BQU8sQ0FBQyxZQUFZTCxHQUFHO1FBRTFDLHdDQUF3QztRQUN4QyxNQUFNTSxZQUFZQyxRQUFRQyxHQUFHLENBQUNDLGVBQWUsSUFBSTtRQUVqRFAsSUFBSVEsSUFBSSxDQUFDO1lBQ1BDLFFBQVE7WUFDUkMsV0FBVyxJQUFJQyxPQUFPQyxXQUFXO1lBQ2pDQyxVQUFVO2dCQUNSQyxVQUFVYixVQUFVLGNBQWM7Z0JBQ2xDYyxRQUFRO29CQUNOQyxLQUFLWjtvQkFDTEssUUFBUSxhQUFhLDhCQUE4QjtnQkFDckQ7WUFDRjtZQUNBUSxhQUFhWixRQUFRQyxHQUFHLENBQUNZLFFBQVEsSUFBSTtRQUN2QztJQUNGLEVBQUUsT0FBT0MsT0FBTztRQUNkbkIsSUFBSVMsTUFBTSxDQUFDLEtBQUtELElBQUksQ0FBQztZQUNuQkMsUUFBUTtZQUNSVSxPQUFPQSxpQkFBaUJDLFFBQVFELE1BQU1FLE9BQU8sR0FBRztZQUNoRFgsV0FBVyxJQUFJQyxPQUFPQyxXQUFXO1FBQ25DO0lBQ0Y7QUFDRjtBQUVBLDJCQUEyQjtBQUMzQmhCLE9BQU9FLEdBQUcsQ0FBQyxPQUFPLENBQUNDLEtBQWNDO0lBQy9CLElBQUk7UUFDRixNQUFNc0Isa0JBQWtCcEIsY0FBRSxDQUFDQyxPQUFPLENBQUMsOENBQThDTCxHQUFHO1FBQ3BGLE1BQU15QixnQkFBZ0JyQixjQUFFLENBQUNDLE9BQU8sQ0FBQyw0Q0FBNENMLEdBQUc7UUFFaEZFLElBQUlRLElBQUksQ0FBQztZQUNQQyxRQUFRO1lBQ1JlLE9BQU87Z0JBQ0xDLGNBQWNILGdCQUFnQkksS0FBSztnQkFDbkNDLFlBQVlKLGNBQWNHLEtBQUs7WUFDakM7WUFDQUUsZUFBZXZCLFFBQVFDLEdBQUcsQ0FBQ3VCLGFBQWE7UUFDMUM7SUFDRixFQUFFLE9BQU9WLE9BQU87UUFDZG5CLElBQUlTLE1BQU0sQ0FBQyxLQUFLRCxJQUFJLENBQUM7WUFDbkJDLFFBQVE7WUFDUlUsT0FBT0EsaUJBQWlCQyxRQUFRRCxNQUFNRSxPQUFPLEdBQUc7UUFDbEQ7SUFDRjtBQUNGIn0=