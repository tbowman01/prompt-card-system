{"version":3,"sources":["/workspaces/prompt-card-system/backend/src/middleware/errorHandler.ts"],"sourcesContent":["import { Request, Response, NextFunction } from 'express';\n\nexport function errorHandler(\n  err: Error,\n  req: Request,\n  res: Response,\n  next: NextFunction\n) {\n  console.error('Error occurred:', err);\n  \n  // Default error response\n  let status = 500;\n  let message = 'Internal server error';\n  \n  // Handle specific error types\n  if (err.name === 'ValidationError') {\n    status = 400;\n    message = 'Validation failed';\n  } else if (err.name === 'SqliteError') {\n    status = 500;\n    message = 'Database error';\n  } else if (err.message) {\n    message = err.message;\n  }\n  \n  res.status(status).json({\n    success: false,\n    error: message,\n    timestamp: new Date().toISOString(),\n    path: req.path,\n    method: req.method\n  });\n}"],"names":["errorHandler","err","req","res","next","console","error","status","message","name","json","success","timestamp","Date","toISOString","path","method"],"mappings":";;;;+BAEgBA;;;eAAAA;;;AAAT,SAASA,aACdC,GAAU,EACVC,GAAY,EACZC,GAAa,EACbC,IAAkB;IAElBC,QAAQC,KAAK,CAAC,mBAAmBL;IAEjC,yBAAyB;IACzB,IAAIM,SAAS;IACb,IAAIC,UAAU;IAEd,8BAA8B;IAC9B,IAAIP,IAAIQ,IAAI,KAAK,mBAAmB;QAClCF,SAAS;QACTC,UAAU;IACZ,OAAO,IAAIP,IAAIQ,IAAI,KAAK,eAAe;QACrCF,SAAS;QACTC,UAAU;IACZ,OAAO,IAAIP,IAAIO,OAAO,EAAE;QACtBA,UAAUP,IAAIO,OAAO;IACvB;IAEAL,IAAII,MAAM,CAACA,QAAQG,IAAI,CAAC;QACtBC,SAAS;QACTL,OAAOE;QACPI,WAAW,IAAIC,OAAOC,WAAW;QACjCC,MAAMb,IAAIa,IAAI;QACdC,QAAQd,IAAIc,MAAM;IACpB;AACF"}