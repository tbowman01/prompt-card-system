1a8412c5cd5c96621529eb7a65d813a7
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "healthRoutes", {
    enumerable: true,
    get: function() {
        return router;
    }
});
const _express = require("express");
const _connection = require("../database/connection");
const router = (0, _express.Router)();
// Health check endpoint
router.get('/', (req, res)=>{
    try {
        // Check database connection
        const dbCheck = _connection.db.prepare('SELECT 1').get();
        // Check Ollama connection (basic check)
        const ollamaUrl = process.env.OLLAMA_BASE_URL || 'http://ollama:11434';
        res.json({
            status: 'healthy',
            timestamp: new Date().toISOString(),
            services: {
                database: dbCheck ? 'connected' : 'disconnected',
                ollama: {
                    url: ollamaUrl,
                    status: 'configured' // Will be enhanced in Phase 3
                }
            },
            environment: process.env.NODE_ENV || 'development'
        });
    } catch (error) {
        res.status(500).json({
            status: 'unhealthy',
            error: error instanceof Error ? error.message : 'Unknown error',
            timestamp: new Date().toISOString()
        });
    }
});
// Database status endpoint
router.get('/db', (req, res)=>{
    try {
        const promptCardCount = _connection.db.prepare('SELECT COUNT(*) as count FROM prompt_cards').get();
        const testCaseCount = _connection.db.prepare('SELECT COUNT(*) as count FROM test_cases').get();
        res.json({
            status: 'connected',
            stats: {
                prompt_cards: promptCardCount.count,
                test_cases: testCaseCount.count
            },
            database_path: process.env.DATABASE_PATH
        });
    } catch (error) {
        res.status(500).json({
            status: 'error',
            error: error instanceof Error ? error.message : 'Database connection failed'
        });
    }
});
