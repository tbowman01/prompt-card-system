{"version":3,"sources":["/workspaces/prompt-card-system/backend/src/services/reports/exporters/PDFExporter.ts"],"sourcesContent":["import PDFDocument from 'pdfkit';\nimport { ChartJSNodeCanvas } from 'chartjs-node-canvas';\nimport { ReportData, ReportExportOptions, ChartData, TableData, MetricData } from '../../../types/reports';\nimport { ChartConfiguration } from 'chart.js';\nimport fs from 'fs';\nimport path from 'path';\n\nexport class PDFExporter {\n  private chartRenderer: ChartJSNodeCanvas;\n  private static readonly CHART_WIDTH = 800;\n  private static readonly CHART_HEIGHT = 400;\n\n  constructor() {\n    this.chartRenderer = new ChartJSNodeCanvas({\n      width: PDFExporter.CHART_WIDTH,\n      height: PDFExporter.CHART_HEIGHT,\n      backgroundColour: 'white'\n    });\n  }\n\n  async exportToPDF(\n    report: ReportData,\n    options: ReportExportOptions = { format: 'pdf', includeCharts: true, includeRawData: false }\n  ): Promise<Buffer> {\n    const doc = new PDFDocument({\n      size: 'A4',\n      margin: 50,\n      info: {\n        Title: report.title,\n        Author: 'Prompt Card System',\n        Subject: report.description,\n        Creator: 'Prompt Card System Report Generator',\n        Producer: 'PDFKit',\n        CreationDate: report.generatedAt\n      }\n    });\n\n    const buffers: Buffer[] = [];\n    doc.on('data', buffers.push.bind(buffers));\n\n    try {\n      await this.generatePDFContent(doc, report, options);\n      doc.end();\n\n      return new Promise((resolve, reject) => {\n        doc.on('end', () => {\n          resolve(Buffer.concat(buffers));\n        });\n        doc.on('error', reject);\n      });\n    } catch (error) {\n      doc.end();\n      throw error;\n    }\n  }\n\n  private async generatePDFContent(doc: PDFKit.PDFDocument, report: ReportData, options: ReportExportOptions): Promise<void> {\n    // Cover page\n    await this.generateCoverPage(doc, report, options);\n\n    // Table of contents\n    this.generateTableOfContents(doc, report);\n\n    // Executive summary\n    this.generateExecutiveSummary(doc, report);\n\n    // Report sections\n    for (const section of report.sections.sort((a, b) => a.order - b.order)) {\n      await this.generateSection(doc, section, options);\n    }\n\n    // Appendices\n    if (options.includeRawData) {\n      this.generateAppendices(doc, report);\n    }\n  }\n\n  private async generateCoverPage(doc: PDFKit.PDFDocument, report: ReportData, options: ReportExportOptions): Promise<void> {\n    const pageWidth = doc.page.width;\n    const pageHeight = doc.page.height;\n\n    // Add logo if provided\n    if (options.customizations?.logo) {\n      try {\n        const logoPath = path.resolve(options.customizations.logo);\n        if (fs.existsSync(logoPath)) {\n          doc.image(logoPath, 50, 50, { width: 100 });\n        }\n      } catch (error) {\n        console.warn('Could not load logo:', error.message);\n      }\n    }\n\n    // Title\n    doc.fontSize(28)\n       .fillColor(options.customizations?.colors?.primary || '#2c3e50')\n       .text(report.title, 50, 200, { align: 'center', width: pageWidth - 100 });\n\n    // Subtitle\n    doc.fontSize(16)\n       .fillColor('#7f8c8d')\n       .text(report.description, 50, 280, { align: 'center', width: pageWidth - 100 });\n\n    // Generated date\n    doc.fontSize(12)\n       .fillColor('#34495e')\n       .text(`Generated on: ${report.generatedAt.toLocaleDateString()}`, 50, 350, { align: 'center' });\n\n    // Key metrics overview\n    doc.fontSize(14)\n       .fillColor('#2c3e50')\n       .text('Key Metrics', 50, 400, { align: 'center' });\n\n    const keyMetrics = report.summary.keyMetrics;\n    const metricsPerRow = 2;\n    const startY = 430;\n    const columnWidth = (pageWidth - 100) / metricsPerRow;\n\n    keyMetrics.forEach((metric, index) => {\n      const row = Math.floor(index / metricsPerRow);\n      const col = index % metricsPerRow;\n      const x = 50 + (col * columnWidth);\n      const y = startY + (row * 60);\n\n      doc.fontSize(12)\n         .fillColor('#7f8c8d')\n         .text(metric.label, x, y, { width: columnWidth - 20, align: 'center' });\n\n      doc.fontSize(18)\n         .fillColor(options.customizations?.colors?.accent || '#3498db')\n         .text(metric.value.toString(), x, y + 20, { width: columnWidth - 20, align: 'center' });\n    });\n\n    // Footer\n    doc.fontSize(10)\n       .fillColor('#95a5a6')\n       .text('Confidential - Internal Use Only', 50, pageHeight - 80, { align: 'center' });\n\n    doc.addPage();\n  }\n\n  private generateTableOfContents(doc: PDFKit.PDFDocument, report: ReportData): void {\n    doc.fontSize(20)\n       .fillColor('#2c3e50')\n       .text('Table of Contents', 50, 50);\n\n    let y = 100;\n    doc.fontSize(12).fillColor('#34495e');\n\n    // Executive Summary\n    doc.text('Executive Summary', 70, y, { continued: true });\n    doc.text('.'.repeat(50), { continued: true });\n    doc.text('Page 3');\n    y += 25;\n\n    // Sections\n    report.sections.forEach((section, index) => {\n      doc.text(section.title, 70, y, { continued: true });\n      doc.text('.'.repeat(50), { continued: true });\n      doc.text(`Page ${4 + index}`);\n      y += 20;\n    });\n\n    // Appendices\n    if (report.sections.length > 0) {\n      y += 20;\n      doc.text('Appendices', 70, y, { continued: true });\n      doc.text('.'.repeat(50), { continued: true });\n      doc.text(`Page ${4 + report.sections.length}`);\n    }\n\n    doc.addPage();\n  }\n\n  private generateExecutiveSummary(doc: PDFKit.PDFDocument, report: ReportData): void {\n    doc.fontSize(20)\n       .fillColor('#2c3e50')\n       .text('Executive Summary', 50, 50);\n\n    doc.fontSize(12)\n       .fillColor('#34495e')\n       .text(report.description, 50, 90, { width: 500 });\n\n    // Key metrics\n    doc.fontSize(16)\n       .fillColor('#2c3e50')\n       .text('Key Performance Indicators', 50, 140);\n\n    let y = 170;\n    report.summary.keyMetrics.forEach(metric => {\n      doc.fontSize(12)\n         .fillColor('#7f8c8d')\n         .text(metric.label, 70, y, { continued: true });\n      \n      doc.fillColor('#2c3e50')\n         .text(`: ${metric.value}`, { continued: false });\n      \n      y += 20;\n    });\n\n    // Key insights\n    if (report.summary.insights.length > 0) {\n      doc.fontSize(16)\n         .fillColor('#2c3e50')\n         .text('Key Insights', 50, y + 20);\n\n      y += 50;\n      report.summary.insights.slice(0, 3).forEach(insight => {\n        doc.fontSize(14)\n           .fillColor('#e74c3c')\n           .text(`â€¢ ${insight.title}`, 70, y);\n        \n        doc.fontSize(11)\n           .fillColor('#34495e')\n           .text(insight.description, 90, y + 18, { width: 450 });\n        \n        y += 60;\n      });\n    }\n\n    doc.addPage();\n  }\n\n  private async generateSection(doc: PDFKit.PDFDocument, section: any, options: ReportExportOptions): Promise<void> {\n    doc.fontSize(18)\n       .fillColor('#2c3e50')\n       .text(section.title, 50, 50);\n\n    if (section.description) {\n      doc.fontSize(12)\n         .fillColor('#7f8c8d')\n         .text(section.description, 50, 80, { width: 500 });\n    }\n\n    let y = section.description ? 120 : 90;\n\n    switch (section.type) {\n      case 'metrics':\n        y = this.generateMetricsSection(doc, section.content, y);\n        break;\n      case 'charts':\n        if (options.includeCharts) {\n          y = await this.generateChartSection(doc, section.content, y);\n        }\n        break;\n      case 'tables':\n        y = this.generateTableSection(doc, section.content, y);\n        break;\n      case 'insights':\n        y = this.generateInsightsSection(doc, section.content, y);\n        break;\n    }\n\n    doc.addPage();\n  }\n\n  private generateMetricsSection(doc: PDFKit.PDFDocument, metrics: MetricData[], y: number): number {\n    const metricsPerRow = 2;\n    const columnWidth = (doc.page.width - 100) / metricsPerRow;\n    const rowHeight = 80;\n\n    metrics.forEach((metric, index) => {\n      const row = Math.floor(index / metricsPerRow);\n      const col = index % metricsPerRow;\n      const x = 50 + (col * columnWidth);\n      const currentY = y + (row * rowHeight);\n\n      // Metric box\n      doc.rect(x, currentY, columnWidth - 20, rowHeight - 10)\n         .fillColor('#ecf0f1')\n         .fill();\n\n      // Metric label\n      doc.fontSize(12)\n         .fillColor('#7f8c8d')\n         .text(metric.label, x + 10, currentY + 10, { width: columnWidth - 40, align: 'center' });\n\n      // Metric value\n      doc.fontSize(20)\n         .fillColor('#2c3e50')\n         .text(metric.value.toString() + (metric.unit ? ` ${metric.unit}` : ''), \n               x + 10, currentY + 30, { width: columnWidth - 40, align: 'center' });\n\n      // Status indicator\n      if (metric.status) {\n        const statusColor = metric.status === 'good' ? '#27ae60' : \n                           metric.status === 'warning' ? '#f39c12' : '#e74c3c';\n        doc.circle(x + columnWidth - 30, currentY + 15, 5)\n           .fillColor(statusColor)\n           .fill();\n      }\n    });\n\n    return y + Math.ceil(metrics.length / metricsPerRow) * rowHeight + 20;\n  }\n\n  private async generateChartSection(doc: PDFKit.PDFDocument, chartData: ChartData, y: number): Promise<number> {\n    try {\n      const chartConfig: ChartConfiguration = {\n        type: 'line',\n        data: {\n          labels: chartData.labels,\n          datasets: chartData.datasets.map(dataset => ({\n            label: dataset.label,\n            data: dataset.data,\n            backgroundColor: dataset.backgroundColor,\n            borderColor: dataset.borderColor,\n            borderWidth: dataset.borderWidth\n          }))\n        },\n        options: {\n          responsive: false,\n          plugins: {\n            legend: {\n              display: true,\n              position: 'top'\n            }\n          },\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      };\n      const chartBuffer = await this.chartRenderer.renderToBuffer(chartConfig);\n\n      const maxWidth = 500;\n      const maxHeight = 300;\n      \n      doc.image(chartBuffer, 50, y, { \n        width: maxWidth, \n        height: maxHeight,\n        align: 'center'\n      });\n\n      return y + maxHeight + 20;\n    } catch (error) {\n      console.error('Error generating chart:', error);\n      doc.fontSize(12)\n         .fillColor('#e74c3c')\n         .text('Chart could not be generated', 50, y);\n      return y + 40;\n    }\n  }\n\n  private generateTableSection(doc: PDFKit.PDFDocument, tableData: TableData, y: number): number {\n    const pageWidth = doc.page.width - 100;\n    const columnWidth = pageWidth / tableData.headers.length;\n    const rowHeight = 25;\n\n    // Headers\n    doc.fontSize(10)\n       .fillColor('#2c3e50');\n\n    tableData.headers.forEach((header, index) => {\n      const x = 50 + (index * columnWidth);\n      doc.rect(x, y, columnWidth, rowHeight)\n         .fillColor('#34495e')\n         .fill();\n      \n      doc.fillColor('#ffffff')\n         .text(header, x + 5, y + 8, { width: columnWidth - 10, align: 'center' });\n    });\n\n    y += rowHeight;\n\n    // Rows (limit to prevent page overflow)\n    const maxRows = Math.min(tableData.rows.length, 20);\n    doc.fillColor('#2c3e50');\n\n    for (let i = 0; i < maxRows; i++) {\n      const row = tableData.rows[i];\n      \n      row.forEach((cell, index) => {\n        const x = 50 + (index * columnWidth);\n        \n        if (i % 2 === 0) {\n          doc.rect(x, y, columnWidth, rowHeight)\n             .fillColor('#ecf0f1')\n             .fill();\n        }\n        \n        doc.fillColor('#2c3e50')\n           .text(cell?.toString() || '', x + 5, y + 8, { width: columnWidth - 10, align: 'center' });\n      });\n      \n      y += rowHeight;\n    }\n\n    if (tableData.rows.length > maxRows) {\n      doc.fontSize(10)\n         .fillColor('#7f8c8d')\n         .text(`... and ${tableData.rows.length - maxRows} more rows`, 50, y + 10);\n      y += 30;\n    }\n\n    return y + 20;\n  }\n\n  private generateInsightsSection(doc: PDFKit.PDFDocument, insights: any, y: number): number {\n    if (insights.insights) {\n      insights.insights.forEach((insight: any) => {\n        const severityColor = insight.severity === 'critical' ? '#e74c3c' :\n                              insight.severity === 'high' ? '#f39c12' :\n                              insight.severity === 'medium' ? '#f1c40f' : '#27ae60';\n\n        doc.fontSize(14)\n           .fillColor(severityColor)\n           .text(`â€¢ ${insight.title}`, 50, y);\n\n        doc.fontSize(11)\n           .fillColor('#34495e')\n           .text(insight.description, 70, y + 18, { width: 480 });\n\n        y += 50;\n\n        if (insight.recommendations && insight.recommendations.length > 0) {\n          doc.fontSize(10)\n             .fillColor('#7f8c8d')\n             .text('Recommendations:', 70, y);\n\n          insight.recommendations.forEach((rec: string) => {\n            doc.text(`- ${rec}`, 90, y + 15, { width: 460 });\n            y += 15;\n          });\n\n          y += 10;\n        }\n      });\n    }\n\n    return y + 20;\n  }\n\n  private generateAppendices(doc: PDFKit.PDFDocument, report: ReportData): void {\n    doc.fontSize(18)\n       .fillColor('#2c3e50')\n       .text('Appendices', 50, 50);\n\n    doc.fontSize(12)\n       .fillColor('#34495e')\n       .text('Report Generation Details', 50, 90);\n\n    doc.fontSize(10)\n       .fillColor('#7f8c8d')\n       .text(`Report ID: ${report.id}`, 70, 120)\n       .text(`Generated: ${report.generatedAt.toLocaleString()}`, 70, 140)\n       .text(`Template: ${report.template.name}`, 70, 160)\n       .text(`Generation Time: ${report.metadata.generationTime}ms`, 70, 180);\n\n    // Filters applied\n    if (Object.keys(report.filters).length > 0) {\n      doc.fontSize(12)\n         .fillColor('#34495e')\n         .text('Filters Applied', 50, 220);\n\n      let y = 250;\n      Object.entries(report.filters).forEach(([key, value]) => {\n        doc.fontSize(10)\n           .fillColor('#7f8c8d')\n           .text(`${key}: ${value}`, 70, y);\n        y += 15;\n      });\n    }\n  }\n}"],"names":["PDFExporter","exportToPDF","report","options","format","includeCharts","includeRawData","doc","PDFDocument","size","margin","info","Title","title","Author","Subject","description","Creator","Producer","CreationDate","generatedAt","buffers","on","push","bind","generatePDFContent","end","Promise","resolve","reject","Buffer","concat","error","generateCoverPage","generateTableOfContents","generateExecutiveSummary","section","sections","sort","a","b","order","generateSection","generateAppendices","pageWidth","page","width","pageHeight","height","customizations","logo","logoPath","path","fs","existsSync","image","console","warn","message","fontSize","fillColor","colors","primary","text","align","toLocaleDateString","keyMetrics","summary","metricsPerRow","startY","columnWidth","forEach","metric","index","row","Math","floor","col","x","y","label","accent","value","toString","addPage","continued","repeat","length","insights","slice","insight","type","generateMetricsSection","content","generateChartSection","generateTableSection","generateInsightsSection","metrics","rowHeight","currentY","rect","fill","unit","status","statusColor","circle","ceil","chartData","chartConfig","data","labels","datasets","map","dataset","backgroundColor","borderColor","borderWidth","responsive","plugins","legend","display","position","scales","beginAtZero","chartBuffer","chartRenderer","renderToBuffer","maxWidth","maxHeight","tableData","headers","header","maxRows","min","rows","i","cell","severityColor","severity","recommendations","rec","id","toLocaleString","template","name","metadata","generationTime","Object","keys","filters","entries","key","ChartJSNodeCanvas","CHART_WIDTH","CHART_HEIGHT","backgroundColour"],"mappings":"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"}