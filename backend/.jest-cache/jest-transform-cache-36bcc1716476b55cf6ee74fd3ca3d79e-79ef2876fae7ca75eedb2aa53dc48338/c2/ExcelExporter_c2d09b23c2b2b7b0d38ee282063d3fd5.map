{"version":3,"names":["cov_16eqaylrz4","actualCoverage","_define_property","obj","key","value","f","s","b","Object","defineProperty","enumerable","configurable","writable","ExcelJS","ChartJSNodeCanvas","ExcelExporter","exportToExcel","report","options","format","includeCharts","includeRawData","workbook","Workbook","creator","lastModifiedBy","created","generatedAt","modified","Date","lastPrinted","addSummaryWorksheet","addMetricsWorksheet","addChartsWorksheet","addDataWorksheet","addRawDataWorksheet","customizations","theme","applyTheme","buffer","xlsx","writeBuffer","Buffer","from","worksheet","addWorksheet","mergeCells","titleCell","getCell","title","font","size","bold","color","argb","alignment","horizontal","vertical","fill","type","pattern","fgColor","getRow","height","descCell","description","italic","infoCell","toLocaleDateString","toLocaleTimeString","metricsHeaderCell","row","summary","keyMetrics","forEach","metric","index","col","metricRow","Math","floor","labelCell","label","valueCell","trend","trendSymbol","trendColor","border","top","style","left","bottom","right","insightsStartRow","ceil","length","insightsHeaderCell","insightRow","insights","slice","insight","severityColor","severity","wrapText","columns","column","width","section","sections","filter","headerCell","header","cell","metrics","content","values","unit","status","statusColor","chartData","chartConfig","data","labels","datasets","map","dataset","backgroundColor","borderColor","borderWidth","chartBuffer","chartRenderer","renderToBuffer","imageId","addImage","extension","tl","nativeCol","nativeColOff","nativeRow","nativeRowOff","br","dataStartRow","d","labelIndex","rowIndex","datasetIndex","dataCell","error","console","tableData","headers","rows","rowData","cellData","colIndex","metadata","id","template","name","toISOString","totalExecutions","totalCost","toFixed","averagePerformance","successRate","generationTime","metadataHeaderCell","keys","filters","filtersHeaderCell","entries","toString","themes","light","primary","secondary","accent","text","dark","corporate","colors","eachSheet","eachRow","rowNumber","eachCell","constructor","CHART_WIDTH","CHART_HEIGHT","backgroundColour"],"sources":["ExcelExporter.ts"],"sourcesContent":["function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nimport * as ExcelJS from 'exceljs';\nimport { ChartJSNodeCanvas } from 'chartjs-node-canvas';\nexport class ExcelExporter {\n    async exportToExcel(report, options = {\n        format: 'excel',\n        includeCharts: true,\n        includeRawData: true\n    }) {\n        const workbook = new ExcelJS.Workbook();\n        // Set workbook properties\n        workbook.creator = 'Prompt Card System';\n        workbook.lastModifiedBy = 'Prompt Card System';\n        workbook.created = report.generatedAt;\n        workbook.modified = new Date();\n        workbook.lastPrinted = new Date();\n        // Add worksheets\n        await this.addSummaryWorksheet(workbook, report, options);\n        await this.addMetricsWorksheet(workbook, report, options);\n        if (options.includeCharts) {\n            await this.addChartsWorksheet(workbook, report, options);\n        }\n        await this.addDataWorksheet(workbook, report, options);\n        if (options.includeRawData) {\n            await this.addRawDataWorksheet(workbook, report, options);\n        }\n        // Apply theme\n        if (options.customizations?.theme) {\n            this.applyTheme(workbook, options.customizations.theme);\n        }\n        // Generate buffer\n        const buffer = await workbook.xlsx.writeBuffer();\n        return Buffer.from(buffer);\n    }\n    async addSummaryWorksheet(workbook, report, options) {\n        const worksheet = workbook.addWorksheet('Summary');\n        // Title\n        worksheet.mergeCells('A1:F1');\n        const titleCell = worksheet.getCell('A1');\n        titleCell.value = report.title;\n        titleCell.font = {\n            size: 18,\n            bold: true,\n            color: {\n                argb: '2c3e50'\n            }\n        };\n        titleCell.alignment = {\n            horizontal: 'center',\n            vertical: 'middle'\n        };\n        titleCell.fill = {\n            type: 'pattern',\n            pattern: 'solid',\n            fgColor: {\n                argb: 'ecf0f1'\n            }\n        };\n        worksheet.getRow(1).height = 30;\n        // Description\n        worksheet.mergeCells('A2:F2');\n        const descCell = worksheet.getCell('A2');\n        descCell.value = report.description;\n        descCell.font = {\n            size: 12,\n            italic: true\n        };\n        descCell.alignment = {\n            horizontal: 'center',\n            vertical: 'middle'\n        };\n        worksheet.getRow(2).height = 25;\n        // Generation info\n        worksheet.mergeCells('A3:F3');\n        const infoCell = worksheet.getCell('A3');\n        infoCell.value = `Generated on: ${report.generatedAt.toLocaleDateString()} at ${report.generatedAt.toLocaleTimeString()}`;\n        infoCell.font = {\n            size: 10\n        };\n        infoCell.alignment = {\n            horizontal: 'center',\n            vertical: 'middle'\n        };\n        // Key metrics header\n        worksheet.mergeCells('A5:F5');\n        const metricsHeaderCell = worksheet.getCell('A5');\n        metricsHeaderCell.value = 'Key Performance Indicators';\n        metricsHeaderCell.font = {\n            size: 14,\n            bold: true\n        };\n        metricsHeaderCell.alignment = {\n            horizontal: 'center',\n            vertical: 'middle'\n        };\n        metricsHeaderCell.fill = {\n            type: 'pattern',\n            pattern: 'solid',\n            fgColor: {\n                argb: '3498db'\n            }\n        };\n        metricsHeaderCell.font.color = {\n            argb: 'ffffff'\n        };\n        // Key metrics\n        let row = 7;\n        report.summary.keyMetrics.forEach((metric, index)=>{\n            const col = index % 3 * 2 + 1; // A, C, E columns\n            const metricRow = Math.floor(index / 3) + row;\n            // Metric label\n            const labelCell = worksheet.getCell(metricRow, col);\n            labelCell.value = metric.label;\n            labelCell.font = {\n                bold: true\n            };\n            labelCell.alignment = {\n                horizontal: 'left',\n                vertical: 'middle'\n            };\n            // Metric value\n            const valueCell = worksheet.getCell(metricRow, col + 1);\n            valueCell.value = metric.value;\n            valueCell.font = {\n                size: 12,\n                bold: true\n            };\n            valueCell.alignment = {\n                horizontal: 'right',\n                vertical: 'middle'\n            };\n            // Add trend indicator if available\n            if (metric.trend) {\n                const trendSymbol = metric.trend === 'up' ? '↑' : metric.trend === 'down' ? '↓' : '→';\n                const trendColor = metric.trend === 'up' ? '27ae60' : metric.trend === 'down' ? 'e74c3c' : '95a5a6';\n                valueCell.value = `${metric.value} ${trendSymbol}`;\n                valueCell.font.color = {\n                    argb: trendColor\n                };\n            }\n            // Style the cells\n            labelCell.border = {\n                top: {\n                    style: 'thin'\n                },\n                left: {\n                    style: 'thin'\n                },\n                bottom: {\n                    style: 'thin'\n                },\n                right: {\n                    style: 'thin'\n                }\n            };\n            valueCell.border = {\n                top: {\n                    style: 'thin'\n                },\n                left: {\n                    style: 'thin'\n                },\n                bottom: {\n                    style: 'thin'\n                },\n                right: {\n                    style: 'thin'\n                }\n            };\n        });\n        // Insights section\n        const insightsStartRow = row + Math.ceil(report.summary.keyMetrics.length / 3) + 2;\n        worksheet.mergeCells(`A${insightsStartRow}:F${insightsStartRow}`);\n        const insightsHeaderCell = worksheet.getCell(`A${insightsStartRow}`);\n        insightsHeaderCell.value = 'Key Insights';\n        insightsHeaderCell.font = {\n            size: 14,\n            bold: true\n        };\n        insightsHeaderCell.alignment = {\n            horizontal: 'center',\n            vertical: 'middle'\n        };\n        insightsHeaderCell.fill = {\n            type: 'pattern',\n            pattern: 'solid',\n            fgColor: {\n                argb: 'e74c3c'\n            }\n        };\n        insightsHeaderCell.font.color = {\n            argb: 'ffffff'\n        };\n        let insightRow = insightsStartRow + 2;\n        report.summary.insights.slice(0, 5).forEach((insight, index)=>{\n            // Insight title\n            worksheet.mergeCells(`A${insightRow}:F${insightRow}`);\n            const titleCell = worksheet.getCell(`A${insightRow}`);\n            titleCell.value = `${index + 1}. ${insight.title}`;\n            titleCell.font = {\n                bold: true\n            };\n            titleCell.alignment = {\n                horizontal: 'left',\n                vertical: 'middle'\n            };\n            // Severity indicator\n            const severityColor = insight.severity === 'critical' ? 'e74c3c' : insight.severity === 'high' ? 'f39c12' : insight.severity === 'medium' ? 'f1c40f' : '27ae60';\n            titleCell.font.color = {\n                argb: severityColor\n            };\n            // Insight description\n            insightRow++;\n            worksheet.mergeCells(`A${insightRow}:F${insightRow}`);\n            const descCell = worksheet.getCell(`A${insightRow}`);\n            descCell.value = insight.description;\n            descCell.font = {\n                size: 10\n            };\n            descCell.alignment = {\n                horizontal: 'left',\n                vertical: 'top',\n                wrapText: true\n            };\n            worksheet.getRow(insightRow).height = 30;\n            insightRow += 2;\n        });\n        // Auto-fit columns\n        worksheet.columns.forEach((column)=>{\n            column.width = 20;\n        });\n    }\n    async addMetricsWorksheet(workbook, report, options) {\n        const worksheet = workbook.addWorksheet('Detailed Metrics');\n        // Title\n        worksheet.mergeCells('A1:D1');\n        const titleCell = worksheet.getCell('A1');\n        titleCell.value = 'Detailed Performance Metrics';\n        titleCell.font = {\n            size: 16,\n            bold: true\n        };\n        titleCell.alignment = {\n            horizontal: 'center',\n            vertical: 'middle'\n        };\n        titleCell.fill = {\n            type: 'pattern',\n            pattern: 'solid',\n            fgColor: {\n                argb: '3498db'\n            }\n        };\n        titleCell.font.color = {\n            argb: 'ffffff'\n        };\n        worksheet.getRow(1).height = 25;\n        let row = 3;\n        // Process each section that contains metrics\n        for (const section of report.sections.filter((s)=>s.type === 'metrics')){\n            // Section header\n            worksheet.mergeCells(`A${row}:D${row}`);\n            const headerCell = worksheet.getCell(`A${row}`);\n            headerCell.value = section.title;\n            headerCell.font = {\n                size: 14,\n                bold: true\n            };\n            headerCell.alignment = {\n                horizontal: 'center',\n                vertical: 'middle'\n            };\n            headerCell.fill = {\n                type: 'pattern',\n                pattern: 'solid',\n                fgColor: {\n                    argb: '34495e'\n                }\n            };\n            headerCell.font.color = {\n                argb: 'ffffff'\n            };\n            row += 2;\n            // Metrics table header\n            [\n                'Metric',\n                'Value',\n                'Unit',\n                'Status'\n            ].forEach((header, index)=>{\n                const cell = worksheet.getCell(row, index + 1);\n                cell.value = header;\n                cell.font = {\n                    bold: true\n                };\n                cell.alignment = {\n                    horizontal: 'center',\n                    vertical: 'middle'\n                };\n                cell.fill = {\n                    type: 'pattern',\n                    pattern: 'solid',\n                    fgColor: {\n                        argb: '95a5a6'\n                    }\n                };\n                cell.border = {\n                    top: {\n                        style: 'thin'\n                    },\n                    left: {\n                        style: 'thin'\n                    },\n                    bottom: {\n                        style: 'thin'\n                    },\n                    right: {\n                        style: 'thin'\n                    }\n                };\n            });\n            row++;\n            // Metrics data\n            const metrics = section.content;\n            metrics.forEach((metric)=>{\n                const values = [\n                    metric.label,\n                    metric.value,\n                    metric.unit || '-',\n                    metric.status || '-'\n                ];\n                values.forEach((value, index)=>{\n                    const cell = worksheet.getCell(row, index + 1);\n                    cell.value = value;\n                    cell.alignment = {\n                        horizontal: 'center',\n                        vertical: 'middle'\n                    };\n                    cell.border = {\n                        top: {\n                            style: 'thin'\n                        },\n                        left: {\n                            style: 'thin'\n                        },\n                        bottom: {\n                            style: 'thin'\n                        },\n                        right: {\n                            style: 'thin'\n                        }\n                    };\n                    // Color code status\n                    if (index === 3 && metric.status) {\n                        const statusColor = metric.status === 'good' ? '27ae60' : metric.status === 'warning' ? 'f39c12' : 'e74c3c';\n                        cell.font = {\n                            color: {\n                                argb: statusColor\n                            },\n                            bold: true\n                        };\n                    }\n                });\n                row++;\n            });\n            row += 2;\n        }\n        // Auto-fit columns\n        worksheet.columns.forEach((column)=>{\n            column.width = 20;\n        });\n    }\n    async addChartsWorksheet(workbook, report, options) {\n        const worksheet = workbook.addWorksheet('Charts');\n        // Title\n        worksheet.mergeCells('A1:H1');\n        const titleCell = worksheet.getCell('A1');\n        titleCell.value = 'Visual Analytics';\n        titleCell.font = {\n            size: 16,\n            bold: true\n        };\n        titleCell.alignment = {\n            horizontal: 'center',\n            vertical: 'middle'\n        };\n        titleCell.fill = {\n            type: 'pattern',\n            pattern: 'solid',\n            fgColor: {\n                argb: '9b59b6'\n            }\n        };\n        titleCell.font.color = {\n            argb: 'ffffff'\n        };\n        worksheet.getRow(1).height = 25;\n        let row = 3;\n        // Process each section that contains charts\n        for (const section of report.sections.filter((s)=>s.type === 'charts')){\n            // Section header\n            worksheet.mergeCells(`A${row}:H${row}`);\n            const headerCell = worksheet.getCell(`A${row}`);\n            headerCell.value = section.title;\n            headerCell.font = {\n                size: 14,\n                bold: true\n            };\n            headerCell.alignment = {\n                horizontal: 'center',\n                vertical: 'middle'\n            };\n            headerCell.fill = {\n                type: 'pattern',\n                pattern: 'solid',\n                fgColor: {\n                    argb: '34495e'\n                }\n            };\n            headerCell.font.color = {\n                argb: 'ffffff'\n            };\n            row += 2;\n            try {\n                // Generate chart image\n                const chartData = section.content;\n                const chartConfig = {\n                    type: 'line',\n                    data: {\n                        labels: chartData.labels,\n                        datasets: chartData.datasets.map((dataset)=>({\n                                label: dataset.label,\n                                data: dataset.data,\n                                backgroundColor: dataset.backgroundColor,\n                                borderColor: dataset.borderColor,\n                                borderWidth: dataset.borderWidth\n                            }))\n                    }\n                };\n                const chartBuffer = await this.chartRenderer.renderToBuffer(chartConfig);\n                // Add chart as image\n                const imageId = workbook.addImage({\n                    buffer: chartBuffer,\n                    extension: 'png'\n                });\n                worksheet.addImage(imageId, {\n                    tl: {\n                        col: 0,\n                        row: row - 1,\n                        nativeCol: 0,\n                        nativeColOff: 0,\n                        nativeRow: 0,\n                        nativeRowOff: 0\n                    },\n                    br: {\n                        col: 7,\n                        row: row + 19,\n                        nativeCol: 0,\n                        nativeColOff: 0,\n                        nativeRow: 0,\n                        nativeRowOff: 0\n                    }\n                });\n                // Add chart data table\n                const dataStartRow = row + 22;\n                // Data table header\n                [\n                    'Label',\n                    ...chartData.datasets.map((d)=>d.label || 'Dataset')\n                ].forEach((header, index)=>{\n                    const cell = worksheet.getCell(dataStartRow, index + 1);\n                    cell.value = header;\n                    cell.font = {\n                        bold: true\n                    };\n                    cell.alignment = {\n                        horizontal: 'center',\n                        vertical: 'middle'\n                    };\n                    cell.fill = {\n                        type: 'pattern',\n                        pattern: 'solid',\n                        fgColor: {\n                            argb: '95a5a6'\n                        }\n                    };\n                    cell.border = {\n                        top: {\n                            style: 'thin'\n                        },\n                        left: {\n                            style: 'thin'\n                        },\n                        bottom: {\n                            style: 'thin'\n                        },\n                        right: {\n                            style: 'thin'\n                        }\n                    };\n                });\n                // Data table rows\n                chartData.labels.forEach((label, labelIndex)=>{\n                    const rowIndex = dataStartRow + labelIndex + 1;\n                    const cell = worksheet.getCell(rowIndex, 1);\n                    cell.value = label;\n                    cell.border = {\n                        top: {\n                            style: 'thin'\n                        },\n                        left: {\n                            style: 'thin'\n                        },\n                        bottom: {\n                            style: 'thin'\n                        },\n                        right: {\n                            style: 'thin'\n                        }\n                    };\n                    chartData.datasets.forEach((dataset, datasetIndex)=>{\n                        const dataCell = worksheet.getCell(rowIndex, datasetIndex + 2);\n                        dataCell.value = dataset.data[labelIndex] || 0;\n                        dataCell.border = {\n                            top: {\n                                style: 'thin'\n                            },\n                            left: {\n                                style: 'thin'\n                            },\n                            bottom: {\n                                style: 'thin'\n                            },\n                            right: {\n                                style: 'thin'\n                            }\n                        };\n                    });\n                });\n                row = dataStartRow + chartData.labels.length + 4;\n            } catch (error) {\n                console.error('Error generating chart for Excel:', error);\n                worksheet.getCell(`A${row}`).value = 'Chart generation failed';\n                row += 2;\n            }\n        }\n        // Auto-fit columns\n        worksheet.columns.forEach((column)=>{\n            column.width = 15;\n        });\n    }\n    async addDataWorksheet(workbook, report, options) {\n        const worksheet = workbook.addWorksheet('Data Tables');\n        // Title\n        worksheet.mergeCells('A1:J1');\n        const titleCell = worksheet.getCell('A1');\n        titleCell.value = 'Data Tables';\n        titleCell.font = {\n            size: 16,\n            bold: true\n        };\n        titleCell.alignment = {\n            horizontal: 'center',\n            vertical: 'middle'\n        };\n        titleCell.fill = {\n            type: 'pattern',\n            pattern: 'solid',\n            fgColor: {\n                argb: '16a085'\n            }\n        };\n        titleCell.font.color = {\n            argb: 'ffffff'\n        };\n        worksheet.getRow(1).height = 25;\n        let row = 3;\n        // Process each section that contains tables\n        for (const section of report.sections.filter((s)=>s.type === 'tables')){\n            // Section header\n            worksheet.mergeCells(`A${row}:J${row}`);\n            const headerCell = worksheet.getCell(`A${row}`);\n            headerCell.value = section.title;\n            headerCell.font = {\n                size: 14,\n                bold: true\n            };\n            headerCell.alignment = {\n                horizontal: 'center',\n                vertical: 'middle'\n            };\n            headerCell.fill = {\n                type: 'pattern',\n                pattern: 'solid',\n                fgColor: {\n                    argb: '34495e'\n                }\n            };\n            headerCell.font.color = {\n                argb: 'ffffff'\n            };\n            row += 2;\n            const tableData = section.content;\n            // Table headers\n            tableData.headers.forEach((header, index)=>{\n                const cell = worksheet.getCell(row, index + 1);\n                cell.value = header;\n                cell.font = {\n                    bold: true\n                };\n                cell.alignment = {\n                    horizontal: 'center',\n                    vertical: 'middle'\n                };\n                cell.fill = {\n                    type: 'pattern',\n                    pattern: 'solid',\n                    fgColor: {\n                        argb: '95a5a6'\n                    }\n                };\n                cell.border = {\n                    top: {\n                        style: 'thin'\n                    },\n                    left: {\n                        style: 'thin'\n                    },\n                    bottom: {\n                        style: 'thin'\n                    },\n                    right: {\n                        style: 'thin'\n                    }\n                };\n            });\n            row++;\n            // Table data\n            tableData.rows.forEach((rowData, rowIndex)=>{\n                rowData.forEach((cellData, colIndex)=>{\n                    const cell = worksheet.getCell(row, colIndex + 1);\n                    cell.value = cellData;\n                    cell.alignment = {\n                        horizontal: 'center',\n                        vertical: 'middle'\n                    };\n                    cell.border = {\n                        top: {\n                            style: 'thin'\n                        },\n                        left: {\n                            style: 'thin'\n                        },\n                        bottom: {\n                            style: 'thin'\n                        },\n                        right: {\n                            style: 'thin'\n                        }\n                    };\n                    // Alternate row colors\n                    if (rowIndex % 2 === 0) {\n                        cell.fill = {\n                            type: 'pattern',\n                            pattern: 'solid',\n                            fgColor: {\n                                argb: 'f8f9fa'\n                            }\n                        };\n                    }\n                });\n                row++;\n            });\n            row += 2;\n        }\n        // Auto-fit columns\n        worksheet.columns.forEach((column)=>{\n            column.width = 15;\n        });\n    }\n    async addRawDataWorksheet(workbook, report, options) {\n        const worksheet = workbook.addWorksheet('Raw Data');\n        // Title\n        worksheet.mergeCells('A1:F1');\n        const titleCell = worksheet.getCell('A1');\n        titleCell.value = 'Raw Report Data';\n        titleCell.font = {\n            size: 16,\n            bold: true\n        };\n        titleCell.alignment = {\n            horizontal: 'center',\n            vertical: 'middle'\n        };\n        titleCell.fill = {\n            type: 'pattern',\n            pattern: 'solid',\n            fgColor: {\n                argb: '7f8c8d'\n            }\n        };\n        titleCell.font.color = {\n            argb: 'ffffff'\n        };\n        worksheet.getRow(1).height = 25;\n        let row = 3;\n        // Report metadata\n        const metadata = [\n            [\n                'Report ID',\n                report.id\n            ],\n            [\n                'Template',\n                report.template.name\n            ],\n            [\n                'Generated',\n                report.generatedAt.toISOString()\n            ],\n            [\n                'Total Executions',\n                report.metadata.totalExecutions\n            ],\n            [\n                'Total Cost',\n                `$${report.metadata.totalCost.toFixed(2)}`\n            ],\n            [\n                'Average Performance',\n                `${report.metadata.averagePerformance.toFixed(2)}ms`\n            ],\n            [\n                'Success Rate',\n                `${report.metadata.successRate.toFixed(1)}%`\n            ],\n            [\n                'Generation Time',\n                `${report.metadata.generationTime}ms`\n            ]\n        ];\n        // Metadata header\n        worksheet.mergeCells(`A${row}:F${row}`);\n        const metadataHeaderCell = worksheet.getCell(`A${row}`);\n        metadataHeaderCell.value = 'Report Metadata';\n        metadataHeaderCell.font = {\n            size: 14,\n            bold: true\n        };\n        metadataHeaderCell.alignment = {\n            horizontal: 'center',\n            vertical: 'middle'\n        };\n        metadataHeaderCell.fill = {\n            type: 'pattern',\n            pattern: 'solid',\n            fgColor: {\n                argb: '34495e'\n            }\n        };\n        metadataHeaderCell.font.color = {\n            argb: 'ffffff'\n        };\n        row += 2;\n        // Metadata table\n        metadata.forEach(([key, value])=>{\n            worksheet.getCell(row, 1).value = key;\n            worksheet.getCell(row, 2).value = value;\n            worksheet.getCell(row, 1).font = {\n                bold: true\n            };\n            worksheet.getCell(row, 1).border = {\n                top: {\n                    style: 'thin'\n                },\n                left: {\n                    style: 'thin'\n                },\n                bottom: {\n                    style: 'thin'\n                },\n                right: {\n                    style: 'thin'\n                }\n            };\n            worksheet.getCell(row, 2).border = {\n                top: {\n                    style: 'thin'\n                },\n                left: {\n                    style: 'thin'\n                },\n                bottom: {\n                    style: 'thin'\n                },\n                right: {\n                    style: 'thin'\n                }\n            };\n            row++;\n        });\n        row += 2;\n        // Filters applied\n        if (Object.keys(report.filters).length > 0) {\n            worksheet.mergeCells(`A${row}:F${row}`);\n            const filtersHeaderCell = worksheet.getCell(`A${row}`);\n            filtersHeaderCell.value = 'Filters Applied';\n            filtersHeaderCell.font = {\n                size: 14,\n                bold: true\n            };\n            filtersHeaderCell.alignment = {\n                horizontal: 'center',\n                vertical: 'middle'\n            };\n            filtersHeaderCell.fill = {\n                type: 'pattern',\n                pattern: 'solid',\n                fgColor: {\n                    argb: '34495e'\n                }\n            };\n            filtersHeaderCell.font.color = {\n                argb: 'ffffff'\n            };\n            row += 2;\n            Object.entries(report.filters).forEach(([key, value])=>{\n                worksheet.getCell(row, 1).value = key;\n                worksheet.getCell(row, 2).value = value?.toString() || '';\n                worksheet.getCell(row, 1).font = {\n                    bold: true\n                };\n                worksheet.getCell(row, 1).border = {\n                    top: {\n                        style: 'thin'\n                    },\n                    left: {\n                        style: 'thin'\n                    },\n                    bottom: {\n                        style: 'thin'\n                    },\n                    right: {\n                        style: 'thin'\n                    }\n                };\n                worksheet.getCell(row, 2).border = {\n                    top: {\n                        style: 'thin'\n                    },\n                    left: {\n                        style: 'thin'\n                    },\n                    bottom: {\n                        style: 'thin'\n                    },\n                    right: {\n                        style: 'thin'\n                    }\n                };\n                row++;\n            });\n        }\n        // Auto-fit columns\n        worksheet.columns.forEach((column)=>{\n            column.width = 25;\n        });\n    }\n    applyTheme(workbook, theme) {\n        const themes = {\n            light: {\n                primary: '3498db',\n                secondary: 'ecf0f1',\n                accent: '2ecc71',\n                text: '2c3e50'\n            },\n            dark: {\n                primary: '34495e',\n                secondary: '2c3e50',\n                accent: 'e74c3c',\n                text: 'ecf0f1'\n            },\n            corporate: {\n                primary: '2c3e50',\n                secondary: '95a5a6',\n                accent: '3498db',\n                text: '2c3e50'\n            }\n        };\n        const colors = themes[theme] || themes.light;\n        // Apply theme colors to all worksheets\n        workbook.eachSheet((worksheet)=>{\n            worksheet.eachRow((row, rowNumber)=>{\n                if (rowNumber === 1) {\n                    row.eachCell((cell)=>{\n                        if (cell.fill && cell.fill.type === 'pattern') {\n                            cell.fill = {\n                                type: 'pattern',\n                                pattern: 'solid',\n                                fgColor: {\n                                    argb: colors.primary\n                                }\n                            };\n                        }\n                    });\n                }\n            });\n        });\n    }\n    constructor(){\n        _define_property(this, \"chartRenderer\", void 0);\n        this.chartRenderer = new ChartJSNodeCanvas({\n            width: ExcelExporter.CHART_WIDTH,\n            height: ExcelExporter.CHART_HEIGHT,\n            backgroundColour: 'white'\n        });\n    }\n}\n_define_property(ExcelExporter, \"CHART_WIDTH\", 800);\n_define_property(ExcelExporter, \"CHART_HEIGHT\", 400);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}