{"version":3,"names":["cov_jrbkc58lf","actualCoverage","_define_property","obj","key","value","f","s","b","Object","defineProperty","enumerable","configurable","writable","db","SamplePromptService","getInstance","instance","getSamplePrompts","title","description","prompt_template","variables","category","tags","initializeSamplePrompts","initialized","samplePrompts","sample","existing","prepare","get","result","run","JSON","stringify","console","log","lastInsertRowid","error","getSamplePromptsByCategory","filter","prompt","getCategories","categories","map","Set","createPromptFromSample","sampleTitle","find","p","Error","parse","newCard","getSamplePromptPreview","validateSamplePrompt","errors","trim","push","length","templateVariables","extractVariablesFromTemplate","unusedVariables","v","includes","undeclaredVariables","join","isValid","template","matches","match","replace","getSamplePromptStats","samples","totalSamples","categoriesBreakdown","cat","count","averageVariables","Math","round","reduce","sum","totalVariables","constructor"],"sources":["SamplePromptService.ts"],"sourcesContent":["function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nimport { db } from '../database/connection';\nexport class SamplePromptService {\n    static getInstance() {\n        if (!SamplePromptService.instance) {\n            SamplePromptService.instance = new SamplePromptService();\n        }\n        return SamplePromptService.instance;\n    }\n    /**\n   * Get all predefined sample prompts\n   */ getSamplePrompts() {\n        return [\n            {\n                title: \"Creative Story Generator\",\n                description: \"Generate engaging creative stories based on specified genre, characters, and setting. Perfect for creative writing, content creation, and storytelling exercises.\",\n                prompt_template: `Write a {{genre}} story that takes place in {{setting}}. The main character is {{character_name}}, who is {{character_description}}. \n\nThe story should:\n- Be approximately {{word_count}} words long\n- Include the theme of {{theme}}\n- Have a clear beginning, middle, and end\n- Be appropriate for {{target_audience}}\n\nStyle: {{writing_style}}\n\nCreate an engaging narrative that captures the reader's attention from the first sentence.`,\n                variables: [\n                    \"genre\",\n                    \"setting\",\n                    \"character_name\",\n                    \"character_description\",\n                    \"word_count\",\n                    \"theme\",\n                    \"target_audience\",\n                    \"writing_style\"\n                ],\n                category: \"creative\",\n                tags: [\n                    \"creative writing\",\n                    \"storytelling\",\n                    \"narrative\",\n                    \"fiction\"\n                ]\n            },\n            {\n                title: \"Technical Documentation Assistant\",\n                description: \"Create comprehensive technical documentation for software projects, APIs, and systems. Ideal for developers, technical writers, and project managers.\",\n                prompt_template: `Create technical documentation for {{project_name}}.\n\nProject Type: {{project_type}}\nTechnology Stack: {{tech_stack}}\nTarget Audience: {{audience_level}}\n\nPlease include the following sections:\n\n1. **Overview**\n   - Brief description of {{project_name}}\n   - Key features and capabilities\n   - Use cases and benefits\n\n2. **Getting Started**\n   - Prerequisites and requirements\n   - Installation instructions\n   - Basic setup and configuration\n\n3. **{{documentation_focus}}**\n   - Detailed implementation guide\n   - Code examples and best practices\n   - Common patterns and conventions\n\n4. **API Reference** (if applicable)\n   - Endpoint documentation\n   - Request/response examples\n   - Error handling and status codes\n\n5. **Troubleshooting**\n   - Common issues and solutions\n   - Debugging tips\n   - FAQ section\n\nFormat: Use clear markdown formatting with code blocks, tables, and examples where appropriate.\nTone: {{tone}} and suitable for {{audience_level}} developers.`,\n                variables: [\n                    \"project_name\",\n                    \"project_type\",\n                    \"tech_stack\",\n                    \"audience_level\",\n                    \"documentation_focus\",\n                    \"tone\"\n                ],\n                category: \"technical\",\n                tags: [\n                    \"documentation\",\n                    \"technical writing\",\n                    \"API\",\n                    \"software\",\n                    \"development\"\n                ]\n            },\n            {\n                title: \"Data Analysis Query Builder\",\n                description: \"Generate comprehensive data analysis queries and insights for business intelligence, research, and decision-making processes.\",\n                prompt_template: `Perform a data analysis on {{dataset_name}} with the following specifications:\n\n**Analysis Objective:** {{analysis_goal}}\n**Data Source:** {{data_source}}\n**Time Period:** {{time_period}}\n**Key Metrics:** {{key_metrics}}\n\nPlease provide:\n\n1. **Data Exploration**\n   - Overview of the dataset structure\n   - Key variables and their distributions\n   - Data quality assessment and missing values\n\n2. **Statistical Analysis**\n   - Descriptive statistics for {{key_metrics}}\n   - Correlation analysis between variables\n   - Trend analysis over {{time_period}}\n\n3. **Insights and Findings**\n   - Key patterns and relationships discovered\n   - Significant trends or anomalies\n   - Business implications of findings\n\n4. **Query Examples**\n   - SQL/Python code for key calculations\n   - Visualization recommendations\n   - Data filtering and aggregation methods\n\n5. **Recommendations**\n   - Actionable insights based on analysis\n   - Further analysis suggestions\n   - Data collection improvements\n\nAnalysis Level: {{complexity_level}}\nOutput Format: {{output_format}}\nInclude visualizations: {{include_charts}}`,\n                variables: [\n                    \"dataset_name\",\n                    \"analysis_goal\",\n                    \"data_source\",\n                    \"time_period\",\n                    \"key_metrics\",\n                    \"complexity_level\",\n                    \"output_format\",\n                    \"include_charts\"\n                ],\n                category: \"analytics\",\n                tags: [\n                    \"data analysis\",\n                    \"business intelligence\",\n                    \"statistics\",\n                    \"SQL\",\n                    \"insights\"\n                ]\n            },\n            {\n                title: \"Problem-Solving Framework\",\n                description: \"Systematic approach to analyzing and solving complex problems using structured thinking methodologies. Great for consulting, project management, and strategic planning.\",\n                prompt_template: `Analyze and provide a solution framework for the following problem:\n\n**Problem Statement:** {{problem_description}}\n**Context:** {{problem_context}}\n**Stakeholders:** {{stakeholders}}\n**Constraints:** {{constraints}}\n**Timeline:** {{timeline}}\n\nUsing the {{methodology}} approach, please provide:\n\n1. **Problem Definition**\n   - Root cause analysis\n   - Problem scope and boundaries\n   - Impact assessment on {{stakeholders}}\n\n2. **Solution Framework**\n   - Multiple solution alternatives\n   - Pros and cons for each approach\n   - Resource requirements and feasibility\n\n3. **Implementation Plan**\n   - Step-by-step action plan\n   - Timeline and milestones\n   - Risk assessment and mitigation strategies\n\n4. **Success Metrics**\n   - Key performance indicators\n   - Measurement methods\n   - Success criteria definition\n\n5. **Recommendations**\n   - Preferred solution with justification\n   - Next steps and immediate actions\n   - Long-term considerations\n\nAnalysis Depth: {{analysis_depth}}\nDecision Framework: {{decision_criteria}}\nPriority Level: {{priority_level}}`,\n                variables: [\n                    \"problem_description\",\n                    \"problem_context\",\n                    \"stakeholders\",\n                    \"constraints\",\n                    \"timeline\",\n                    \"methodology\",\n                    \"analysis_depth\",\n                    \"decision_criteria\",\n                    \"priority_level\"\n                ],\n                category: \"problem-solving\",\n                tags: [\n                    \"problem solving\",\n                    \"analysis\",\n                    \"strategy\",\n                    \"consulting\",\n                    \"framework\"\n                ]\n            },\n            {\n                title: \"Code Generation Assistant\",\n                description: \"Generate well-structured, documented code with best practices, error handling, and comprehensive testing. Perfect for rapid prototyping and development.\",\n                prompt_template: `Generate {{language}} code for the following requirements:\n\n**Project:** {{project_name}}\n**Functionality:** {{functionality_description}}\n**Framework/Library:** {{framework}}\n**Code Style:** {{coding_style}}\n\nRequirements:\n{{requirements}}\n\nPlease provide:\n\n1. **Main Implementation**\n   - Clean, well-structured code\n   - Proper error handling and validation\n   - Performance optimizations where applicable\n   - Security best practices\n\n2. **Documentation**\n   - Comprehensive code comments\n   - Function/method documentation\n   - Usage examples\n   - API documentation (if applicable)\n\n3. **Testing**\n   - Unit test cases\n   - Integration test examples\n   - Edge case handling\n   - Mock data and fixtures\n\n4. **Configuration**\n   - Environment setup instructions\n   - Dependencies and requirements\n   - Configuration files (if needed)\n   - Deployment considerations\n\nCode Quality Standards:\n- Follow {{coding_style}} conventions\n- Include type hints/annotations (where applicable)\n- Implement proper logging\n- Handle edge cases and errors gracefully\n- Optimize for {{performance_priority}}\n\nTarget Environment: {{target_environment}}\nComplexity Level: {{complexity_level}}`,\n                variables: [\n                    \"language\",\n                    \"project_name\",\n                    \"functionality_description\",\n                    \"framework\",\n                    \"coding_style\",\n                    \"requirements\",\n                    \"performance_priority\",\n                    \"target_environment\",\n                    \"complexity_level\"\n                ],\n                category: \"development\",\n                tags: [\n                    \"code generation\",\n                    \"programming\",\n                    \"development\",\n                    \"testing\",\n                    \"best practices\"\n                ]\n            },\n            {\n                title: \"Business Strategy Consultant\",\n                description: \"Comprehensive business analysis and strategic planning assistant for market research, competitive analysis, and growth strategies.\",\n                prompt_template: `Provide a strategic business analysis for {{company_name}} in the {{industry}} industry.\n\n**Company Profile:**\n- Company: {{company_name}}\n- Industry: {{industry}}\n- Current Stage: {{business_stage}}\n- Market Focus: {{target_market}}\n- Key Challenge: {{primary_challenge}}\n\n**Analysis Framework:**\n\n1. **Market Analysis**\n   - Industry overview and trends\n   - Market size and growth potential\n   - Key market drivers and barriers\n   - Regulatory environment impact\n\n2. **Competitive Landscape**\n   - Direct and indirect competitors\n   - Competitive advantages and gaps\n   - Market positioning analysis\n   - Pricing strategy comparison\n\n3. **SWOT Analysis**\n   - Internal strengths and capabilities\n   - Areas for improvement\n   - Market opportunities identification\n   - Threat assessment and risk factors\n\n4. **Strategic Recommendations**\n   - Growth strategy options\n   - Market entry/expansion strategies\n   - Operational efficiency improvements\n   - Innovation and differentiation opportunities\n\n5. **Implementation Roadmap**\n   - Priority initiatives and timeline\n   - Resource allocation requirements\n   - Key milestones and metrics\n   - Risk mitigation strategies\n\n**Specific Focus Areas:**\n- {{focus_area_1}}\n- {{focus_area_2}}\n- {{focus_area_3}}\n\nAnalysis Depth: {{analysis_depth}}\nTime Horizon: {{time_horizon}}\nBudget Considerations: {{budget_range}}`,\n                variables: [\n                    \"company_name\",\n                    \"industry\",\n                    \"business_stage\",\n                    \"target_market\",\n                    \"primary_challenge\",\n                    \"focus_area_1\",\n                    \"focus_area_2\",\n                    \"focus_area_3\",\n                    \"analysis_depth\",\n                    \"time_horizon\",\n                    \"budget_range\"\n                ],\n                category: \"business\",\n                tags: [\n                    \"business strategy\",\n                    \"market analysis\",\n                    \"consulting\",\n                    \"competitive analysis\",\n                    \"growth planning\"\n                ]\n            }\n        ];\n    }\n    /**\n   * Initialize sample prompts in the database\n   */ async initializeSamplePrompts() {\n        if (this.initialized) {\n            return;\n        }\n        try {\n            const samplePrompts = this.getSamplePrompts();\n            for (const sample of samplePrompts){\n                // Check if prompt already exists\n                const existing = await db.prepare(`\n          SELECT id FROM prompt_cards WHERE title = ?\n        `).get(sample.title);\n                if (!existing) {\n                    const result = await db.prepare(`\n            INSERT INTO prompt_cards (title, description, prompt_template, variables)\n            VALUES (?, ?, ?, ?)\n          `).run(sample.title, sample.description, sample.prompt_template, JSON.stringify(sample.variables));\n                    console.log(`Created sample prompt: ${sample.title} (ID: ${result.lastInsertRowid})`);\n                }\n            }\n            this.initialized = true;\n            console.log(`Sample prompts initialization completed`);\n        } catch (error) {\n            console.error('Failed to initialize sample prompts:', error);\n            throw error;\n        }\n    }\n    /**\n   * Get sample prompts by category\n   */ getSamplePromptsByCategory(category) {\n        return this.getSamplePrompts().filter((prompt)=>prompt.category === category);\n    }\n    /**\n   * Get all available categories\n   */ getCategories() {\n        const categories = this.getSamplePrompts().map((prompt)=>prompt.category);\n        return [\n            ...new Set(categories)\n        ];\n    }\n    /**\n   * Create a database prompt card from a sample prompt\n   */ async createPromptFromSample(sampleTitle) {\n        try {\n            const sample = this.getSamplePrompts().find((p)=>p.title === sampleTitle);\n            if (!sample) {\n                throw new Error(`Sample prompt '${sampleTitle}' not found`);\n            }\n            // Check if already exists\n            const existing = await db.prepare(`\n        SELECT * FROM prompt_cards WHERE title = ?\n      `).get(sample.title);\n            if (existing) {\n                return {\n                    ...existing,\n                    variables: JSON.parse(existing.variables || '[]')\n                };\n            }\n            // Create new prompt card\n            const result = await db.prepare(`\n        INSERT INTO prompt_cards (title, description, prompt_template, variables)\n        VALUES (?, ?, ?, ?)\n      `).run(sample.title, sample.description, sample.prompt_template, JSON.stringify(sample.variables));\n            const newCard = await db.prepare(`\n        SELECT * FROM prompt_cards WHERE id = ?\n      `).get(result.lastInsertRowid);\n            return {\n                ...newCard,\n                variables: JSON.parse(newCard.variables || '[]')\n            };\n        } catch (error) {\n            console.error('Failed to create prompt from sample:', error);\n            throw error;\n        }\n    }\n    /**\n   * Get sample prompt preview without creating in database\n   */ getSamplePromptPreview(title) {\n        return this.getSamplePrompts().find((p)=>p.title === title) || null;\n    }\n    /**\n   * Validate sample prompt template\n   */ validateSamplePrompt(sample) {\n        const errors = [];\n        // Check required fields\n        if (!sample.title?.trim()) {\n            errors.push('Title is required');\n        }\n        if (!sample.prompt_template?.trim()) {\n            errors.push('Prompt template is required');\n        }\n        if (!sample.description?.trim()) {\n            errors.push('Description is required');\n        }\n        // Check variables are used in template\n        if (sample.variables && sample.variables.length > 0) {\n            const templateVariables = this.extractVariablesFromTemplate(sample.prompt_template);\n            const unusedVariables = sample.variables.filter((v)=>!templateVariables.includes(v));\n            const undeclaredVariables = templateVariables.filter((v)=>!sample.variables.includes(v));\n            if (unusedVariables.length > 0) {\n                errors.push(`Unused variables declared: ${unusedVariables.join(', ')}`);\n            }\n            if (undeclaredVariables.length > 0) {\n                errors.push(`Variables used but not declared: ${undeclaredVariables.join(', ')}`);\n            }\n        }\n        return {\n            isValid: errors.length === 0,\n            errors\n        };\n    }\n    /**\n   * Extract variables from template\n   */ extractVariablesFromTemplate(template) {\n        const matches = template.match(/\\{\\{(\\w+)\\}\\}/g) || [];\n        return [\n            ...new Set(matches.map((match)=>match.replace(/\\{\\{|\\}\\}/g, '')))\n        ];\n    }\n    /**\n   * Get sample prompt statistics\n   */ getSamplePromptStats() {\n        const samples = this.getSamplePrompts();\n        const categories = this.getCategories();\n        return {\n            totalSamples: samples.length,\n            categories: categories.length,\n            categoriesBreakdown: categories.map((cat)=>({\n                    category: cat,\n                    count: samples.filter((s)=>s.category === cat).length\n                })),\n            averageVariables: Math.round(samples.reduce((sum, s)=>sum + s.variables.length, 0) / samples.length),\n            totalVariables: samples.reduce((sum, s)=>sum + s.variables.length, 0)\n        };\n    }\n    constructor(){\n        _define_property(this, \"initialized\", false);\n    }\n}\n_define_property(SamplePromptService, \"instance\", void 0);\nexport default SamplePromptService;\n"],"mappingseY;IAAAA,aAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,aAAA;AAfZ,SAASE,gBAAgBA,CAACC,GAAG,EAAEC,GAAG,EAAEC,KAAK,EAAE;EAAA;EAAAL,aAAA,GAAAM,CAAA;EAAAN,aAAA,GAAAO,CAAA;EACvC,IAAIH,GAAG,IAAID,GAAG,EAAE;IAAA;IAAAH,aAAA,GAAAQ,CAAA;IAAAR,aAAA,GAAAO,CAAA;IACZE,MAAM,CAACC,cAAc,CAACP,GAAG,EAAEC,GAAG,EAAE;MAC5BC,KAAK,EAAEA,KAAK;MACZM,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE;IACd,CAAC,CAAC;EACN,CAAC,MAAM;IAAA;IAAAb,aAAA,GAAAQ,CAAA;IAAAR,aAAA,GAAAO,CAAA;IACHJ,GAAG,CAACC,GAAG,CAAC,GAAGC,KAAK;EACpB;EAAC;EAAAL,aAAA,GAAAO,CAAA;EACD,OAAOJ,GAAG;AACd;AACA,SAASW,EAAE,QAAQ,wBAAwB;AAC3C,OAAO,MAAMC,mBAAmB,CAAC;EAC7B,OAAOC,WAAWA,CAAA,EAAG;IAAA;IAAAhB,aAAA,GAAAM,CAAA;IAAAN,aAAA,GAAAO,CAAA;IACjB,IAAI,CAACQ,mBAAmB,CAACE,QAAQ,EAAE;MAAA;MAAAjB,aAAA,GAAAQ,CAAA;MAAAR,aAAA,GAAAO,CAAA;MAC/BQ,mBAAmB,CAACE,QAAQ,GAAG,IAAIF,mBAAmB,CAAC,CAAC;IAC5D,CAAC;IAAA;IAAA;MAAAf,aAAA,GAAAQ,CAAA;IAAA;IAAAR,aAAA,GAAAO,CAAA;IACD,OAAOQ,mBAAmB,CAACE,QAAQ;EACvC;EACA;AACJ;AACA;EAAMC,gBAAgBA,CAAA,EAAG;IAAA;IAAAlB,aAAA,GAAAM,CAAA;IAAAN,aAAA,GAAAO,CAAA;IACjB,OAAO,CACH;MACIY,KAAK,EAAE,0BAA0B;MACjCC,WAAW,EAAE,mKAAmK;MAChLC,eAAe,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F;MAC3EC,SAAS,EAAE,CACP,OAAO,EACP,SAAS,EACT,gBAAgB,EAChB,uBAAuB,EACvB,YAAY,EACZ,OAAO,EACP,iBAAiB,EACjB,eAAe,CAClB;MACDC,QAAQ,EAAE,UAAU;MACpBC,IAAI,EAAE,CACF,kBAAkB,EAClB,cAAc,EACd,WAAW,EACX,SAAS;IAEjB,CAAC,EACD;MACIL,KAAK,EAAE,mCAAmC;MAC1CC,WAAW,EAAE,uJAAuJ;MACpKC,eAAe,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;MAC/CC,SAAS,EAAE,CACP,cAAc,EACd,cAAc,EACd,YAAY,EACZ,gBAAgB,EAChB,qBAAqB,EACrB,MAAM,CACT;MACDC,QAAQ,EAAE,WAAW;MACrBC,IAAI,EAAE,CACF,eAAe,EACf,mBAAmB,EACnB,KAAK,EACL,UAAU,EACV,aAAa;IAErB,CAAC,EACD;MACIL,KAAK,EAAE,6BAA6B;MACpCC,WAAW,EAAE,+HAA+H;MAC5IC,eAAe,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;MAC3BC,SAAS,EAAE,CACP,cAAc,EACd,eAAe,EACf,aAAa,EACb,aAAa,EACb,aAAa,EACb,kBAAkB,EAClB,eAAe,EACf,gBAAgB,CACnB;MACDC,QAAQ,EAAE,WAAW;MACrBC,IAAI,EAAE,CACF,eAAe,EACf,uBAAuB,EACvB,YAAY,EACZ,KAAK,EACL,UAAU;IAElB,CAAC,EACD;MACIL,KAAK,EAAE,2BAA2B;MAClCC,WAAW,EAAE,0KAA0K;MACvLC,eAAe,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;MACnBC,SAAS,EAAE,CACP,qBAAqB,EACrB,iBAAiB,EACjB,cAAc,EACd,aAAa,EACb,UAAU,EACV,aAAa,EACb,gBAAgB,EAChB,mBAAmB,EACnB,gBAAgB,CACnB;MACDC,QAAQ,EAAE,iBAAiB;MAC3BC,IAAI,EAAE,CACF,iBAAiB,EACjB,UAAU,EACV,UAAU,EACV,YAAY,EACZ,WAAW;IAEnB,CAAC,EACD;MACIL,KAAK,EAAE,2BAA2B;MAClCC,WAAW,EAAE,0JAA0J;MACvKC,eAAe,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;MACvBC,SAAS,EAAE,CACP,UAAU,EACV,cAAc,EACd,2BAA2B,EAC3B,WAAW,EACX,cAAc,EACd,cAAc,EACd,sBAAsB,EACtB,oBAAoB,EACpB,kBAAkB,CACrB;MACDC,QAAQ,EAAE,aAAa;MACvBC,IAAI,EAAE,CACF,iBAAiB,EACjB,aAAa,EACb,aAAa,EACb,SAAS,EACT,gBAAgB;IAExB,CAAC,EACD;MACIL,KAAK,EAAE,8BAA8B;MACrCC,WAAW,EAAE,oIAAoI;MACjJC,eAAe,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","ignoreList":[]}