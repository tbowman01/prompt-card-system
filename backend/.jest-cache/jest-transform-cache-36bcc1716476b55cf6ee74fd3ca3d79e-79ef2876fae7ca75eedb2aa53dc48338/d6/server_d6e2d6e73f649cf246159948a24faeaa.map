{"version":3,"names":["cov_2hc3wgmahg","actualCoverage","express","cors","morgan","dotenv","createServer","Server","SocketIOServer","generalRateLimit","apiRateLimit","testExecutionRateLimit","heavyOperationRateLimit","speedLimiter","enhancedHelmetConfig","requestId","securityLogger","securityHeaders","getCSRFToken","sanitizeRequestBody","limitRequestSize","optionalAuth","initializeDatabase","llmService","healthRoutes","enhancedHealthRoutes","healthOrchestratorRoutes","alertRoutes","promptCardRoutes","testCaseRoutes","testExecutionRoutes","parallelTestExecutionRoutes","yamlRoutes","assertionRoutes","analyticsRoutes","predictiveAnalyticsRoutes","optimizationRoutes","reportRoutes","performanceRoutes","trainingRoutes","authRoutes","loadTestingRoutes","securityRoutes","samplePromptRoutes","initializeOptimizationServices","performanceMonitor","loadTestScheduler","performanceRegressionDetector","ProgressService","errorHandler","healthOrchestrator","alertingSystem","modelTrainingEngine","modelRegistry","securityMonitor","logAggregator","complianceChecker","mlAnalyticsCoordinator","s","config","app","server","PORT","b","process","env","set","use","origin","callback","f","allowedOrigins","CORS_ORIGIN","split","indexOf","Error","credentials","methods","allowedHeaders","exposedHeaders","getExpressMiddleware","skip","req","res","statusCode","json","limit","verify","buf","encoding","rawBody","urlencoded","extended","parameterLimit","db","initialize","catch","error","console","io","progressService","startMonitoring","start","log","info","performComprehensiveScan","then","generateComplianceReport","get","listen","NODE_ENV","DATABASE_PATH","OLLAMA_BASE_URL"],"sources":["server.ts"],"sourcesContent":["import express from 'express';\nimport cors from 'cors';\nimport morgan from 'morgan';\nimport dotenv from 'dotenv';\nimport { createServer } from 'http';\nimport { Server as SocketIOServer } from 'socket.io';\n// Security middleware imports\nimport { generalRateLimit, apiRateLimit, testExecutionRateLimit, heavyOperationRateLimit, speedLimiter } from './middleware/rateLimiting';\nimport { enhancedHelmetConfig, requestId, securityLogger, securityHeaders, getCSRFToken } from './middleware/security';\nimport { sanitizeRequestBody, limitRequestSize } from './middleware/validation';\nimport { optionalAuth } from './middleware/auth';\nimport { initializeDatabase } from './database/connection';\nimport { llmService } from './services/llmService';\nimport { healthRoutes } from './routes/health';\nimport { enhancedHealthRoutes } from './routes/health-enhanced';\nimport { healthOrchestratorRoutes } from './routes/health-orchestrator';\nimport { alertRoutes } from './routes/alerts';\nimport { promptCardRoutes } from './routes/promptCards';\nimport { testCaseRoutes } from './routes/testCases';\nimport { testExecutionRoutes } from './routes/testExecution';\nimport { parallelTestExecutionRoutes } from './routes/parallelTestExecution';\nimport { yamlRoutes } from './routes/yaml';\nimport { assertionRoutes } from './routes/assertions';\nimport { analyticsRoutes } from './routes/analytics';\nimport { predictiveAnalyticsRoutes } from './routes/predictive-analytics';\nimport optimizationRoutes from './routes/optimization';\nimport { reportRoutes } from './routes/reports';\nimport performanceRoutes from './routes/performance';\nimport trainingRoutes from './routes/training';\nimport { authRoutes } from './routes/auth';\nimport loadTestingRoutes from './routes/loadTesting';\nimport { securityRoutes } from './routes/security';\nimport { samplePromptRoutes } from './routes/samplePrompts';\nimport { initializeOptimizationServices } from './services/optimization';\nimport { performanceMonitor } from './services/performance/PerformanceMonitor';\nimport { loadTestScheduler } from './services/performance/LoadTestScheduler';\nimport { performanceRegressionDetector } from './services/performance/PerformanceRegressionDetector';\nimport { ProgressService } from './services/websocket/ProgressService';\nimport { errorHandler } from './middleware/errorHandler';\nimport { healthOrchestrator } from './services/health/HealthOrchestrator';\nimport { alertingSystem } from './services/health/AlertingSystem';\nimport { modelTrainingEngine } from './services/training/ModelTrainingEngine';\nimport { modelRegistry } from './services/training/ModelRegistry';\nimport { securityMonitor, logAggregator, complianceChecker } from './services/security';\nimport { mlAnalyticsCoordinator } from './services/analytics/MLAnalyticsCoordinator';\ndotenv.config();\nconst app = express();\nconst server = createServer(app);\nconst PORT = process.env.PORT || 3001;\n// Trust proxy for correct IP detection behind reverse proxy\napp.set('trust proxy', 1);\n// Security middleware (order matters!)\napp.use(requestId); // Add request ID for tracing\napp.use(securityLogger); // Log security-relevant information\napp.use(enhancedHelmetConfig); // Enhanced security headers\napp.use(securityHeaders); // Additional security headers\napp.use(speedLimiter); // Slow down requests after threshold\napp.use(generalRateLimit); // General rate limiting\n// CORS configuration with security considerations\napp.use(cors({\n    origin: function(origin, callback) {\n        const allowedOrigins = (process.env.CORS_ORIGIN || 'http://localhost:3000').split(',');\n        // Allow requests with no origin (mobile apps, curl, etc.)\n        if (!origin) return callback(null, true);\n        if (allowedOrigins.indexOf(origin) !== -1) {\n            callback(null, true);\n        } else {\n            callback(new Error('Not allowed by CORS'));\n        }\n    },\n    credentials: true,\n    methods: [\n        'GET',\n        'POST',\n        'PUT',\n        'DELETE',\n        'OPTIONS'\n    ],\n    allowedHeaders: [\n        'Content-Type',\n        'Authorization',\n        'X-Requested-With',\n        'X-CSRF-Token',\n        'X-Session-ID',\n        'X-Request-ID'\n    ],\n    exposedHeaders: [\n        'X-Request-ID',\n        'X-RateLimit-Limit',\n        'X-RateLimit-Remaining'\n    ]\n}));\n// Setup log aggregation middleware\napp.use(logAggregator.getExpressMiddleware());\n// Morgan logging with custom format\napp.use(morgan('combined', {\n    skip: (req, res)=>res.statusCode < 400 // Only log errors in production\n}));\n// Body parsing with security limits\napp.use(limitRequestSize(10 * 1024 * 1024)); // 10MB limit\napp.use(express.json({\n    limit: '10mb',\n    verify: (req, res, buf, encoding)=>{\n        // Store raw body for webhook verification if needed\n        req.rawBody = buf;\n    }\n}));\napp.use(express.urlencoded({\n    extended: true,\n    limit: '10mb',\n    parameterLimit: 100 // Limit number of parameters\n}));\n// Input sanitization (applied globally)\napp.use(sanitizeRequestBody);\n// Optional authentication for all routes (doesn't fail if no token)\napp.use(optionalAuth);\n// Initialize database\nconst db = initializeDatabase();\n// Initialize LLM service with enhanced assertion engine\nllmService.initialize().catch((error)=>{\n    console.error('Failed to initialize LLM service:', error);\n// Continue without enhanced assertions if initialization fails\n});\n// Initialize AI-powered optimization services\ninitializeOptimizationServices().catch((error)=>{\n    console.error('Failed to initialize optimization services:', error);\n// Continue without optimization services if initialization fails\n});\n// Setup WebSocket server\nconst io = new SocketIOServer(server, {\n    cors: {\n        origin: process.env.CORS_ORIGIN || 'http://localhost:3000',\n        methods: [\n            'GET',\n            'POST'\n        ],\n        credentials: true\n    }\n});\n// Initialize performance monitoring\nconst progressService = new ProgressService(io);\nperformanceMonitor.startMonitoring(5000); // Monitor every 5 seconds\n// Initialize health orchestrator\nhealthOrchestrator.start().catch((error)=>{\n    console.error('Failed to start health orchestrator:', error);\n});\n// Initialize alerting system\nalertingSystem.initialize().catch((error)=>{\n    console.error('Failed to initialize alerting system:', error);\n});\n// Initialize training services\nmodelTrainingEngine.initialize().catch((error)=>{\n    console.error('Failed to initialize model training engine:', error);\n});\nmodelRegistry.initialize().catch((error)=>{\n    console.error('Failed to initialize model registry:', error);\n});\n// Initialize load testing services\nloadTestScheduler.initialize().catch((error)=>{\n    console.error('Failed to initialize load test scheduler:', error);\n});\ntry {\n    performanceRegressionDetector.startMonitoring(15);\n} catch (error) {\n    console.error('Failed to start regression monitoring:', error);\n}\n// Initialize security monitoring systems\nconsole.log('Initializing security monitoring systems...');\nlogAggregator.info('server', 'Security monitoring systems starting up', {}, [\n    'security',\n    'startup'\n]);\n// Perform initial security scan\nsecurityMonitor.performComprehensiveScan().then(()=>{\n    logAggregator.info('server', 'Initial security scan completed', {}, [\n        'security',\n        'scan'\n    ]);\n}).catch((error)=>{\n    logAggregator.error('server', 'Initial security scan failed', {\n        error\n    }, [\n        'security',\n        'error'\n    ]);\n});\n// Generate initial compliance report\ncomplianceChecker.generateComplianceReport().then(()=>{\n    logAggregator.info('server', 'Initial compliance report generated', {}, [\n        'compliance',\n        'report'\n    ]);\n}).catch((error)=>{\n    logAggregator.error('server', 'Initial compliance report failed', {\n        error\n    }, [\n        'compliance',\n        'error'\n    ]);\n});\n// Initialize ML Analytics Coordinator\nconsole.log('Initializing ML Analytics Coordinator...');\nmlAnalyticsCoordinator.initialize().then(()=>{\n    console.log('ML Analytics Coordinator initialized successfully');\n    return mlAnalyticsCoordinator.start();\n}).then(()=>{\n    console.log('ML Analytics Coordinator started successfully');\n}).catch((error)=>{\n    console.error('Failed to initialize ML Analytics Coordinator:', error);\n});\n// Security endpoints (no rate limiting for CSRF token)\napp.get('/api/security/csrf-token', getCSRFToken);\n// Authentication routes (with auth-specific rate limiting)\napp.use('/api/auth', authRoutes);\n// API routes with appropriate rate limiting\napp.use('/api/health', healthRoutes);\napp.use('/api/health/v2', enhancedHealthRoutes);\napp.use('/api/health/orchestrator', healthOrchestratorRoutes);\napp.use('/api/alerts', apiRateLimit, alertRoutes);\napp.use('/api/prompt-cards', apiRateLimit, promptCardRoutes);\napp.use('/api/test-cases', apiRateLimit, testCaseRoutes);\napp.use('/api/test-cases', testExecutionRateLimit, testExecutionRoutes); // Test execution routes\napp.use('/api/parallel-test-execution', testExecutionRateLimit, parallelTestExecutionRoutes); // Parallel test execution routes\napp.use('/api/yaml', apiRateLimit, yamlRoutes);\napp.use('/api/assertions', apiRateLimit, assertionRoutes);\napp.use('/api/analytics', apiRateLimit, analyticsRoutes);\napp.use('/api/predictive-analytics', predictiveAnalyticsRoutes);\napp.use('/api/optimization', heavyOperationRateLimit, optimizationRoutes); // Heavy operations\napp.use('/api/reports', heavyOperationRateLimit, reportRoutes); // Heavy operations\napp.use('/api/performance', apiRateLimit, performanceRoutes);\napp.use('/api/training', heavyOperationRateLimit, trainingRoutes); // Heavy operations\napp.use('/api/load-testing', loadTestingRoutes);\napp.use('/api/security', securityRoutes);\napp.use('/api/sample-prompts', apiRateLimit, samplePromptRoutes);\n// Error handling middleware\napp.use(errorHandler);\n// Store WebSocket instance for health checks and log aggregator\napp.set('io', io);\napp.set('logAggregator', logAggregator);\n// Start server\nserver.listen(PORT, ()=>{\n    console.log(`🚀 Backend server running on port ${PORT}`);\n    console.log(`🌍 Environment: ${process.env.NODE_ENV}`);\n    console.log(`💾 Database path: ${process.env.DATABASE_PATH}`);\n    console.log(`🤖 Ollama URL: ${process.env.OLLAMA_BASE_URL}`);\n    console.log(`🔌 WebSocket server initialized`);\n    console.log(`⚡ Parallel test execution system ready`);\n    console.log(`🧠 AI-powered prompt optimization services active`);\n    console.log(`📊 Performance monitoring active`);\n    console.log(`📈 Performance API available at /api/performance`);\n    console.log(`🏥 Health orchestrator system active`);\n    console.log(`📋 Health dashboard available at /api/health/orchestrator/summary`);\n    console.log(`🚨 Alerting system active`);\n    console.log(`📢 Alerts API available at /api/alerts`);\n    console.log(`🧪 Load testing framework active`);\n    console.log(`⚡ Load testing API available at /api/load-testing`);\n    console.log(`📉 Performance regression detection active`);\n    console.log(`⏰ Automated load test scheduling enabled`);\n    console.log(`🛡️ Security monitoring system active`);\n    console.log(`🔒 Security API available at /api/security`);\n    console.log(`🔍 Vulnerability scanning enabled`);\n    console.log(`✅ Compliance checking active`);\n    console.log(`📝 Log aggregation and analysis enabled`);\n    console.log(`🔮 Predictive Analytics API available at /api/predictive-analytics`);\n    console.log(`🤖 ML-powered anomaly detection active`);\n    console.log(`📊 Capacity planning and forecasting enabled`);\n    console.log(`🎯 Auto-training ML models enabled`);\n    // Security status\n    console.log(`\\n🔒 Security Features Active:`);\n    console.log(`   ✅ Rate limiting enabled`);\n    console.log(`   ✅ Enhanced security headers`);\n    console.log(`   ✅ Input validation and sanitization`);\n    console.log(`   ✅ CSRF protection`);\n    console.log(`   ✅ JWT authentication`);\n    console.log(`   ✅ Request logging and monitoring`);\n    console.log(`   ✅ Content Security Policy`);\n    console.log(`   🔑 Auth API available at /api/auth`);\n    console.log(`   🛡️ CSRF token endpoint at /api/security/csrf-token`);\n    if (process.env.NODE_ENV === 'production') {\n        console.log(`\\n🛡️ Production Security Reminders:`);\n        console.log(`   - Update JWT_SECRET and JWT_REFRESH_SECRET`);\n        console.log(`   - Configure Redis for distributed rate limiting`);\n        console.log(`   - Set up proper CORS origins`);\n        console.log(`   - Enable HTTPS`);\n        console.log(`   - Configure proper CSP directives`);\n    }\n});\nexport default app;\n"],"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","ignoreList":[]}