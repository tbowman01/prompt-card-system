de909973b6c686ccd6444d6c3cff72a3
// Test setup for backend tests
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
require("reflect-metadata");
// Mock environment variables for testing
process.env.NODE_ENV = 'test';
process.env.JWT_SECRET = 'test-jwt-secret';
process.env.DATABASE_PATH = ':memory:';
process.env.LOG_LEVEL = 'error';
// Mock console methods to reduce noise in tests
const originalConsole = {
    ...console
};
beforeAll(()=>{
    // Suppress console output during tests unless LOG_LEVEL is debug
    if (process.env.LOG_LEVEL !== 'debug') {
        console.log = jest.fn();
        console.info = jest.fn();
        console.warn = jest.fn();
    // Keep console.error for debugging failed tests
    }
});
afterAll(()=>{
    // Restore console methods
    Object.assign(console, originalConsole);
});
// Global test timeout
jest.setTimeout(30000);
// Mock fetch for Node.js environment
global.fetch = jest.fn();
// Clean up after each test
afterEach(()=>{
    jest.clearAllMocks();
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL3Byb21wdC1jYXJkLXN5c3RlbS9iYWNrZW5kL3NyYy90ZXN0cy9zZXR1cC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUZXN0IHNldHVwIGZvciBiYWNrZW5kIHRlc3RzXG5pbXBvcnQgJ3JlZmxlY3QtbWV0YWRhdGEnO1xuXG4vLyBNb2NrIGVudmlyb25tZW50IHZhcmlhYmxlcyBmb3IgdGVzdGluZ1xucHJvY2Vzcy5lbnYuTk9ERV9FTlYgPSAndGVzdCc7XG5wcm9jZXNzLmVudi5KV1RfU0VDUkVUID0gJ3Rlc3Qtand0LXNlY3JldCc7XG5wcm9jZXNzLmVudi5EQVRBQkFTRV9QQVRIID0gJzptZW1vcnk6JztcbnByb2Nlc3MuZW52LkxPR19MRVZFTCA9ICdlcnJvcic7XG5cbi8vIE1vY2sgY29uc29sZSBtZXRob2RzIHRvIHJlZHVjZSBub2lzZSBpbiB0ZXN0c1xuY29uc3Qgb3JpZ2luYWxDb25zb2xlID0geyAuLi5jb25zb2xlIH07XG5cbmJlZm9yZUFsbCgoKSA9PiB7XG4gIC8vIFN1cHByZXNzIGNvbnNvbGUgb3V0cHV0IGR1cmluZyB0ZXN0cyB1bmxlc3MgTE9HX0xFVkVMIGlzIGRlYnVnXG4gIGlmIChwcm9jZXNzLmVudi5MT0dfTEVWRUwgIT09ICdkZWJ1ZycpIHtcbiAgICBjb25zb2xlLmxvZyA9IGplc3QuZm4oKTtcbiAgICBjb25zb2xlLmluZm8gPSBqZXN0LmZuKCk7XG4gICAgY29uc29sZS53YXJuID0gamVzdC5mbigpO1xuICAgIC8vIEtlZXAgY29uc29sZS5lcnJvciBmb3IgZGVidWdnaW5nIGZhaWxlZCB0ZXN0c1xuICB9XG59KTtcblxuYWZ0ZXJBbGwoKCkgPT4ge1xuICAvLyBSZXN0b3JlIGNvbnNvbGUgbWV0aG9kc1xuICBPYmplY3QuYXNzaWduKGNvbnNvbGUsIG9yaWdpbmFsQ29uc29sZSk7XG59KTtcblxuLy8gR2xvYmFsIHRlc3QgdGltZW91dFxuamVzdC5zZXRUaW1lb3V0KDMwMDAwKTtcblxuLy8gTW9jayBmZXRjaCBmb3IgTm9kZS5qcyBlbnZpcm9ubWVudFxuZ2xvYmFsLmZldGNoID0gamVzdC5mbigpO1xuXG4vLyBDbGVhbiB1cCBhZnRlciBlYWNoIHRlc3RcbmFmdGVyRWFjaCgoKSA9PiB7XG4gIGplc3QuY2xlYXJBbGxNb2NrcygpO1xufSk7Il0sIm5hbWVzIjpbInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsIkpXVF9TRUNSRVQiLCJEQVRBQkFTRV9QQVRIIiwiTE9HX0xFVkVMIiwib3JpZ2luYWxDb25zb2xlIiwiY29uc29sZSIsImJlZm9yZUFsbCIsImxvZyIsImplc3QiLCJmbiIsImluZm8iLCJ3YXJuIiwiYWZ0ZXJBbGwiLCJPYmplY3QiLCJhc3NpZ24iLCJzZXRUaW1lb3V0IiwiZ2xvYmFsIiwiZmV0Y2giLCJhZnRlckVhY2giLCJjbGVhckFsbE1vY2tzIl0sIm1hcHBpbmdzIjoiQUFBQSwrQkFBK0I7Ozs7O1FBQ3hCO0FBRVAseUNBQXlDO0FBQ3pDQSxRQUFRQyxHQUFHLENBQUNDLFFBQVEsR0FBRztBQUN2QkYsUUFBUUMsR0FBRyxDQUFDRSxVQUFVLEdBQUc7QUFDekJILFFBQVFDLEdBQUcsQ0FBQ0csYUFBYSxHQUFHO0FBQzVCSixRQUFRQyxHQUFHLENBQUNJLFNBQVMsR0FBRztBQUV4QixnREFBZ0Q7QUFDaEQsTUFBTUMsa0JBQWtCO0lBQUUsR0FBR0MsT0FBTztBQUFDO0FBRXJDQyxVQUFVO0lBQ1IsaUVBQWlFO0lBQ2pFLElBQUlSLFFBQVFDLEdBQUcsQ0FBQ0ksU0FBUyxLQUFLLFNBQVM7UUFDckNFLFFBQVFFLEdBQUcsR0FBR0MsS0FBS0MsRUFBRTtRQUNyQkosUUFBUUssSUFBSSxHQUFHRixLQUFLQyxFQUFFO1FBQ3RCSixRQUFRTSxJQUFJLEdBQUdILEtBQUtDLEVBQUU7SUFDdEIsZ0RBQWdEO0lBQ2xEO0FBQ0Y7QUFFQUcsU0FBUztJQUNQLDBCQUEwQjtJQUMxQkMsT0FBT0MsTUFBTSxDQUFDVCxTQUFTRDtBQUN6QjtBQUVBLHNCQUFzQjtBQUN0QkksS0FBS08sVUFBVSxDQUFDO0FBRWhCLHFDQUFxQztBQUNyQ0MsT0FBT0MsS0FBSyxHQUFHVCxLQUFLQyxFQUFFO0FBRXRCLDJCQUEyQjtBQUMzQlMsVUFBVTtJQUNSVixLQUFLVyxhQUFhO0FBQ3BCIn0=