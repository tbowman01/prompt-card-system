3738b6857797856dd005078d0d1bbdc7
// Global test teardown - runs once after all tests
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return globalTeardown;
    }
});
const _fs = /*#__PURE__*/ _interop_require_default(require("fs"));
const _path = /*#__PURE__*/ _interop_require_default(require("path"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
async function globalTeardown() {
    console.log('üß™ Cleaning up global test environment...');
    // Clean up test database
    const testDbPath = process.env.DATABASE_PATH || _path.default.join(__dirname, '../../data/test.sqlite');
    try {
        if (_fs.default.existsSync(testDbPath)) {
            _fs.default.unlinkSync(testDbPath);
            console.log('‚úÖ Test database cleaned up');
        }
        // Clean up WAL and SHM files if they exist
        const walFile = testDbPath + '-wal';
        const shmFile = testDbPath + '-shm';
        if (_fs.default.existsSync(walFile)) _fs.default.unlinkSync(walFile);
        if (_fs.default.existsSync(shmFile)) _fs.default.unlinkSync(shmFile);
    } catch (error) {
        console.error('‚ùå Error cleaning up test database:', error);
    }
    console.log('‚úÖ Global test teardown complete');
}
