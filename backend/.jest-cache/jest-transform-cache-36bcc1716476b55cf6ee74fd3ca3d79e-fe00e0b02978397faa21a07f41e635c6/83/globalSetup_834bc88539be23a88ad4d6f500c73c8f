cc938ffb17bab5332decb9bc1b9d86d4
// Global test setup - runs once before all tests
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return globalSetup;
    }
});
const _connection = require("../database/connection");
const _path = /*#__PURE__*/ _interop_require_default(require("path"));
const _fs = /*#__PURE__*/ _interop_require_default(require("fs"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
async function globalSetup() {
    console.log('üß™ Setting up global test environment...');
    // Set test environment variables
    process.env.NODE_ENV = 'test';
    process.env.DATABASE_PATH = _path.default.join(__dirname, '../../data/test.sqlite');
    process.env.OLLAMA_BASE_URL = process.env.OLLAMA_BASE_URL || 'http://localhost:11434';
    // Ensure test data directory exists
    const testDataDir = _path.default.dirname(process.env.DATABASE_PATH);
    if (!_fs.default.existsSync(testDataDir)) {
        _fs.default.mkdirSync(testDataDir, {
            recursive: true
        });
    }
    // Clean up any existing test database
    if (_fs.default.existsSync(process.env.DATABASE_PATH)) {
        _fs.default.unlinkSync(process.env.DATABASE_PATH);
    }
    // Initialize test database
    try {
        (0, _connection.initializeDatabase)();
        console.log('‚úÖ Test database initialized');
    } catch (error) {
        console.error('‚ùå Failed to initialize test database:', error);
    }
    console.log('‚úÖ Global test setup complete');
}
