{"version":3,"names":["cov_1bixxdiz4g","actualCoverage","_define_property","obj","key","value","f","s","b","Object","defineProperty","enumerable","configurable","writable","OperationalTransform","CRDTService","PresenceService","CollaborationService","setupSocketHandlers","io","on","socket","console","log","id","data","handleJoinDocument","operation","handleOperation","handleCRDTOperation","handleCursorUpdate","presence","handlePresenceUpdate","handleDisconnect","handleCreateDocument","handleUpdatePermissions","documentId","userId","username","document","documents","get","createDocument","hasPermission","checkPermission","emit","message","join","userRole","getUserRole","session","socketId","role","lastActivity","Date","userSessions","set","documentParticipants","has","Set","add","operationalTransform","initializeDocument","content","crdtService","otState","getDocumentState","crdtState","presenceService","updatePresence","status","lastSeen","cursor","position","to","participants","getDocumentParticipants","addPendingOperation","newState","processOperationQueue","version","updatedAt","operationId","newVersion","success","applyOperation","getDocumentContent","error","selection","delete","generateDocumentId","title","permissions","owner","ownerId","editors","viewers","public","createdAt","action","includes","result","getPresence","Array","from","values","find","push","now","Math","random","toString","substr","getMetrics","otMetrics","crdtMetrics","totalParticipants","reduce","sum","size","activeDocuments","activeSessions","totalOperations","pendingOperationsCount","averageParticipantsPerDocument","getDocument","getUserDocuments","filter","doc","constructor","Map"],"sources":["CollaborationService.ts"],"sourcesContent":["/**\n * Main Collaboration Service\n * Orchestrates real-time collaborative editing with operational transforms and presence\n */ function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nimport OperationalTransform from './OperationalTransform';\nimport CRDTService from './CRDTService';\nimport PresenceService from './PresenceService';\nexport class CollaborationService {\n    /**\n   * Setup WebSocket event handlers\n   */ setupSocketHandlers() {\n        this.io.on('connection', (socket)=>{\n            console.log(`Client connected: ${socket.id}`);\n            // Join document room\n            socket.on('join-document', async (data)=>{\n                await this.handleJoinDocument(socket, data);\n            });\n            // Handle document operations\n            socket.on('operation', async (operation)=>{\n                await this.handleOperation(socket, operation);\n            });\n            // Handle CRDT operations\n            socket.on('crdt-operation', async (operation)=>{\n                await this.handleCRDTOperation(socket, operation);\n            });\n            // Handle cursor/selection updates\n            socket.on('cursor-update', (data)=>{\n                this.handleCursorUpdate(socket, data);\n            });\n            // Handle user presence\n            socket.on('presence-update', (presence)=>{\n                this.handlePresenceUpdate(socket, presence);\n            });\n            // Handle disconnect\n            socket.on('disconnect', ()=>{\n                this.handleDisconnect(socket);\n            });\n            // Handle document creation\n            socket.on('create-document', async (data)=>{\n                await this.handleCreateDocument(socket, data);\n            });\n            // Handle permission changes\n            socket.on('update-permissions', async (data)=>{\n                await this.handleUpdatePermissions(socket, data);\n            });\n        });\n    }\n    /**\n   * Handle user joining a document\n   */ async handleJoinDocument(socket, data) {\n        const { documentId, userId, username } = data;\n        // Check if document exists\n        let document = this.documents.get(documentId);\n        if (!document) {\n            // Create new document if it doesn't exist\n            document = await this.createDocument(documentId, 'Untitled Document', '', userId);\n        }\n        // Check permissions\n        const hasPermission = this.checkPermission(document, userId, 'view');\n        if (!hasPermission) {\n            socket.emit('error', {\n                message: 'Insufficient permissions'\n            });\n            return;\n        }\n        // Join document room\n        socket.join(documentId);\n        // Create user session\n        const userRole = this.getUserRole(document, userId);\n        const session = {\n            userId,\n            username,\n            socketId: socket.id,\n            documentId,\n            role: userRole,\n            lastActivity: new Date()\n        };\n        this.userSessions.set(socket.id, session);\n        // Add to document participants\n        if (!this.documentParticipants.has(documentId)) {\n            this.documentParticipants.set(documentId, new Set());\n        }\n        this.documentParticipants.get(documentId).add(userId);\n        // Initialize document in OT and CRDT services\n        this.operationalTransform.initializeDocument(documentId, document.content);\n        this.crdtService.initializeDocument(documentId, document.content);\n        // Send initial document state\n        socket.emit('document-state', {\n            document,\n            otState: this.operationalTransform.getDocumentState(documentId),\n            crdtState: this.crdtService.getDocumentState(documentId)\n        });\n        // Update presence\n        this.presenceService.updatePresence({\n            userId,\n            username,\n            documentId,\n            status: 'active',\n            lastSeen: new Date(),\n            cursor: {\n                position: 0\n            }\n        });\n        // Notify other participants\n        socket.to(documentId).emit('user-joined', {\n            userId,\n            username,\n            role: userRole\n        });\n        // Send current participants\n        const participants = await this.getDocumentParticipants(documentId);\n        socket.emit('participants-list', participants);\n    }\n    /**\n   * Handle operational transform operation\n   */ async handleOperation(socket, operation) {\n        const session = this.userSessions.get(socket.id);\n        if (!session) {\n            socket.emit('error', {\n                message: 'No active session'\n            });\n            return;\n        }\n        const document = this.documents.get(session.documentId);\n        if (!document) {\n            socket.emit('error', {\n                message: 'Document not found'\n            });\n            return;\n        }\n        // Check edit permissions\n        const hasPermission = this.checkPermission(document, session.userId, 'edit');\n        if (!hasPermission) {\n            socket.emit('error', {\n                message: 'Insufficient permissions'\n            });\n            return;\n        }\n        // Add operation to queue and process\n        this.operationalTransform.addPendingOperation(operation);\n        const newState = this.operationalTransform.processOperationQueue(session.documentId);\n        if (newState) {\n            // Update document content\n            document.content = newState.content;\n            document.version = newState.version;\n            document.updatedAt = new Date();\n            // Broadcast operation to other participants\n            socket.to(session.documentId).emit('operation', operation);\n            // Send acknowledgment to sender\n            socket.emit('operation-ack', {\n                operationId: operation.id,\n                newVersion: newState.version\n            });\n        }\n    }\n    /**\n   * Handle CRDT operation\n   */ async handleCRDTOperation(socket, operation) {\n        const session = this.userSessions.get(socket.id);\n        if (!session) {\n            socket.emit('error', {\n                message: 'No active session'\n            });\n            return;\n        }\n        const document = this.documents.get(session.documentId);\n        if (!document) {\n            socket.emit('error', {\n                message: 'Document not found'\n            });\n            return;\n        }\n        // Check edit permissions\n        const hasPermission = this.checkPermission(document, session.userId, 'edit');\n        if (!hasPermission) {\n            socket.emit('error', {\n                message: 'Insufficient permissions'\n            });\n            return;\n        }\n        // Apply CRDT operation\n        const success = this.crdtService.applyOperation(operation);\n        if (success) {\n            // Update document content\n            document.content = this.crdtService.getDocumentContent(session.documentId);\n            document.updatedAt = new Date();\n            // Broadcast operation to other participants\n            socket.to(session.documentId).emit('crdt-operation', operation);\n            // Send acknowledgment to sender\n            socket.emit('crdt-operation-ack', {\n                operationId: operation.id,\n                success: true\n            });\n        } else {\n            socket.emit('crdt-operation-ack', {\n                operationId: operation.id,\n                success: false,\n                error: 'Failed to apply operation'\n            });\n        }\n    }\n    /**\n   * Handle cursor position updates\n   */ handleCursorUpdate(socket, data) {\n        const session = this.userSessions.get(socket.id);\n        if (!session || session.documentId !== data.documentId) {\n            return;\n        }\n        // Update presence with cursor position\n        this.presenceService.updatePresence({\n            userId: data.userId,\n            username: session.username,\n            documentId: data.documentId,\n            status: 'active',\n            lastSeen: new Date(),\n            cursor: {\n                position: data.position,\n                selection: data.selection\n            }\n        });\n        // Broadcast cursor update to other participants\n        socket.to(data.documentId).emit('cursor-update', {\n            userId: data.userId,\n            username: session.username,\n            position: data.position,\n            selection: data.selection\n        });\n    }\n    /**\n   * Handle presence updates\n   */ handlePresenceUpdate(socket, presence) {\n        const session = this.userSessions.get(socket.id);\n        if (!session || session.documentId !== presence.documentId) {\n            return;\n        }\n        this.presenceService.updatePresence(presence);\n        // Broadcast presence update\n        socket.to(presence.documentId).emit('presence-update', presence);\n    }\n    /**\n   * Handle user disconnect\n   */ handleDisconnect(socket) {\n        const session = this.userSessions.get(socket.id);\n        if (!session) {\n            return;\n        }\n        // Remove from participants\n        const participants = this.documentParticipants.get(session.documentId);\n        if (participants) {\n            participants.delete(session.userId);\n        }\n        // Update presence to offline\n        this.presenceService.updatePresence({\n            userId: session.userId,\n            username: session.username,\n            documentId: session.documentId,\n            status: 'offline',\n            lastSeen: new Date(),\n            cursor: {\n                position: 0\n            }\n        });\n        // Notify other participants\n        socket.to(session.documentId).emit('user-left', {\n            userId: session.userId,\n            username: session.username\n        });\n        // Clean up session\n        this.userSessions.delete(socket.id);\n        console.log(`Client disconnected: ${socket.id}`);\n    }\n    /**\n   * Handle document creation\n   */ async handleCreateDocument(socket, data) {\n        const document = await this.createDocument(this.generateDocumentId(), data.title, data.content || '', data.userId);\n        socket.emit('document-created', document);\n    }\n    /**\n   * Handle permission updates\n   */ async handleUpdatePermissions(socket, data) {\n        const document = this.documents.get(data.documentId);\n        if (!document) {\n            socket.emit('error', {\n                message: 'Document not found'\n            });\n            return;\n        }\n        // Check if user is owner\n        if (document.permissions.owner !== data.userId) {\n            socket.emit('error', {\n                message: 'Only owner can update permissions'\n            });\n            return;\n        }\n        // Update permissions\n        document.permissions = data.permissions;\n        document.updatedAt = new Date();\n        // Broadcast permission update\n        this.io.to(data.documentId).emit('permissions-updated', data.permissions);\n    }\n    /**\n   * Create a new document\n   */ async createDocument(id, title, content, ownerId) {\n        const document = {\n            id,\n            title,\n            content,\n            version: 0,\n            participants: [\n                ownerId\n            ],\n            permissions: {\n                owner: ownerId,\n                editors: [],\n                viewers: [],\n                public: false\n            },\n            createdAt: new Date(),\n            updatedAt: new Date()\n        };\n        this.documents.set(id, document);\n        return document;\n    }\n    /**\n   * Check user permissions for document\n   */ checkPermission(document, userId, action) {\n        const { permissions } = document;\n        if (permissions.owner === userId) {\n            return true;\n        }\n        switch(action){\n            case 'view':\n                return permissions.public || permissions.editors.includes(userId) || permissions.viewers.includes(userId);\n            case 'edit':\n                return permissions.editors.includes(userId);\n            case 'admin':\n                return permissions.owner === userId;\n            default:\n                return false;\n        }\n    }\n    /**\n   * Get user role in document\n   */ getUserRole(document, userId) {\n        if (document.permissions.owner === userId) {\n            return 'owner';\n        }\n        if (document.permissions.editors.includes(userId)) {\n            return 'editor';\n        }\n        return 'viewer';\n    }\n    /**\n   * Get document participants with presence info\n   */ async getDocumentParticipants(documentId) {\n        const participants = this.documentParticipants.get(documentId) || new Set();\n        const result = [];\n        for (const userId of participants){\n            const presence = this.presenceService.getPresence(userId, documentId);\n            const session = Array.from(this.userSessions.values()).find((s)=>s.userId === userId && s.documentId === documentId);\n            result.push({\n                userId,\n                username: session?.username || 'Unknown',\n                role: session?.role || 'viewer',\n                presence,\n                lastActivity: session?.lastActivity\n            });\n        }\n        return result;\n    }\n    /**\n   * Generate unique document ID\n   */ generateDocumentId() {\n        return `doc_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    }\n    /**\n   * Get collaboration metrics\n   */ getMetrics() {\n        const otMetrics = this.operationalTransform.getMetrics();\n        const crdtMetrics = this.crdtService.getMetrics();\n        const totalParticipants = Array.from(this.documentParticipants.values()).reduce((sum, participants)=>sum + participants.size, 0);\n        return {\n            activeDocuments: this.documents.size,\n            activeSessions: this.userSessions.size,\n            totalOperations: otMetrics.pendingOperationsCount,\n            averageParticipantsPerDocument: this.documents.size > 0 ? totalParticipants / this.documents.size : 0\n        };\n    }\n    /**\n   * Get document by ID\n   */ getDocument(documentId) {\n        return this.documents.get(documentId);\n    }\n    /**\n   * Get all documents for user\n   */ getUserDocuments(userId) {\n        return Array.from(this.documents.values()).filter((doc)=>doc.permissions.owner === userId || doc.permissions.editors.includes(userId) || doc.permissions.viewers.includes(userId) || doc.permissions.public);\n    }\n    constructor(io){\n        _define_property(this, \"io\", void 0);\n        _define_property(this, \"operationalTransform\", void 0);\n        _define_property(this, \"crdtService\", void 0);\n        _define_property(this, \"presenceService\", void 0);\n        _define_property(this, \"documents\", new Map());\n        _define_property(this, \"userSessions\", new Map());\n        _define_property(this, \"documentParticipants\", new Map());\n        this.io = io;\n        this.operationalTransform = new OperationalTransform();\n        this.crdtService = new CRDTService();\n        this.presenceService = new PresenceService();\n        this.setupSocketHandlers();\n    }\n}\nexport default CollaborationService;\n"],"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","ignoreList":[]}