{"version":3,"names":["cov_9dxcld1y5","actualCoverage","helmet","randomBytes","csrfTokens","s","CSRF_TOKEN_EXPIRY","generateCSRFToken","sessionId","f","token","toString","expires","Date","now","cleanupExpiredCSRFTokens","validateCSRFToken","stored","b","Object","keys","forEach","csrfProtection","req","res","next","includes","method","headers","authorization","startsWith","csrfToken","status","json","success","error","code","getCSRFToken","data","enhancedHelmetConfig","contentSecurityPolicy","directives","defaultSrc","scriptSrc","styleSrc","fontSrc","imgSrc","connectSrc","mediaSrc","objectSrc","frameSrc","baseUri","formAction","frameAncestors","crossOriginEmbedderPolicy","policy","crossOriginOpenerPolicy","crossOriginResourcePolicy","dnsPrefetchControl","allow","frameguard","action","hidePoweredBy","hsts","maxAge","includeSubDomains","preload","ieNoOpen","noSniff","originAgentCluster","permittedCrossDomainPolicies","referrerPolicy","xssFilter","requestId","setHeader","securityLogger","startTime","logData","timestamp","toISOString","url","ip","userAgent","console","log","JSON","stringify","securityHeaders","removeHeader","setInterval"],"sources":["security.ts"],"sourcesContent":["import helmet from 'helmet';\nimport { randomBytes } from 'crypto';\nconst csrfTokens = {};\nconst CSRF_TOKEN_EXPIRY = 60 * 60 * 1000; // 1 hour\n// Generate CSRF token\nexport const generateCSRFToken = (sessionId)=>{\n    const token = randomBytes(32).toString('hex');\n    const expires = Date.now() + CSRF_TOKEN_EXPIRY;\n    csrfTokens[sessionId] = {\n        token,\n        expires\n    };\n    // Clean up expired tokens\n    cleanupExpiredCSRFTokens();\n    return token;\n};\n// Validate CSRF token\nexport const validateCSRFToken = (sessionId, token)=>{\n    const stored = csrfTokens[sessionId];\n    if (!stored || stored.expires < Date.now()) {\n        delete csrfTokens[sessionId];\n        return false;\n    }\n    return stored.token === token;\n};\n// Clean up expired CSRF tokens\nconst cleanupExpiredCSRFTokens = ()=>{\n    const now = Date.now();\n    Object.keys(csrfTokens).forEach((sessionId)=>{\n        if (csrfTokens[sessionId].expires < now) {\n            delete csrfTokens[sessionId];\n        }\n    });\n};\n// CSRF middleware\nexport const csrfProtection = (req, res, next)=>{\n    // Skip CSRF for GET, HEAD, OPTIONS requests\n    if ([\n        'GET',\n        'HEAD',\n        'OPTIONS'\n    ].includes(req.method)) {\n        next();\n        return;\n    }\n    // Skip CSRF for API endpoints that use Bearer token authentication\n    if (req.headers.authorization?.startsWith('Bearer ')) {\n        next();\n        return;\n    }\n    const sessionId = req.headers['x-session-id'];\n    const csrfToken = req.headers['x-csrf-token'];\n    if (!sessionId || !csrfToken || !validateCSRFToken(sessionId, csrfToken)) {\n        res.status(403).json({\n            success: false,\n            error: 'Invalid or missing CSRF token',\n            code: 'CSRF_TOKEN_INVALID'\n        });\n        return;\n    }\n    next();\n};\n// Generate CSRF token endpoint\nexport const getCSRFToken = (req, res)=>{\n    const sessionId = req.headers['x-session-id'] || randomBytes(16).toString('hex');\n    const token = generateCSRFToken(sessionId);\n    res.json({\n        success: true,\n        data: {\n            csrfToken: token,\n            sessionId: sessionId\n        }\n    });\n};\n// Enhanced Helmet configuration\nexport const enhancedHelmetConfig = helmet({\n    contentSecurityPolicy: {\n        directives: {\n            defaultSrc: [\n                \"'self'\"\n            ],\n            scriptSrc: [\n                \"'self'\",\n                \"'unsafe-inline'\",\n                \"https://cdnjs.cloudflare.com\"\n            ],\n            styleSrc: [\n                \"'self'\",\n                \"'unsafe-inline'\",\n                \"https://fonts.googleapis.com\"\n            ],\n            fontSrc: [\n                \"'self'\",\n                \"https://fonts.gstatic.com\",\n                \"data:\"\n            ],\n            imgSrc: [\n                \"'self'\",\n                \"data:\",\n                \"https:\",\n                \"blob:\"\n            ],\n            connectSrc: [\n                \"'self'\",\n                \"ws:\",\n                \"wss:\",\n                \"http://localhost:*\"\n            ],\n            mediaSrc: [\n                \"'self'\"\n            ],\n            objectSrc: [\n                \"'none'\"\n            ],\n            frameSrc: [\n                \"'none'\"\n            ],\n            baseUri: [\n                \"'self'\"\n            ],\n            formAction: [\n                \"'self'\"\n            ],\n            frameAncestors: [\n                \"'none'\"\n            ]\n        }\n    },\n    crossOriginEmbedderPolicy: {\n        policy: 'credentialless'\n    },\n    crossOriginOpenerPolicy: {\n        policy: 'same-origin'\n    },\n    crossOriginResourcePolicy: {\n        policy: 'cross-origin'\n    },\n    dnsPrefetchControl: {\n        allow: false\n    },\n    frameguard: {\n        action: 'deny'\n    },\n    hidePoweredBy: true,\n    hsts: {\n        maxAge: 31536000,\n        includeSubDomains: true,\n        preload: true\n    },\n    ieNoOpen: true,\n    noSniff: true,\n    originAgentCluster: true,\n    permittedCrossDomainPolicies: false,\n    referrerPolicy: {\n        policy: 'no-referrer'\n    },\n    xssFilter: true\n});\n// Request ID middleware for tracing\nexport const requestId = (req, res, next)=>{\n    const requestId = req.headers['x-request-id'] || randomBytes(16).toString('hex');\n    req.headers['x-request-id'] = requestId;\n    res.setHeader('x-request-id', requestId);\n    next();\n};\n// Request logging middleware with security context\nexport const securityLogger = (req, res, next)=>{\n    const startTime = Date.now();\n    const logData = {\n        timestamp: new Date().toISOString(),\n        method: req.method,\n        url: req.url,\n        ip: req.ip,\n        userAgent: req.headers['user-agent'],\n        requestId: req.headers['x-request-id']\n    };\n    console.log('Security Log - Request:', JSON.stringify(logData));\n    next();\n};\n// Security headers middleware\nexport const securityHeaders = (req, res, next)=>{\n    res.setHeader('X-Frame-Options', 'DENY');\n    res.setHeader('X-Content-Type-Options', 'nosniff');\n    res.setHeader('X-XSS-Protection', '1; mode=block');\n    res.setHeader('Cache-Control', 'no-store, no-cache, must-revalidate, proxy-revalidate');\n    res.setHeader('Pragma', 'no-cache');\n    res.setHeader('Expires', '0');\n    res.removeHeader('X-Powered-By');\n    next();\n};\n// Clean up security resources periodically\nsetInterval(()=>{\n    cleanupExpiredCSRFTokens();\n}, 60 * 60 * 1000); // Clean up every hour\n"],"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","ignoreList":[]}