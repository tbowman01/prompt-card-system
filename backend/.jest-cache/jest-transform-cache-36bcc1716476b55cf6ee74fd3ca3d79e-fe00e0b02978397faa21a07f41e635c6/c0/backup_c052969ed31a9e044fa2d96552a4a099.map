{"version":3,"sources":["/workspaces/prompt-card-system/backend/node_modules/better-sqlite3/lib/methods/backup.js"],"sourcesContent":["'use strict';\nconst fs = require('fs');\nconst path = require('path');\nconst { promisify } = require('util');\nconst { cppdb } = require('../util');\nconst fsAccess = promisify(fs.access);\n\nmodule.exports = async function backup(filename, options) {\n\tif (options == null) options = {};\n\n\t// Validate arguments\n\tif (typeof filename !== 'string') throw new TypeError('Expected first argument to be a string');\n\tif (typeof options !== 'object') throw new TypeError('Expected second argument to be an options object');\n\n\t// Interpret options\n\tfilename = filename.trim();\n\tconst attachedName = 'attached' in options ? options.attached : 'main';\n\tconst handler = 'progress' in options ? options.progress : null;\n\n\t// Validate interpreted options\n\tif (!filename) throw new TypeError('Backup filename cannot be an empty string');\n\tif (filename === ':memory:') throw new TypeError('Invalid backup filename \":memory:\"');\n\tif (typeof attachedName !== 'string') throw new TypeError('Expected the \"attached\" option to be a string');\n\tif (!attachedName) throw new TypeError('The \"attached\" option cannot be an empty string');\n\tif (handler != null && typeof handler !== 'function') throw new TypeError('Expected the \"progress\" option to be a function');\n\n\t// Make sure the specified directory exists\n\tawait fsAccess(path.dirname(filename)).catch(() => {\n\t\tthrow new TypeError('Cannot save backup because the directory does not exist');\n\t});\n\n\tconst isNewFile = await fsAccess(filename).then(() => false, () => true);\n\treturn runBackup(this[cppdb].backup(this, attachedName, filename, isNewFile), handler || null);\n};\n\nconst runBackup = (backup, handler) => {\n\tlet rate = 0;\n\tlet useDefault = true;\n\n\treturn new Promise((resolve, reject) => {\n\t\tsetImmediate(function step() {\n\t\t\ttry {\n\t\t\t\tconst progress = backup.transfer(rate);\n\t\t\t\tif (!progress.remainingPages) {\n\t\t\t\t\tbackup.close();\n\t\t\t\t\tresolve(progress);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (useDefault) {\n\t\t\t\t\tuseDefault = false;\n\t\t\t\t\trate = 100;\n\t\t\t\t}\n\t\t\t\tif (handler) {\n\t\t\t\t\tconst ret = handler(progress);\n\t\t\t\t\tif (ret !== undefined) {\n\t\t\t\t\t\tif (typeof ret === 'number' && ret === ret) rate = Math.max(0, Math.min(0x7fffffff, Math.round(ret)));\n\t\t\t\t\t\telse throw new TypeError('Expected progress callback to return a number or undefined');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsetImmediate(step);\n\t\t\t} catch (err) {\n\t\t\t\tbackup.close();\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t});\n};\n"],"names":["fs","require","path","promisify","cppdb","fsAccess","access","module","exports","backup","filename","options","TypeError","trim","attachedName","attached","handler","progress","dirname","catch","isNewFile","then","runBackup","rate","useDefault","Promise","resolve","reject","setImmediate","step","transfer","remainingPages","close","ret","undefined","Math","max","min","round","err"],"mappings":"AAAA;AACA,MAAMA,KAAKC,QAAQ;AACnB,MAAMC,OAAOD,QAAQ;AACrB,MAAM,EAAEE,SAAS,EAAE,GAAGF,QAAQ;AAC9B,MAAM,EAAEG,KAAK,EAAE,GAAGH,QAAQ;AAC1B,MAAMI,WAAWF,UAAUH,GAAGM,MAAM;AAEpCC,OAAOC,OAAO,GAAG,eAAeC,OAAOC,QAAQ,EAAEC,OAAO;IACvD,IAAIA,WAAW,MAAMA,UAAU,CAAC;IAEhC,qBAAqB;IACrB,IAAI,OAAOD,aAAa,UAAU,MAAM,IAAIE,UAAU;IACtD,IAAI,OAAOD,YAAY,UAAU,MAAM,IAAIC,UAAU;IAErD,oBAAoB;IACpBF,WAAWA,SAASG,IAAI;IACxB,MAAMC,eAAe,cAAcH,UAAUA,QAAQI,QAAQ,GAAG;IAChE,MAAMC,UAAU,cAAcL,UAAUA,QAAQM,QAAQ,GAAG;IAE3D,+BAA+B;IAC/B,IAAI,CAACP,UAAU,MAAM,IAAIE,UAAU;IACnC,IAAIF,aAAa,YAAY,MAAM,IAAIE,UAAU;IACjD,IAAI,OAAOE,iBAAiB,UAAU,MAAM,IAAIF,UAAU;IAC1D,IAAI,CAACE,cAAc,MAAM,IAAIF,UAAU;IACvC,IAAII,WAAW,QAAQ,OAAOA,YAAY,YAAY,MAAM,IAAIJ,UAAU;IAE1E,2CAA2C;IAC3C,MAAMP,SAASH,KAAKgB,OAAO,CAACR,WAAWS,KAAK,CAAC;QAC5C,MAAM,IAAIP,UAAU;IACrB;IAEA,MAAMQ,YAAY,MAAMf,SAASK,UAAUW,IAAI,CAAC,IAAM,OAAO,IAAM;IACnE,OAAOC,UAAU,IAAI,CAAClB,MAAM,CAACK,MAAM,CAAC,IAAI,EAAEK,cAAcJ,UAAUU,YAAYJ,WAAW;AAC1F;AAEA,MAAMM,YAAY,CAACb,QAAQO;IAC1B,IAAIO,OAAO;IACX,IAAIC,aAAa;IAEjB,OAAO,IAAIC,QAAQ,CAACC,SAASC;QAC5BC,aAAa,SAASC;YACrB,IAAI;gBACH,MAAMZ,WAAWR,OAAOqB,QAAQ,CAACP;gBACjC,IAAI,CAACN,SAASc,cAAc,EAAE;oBAC7BtB,OAAOuB,KAAK;oBACZN,QAAQT;oBACR;gBACD;gBACA,IAAIO,YAAY;oBACfA,aAAa;oBACbD,OAAO;gBACR;gBACA,IAAIP,SAAS;oBACZ,MAAMiB,MAAMjB,QAAQC;oBACpB,IAAIgB,QAAQC,WAAW;wBACtB,IAAI,OAAOD,QAAQ,YAAYA,QAAQA,KAAKV,OAAOY,KAAKC,GAAG,CAAC,GAAGD,KAAKE,GAAG,CAAC,YAAYF,KAAKG,KAAK,CAACL;6BAC1F,MAAM,IAAIrB,UAAU;oBAC1B;gBACD;gBACAgB,aAAaC;YACd,EAAE,OAAOU,KAAK;gBACb9B,OAAOuB,KAAK;gBACZL,OAAOY;YACR;QACD;IACD;AACD"}