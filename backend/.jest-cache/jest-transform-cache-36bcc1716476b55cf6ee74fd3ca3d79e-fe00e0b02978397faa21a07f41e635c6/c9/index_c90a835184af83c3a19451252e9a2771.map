{"version":3,"names":["cov_1jzfn0h4ex","actualCoverage","Router","reportService","router","s","post","req","res","f","templateId","params","filters","b","body","options","report","generateReport","json","success","data","error","console","status","Error","message","reportId","format","exportOptions","includeCharts","includeRawData","compression","customizations","exportBuffer","exportReport","filename","Date","now","contentType","getContentType","setHeader","length","send","get","type","query","templates","getTemplatesByType","getTemplates","template","getTemplate","templateData","createCustomTemplate","limit","parseInt","offset","userId","startDate","endDate","result","getReportHistory","reports","pagination","total","pages","Math","ceil","getReportById","delete","deleted","deleteReport","scheduleData","schedule","createSchedule","schedules","getSchedules","executeScheduledReports","id","progress","currentStep","totalSteps","analytics","totalReports","reportsByTemplate","reportsByFormat","averageGenerationTime","mostPopularTemplate","recentActivity","service","timestamp","toISOString","cacheSize","toLowerCase","reportRoutes"],"sources":["index.ts"],"sourcesContent":["import { Router } from 'express';\nimport { reportService } from '../../services/reports/ReportService';\nconst router = Router();\n// Generate report\nrouter.post('/generate/:templateId', async (req, res)=>{\n    try {\n        const { templateId } = req.params;\n        const filters = req.body.filters || {};\n        const options = req.body.options || {};\n        const report = await reportService.generateReport(templateId, filters, options);\n        res.json({\n            success: true,\n            data: report\n        });\n    } catch (error) {\n        console.error('Error generating report:', error);\n        res.status(500).json({\n            success: false,\n            error: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\n// Export report\nrouter.post('/export/:reportId/:format', async (req, res)=>{\n    try {\n        const { reportId, format } = req.params;\n        const exportOptions = {\n            format: format,\n            includeCharts: req.body.includeCharts !== false,\n            includeRawData: req.body.includeRawData === true,\n            compression: req.body.compression === true,\n            customizations: req.body.customizations\n        };\n        const exportBuffer = await reportService.exportReport(reportId, format, exportOptions);\n        // Set appropriate headers\n        const filename = `report_${reportId}_${Date.now()}.${format}`;\n        const contentType = getContentType(format);\n        res.setHeader('Content-Disposition', `attachment; filename=\"${filename}\"`);\n        res.setHeader('Content-Type', contentType);\n        res.setHeader('Content-Length', exportBuffer.length);\n        res.send(exportBuffer);\n    } catch (error) {\n        console.error('Error exporting report:', error);\n        res.status(500).json({\n            success: false,\n            error: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\n// Get templates\nrouter.get('/templates', async (req, res)=>{\n    try {\n        const { type } = req.query;\n        let templates;\n        if (type) {\n            templates = reportService.getTemplatesByType(type);\n        } else {\n            templates = reportService.getTemplates();\n        }\n        res.json({\n            success: true,\n            data: templates\n        });\n    } catch (error) {\n        console.error('Error getting templates:', error);\n        res.status(500).json({\n            success: false,\n            error: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\n// Get specific template\nrouter.get('/templates/:templateId', async (req, res)=>{\n    try {\n        const { templateId } = req.params;\n        const template = reportService.getTemplate(templateId);\n        if (!template) {\n            res.status(404).json({\n                success: false,\n                error: 'Template not found'\n            });\n            return;\n        }\n        res.json({\n            success: true,\n            data: template\n        });\n    } catch (error) {\n        console.error('Error getting template:', error);\n        res.status(500).json({\n            success: false,\n            error: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\n// Create custom template\nrouter.post('/templates', async (req, res)=>{\n    try {\n        const templateData = req.body;\n        const template = await reportService.createCustomTemplate(templateData);\n        res.status(201).json({\n            success: true,\n            data: template\n        });\n    } catch (error) {\n        console.error('Error creating template:', error);\n        res.status(400).json({\n            success: false,\n            error: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\n// Get report history\nrouter.get('/history', async (req, res)=>{\n    try {\n        const limit = parseInt(req.query.limit) || 50;\n        const offset = parseInt(req.query.offset) || 0;\n        const filters = {\n            templateId: req.query.templateId,\n            userId: req.query.userId,\n            startDate: req.query.startDate,\n            endDate: req.query.endDate\n        };\n        const result = await reportService.getReportHistory(limit, offset, filters);\n        res.json({\n            success: true,\n            data: result.reports,\n            pagination: {\n                total: result.total,\n                limit,\n                offset,\n                pages: Math.ceil(result.total / limit)\n            }\n        });\n    } catch (error) {\n        console.error('Error getting report history:', error);\n        res.status(500).json({\n            success: false,\n            error: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\n// Get specific report\nrouter.get('/history/:reportId', async (req, res)=>{\n    try {\n        const { reportId } = req.params;\n        const report = await reportService.getReportById(reportId);\n        if (!report) {\n            res.status(404).json({\n                success: false,\n                error: 'Report not found'\n            });\n            return;\n        }\n        res.json({\n            success: true,\n            data: report\n        });\n    } catch (error) {\n        console.error('Error getting report:', error);\n        res.status(500).json({\n            success: false,\n            error: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\n// Delete report\nrouter.delete('/history/:reportId', async (req, res)=>{\n    try {\n        const { reportId } = req.params;\n        const deleted = await reportService.deleteReport(reportId);\n        if (!deleted) {\n            res.status(404).json({\n                success: false,\n                error: 'Report not found'\n            });\n            return;\n        }\n        res.json({\n            success: true,\n            message: 'Report deleted successfully'\n        });\n    } catch (error) {\n        console.error('Error deleting report:', error);\n        res.status(500).json({\n            success: false,\n            error: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\n// Schedule management\nrouter.post('/schedules', async (req, res)=>{\n    try {\n        const scheduleData = req.body;\n        const schedule = await reportService.createSchedule(scheduleData);\n        res.status(201).json({\n            success: true,\n            data: schedule\n        });\n    } catch (error) {\n        console.error('Error creating schedule:', error);\n        res.status(400).json({\n            success: false,\n            error: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\nrouter.get('/schedules', async (req, res)=>{\n    try {\n        const schedules = await reportService.getSchedules();\n        res.json({\n            success: true,\n            data: schedules\n        });\n    } catch (error) {\n        console.error('Error getting schedules:', error);\n        res.status(500).json({\n            success: false,\n            error: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\n// Execute scheduled reports (typically called by cron job)\nrouter.post('/schedules/execute', async (req, res)=>{\n    try {\n        await reportService.executeScheduledReports();\n        res.json({\n            success: true,\n            message: 'Scheduled reports executed'\n        });\n    } catch (error) {\n        console.error('Error executing scheduled reports:', error);\n        res.status(500).json({\n            success: false,\n            error: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\n// Real-time report generation progress (WebSocket endpoint would be better)\nrouter.get('/progress/:reportId', async (req, res)=>{\n    try {\n        const { reportId } = req.params;\n        // This is a simplified implementation\n        // In a real application, you'd use WebSocket or Server-Sent Events\n        res.json({\n            success: true,\n            data: {\n                id: reportId,\n                status: 'completed',\n                progress: 100,\n                currentStep: 'Report generation completed',\n                totalSteps: 6\n            }\n        });\n    } catch (error) {\n        console.error('Error getting progress:', error);\n        res.status(500).json({\n            success: false,\n            error: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\n// Analytics endpoint for report metrics\nrouter.get('/analytics', async (req, res)=>{\n    try {\n        const { startDate, endDate } = req.query;\n        // Get report generation analytics\n        const analytics = {\n            totalReports: 0,\n            reportsByTemplate: {},\n            reportsByFormat: {},\n            averageGenerationTime: 0,\n            mostPopularTemplate: null,\n            recentActivity: []\n        };\n        // This would be implemented with actual analytics queries\n        // For now, return mock data\n        res.json({\n            success: true,\n            data: analytics\n        });\n    } catch (error) {\n        console.error('Error getting analytics:', error);\n        res.status(500).json({\n            success: false,\n            error: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\n// Health check endpoint\nrouter.get('/health', async (req, res)=>{\n    try {\n        res.json({\n            success: true,\n            data: {\n                service: 'Report Service',\n                status: 'healthy',\n                timestamp: new Date().toISOString(),\n                templates: reportService.getTemplates().length,\n                cacheSize: 0 // Would implement actual cache size\n            }\n        });\n    } catch (error) {\n        console.error('Error checking health:', error);\n        res.status(500).json({\n            success: false,\n            error: error instanceof Error ? error.message : 'Unknown error'\n        });\n    }\n});\n// Helper function to get content type based on format\nfunction getContentType(format) {\n    switch(format.toLowerCase()){\n        case 'pdf':\n            return 'application/pdf';\n        case 'excel':\n            return 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\n        case 'csv':\n            return 'text/csv';\n        case 'json':\n            return 'application/json';\n        default:\n            return 'application/octet-stream';\n    }\n}\nexport { router as reportRoutes };\n"],"mappingseY;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAfZ,SAASE,MAAM,QAAQ,SAAS;AAChC,SAASC,aAAa,QAAQ,sCAAsC;AACpE,MAAMC,MAAM;AAAA;AAAA,CAAAJ,cAAA,GAAAK,CAAA,OAAGH,MAAM,CAAC,CAAC;AACvB;AAAA;AAAAF,cAAA,GAAAK,CAAA;AACAD,MAAM,CAACE,IAAI,CAAC,uBAAuB,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAG;EAAA;EAAAR,cAAA,GAAAS,CAAA;EAAAT,cAAA,GAAAK,CAAA;EACnD,IAAI;IACA,MAAM;MAAEK;IAAW,CAAC;IAAA;IAAA,CAAAV,cAAA,GAAAK,CAAA,OAAGE,GAAG,CAACI,MAAM;IACjC,MAAMC,OAAO;IAAA;IAAA,CAAAZ,cAAA,GAAAK,CAAA;IAAG;IAAA,CAAAL,cAAA,GAAAa,CAAA,UAAAN,GAAG,CAACO,IAAI,CAACF,OAAO;IAAA;IAAA,CAAAZ,cAAA,GAAAa,CAAA,UAAI,CAAC,CAAC;IACtC,MAAME,OAAO;IAAA;IAAA,CAAAf,cAAA,GAAAK,CAAA;IAAG;IAAA,CAAAL,cAAA,GAAAa,CAAA,UAAAN,GAAG,CAACO,IAAI,CAACC,OAAO;IAAA;IAAA,CAAAf,cAAA,GAAAa,CAAA,UAAI,CAAC,CAAC;IACtC,MAAMG,MAAM;IAAA;IAAA,CAAAhB,cAAA,GAAAK,CAAA,OAAG,MAAMF,aAAa,CAACc,cAAc,CAACP,UAAU,EAAEE,OAAO,EAAEG,OAAO,CAAC;IAAC;IAAAf,cAAA,GAAAK,CAAA;IAChFG,GAAG,CAACU,IAAI,CAAC;MACLC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAEJ;IACV,CAAC,CAAC;EACN,CAAC,CAAC,OAAOK,KAAK,EAAE;IAAA;IAAArB,cAAA,GAAAK,CAAA;IACZiB,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAAC;IAAArB,cAAA,GAAAK,CAAA;IACjDG,GAAG,CAACe,MAAM,CAAC,GAAG,CAAC,CAACL,IAAI,CAAC;MACjBC,OAAO,EAAE,KAAK;MACdE,KAAK,EAAEA,KAAK,YAAYG,KAAK;MAAA;MAAA,CAAAxB,cAAA,GAAAa,CAAA,UAAGQ,KAAK,CAACI,OAAO;MAAA;MAAA,CAAAzB,cAAA,GAAAa,CAAA,UAAG,eAAe;IACnE,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AACF;AAAA;AAAAb,cAAA,GAAAK,CAAA;AACAD,MAAM,CAACE,IAAI,CAAC,2BAA2B,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAG;EAAA;EAAAR,cAAA,GAAAS,CAAA;EAAAT,cAAA,GAAAK,CAAA;EACvD,IAAI;IACA,MAAM;MAAEqB,QAAQ;MAAEC;IAAO,CAAC;IAAA;IAAA,CAAA3B,cAAA,GAAAK,CAAA,QAAGE,GAAG,CAACI,MAAM;IACvC,MAAMiB,aAAa;IAAA;IAAA,CAAA5B,cAAA,GAAAK,CAAA,QAAG;MAClBsB,MAAM,EAAEA,MAAM;MACdE,aAAa,EAAEtB,GAAG,CAACO,IAAI,CAACe,aAAa,KAAK,KAAK;MAC/CC,cAAc,EAAEvB,GAAG,CAACO,IAAI,CAACgB,cAAc,KAAK,IAAI;MAChDC,WAAW,EAAExB,GAAG,CAACO,IAAI,CAACiB,WAAW,KAAK,IAAI;MAC1CC,cAAc,EAAEzB,GAAG,CAACO,IAAI,CAACkB;IAC7B,CAAC;IACD,MAAMC,YAAY;IAAA;IAAA,CAAAjC,cAAA,GAAAK,CAAA,QAAG,MAAMF,aAAa,CAAC+B,YAAY,CAACR,QAAQ,EAAEC,MAAM,EAAEC,aAAa,CAAC;IACtF;IACA,MAAMO,QAAQ;IAAA;IAAA,CAAAnC,cAAA,GAAAK,CAAA,QAAG,UAAUqB,QAAQ,IAAIU,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIV,MAAM,EAAE;IAC7D,MAAMW,WAAW;IAAA;IAAA,CAAAtC,cAAA,GAAAK,CAAA,QAAGkC,cAAc,CAACZ,MAAM,CAAC;IAAC;IAAA3B,cAAA,GAAAK,CAAA;IAC3CG,GAAG,CAACgC,SAAS,CAAC,qBAAqB,EAAE,yBAAyBL,QAAQ,GAAG,CAAC;IAAC;IAAAnC,cAAA,GAAAK,CAAA;IAC3EG,GAAG,CAACgC,SAAS,CAAC,cAAc,EAAEF,WAAW,CAAC;IAAC;IAAAtC,cAAA,GAAAK,CAAA;IAC3CG,GAAG,CAACgC,SAAS,CAAC,gBAAgB,EAAEP,YAAY,CAACQ,MAAM,CAAC;IAAC;IAAAzC,cAAA,GAAAK,CAAA;IACrDG,GAAG,CAACkC,IAAI,CAACT,YAAY,CAAC;EAC1B,CAAC,CAAC,OAAOZ,KAAK,EAAE;IAAA;IAAArB,cAAA,GAAAK,CAAA;IACZiB,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAAC;IAAArB,cAAA,GAAAK,CAAA;IAChDG,GAAG,CAACe,MAAM,CAAC,GAAG,CAAC,CAACL,IAAI,CAAC;MACjBC,OAAO,EAAE,KAAK;MACdE,KAAK,EAAEA,KAAK,YAAYG,KAAK;MAAA;MAAA,CAAAxB,cAAA,GAAAa,CAAA,UAAGQ,KAAK,CAACI,OAAO;MAAA;MAAA,CAAAzB,cAAA,GAAAa,CAAA,UAAG,eAAe;IACnE,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AACF;AAAA;AAAAb,cAAA,GAAAK,CAAA;AACAD,MAAM,CAACuC,GAAG,CAAC,YAAY,EAAE,OAAOpC,GAAG,EAAEC,GAAG,KAAG;EAAA;EAAAR,cAAA,GAAAS,CAAA;EAAAT,cAAA,GAAAK,CAAA;EACvC,IAAI;IACA,MAAM;MAAEuC;IAAK,CAAC;IAAA;IAAA,CAAA5C,cAAA,GAAAK,CAAA,QAAGE,GAAG,CAACsC,KAAK;IAC1B,IAAIC,SAAS;IAAC;IAAA9C,cAAA,GAAAK,CAAA;IACd,IAAIuC,IAAI,EAAE;MAAA;MAAA5C,cAAA,GAAAa,CAAA;MAAAb,cAAA,GAAAK,CAAA;MACNyC,SAAS,GAAG3C,aAAa,CAAC4C,kBAAkB,CAACH,IAAI,CAAC;IACtD,CAAC,MAAM;MAAA;MAAA5C,cAAA,GAAAa,CAAA;MAAAb,cAAA,GAAAK,CAAA;MACHyC,SAAS,GAAG3C,aAAa,CAAC6C,YAAY,CAAC,CAAC;IAC5C;IAAC;IAAAhD,cAAA,GAAAK,CAAA;IACDG,GAAG,CAACU,IAAI,CAAC;MACLC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE0B;IACV,CAAC,CAAC;EACN,CAAC,CAAC,OAAOzB,KAAK,EAAE;IAAA;IAAArB,cAAA,GAAAK,CAAA;IACZiB,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAAC;IAAArB,cAAA,GAAAK,CAAA;IACjDG,GAAG,CAACe,MAAM,CAAC,GAAG,CAAC,CAACL,IAAI,CAAC;MACjBC,OAAO,EAAE,KAAK;MACdE,KAAK,EAAEA,KAAK,YAAYG,KAAK;MAAA;MAAA,CAAAxB,cAAA,GAAAa,CAAA,UAAGQ,KAAK,CAACI,OAAO;MAAA;MAAA,CAAAzB,cAAA,GAAAa,CAAA,UAAG,eAAe;IACnE,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AACF;AAAA;AAAAb,cAAA,GAAAK,CAAA;AACAD,MAAM,CAACuC,GAAG,CAAC,wBAAwB,EAAE,OAAOpC,GAAG,EAAEC,GAAG,KAAG;EAAA;EAAAR,cAAA,GAAAS,CAAA;EAAAT,cAAA,GAAAK,CAAA;EACnD,IAAI;IACA,MAAM;MAAEK;IAAW,CAAC;IAAA;IAAA,CAAAV,cAAA,GAAAK,CAAA,QAAGE,GAAG,CAACI,MAAM;IACjC,MAAMsC,QAAQ;IAAA;IAAA,CAAAjD,cAAA,GAAAK,CAAA,QAAGF,aAAa,CAAC+C,WAAW,CAACxC,UAAU,CAAC;IAAC;IAAAV,cAAA,GAAAK,CAAA;IACvD,IAAI,CAAC4C,QAAQ,EAAE;MAAA;MAAAjD,cAAA,GAAAa,CAAA;MAAAb,cAAA,GAAAK,CAAA;MACXG,GAAG,CAACe,MAAM,CAAC,GAAG,CAAC,CAACL,IAAI,CAAC;QACjBC,OAAO,EAAE,KAAK;QACdE,KAAK,EAAE;MACX,CAAC,CAAC;MAAC;MAAArB,cAAA,GAAAK,CAAA;MACH;IACJ,CAAC;IAAA;IAAA;MAAAL,cAAA,GAAAa,CAAA;IAAA;IAAAb,cAAA,GAAAK,CAAA;IACDG,GAAG,CAACU,IAAI,CAAC;MACLC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE6B;IACV,CAAC,CAAC;EACN,CAAC,CAAC,OAAO5B,KAAK,EAAE;IAAA;IAAArB,cAAA,GAAAK,CAAA;IACZiB,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAAC;IAAArB,cAAA,GAAAK,CAAA;IAChDG,GAAG,CAACe,MAAM,CAAC,GAAG,CAAC,CAACL,IAAI,CAAC;MACjBC,OAAO,EAAE,KAAK;MACdE,KAAK,EAAEA,KAAK,YAAYG,KAAK;MAAA;MAAA,CAAAxB,cAAA,GAAAa,CAAA,UAAGQ,KAAK,CAACI,OAAO;MAAA;MAAA,CAAAzB,cAAA,GAAAa,CAAA,UAAG,eAAe;IACnE,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AACF;AAAA;AAAAb,cAAA,GAAAK,CAAA;AACAD,MAAM,CAACE,IAAI,CAAC,YAAY,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAG;EAAA;EAAAR,cAAA,GAAAS,CAAA;EAAAT,cAAA,GAAAK,CAAA;EACxC,IAAI;IACA,MAAM8C,YAAY;IAAA;IAAA,CAAAnD,cAAA,GAAAK,CAAA,QAAGE,GAAG,CAACO,IAAI;IAC7B,MAAMmC,QAAQ;IAAA;IAAA,CAAAjD,cAAA,GAAAK,CAAA,QAAG,MAAMF,aAAa,CAACiD,oBAAoB,CAACD,YAAY,CAAC;IAAC;IAAAnD,cAAA,GAAAK,CAAA;IACxEG,GAAG,CAACe,MAAM,CAAC,GAAG,CAAC,CAACL,IAAI,CAAC;MACjBC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE6B;IACV,CAAC,CAAC;EACN,CAAC,CAAC,OAAO5B,KAAK,EAAE;IAAA;IAAArB,cAAA,GAAAK,CAAA;IACZiB,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAAC;IAAArB,cAAA,GAAAK,CAAA;IACjDG,GAAG,CAACe,MAAM,CAAC,GAAG,CAAC,CAACL,IAAI,CAAC;MACjBC,OAAO,EAAE,KAAK;MACdE,KAAK,EAAEA,KAAK,YAAYG,KAAK;MAAA;MAAA,CAAAxB,cAAA,GAAAa,CAAA,UAAGQ,KAAK,CAACI,OAAO;MAAA;MAAA,CAAAzB,cAAA,GAAAa,CAAA,UAAG,eAAe;IACnE,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AACF;AAAA;AAAAb,cAAA,GAAAK,CAAA;AACAD,MAAM,CAACuC,GAAG,CAAC,UAAU,EAAE,OAAOpC,GAAG,EAAEC,GAAG,KAAG;EAAA;EAAAR,cAAA,GAAAS,CAAA;EAAAT,cAAA,GAAAK,CAAA;EACrC,IAAI;IACA,MAAMgD,KAAK;IAAA;IAAA,CAAArD,cAAA,GAAAK,CAAA;IAAG;IAAA,CAAAL,cAAA,GAAAa,CAAA,UAAAyC,QAAQ,CAAC/C,GAAG,CAACsC,KAAK,CAACQ,KAAK,CAAC;IAAA;IAAA,CAAArD,cAAA,GAAAa,CAAA,UAAI,EAAE;IAC7C,MAAM0C,MAAM;IAAA;IAAA,CAAAvD,cAAA,GAAAK,CAAA;IAAG;IAAA,CAAAL,cAAA,GAAAa,CAAA,WAAAyC,QAAQ,CAAC/C,GAAG,CAACsC,KAAK,CAACU,MAAM,CAAC;IAAA;IAAA,CAAAvD,cAAA,GAAAa,CAAA,WAAI,CAAC;IAC9C,MAAMD,OAAO;IAAA;IAAA,CAAAZ,cAAA,GAAAK,CAAA,QAAG;MACZK,UAAU,EAAEH,GAAG,CAACsC,KAAK,CAACnC,UAAU;MAChC8C,MAAM,EAAEjD,GAAG,CAACsC,KAAK,CAACW,MAAM;MACxBC,SAAS,EAAElD,GAAG,CAACsC,KAAK,CAACY,SAAS;MAC9BC,OAAO,EAAEnD,GAAG,CAACsC,KAAK,CAACa;IACvB,CAAC;IACD,MAAMC,MAAM;IAAA;IAAA,CAAA3D,cAAA,GAAAK,CAAA,QAAG,MAAMF,aAAa,CAACyD,gBAAgB,CAACP,KAAK,EAAEE,MAAM,EAAE3C,OAAO,CAAC;IAAC;IAAAZ,cAAA,GAAAK,CAAA;IAC5EG,GAAG,CAACU,IAAI,CAAC;MACLC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAEuC,MAAM,CAACE,OAAO;MACpBC,UAAU,EAAE;QACRC,KAAK,EAAEJ,MAAM,CAACI,KAAK;QACnBV,KAAK;QACLE,MAAM;QACNS,KAAK,EAAEC,IAAI,CAACC,IAAI,CAACP,MAAM,CAACI,KAAK,GAAGV,KAAK;MACzC;IACJ,CAAC,CAAC;EACN,CAAC,CAAC,OAAOhC,KAAK,EAAE;IAAA;IAAArB,cAAA,GAAAK,CAAA;IACZiB,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IAAC;IAAArB,cAAA,GAAAK,CAAA;IACtDG,GAAG,CAACe,MAAM,CAAC,GAAG,CAAC,CAACL,IAAI,CAAC;MACjBC,OAAO,EAAE,KAAK;MACdE,KAAK,EAAEA,KAAK,YAAYG,KAAK;MAAA;MAAA,CAAAxB,cAAA,GAAAa,CAAA,WAAGQ,KAAK,CAACI,OAAO;MAAA;MAAA,CAAAzB,cAAA,GAAAa,CAAA,WAAG,eAAe;IACnE,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AACF;AAAA;AAAAb,cAAA,GAAAK,CAAA;AACAD,MAAM,CAACuC,GAAG,CAAC,oBAAoB,EAAE,OAAOpC,GAAG,EAAEC,GAAG,KAAG;EAAA;EAAAR,cAAA,GAAAS,CAAA;EAAAT,cAAA,GAAAK,CAAA;EAC/C,IAAI;IACA,MAAM;MAAEqB;IAAS,CAAC;IAAA;IAAA,CAAA1B,cAAA,GAAAK,CAAA,QAAGE,GAAG,CAACI,MAAM;IAC/B,MAAMK,MAAM;IAAA;IAAA,CAAAhB,cAAA,GAAAK,CAAA,QAAG,MAAMF,aAAa,CAACgE,aAAa,CAACzC,QAAQ,CAAC;IAAC;IAAA1B,cAAA,GAAAK,CAAA;IAC3D,IAAI,CAACW,MAAM,EAAE;MAAA;MAAAhB,cAAA,GAAAa,CAAA;MAAAb,cAAA,GAAAK,CAAA;MACTG,GAAG,CAACe,MAAM,CAAC,GAAG,CAAC,CAACL,IAAI,CAAC;QACjBC,OAAO,EAAE,KAAK;QACdE,KAAK,EAAE;MACX,CAAC,CAAC;MAAC;MAAArB,cAAA,GAAAK,CAAA;MACH;IACJ,CAAC;IAAA;IAAA;MAAAL,cAAA,GAAAa,CAAA;IAAA;IAAAb,cAAA,GAAAK,CAAA;IACDG,GAAG,CAACU,IAAI,CAAC;MACLC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAEJ;IACV,CAAC,CAAC;EACN,CAAC,CAAC,OAAOK,KAAK,EAAE;IAAA;IAAArB,cAAA,GAAAK,CAAA;IACZiB,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAAC;IAAArB,cAAA,GAAAK,CAAA;IAC9CG,GAAG,CAACe,MAAM,CAAC,GAAG,CAAC,CAACL,IAAI,CAAC;MACjBC,OAAO,EAAE,KAAK;MACdE,KAAK,EAAEA,KAAK,YAAYG,KAAK;MAAA;MAAA,CAAAxB,cAAA,GAAAa,CAAA,WAAGQ,KAAK,CAACI,OAAO;MAAA;MAAA,CAAAzB,cAAA,GAAAa,CAAA,WAAG,eAAe;IACnE,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AACF;AAAA;AAAAb,cAAA,GAAAK,CAAA;AACAD,MAAM,CAACgE,MAAM,CAAC,oBAAoB,EAAE,OAAO7D,GAAG,EAAEC,GAAG,KAAG;EAAA;EAAAR,cAAA,GAAAS,CAAA;EAAAT,cAAA,GAAAK,CAAA;EAClD,IAAI;IACA,MAAM;MAAEqB;IAAS,CAAC;IAAA;IAAA,CAAA1B,cAAA,GAAAK,CAAA,QAAGE,GAAG,CAACI,MAAM;IAC/B,MAAM0D,OAAO;IAAA;IAAA,CAAArE,cAAA,GAAAK,CAAA,QAAG,MAAMF,aAAa,CAACmE,YAAY,CAAC5C,QAAQ,CAAC;IAAC;IAAA1B,cAAA,GAAAK,CAAA;IAC3D,IAAI,CAACgE,OAAO,EAAE;MAAA;MAAArE,cAAA,GAAAa,CAAA;MAAAb,cAAA,GAAAK,CAAA;MACVG,GAAG,CAACe,MAAM,CAAC,GAAG,CAAC,CAACL,IAAI,CAAC;QACjBC,OAAO,EAAE,KAAK;QACdE,KAAK,EAAE;MACX,CAAC,CAAC;MAAC;MAAArB,cAAA,GAAAK,CAAA;MACH;IACJ,CAAC;IAAA;IAAA;MAAAL,cAAA,GAAAa,CAAA;IAAA;IAAAb,cAAA,GAAAK,CAAA;IACDG,GAAG,CAACU,IAAI,CAAC;MACLC,OAAO,EAAE,IAAI;MACbM,OAAO,EAAE;IACb,CAAC,CAAC;EACN,CAAC,CAAC,OAAOJ,KAAK,EAAE;IAAA;IAAArB,cAAA,GAAAK,CAAA;IACZiB,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAAC;IAAArB,cAAA,GAAAK,CAAA;IAC/CG,GAAG,CAACe,MAAM,CAAC,GAAG,CAAC,CAACL,IAAI,CAAC;MACjBC,OAAO,EAAE,KAAK;MACdE,KAAK,EAAEA,KAAK,YAAYG,KAAK;MAAA;MAAA,CAAAxB,cAAA,GAAAa,CAAA,WAAGQ,KAAK,CAACI,OAAO;MAAA;MAAA,CAAAzB,cAAA,GAAAa,CAAA,WAAG,eAAe;IACnE,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AACF;AAAA;AAAAb,cAAA,GAAAK,CAAA;AACAD,MAAM,CAACE,IAAI,CAAC,YAAY,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAG;EAAA;EAAAR,cAAA,GAAAS,CAAA;EAAAT,cAAA,GAAAK,CAAA;EACxC,IAAI;IACA,MAAMkE,YAAY;IAAA;IAAA,CAAAvE,cAAA,GAAAK,CAAA,QAAGE,GAAG,CAACO,IAAI;IAC7B,MAAM0D,QAAQ;IAAA;IAAA,CAAAxE,cAAA,GAAAK,CAAA,QAAG,MAAMF,aAAa,CAACsE,cAAc,CAACF,YAAY,CAAC;IAAC;IAAAvE,cAAA,GAAAK,CAAA;IAClEG,GAAG,CAACe,MAAM,CAAC,GAAG,CAAC,CAACL,IAAI,CAAC;MACjBC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAEoD;IACV,CAAC,CAAC;EACN,CAAC,CAAC,OAAOnD,KAAK,EAAE;IAAA;IAAArB,cAAA,GAAAK,CAAA;IACZiB,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAAC;IAAArB,cAAA,GAAAK,CAAA;IACjDG,GAAG,CAACe,MAAM,CAAC,GAAG,CAAC,CAACL,IAAI,CAAC;MACjBC,OAAO,EAAE,KAAK;MACdE,KAAK,EAAEA,KAAK,YAAYG,KAAK;MAAA;MAAA,CAAAxB,cAAA,GAAAa,CAAA,WAAGQ,KAAK,CAACI,OAAO;MAAA;MAAA,CAAAzB,cAAA,GAAAa,CAAA,WAAG,eAAe;IACnE,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAAC;AAAAb,cAAA,GAAAK,CAAA;AACHD,MAAM,CAACuC,GAAG,CAAC,YAAY,EAAE,OAAOpC,GAAG,EAAEC,GAAG,KAAG;EAAA;EAAAR,cAAA,GAAAS,CAAA;EAAAT,cAAA,GAAAK,CAAA;EACvC,IAAI;IACA,MAAMqE,SAAS;IAAA;IAAA,CAAA1E,cAAA,GAAAK,CAAA,QAAG,MAAMF,aAAa,CAACwE,YAAY,CAAC,CAAC;IAAC;IAAA3E,cAAA,GAAAK,CAAA;IACrDG,GAAG,CAACU,IAAI,CAAC;MACLC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAEsD;IACV,CAAC,CAAC;EACN,CAAC,CAAC,OAAOrD,KAAK,EAAE;IAAA;IAAArB,cAAA,GAAAK,CAAA;IACZiB,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAAC;IAAArB,cAAA,GAAAK,CAAA;IACjDG,GAAG,CAACe,MAAM,CAAC,GAAG,CAAC,CAACL,IAAI,CAAC;MACjBC,OAAO,EAAE,KAAK;MACdE,KAAK,EAAEA,KAAK,YAAYG,KAAK;MAAA;MAAA,CAAAxB,cAAA,GAAAa,CAAA,WAAGQ,KAAK,CAACI,OAAO;MAAA;MAAA,CAAAzB,cAAA,GAAAa,CAAA,WAAG,eAAe;IACnE,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AACF;AAAA;AAAAb,cAAA,GAAAK,CAAA;AACAD,MAAM,CAACE,IAAI,CAAC,oBAAoB,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAG;EAAA;EAAAR,cAAA,GAAAS,CAAA;EAAAT,cAAA,GAAAK,CAAA;EAChD,IAAI;IAAA;IAAAL,cAAA,GAAAK,CAAA;IACA,MAAMF,aAAa,CAACyE,uBAAuB,CAAC,CAAC;IAAC;IAAA5E,cAAA,GAAAK,CAAA;IAC9CG,GAAG,CAACU,IAAI,CAAC;MACLC,OAAO,EAAE,IAAI;MACbM,OAAO,EAAE;IACb,CAAC,CAAC;EACN,CAAC,CAAC,OAAOJ,KAAK,EAAE;IAAA;IAAArB,cAAA,GAAAK,CAAA;IACZiB,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAAC;IAAArB,cAAA,GAAAK,CAAA;IAC3DG,GAAG,CAACe,MAAM,CAAC,GAAG,CAAC,CAACL,IAAI,CAAC;MACjBC,OAAO,EAAE,KAAK;MACdE,KAAK,EAAEA,KAAK,YAAYG,KAAK;MAAA;MAAA,CAAAxB,cAAA,GAAAa,CAAA,WAAGQ,KAAK,CAACI,OAAO;MAAA;MAAA,CAAAzB,cAAA,GAAAa,CAAA,WAAG,eAAe;IACnE,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AACF;AAAA;AAAAb,cAAA,GAAAK,CAAA;AACAD,MAAM,CAACuC,GAAG,CAAC,qBAAqB,EAAE,OAAOpC,GAAG,EAAEC,GAAG,KAAG;EAAA;EAAAR,cAAA,GAAAS,CAAA;EAAAT,cAAA,GAAAK,CAAA;EAChD,IAAI;IACA,MAAM;MAAEqB;IAAS,CAAC;IAAA;IAAA,CAAA1B,cAAA,GAAAK,CAAA,QAAGE,GAAG,CAACI,MAAM;IAC/B;IACA;IAAA;IAAAX,cAAA,GAAAK,CAAA;IACAG,GAAG,CAACU,IAAI,CAAC;MACLC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE;QACFyD,EAAE,EAAEnD,QAAQ;QACZH,MAAM,EAAE,WAAW;QACnBuD,QAAQ,EAAE,GAAG;QACbC,WAAW,EAAE,6BAA6B;QAC1CC,UAAU,EAAE;MAChB;IACJ,CAAC,CAAC;EACN,CAAC,CAAC,OAAO3D,KAAK,EAAE;IAAA;IAAArB,cAAA,GAAAK,CAAA;IACZiB,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAAC;IAAArB,cAAA,GAAAK,CAAA;IAChDG,GAAG,CAACe,MAAM,CAAC,GAAG,CAAC,CAACL,IAAI,CAAC;MACjBC,OAAO,EAAE,KAAK;MACdE,KAAK,EAAEA,KAAK,YAAYG,KAAK;MAAA;MAAA,CAAAxB,cAAA,GAAAa,CAAA,WAAGQ,KAAK,CAACI,OAAO;MAAA;MAAA,CAAAzB,cAAA,GAAAa,CAAA,WAAG,eAAe;IACnE,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AACF;AAAA;AAAAb,cAAA,GAAAK,CAAA;AACAD,MAAM,CAACuC,GAAG,CAAC,YAAY,EAAE,OAAOpC,GAAG,EAAEC,GAAG,KAAG;EAAA;EAAAR,cAAA,GAAAS,CAAA;EAAAT,cAAA,GAAAK,CAAA;EACvC,IAAI;IACA,MAAM;MAAEoD,SAAS;MAAEC;IAAQ,CAAC;IAAA;IAAA,CAAA1D,cAAA,GAAAK,CAAA,SAAGE,GAAG,CAACsC,KAAK;IACxC;IACA,MAAMoC,SAAS;IAAA;IAAA,CAAAjF,cAAA,GAAAK,CAAA,SAAG;MACd6E,YAAY,EAAE,CAAC;MACfC,iBAAiB,EAAE,CAAC,CAAC;MACrBC,eAAe,EAAE,CAAC,CAAC;MACnBC,qBAAqB,EAAE,CAAC;MACxBC,mBAAmB,EAAE,IAAI;MACzBC,cAAc,EAAE;IACpB,CAAC;IACD;IACA;IAAA;IAAAvF,cAAA,GAAAK,CAAA;IACAG,GAAG,CAACU,IAAI,CAAC;MACLC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE6D;IACV,CAAC,CAAC;EACN,CAAC,CAAC,OAAO5D,KAAK,EAAE;IAAA;IAAArB,cAAA,GAAAK,CAAA;IACZiB,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAAC;IAAArB,cAAA,GAAAK,CAAA;IACjDG,GAAG,CAACe,MAAM,CAAC,GAAG,CAAC,CAACL,IAAI,CAAC;MACjBC,OAAO,EAAE,KAAK;MACdE,KAAK,EAAEA,KAAK,YAAYG,KAAK;MAAA;MAAA,CAAAxB,cAAA,GAAAa,CAAA,WAAGQ,KAAK,CAACI,OAAO;MAAA;MAAA,CAAAzB,cAAA,GAAAa,CAAA,WAAG,eAAe;IACnE,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AACF;AAAA;AAAAb,cAAA,GAAAK,CAAA;AACAD,MAAM,CAACuC,GAAG,CAAC,SAAS,EAAE,OAAOpC,GAAG,EAAEC,GAAG,KAAG;EAAA;EAAAR,cAAA,GAAAS,CAAA;EAAAT,cAAA,GAAAK,CAAA;EACpC,IAAI;IAAA;IAAAL,cAAA,GAAAK,CAAA;IACAG,GAAG,CAACU,IAAI,CAAC;MACLC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE;QACFoE,OAAO,EAAE,gBAAgB;QACzBjE,MAAM,EAAE,SAAS;QACjBkE,SAAS,EAAE,IAAIrD,IAAI,CAAC,CAAC,CAACsD,WAAW,CAAC,CAAC;QACnC5C,SAAS,EAAE3C,aAAa,CAAC6C,YAAY,CAAC,CAAC,CAACP,MAAM;QAC9CkD,SAAS,EAAE,CAAC,CAAC;MACjB;IACJ,CAAC,CAAC;EACN,CAAC,CAAC,OAAOtE,KAAK,EAAE;IAAA;IAAArB,cAAA,GAAAK,CAAA;IACZiB,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAAC;IAAArB,cAAA,GAAAK,CAAA;IAC/CG,GAAG,CAACe,MAAM,CAAC,GAAG,CAAC,CAACL,IAAI,CAAC;MACjBC,OAAO,EAAE,KAAK;MACdE,KAAK,EAAEA,KAAK,YAAYG,KAAK;MAAA;MAAA,CAAAxB,cAAA,GAAAa,CAAA,WAAGQ,KAAK,CAACI,OAAO;MAAA;MAAA,CAAAzB,cAAA,GAAAa,CAAA,WAAG,eAAe;IACnE,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AACF;AACA,SAAS0B,cAAcA,CAACZ,MAAM,EAAE;EAAA;EAAA3B,cAAA,GAAAS,CAAA;EAAAT,cAAA,GAAAK,CAAA;EAC5B,QAAOsB,MAAM,CAACiE,WAAW,CAAC,CAAC;IACvB,KAAK,KAAK;MAAA;MAAA5F,cAAA,GAAAa,CAAA;MAAAb,cAAA,GAAAK,CAAA;MACN,OAAO,iBAAiB;IAC5B,KAAK,OAAO;MAAA;MAAAL,cAAA,GAAAa,CAAA;MAAAb,cAAA,GAAAK,CAAA;MACR,OAAO,mEAAmE;IAC9E,KAAK,KAAK;MAAA;MAAAL,cAAA,GAAAa,CAAA;MAAAb,cAAA,GAAAK,CAAA;MACN,OAAO,UAAU;IACrB,KAAK,MAAM;MAAA;MAAAL,cAAA,GAAAa,CAAA;MAAAb,cAAA,GAAAK,CAAA;MACP,OAAO,kBAAkB;IAC7B;MAAA;MAAAL,cAAA,GAAAa,CAAA;MAAAb,cAAA,GAAAK,CAAA;MACI,OAAO,0BAA0B;EACzC;AACJ;AACA,SAASD,MAAM,IAAIyF,YAAY","ignoreList":[]}