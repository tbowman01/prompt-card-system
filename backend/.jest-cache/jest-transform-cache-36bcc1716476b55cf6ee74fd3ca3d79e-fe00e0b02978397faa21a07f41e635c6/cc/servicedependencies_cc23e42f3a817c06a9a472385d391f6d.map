{"version":3,"names":["cov_288hro9jfk","actualCoverage","SERVICE_DEPENDENCIES","s","database","name","dependencies","criticalService","fallbackAvailable","maxToleratedDowntime","retryPolicy","maxRetries","retryDelay","backoffMultiplier","redis","ollama","backend","frontend","getAllDependencies","serviceName","f","visited","Set","collectDependencies","has","b","add","service","dep","includes","push","hasCriticalDependencies","deps","some"],"sources":["service-dependencies.ts"],"sourcesContent":["/**\n * Service Dependency Mapping Configuration\n * \n * This file defines the dependency relationships between services in the system.\n * Used by the Health Orchestrator for dependency checking and cascade failure prevention.\n */ export const SERVICE_DEPENDENCIES = {\n    // Core Infrastructure\n    database: {\n        name: 'database',\n        dependencies: [],\n        criticalService: true,\n        fallbackAvailable: false,\n        maxToleratedDowntime: 0,\n        retryPolicy: {\n            maxRetries: 5,\n            retryDelay: 1000,\n            backoffMultiplier: 2\n        }\n    },\n    redis: {\n        name: 'redis',\n        dependencies: [],\n        criticalService: true,\n        fallbackAvailable: true,\n        maxToleratedDowntime: 30000,\n        retryPolicy: {\n            maxRetries: 3,\n            retryDelay: 1000,\n            backoffMultiplier: 1.5\n        }\n    },\n    // AI/ML Services\n    ollama: {\n        name: 'ollama',\n        dependencies: [],\n        criticalService: true,\n        fallbackAvailable: true,\n        maxToleratedDowntime: 60000,\n        retryPolicy: {\n            maxRetries: 3,\n            retryDelay: 2000,\n            backoffMultiplier: 2\n        }\n    },\n    'model-health': {\n        name: 'model-health',\n        dependencies: [\n            'ollama'\n        ],\n        criticalService: false,\n        fallbackAvailable: true,\n        maxToleratedDowntime: 300000,\n        retryPolicy: {\n            maxRetries: 2,\n            retryDelay: 5000,\n            backoffMultiplier: 2\n        }\n    },\n    // Application Services\n    backend: {\n        name: 'backend',\n        dependencies: [\n            'database',\n            'ollama',\n            'redis'\n        ],\n        criticalService: true,\n        fallbackAvailable: false,\n        maxToleratedDowntime: 5000,\n        retryPolicy: {\n            maxRetries: 3,\n            retryDelay: 1000,\n            backoffMultiplier: 1.5\n        }\n    },\n    frontend: {\n        name: 'frontend',\n        dependencies: [\n            'backend'\n        ],\n        criticalService: true,\n        fallbackAvailable: false,\n        maxToleratedDowntime: 10000,\n        retryPolicy: {\n            maxRetries: 2,\n            retryDelay: 2000,\n            backoffMultiplier: 2\n        }\n    }\n};\n/**\n * Get all dependencies for a service (including transitive dependencies)\n */ export function getAllDependencies(serviceName) {\n    const visited = new Set();\n    const dependencies = [];\n    function collectDependencies(name) {\n        if (visited.has(name)) return;\n        visited.add(name);\n        const service = SERVICE_DEPENDENCIES[name];\n        if (service) {\n            for (const dep of service.dependencies){\n                collectDependencies(dep);\n                if (!dependencies.includes(dep)) {\n                    dependencies.push(dep);\n                }\n            }\n        }\n    }\n    collectDependencies(serviceName);\n    return dependencies;\n}\n/**\n * Check if a service has any critical dependencies\n */ export function hasCriticalDependencies(serviceName) {\n    const deps = getAllDependencies(serviceName);\n    return deps.some((dep)=>SERVICE_DEPENDENCIES[dep]?.criticalService);\n}\n"],"mappingseY;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAfZ;AACA;AACA;AACA;AACA;AACA;AAAI,OAAO,MAAME,oBAAoB;AAAA;AAAA,CAAAF,cAAA,GAAAG,CAAA,OAAG;EACpC;EACAC,QAAQ,EAAE;IACNC,IAAI,EAAE,UAAU;IAChBC,YAAY,EAAE,EAAE;IAChBC,eAAe,EAAE,IAAI;IACrBC,iBAAiB,EAAE,KAAK;IACxBC,oBAAoB,EAAE,CAAC;IACvBC,WAAW,EAAE;MACTC,UAAU,EAAE,CAAC;MACbC,UAAU,EAAE,IAAI;MAChBC,iBAAiB,EAAE;IACvB;EACJ,CAAC;EACDC,KAAK,EAAE;IACHT,IAAI,EAAE,OAAO;IACbC,YAAY,EAAE,EAAE;IAChBC,eAAe,EAAE,IAAI;IACrBC,iBAAiB,EAAE,IAAI;IACvBC,oBAAoB,EAAE,KAAK;IAC3BC,WAAW,EAAE;MACTC,UAAU,EAAE,CAAC;MACbC,UAAU,EAAE,IAAI;MAChBC,iBAAiB,EAAE;IACvB;EACJ,CAAC;EACD;EACAE,MAAM,EAAE;IACJV,IAAI,EAAE,QAAQ;IACdC,YAAY,EAAE,EAAE;IAChBC,eAAe,EAAE,IAAI;IACrBC,iBAAiB,EAAE,IAAI;IACvBC,oBAAoB,EAAE,KAAK;IAC3BC,WAAW,EAAE;MACTC,UAAU,EAAE,CAAC;MACbC,UAAU,EAAE,IAAI;MAChBC,iBAAiB,EAAE;IACvB;EACJ,CAAC;EACD,cAAc,EAAE;IACZR,IAAI,EAAE,cAAc;IACpBC,YAAY,EAAE,CACV,QAAQ,CACX;IACDC,eAAe,EAAE,KAAK;IACtBC,iBAAiB,EAAE,IAAI;IACvBC,oBAAoB,EAAE,MAAM;IAC5BC,WAAW,EAAE;MACTC,UAAU,EAAE,CAAC;MACbC,UAAU,EAAE,IAAI;MAChBC,iBAAiB,EAAE;IACvB;EACJ,CAAC;EACD;EACAG,OAAO,EAAE;IACLX,IAAI,EAAE,SAAS;IACfC,YAAY,EAAE,CACV,UAAU,EACV,QAAQ,EACR,OAAO,CACV;IACDC,eAAe,EAAE,IAAI;IACrBC,iBAAiB,EAAE,KAAK;IACxBC,oBAAoB,EAAE,IAAI;IAC1BC,WAAW,EAAE;MACTC,UAAU,EAAE,CAAC;MACbC,UAAU,EAAE,IAAI;MAChBC,iBAAiB,EAAE;IACvB;EACJ,CAAC;EACDI,QAAQ,EAAE;IACNZ,IAAI,EAAE,UAAU;IAChBC,YAAY,EAAE,CACV,SAAS,CACZ;IACDC,eAAe,EAAE,IAAI;IACrBC,iBAAiB,EAAE,KAAK;IACxBC,oBAAoB,EAAE,KAAK;IAC3BC,WAAW,EAAE;MACTC,UAAU,EAAE,CAAC;MACbC,UAAU,EAAE,IAAI;MAChBC,iBAAiB,EAAE;IACvB;EACJ;AACJ,CAAC;AACD;AACA;AACA;AAAI,OAAO,SAASK,kBAAkBA,CAACC,WAAW,EAAE;EAAA;EAAAnB,cAAA,GAAAoB,CAAA;EAChD,MAAMC,OAAO;EAAA;EAAA,CAAArB,cAAA,GAAAG,CAAA,OAAG,IAAImB,GAAG,CAAC,CAAC;EACzB,MAAMhB,YAAY;EAAA;EAAA,CAAAN,cAAA,GAAAG,CAAA,OAAG,EAAE;EACvB,SAASoB,mBAAmBA,CAAClB,IAAI,EAAE;IAAA;IAAAL,cAAA,GAAAoB,CAAA;IAAApB,cAAA,GAAAG,CAAA;IAC/B,IAAIkB,OAAO,CAACG,GAAG,CAACnB,IAAI,CAAC,EAAE;MAAA;MAAAL,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAG,CAAA;MAAA;IAAM,CAAC;IAAA;IAAA;MAAAH,cAAA,GAAAyB,CAAA;IAAA;IAAAzB,cAAA,GAAAG,CAAA;IAC9BkB,OAAO,CAACK,GAAG,CAACrB,IAAI,CAAC;IACjB,MAAMsB,OAAO;IAAA;IAAA,CAAA3B,cAAA,GAAAG,CAAA,OAAGD,oBAAoB,CAACG,IAAI,CAAC;IAAC;IAAAL,cAAA,GAAAG,CAAA;IAC3C,IAAIwB,OAAO,EAAE;MAAA;MAAA3B,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAG,CAAA;MACT,KAAK,MAAMyB,GAAG,IAAID,OAAO,CAACrB,YAAY,EAAC;QAAA;QAAAN,cAAA,GAAAG,CAAA;QACnCoB,mBAAmB,CAACK,GAAG,CAAC;QAAC;QAAA5B,cAAA,GAAAG,CAAA;QACzB,IAAI,CAACG,YAAY,CAACuB,QAAQ,CAACD,GAAG,CAAC,EAAE;UAAA;UAAA5B,cAAA,GAAAyB,CAAA;UAAAzB,cAAA,GAAAG,CAAA;UAC7BG,YAAY,CAACwB,IAAI,CAACF,GAAG,CAAC;QAC1B,CAAC;QAAA;QAAA;UAAA5B,cAAA,GAAAyB,CAAA;QAAA;MACL;IACJ,CAAC;IAAA;IAAA;MAAAzB,cAAA,GAAAyB,CAAA;IAAA;EACL;EAAC;EAAAzB,cAAA,GAAAG,CAAA;EACDoB,mBAAmB,CAACJ,WAAW,CAAC;EAAC;EAAAnB,cAAA,GAAAG,CAAA;EACjC,OAAOG,YAAY;AACvB;AACA;AACA;AACA;AAAI,OAAO,SAASyB,uBAAuBA,CAACZ,WAAW,EAAE;EAAA;EAAAnB,cAAA,GAAAoB,CAAA;EACrD,MAAMY,IAAI;EAAA;EAAA,CAAAhC,cAAA,GAAAG,CAAA,QAAGe,kBAAkB,CAACC,WAAW,CAAC;EAAC;EAAAnB,cAAA,GAAAG,CAAA;EAC7C,OAAO6B,IAAI,CAACC,IAAI,CAAEL,GAAG,IAAG;IAAA;IAAA5B,cAAA,GAAAoB,CAAA;IAAApB,cAAA,GAAAG,CAAA;IAAA,OAAAD,oBAAoB,CAAC0B,GAAG,CAAC,EAAErB,eAAe;EAAD,CAAC,CAAC;AACvE","ignoreList":[]}