{"version":3,"sources":["/workspaces/prompt-card-system/backend/node_modules/better-sqlite3/lib/database.js"],"sourcesContent":["'use strict';\nconst fs = require('fs');\nconst path = require('path');\nconst util = require('./util');\nconst SqliteError = require('./sqlite-error');\n\nlet DEFAULT_ADDON;\n\nfunction Database(filenameGiven, options) {\n\tif (new.target == null) {\n\t\treturn new Database(filenameGiven, options);\n\t}\n\n\t// Apply defaults\n\tlet buffer;\n\tif (Buffer.isBuffer(filenameGiven)) {\n\t\tbuffer = filenameGiven;\n\t\tfilenameGiven = ':memory:';\n\t}\n\tif (filenameGiven == null) filenameGiven = '';\n\tif (options == null) options = {};\n\n\t// Validate arguments\n\tif (typeof filenameGiven !== 'string') throw new TypeError('Expected first argument to be a string');\n\tif (typeof options !== 'object') throw new TypeError('Expected second argument to be an options object');\n\tif ('readOnly' in options) throw new TypeError('Misspelled option \"readOnly\" should be \"readonly\"');\n\tif ('memory' in options) throw new TypeError('Option \"memory\" was removed in v7.0.0 (use \":memory:\" filename instead)');\n\n\t// Interpret options\n\tconst filename = filenameGiven.trim();\n\tconst anonymous = filename === '' || filename === ':memory:';\n\tconst readonly = util.getBooleanOption(options, 'readonly');\n\tconst fileMustExist = util.getBooleanOption(options, 'fileMustExist');\n\tconst timeout = 'timeout' in options ? options.timeout : 5000;\n\tconst verbose = 'verbose' in options ? options.verbose : null;\n\tconst nativeBinding = 'nativeBinding' in options ? options.nativeBinding : null;\n\n\t// Validate interpreted options\n\tif (readonly && anonymous && !buffer) throw new TypeError('In-memory/temporary databases cannot be readonly');\n\tif (!Number.isInteger(timeout) || timeout < 0) throw new TypeError('Expected the \"timeout\" option to be a positive integer');\n\tif (timeout > 0x7fffffff) throw new RangeError('Option \"timeout\" cannot be greater than 2147483647');\n\tif (verbose != null && typeof verbose !== 'function') throw new TypeError('Expected the \"verbose\" option to be a function');\n\tif (nativeBinding != null && typeof nativeBinding !== 'string' && typeof nativeBinding !== 'object') throw new TypeError('Expected the \"nativeBinding\" option to be a string or addon object');\n\n\t// Load the native addon\n\tlet addon;\n\tif (nativeBinding == null) {\n\t\taddon = DEFAULT_ADDON || (DEFAULT_ADDON = require('bindings')('better_sqlite3.node'));\n\t} else if (typeof nativeBinding === 'string') {\n\t\t// See <https://webpack.js.org/api/module-variables/#__non_webpack_require__-webpack-specific>\n\t\tconst requireFunc = typeof __non_webpack_require__ === 'function' ? __non_webpack_require__ : require;\n\t\taddon = requireFunc(path.resolve(nativeBinding).replace(/(\\.node)?$/, '.node'));\n\t} else {\n\t\t// See <https://github.com/WiseLibs/better-sqlite3/issues/972>\n\t\taddon = nativeBinding;\n\t}\n\n\tif (!addon.isInitialized) {\n\t\taddon.setErrorConstructor(SqliteError);\n\t\taddon.isInitialized = true;\n\t}\n\n\t// Make sure the specified directory exists\n\tif (!anonymous && !fs.existsSync(path.dirname(filename))) {\n\t\tthrow new TypeError('Cannot open database because the directory does not exist');\n\t}\n\n\tObject.defineProperties(this, {\n\t\t[util.cppdb]: { value: new addon.Database(filename, filenameGiven, anonymous, readonly, fileMustExist, timeout, verbose || null, buffer || null) },\n\t\t...wrappers.getters,\n\t});\n}\n\nconst wrappers = require('./methods/wrappers');\nDatabase.prototype.prepare = wrappers.prepare;\nDatabase.prototype.transaction = require('./methods/transaction');\nDatabase.prototype.pragma = require('./methods/pragma');\nDatabase.prototype.backup = require('./methods/backup');\nDatabase.prototype.serialize = require('./methods/serialize');\nDatabase.prototype.function = require('./methods/function');\nDatabase.prototype.aggregate = require('./methods/aggregate');\nDatabase.prototype.table = require('./methods/table');\nDatabase.prototype.loadExtension = wrappers.loadExtension;\nDatabase.prototype.exec = wrappers.exec;\nDatabase.prototype.close = wrappers.close;\nDatabase.prototype.defaultSafeIntegers = wrappers.defaultSafeIntegers;\nDatabase.prototype.unsafeMode = wrappers.unsafeMode;\nDatabase.prototype[util.inspect] = require('./methods/inspect');\n\nmodule.exports = Database;\n"],"names":["fs","require","path","util","SqliteError","DEFAULT_ADDON","Database","filenameGiven","options","buffer","Buffer","isBuffer","TypeError","filename","trim","anonymous","readonly","getBooleanOption","fileMustExist","timeout","verbose","nativeBinding","Number","isInteger","RangeError","addon","requireFunc","__non_webpack_require__","resolve","replace","isInitialized","setErrorConstructor","existsSync","dirname","Object","defineProperties","cppdb","value","wrappers","getters","prototype","prepare","transaction","pragma","backup","serialize","function","aggregate","table","loadExtension","exec","close","defaultSafeIntegers","unsafeMode","inspect","module","exports"],"mappings":"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"}