0c00d02088684905096f92a6962a5a1e
"use strict";

/* istanbul ignore next */
function cov_2hc3wgmahg() {
  var path = "/workspaces/prompt-card-system/backend/src/server.ts";
  var hash = "966a2daa507dbe7c2208f936402909313e6c955a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/prompt-card-system/backend/src/server.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 53
        }
      },
      "4": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 47
        }
      },
      "5": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 51
        }
      },
      "6": {
        start: {
          line: 9,
          column: 17
        },
        end: {
          line: 9,
          column: 51
        }
      },
      "7": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 30
        }
      },
      "8": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 40
        }
      },
      "9": {
        start: {
          line: 13,
          column: 23
        },
        end: {
          line: 13,
          column: 59
        }
      },
      "10": {
        start: {
          line: 14,
          column: 19
        },
        end: {
          line: 14,
          column: 51
        }
      },
      "11": {
        start: {
          line: 15,
          column: 21
        },
        end: {
          line: 15,
          column: 55
        }
      },
      "12": {
        start: {
          line: 16,
          column: 15
        },
        end: {
          line: 16,
          column: 43
        }
      },
      "13": {
        start: {
          line: 17,
          column: 21
        },
        end: {
          line: 17,
          column: 53
        }
      },
      "14": {
        start: {
          line: 18,
          column: 21
        },
        end: {
          line: 18,
          column: 53
        }
      },
      "15": {
        start: {
          line: 19,
          column: 17
        },
        end: {
          line: 19,
          column: 43
        }
      },
      "16": {
        start: {
          line: 20,
          column: 26
        },
        end: {
          line: 20,
          column: 61
        }
      },
      "17": {
        start: {
          line: 21,
          column: 30
        },
        end: {
          line: 21,
          column: 69
        }
      },
      "18": {
        start: {
          line: 22,
          column: 17
        },
        end: {
          line: 22,
          column: 43
        }
      },
      "19": {
        start: {
          line: 23,
          column: 22
        },
        end: {
          line: 23,
          column: 53
        }
      },
      "20": {
        start: {
          line: 24,
          column: 20
        },
        end: {
          line: 24,
          column: 49
        }
      },
      "21": {
        start: {
          line: 25,
          column: 24
        },
        end: {
          line: 25,
          column: 57
        }
      },
      "22": {
        start: {
          line: 26,
          column: 32
        },
        end: {
          line: 26,
          column: 73
        }
      },
      "23": {
        start: {
          line: 27,
          column: 15
        },
        end: {
          line: 27,
          column: 39
        }
      },
      "24": {
        start: {
          line: 28,
          column: 21
        },
        end: {
          line: 28,
          column: 51
        }
      },
      "25": {
        start: {
          line: 29,
          column: 20
        },
        end: {
          line: 29,
          column: 49
        }
      },
      "26": {
        start: {
          line: 30,
          column: 31
        },
        end: {
          line: 30,
          column: 71
        }
      },
      "27": {
        start: {
          line: 31,
          column: 23
        },
        end: {
          line: 31,
          column: 72
        }
      },
      "28": {
        start: {
          line: 32,
          column: 18
        },
        end: {
          line: 32,
          column: 45
        }
      },
      "29": {
        start: {
          line: 33,
          column: 22
        },
        end: {
          line: 33,
          column: 70
        }
      },
      "30": {
        start: {
          line: 34,
          column: 19
        },
        end: {
          line: 34,
          column: 64
        }
      },
      "31": {
        start: {
          line: 35,
          column: 15
        },
        end: {
          line: 35,
          column: 39
        }
      },
      "32": {
        start: {
          line: 36,
          column: 22
        },
        end: {
          line: 36,
          column: 70
        }
      },
      "33": {
        start: {
          line: 37,
          column: 19
        },
        end: {
          line: 37,
          column: 47
        }
      },
      "34": {
        start: {
          line: 38,
          column: 24
        },
        end: {
          line: 38,
          column: 57
        }
      },
      "35": {
        start: {
          line: 39,
          column: 23
        },
        end: {
          line: 39,
          column: 57
        }
      },
      "36": {
        start: {
          line: 40,
          column: 29
        },
        end: {
          line: 40,
          column: 81
        }
      },
      "37": {
        start: {
          line: 41,
          column: 28
        },
        end: {
          line: 41,
          column: 79
        }
      },
      "38": {
        start: {
          line: 42,
          column: 40
        },
        end: {
          line: 42,
          column: 103
        }
      },
      "39": {
        start: {
          line: 43,
          column: 26
        },
        end: {
          line: 43,
          column: 73
        }
      },
      "40": {
        start: {
          line: 44,
          column: 23
        },
        end: {
          line: 44,
          column: 59
        }
      },
      "41": {
        start: {
          line: 45,
          column: 29
        },
        end: {
          line: 45,
          column: 76
        }
      },
      "42": {
        start: {
          line: 46,
          column: 25
        },
        end: {
          line: 46,
          column: 68
        }
      },
      "43": {
        start: {
          line: 47,
          column: 30
        },
        end: {
          line: 47,
          column: 80
        }
      },
      "44": {
        start: {
          line: 48,
          column: 24
        },
        end: {
          line: 48,
          column: 68
        }
      },
      "45": {
        start: {
          line: 49,
          column: 19
        },
        end: {
          line: 49,
          column: 49
        }
      },
      "46": {
        start: {
          line: 50,
          column: 33
        },
        end: {
          line: 50,
          column: 87
        }
      },
      "47": {
        start: {
          line: 51,
          column: 0
        },
        end: {
          line: 51,
          column: 26
        }
      },
      "48": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 36
        }
      },
      "49": {
        start: {
          line: 53,
          column: 15
        },
        end: {
          line: 53,
          column: 44
        }
      },
      "50": {
        start: {
          line: 54,
          column: 13
        },
        end: {
          line: 54,
          column: 37
        }
      },
      "51": {
        start: {
          line: 56,
          column: 0
        },
        end: {
          line: 56,
          column: 26
        }
      },
      "52": {
        start: {
          line: 58,
          column: 0
        },
        end: {
          line: 58,
          column: 30
        }
      },
      "53": {
        start: {
          line: 59,
          column: 0
        },
        end: {
          line: 59,
          column: 35
        }
      },
      "54": {
        start: {
          line: 60,
          column: 0
        },
        end: {
          line: 60,
          column: 41
        }
      },
      "55": {
        start: {
          line: 61,
          column: 0
        },
        end: {
          line: 61,
          column: 36
        }
      },
      "56": {
        start: {
          line: 62,
          column: 0
        },
        end: {
          line: 62,
          column: 37
        }
      },
      "57": {
        start: {
          line: 63,
          column: 0
        },
        end: {
          line: 63,
          column: 41
        }
      },
      "58": {
        start: {
          line: 65,
          column: 0
        },
        end: {
          line: 82,
          column: 4
        }
      },
      "59": {
        start: {
          line: 67,
          column: 31
        },
        end: {
          line: 67,
          column: 94
        }
      },
      "60": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 70,
          column: 40
        }
      },
      "61": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 40
        }
      },
      "62": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "63": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 33
        }
      },
      "64": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 55
        }
      },
      "65": {
        start: {
          line: 84,
          column: 0
        },
        end: {
          line: 84,
          column: 57
        }
      },
      "66": {
        start: {
          line: 86,
          column: 0
        },
        end: {
          line: 88,
          column: 4
        }
      },
      "67": {
        start: {
          line: 87,
          column: 24
        },
        end: {
          line: 87,
          column: 44
        }
      },
      "68": {
        start: {
          line: 90,
          column: 0
        },
        end: {
          line: 90,
          column: 62
        }
      },
      "69": {
        start: {
          line: 91,
          column: 0
        },
        end: {
          line: 97,
          column: 4
        }
      },
      "70": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 26
        }
      },
      "71": {
        start: {
          line: 98,
          column: 0
        },
        end: {
          line: 102,
          column: 4
        }
      },
      "72": {
        start: {
          line: 104,
          column: 0
        },
        end: {
          line: 104,
          column: 42
        }
      },
      "73": {
        start: {
          line: 106,
          column: 0
        },
        end: {
          line: 106,
          column: 29
        }
      },
      "74": {
        start: {
          line: 108,
          column: 11
        },
        end: {
          line: 108,
          column: 49
        }
      },
      "75": {
        start: {
          line: 110,
          column: 0
        },
        end: {
          line: 113,
          column: 3
        }
      },
      "76": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 111,
          column: 62
        }
      },
      "77": {
        start: {
          line: 115,
          column: 0
        },
        end: {
          line: 118,
          column: 3
        }
      },
      "78": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 116,
          column: 72
        }
      },
      "79": {
        start: {
          line: 120,
          column: 11
        },
        end: {
          line: 126,
          column: 2
        }
      },
      "80": {
        start: {
          line: 128,
          column: 24
        },
        end: {
          line: 128,
          column: 65
        }
      },
      "81": {
        start: {
          line: 129,
          column: 0
        },
        end: {
          line: 129,
          column: 62
        }
      },
      "82": {
        start: {
          line: 131,
          column: 0
        },
        end: {
          line: 133,
          column: 3
        }
      },
      "83": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 132,
          column: 65
        }
      },
      "84": {
        start: {
          line: 135,
          column: 0
        },
        end: {
          line: 137,
          column: 3
        }
      },
      "85": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 136,
          column: 66
        }
      },
      "86": {
        start: {
          line: 139,
          column: 0
        },
        end: {
          line: 141,
          column: 3
        }
      },
      "87": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 140,
          column: 72
        }
      },
      "88": {
        start: {
          line: 142,
          column: 0
        },
        end: {
          line: 144,
          column: 3
        }
      },
      "89": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 143,
          column: 65
        }
      },
      "90": {
        start: {
          line: 146,
          column: 0
        },
        end: {
          line: 148,
          column: 3
        }
      },
      "91": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 147,
          column: 70
        }
      },
      "92": {
        start: {
          line: 149,
          column: 0
        },
        end: {
          line: 154,
          column: 1
        }
      },
      "93": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 150,
          column: 86
        }
      },
      "94": {
        start: {
          line: 153,
          column: 4
        },
        end: {
          line: 153,
          column: 67
        }
      },
      "95": {
        start: {
          line: 156,
          column: 0
        },
        end: {
          line: 156,
          column: 59
        }
      },
      "96": {
        start: {
          line: 157,
          column: 0
        },
        end: {
          line: 157,
          column: 112
        }
      },
      "97": {
        start: {
          line: 159,
          column: 0
        },
        end: {
          line: 163,
          column: 3
        }
      },
      "98": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 160,
          column: 105
        }
      },
      "99": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 162,
          column: 111
        }
      },
      "100": {
        start: {
          line: 165,
          column: 0
        },
        end: {
          line: 169,
          column: 3
        }
      },
      "101": {
        start: {
          line: 166,
          column: 4
        },
        end: {
          line: 166,
          column: 113
        }
      },
      "102": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 168,
          column: 117
        }
      },
      "103": {
        start: {
          line: 171,
          column: 0
        },
        end: {
          line: 171,
          column: 56
        }
      },
      "104": {
        start: {
          line: 172,
          column: 0
        },
        end: {
          line: 179,
          column: 3
        }
      },
      "105": {
        start: {
          line: 173,
          column: 4
        },
        end: {
          line: 173,
          column: 69
        }
      },
      "106": {
        start: {
          line: 174,
          column: 4
        },
        end: {
          line: 174,
          column: 67
        }
      },
      "107": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 176,
          column: 65
        }
      },
      "108": {
        start: {
          line: 178,
          column: 4
        },
        end: {
          line: 178,
          column: 75
        }
      },
      "109": {
        start: {
          line: 181,
          column: 0
        },
        end: {
          line: 181,
          column: 61
        }
      },
      "110": {
        start: {
          line: 183,
          column: 0
        },
        end: {
          line: 183,
          column: 40
        }
      },
      "111": {
        start: {
          line: 185,
          column: 0
        },
        end: {
          line: 185,
          column: 46
        }
      },
      "112": {
        start: {
          line: 186,
          column: 0
        },
        end: {
          line: 186,
          column: 66
        }
      },
      "113": {
        start: {
          line: 187,
          column: 0
        },
        end: {
          line: 187,
          column: 84
        }
      },
      "114": {
        start: {
          line: 188,
          column: 0
        },
        end: {
          line: 188,
          column: 74
        }
      },
      "115": {
        start: {
          line: 189,
          column: 0
        },
        end: {
          line: 189,
          column: 90
        }
      },
      "116": {
        start: {
          line: 190,
          column: 0
        },
        end: {
          line: 190,
          column: 84
        }
      },
      "117": {
        start: {
          line: 191,
          column: 0
        },
        end: {
          line: 191,
          column: 103
        }
      },
      "118": {
        start: {
          line: 192,
          column: 0
        },
        end: {
          line: 192,
          column: 132
        }
      },
      "119": {
        start: {
          line: 193,
          column: 0
        },
        end: {
          line: 193,
          column: 69
        }
      },
      "120": {
        start: {
          line: 194,
          column: 0
        },
        end: {
          line: 194,
          column: 86
        }
      },
      "121": {
        start: {
          line: 195,
          column: 0
        },
        end: {
          line: 195,
          column: 84
        }
      },
      "122": {
        start: {
          line: 196,
          column: 0
        },
        end: {
          line: 196,
          column: 87
        }
      },
      "123": {
        start: {
          line: 197,
          column: 0
        },
        end: {
          line: 197,
          column: 93
        }
      },
      "124": {
        start: {
          line: 198,
          column: 0
        },
        end: {
          line: 198,
          column: 88
        }
      },
      "125": {
        start: {
          line: 199,
          column: 0
        },
        end: {
          line: 199,
          column: 80
        }
      },
      "126": {
        start: {
          line: 200,
          column: 0
        },
        end: {
          line: 200,
          column: 85
        }
      },
      "127": {
        start: {
          line: 201,
          column: 0
        },
        end: {
          line: 201,
          column: 52
        }
      },
      "128": {
        start: {
          line: 202,
          column: 0
        },
        end: {
          line: 202,
          column: 52
        }
      },
      "129": {
        start: {
          line: 203,
          column: 0
        },
        end: {
          line: 203,
          column: 96
        }
      },
      "130": {
        start: {
          line: 205,
          column: 0
        },
        end: {
          line: 205,
          column: 37
        }
      },
      "131": {
        start: {
          line: 207,
          column: 0
        },
        end: {
          line: 207,
          column: 18
        }
      },
      "132": {
        start: {
          line: 208,
          column: 0
        },
        end: {
          line: 208,
          column: 51
        }
      },
      "133": {
        start: {
          line: 210,
          column: 0
        },
        end: {
          line: 256,
          column: 3
        }
      },
      "134": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 211,
          column: 61
        }
      },
      "135": {
        start: {
          line: 212,
          column: 4
        },
        end: {
          line: 212,
          column: 59
        }
      },
      "136": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 213,
          column: 66
        }
      },
      "137": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 214,
          column: 65
        }
      },
      "138": {
        start: {
          line: 215,
          column: 4
        },
        end: {
          line: 215,
          column: 51
        }
      },
      "139": {
        start: {
          line: 216,
          column: 4
        },
        end: {
          line: 216,
          column: 58
        }
      },
      "140": {
        start: {
          line: 217,
          column: 4
        },
        end: {
          line: 217,
          column: 69
        }
      },
      "141": {
        start: {
          line: 218,
          column: 4
        },
        end: {
          line: 218,
          column: 52
        }
      },
      "142": {
        start: {
          line: 219,
          column: 4
        },
        end: {
          line: 219,
          column: 68
        }
      },
      "143": {
        start: {
          line: 220,
          column: 4
        },
        end: {
          line: 220,
          column: 56
        }
      },
      "144": {
        start: {
          line: 221,
          column: 4
        },
        end: {
          line: 221,
          column: 85
        }
      },
      "145": {
        start: {
          line: 222,
          column: 4
        },
        end: {
          line: 222,
          column: 45
        }
      },
      "146": {
        start: {
          line: 223,
          column: 4
        },
        end: {
          line: 223,
          column: 58
        }
      },
      "147": {
        start: {
          line: 224,
          column: 4
        },
        end: {
          line: 224,
          column: 52
        }
      },
      "148": {
        start: {
          line: 225,
          column: 4
        },
        end: {
          line: 225,
          column: 69
        }
      },
      "149": {
        start: {
          line: 226,
          column: 4
        },
        end: {
          line: 226,
          column: 62
        }
      },
      "150": {
        start: {
          line: 227,
          column: 4
        },
        end: {
          line: 227,
          column: 60
        }
      },
      "151": {
        start: {
          line: 228,
          column: 4
        },
        end: {
          line: 228,
          column: 57
        }
      },
      "152": {
        start: {
          line: 229,
          column: 4
        },
        end: {
          line: 229,
          column: 62
        }
      },
      "153": {
        start: {
          line: 230,
          column: 4
        },
        end: {
          line: 230,
          column: 53
        }
      },
      "154": {
        start: {
          line: 231,
          column: 4
        },
        end: {
          line: 231,
          column: 48
        }
      },
      "155": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 232,
          column: 59
        }
      },
      "156": {
        start: {
          line: 233,
          column: 4
        },
        end: {
          line: 233,
          column: 86
        }
      },
      "157": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 234,
          column: 58
        }
      },
      "158": {
        start: {
          line: 235,
          column: 4
        },
        end: {
          line: 235,
          column: 64
        }
      },
      "159": {
        start: {
          line: 236,
          column: 4
        },
        end: {
          line: 236,
          column: 54
        }
      },
      "160": {
        start: {
          line: 238,
          column: 4
        },
        end: {
          line: 238,
          column: 50
        }
      },
      "161": {
        start: {
          line: 239,
          column: 4
        },
        end: {
          line: 239,
          column: 46
        }
      },
      "162": {
        start: {
          line: 240,
          column: 4
        },
        end: {
          line: 240,
          column: 50
        }
      },
      "163": {
        start: {
          line: 241,
          column: 4
        },
        end: {
          line: 241,
          column: 58
        }
      },
      "164": {
        start: {
          line: 242,
          column: 4
        },
        end: {
          line: 242,
          column: 40
        }
      },
      "165": {
        start: {
          line: 243,
          column: 4
        },
        end: {
          line: 243,
          column: 43
        }
      },
      "166": {
        start: {
          line: 244,
          column: 4
        },
        end: {
          line: 244,
          column: 55
        }
      },
      "167": {
        start: {
          line: 245,
          column: 4
        },
        end: {
          line: 245,
          column: 48
        }
      },
      "168": {
        start: {
          line: 246,
          column: 4
        },
        end: {
          line: 246,
          column: 57
        }
      },
      "169": {
        start: {
          line: 247,
          column: 4
        },
        end: {
          line: 247,
          column: 74
        }
      },
      "170": {
        start: {
          line: 248,
          column: 4
        },
        end: {
          line: 255,
          column: 5
        }
      },
      "171": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 60
        }
      },
      "172": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 69
        }
      },
      "173": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 74
        }
      },
      "174": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 252,
          column: 55
        }
      },
      "175": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 253,
          column: 41
        }
      },
      "176": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 254,
          column: 60
        }
      },
      "177": {
        start: {
          line: 257,
          column: 0
        },
        end: {
          line: 257,
          column: 22
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        },
        loc: {
          start: {
            line: 66,
            column: 40
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 66
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 87,
            column: 10
          },
          end: {
            line: 87,
            column: 11
          }
        },
        loc: {
          start: {
            line: 87,
            column: 24
          },
          end: {
            line: 87,
            column: 44
          }
        },
        line: 87
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 93,
            column: 13
          }
        },
        loc: {
          start: {
            line: 93,
            column: 41
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 93
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 110,
            column: 43
          },
          end: {
            line: 110,
            column: 44
          }
        },
        loc: {
          start: {
            line: 110,
            column: 52
          },
          end: {
            line: 113,
            column: 1
          }
        },
        line: 110
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 115,
            column: 59
          },
          end: {
            line: 115,
            column: 60
          }
        },
        loc: {
          start: {
            line: 115,
            column: 68
          },
          end: {
            line: 118,
            column: 1
          }
        },
        line: 115
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 131,
            column: 54
          },
          end: {
            line: 131,
            column: 55
          }
        },
        loc: {
          start: {
            line: 131,
            column: 63
          },
          end: {
            line: 133,
            column: 1
          }
        },
        line: 131
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 135,
            column: 51
          },
          end: {
            line: 135,
            column: 52
          }
        },
        loc: {
          start: {
            line: 135,
            column: 60
          },
          end: {
            line: 137,
            column: 1
          }
        },
        line: 135
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 139,
            column: 61
          },
          end: {
            line: 139,
            column: 62
          }
        },
        loc: {
          start: {
            line: 139,
            column: 70
          },
          end: {
            line: 141,
            column: 1
          }
        },
        line: 139
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 142,
            column: 49
          },
          end: {
            line: 142,
            column: 50
          }
        },
        loc: {
          start: {
            line: 142,
            column: 58
          },
          end: {
            line: 144,
            column: 1
          }
        },
        line: 142
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 146,
            column: 57
          },
          end: {
            line: 146,
            column: 58
          }
        },
        loc: {
          start: {
            line: 146,
            column: 66
          },
          end: {
            line: 148,
            column: 1
          }
        },
        line: 146
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 159,
            column: 59
          },
          end: {
            line: 159,
            column: 60
          }
        },
        loc: {
          start: {
            line: 159,
            column: 65
          },
          end: {
            line: 161,
            column: 1
          }
        },
        line: 159
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 161,
            column: 9
          },
          end: {
            line: 161,
            column: 10
          }
        },
        loc: {
          start: {
            line: 161,
            column: 18
          },
          end: {
            line: 163,
            column: 1
          }
        },
        line: 161
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 165,
            column: 61
          },
          end: {
            line: 165,
            column: 62
          }
        },
        loc: {
          start: {
            line: 165,
            column: 67
          },
          end: {
            line: 167,
            column: 1
          }
        },
        line: 165
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 167,
            column: 9
          },
          end: {
            line: 167,
            column: 10
          }
        },
        loc: {
          start: {
            line: 167,
            column: 18
          },
          end: {
            line: 169,
            column: 1
          }
        },
        line: 167
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 172,
            column: 66
          },
          end: {
            line: 172,
            column: 67
          }
        },
        loc: {
          start: {
            line: 172,
            column: 72
          },
          end: {
            line: 175,
            column: 1
          }
        },
        line: 172
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        },
        loc: {
          start: {
            line: 175,
            column: 14
          },
          end: {
            line: 177,
            column: 1
          }
        },
        line: 175
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 177,
            column: 9
          },
          end: {
            line: 177,
            column: 10
          }
        },
        loc: {
          start: {
            line: 177,
            column: 18
          },
          end: {
            line: 179,
            column: 1
          }
        },
        line: 177
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 210,
            column: 20
          },
          end: {
            line: 210,
            column: 21
          }
        },
        loc: {
          start: {
            line: 210,
            column: 26
          },
          end: {
            line: 256,
            column: 1
          }
        },
        line: 210
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 54,
            column: 13
          },
          end: {
            line: 54,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 13
          },
          end: {
            line: 54,
            column: 29
          }
        }, {
          start: {
            line: 54,
            column: 33
          },
          end: {
            line: 54,
            column: 37
          }
        }],
        line: 54
      },
      "4": {
        loc: {
          start: {
            line: 67,
            column: 32
          },
          end: {
            line: 67,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 32
          },
          end: {
            line: 67,
            column: 55
          }
        }, {
          start: {
            line: 67,
            column: 59
          },
          end: {
            line: 67,
            column: 82
          }
        }],
        line: 67
      },
      "5": {
        loc: {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 70,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 70,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "6": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: 74,
            column: 13
          },
          end: {
            line: 76,
            column: 9
          }
        }],
        line: 71
      },
      "7": {
        loc: {
          start: {
            line: 122,
            column: 16
          },
          end: {
            line: 122,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 16
          },
          end: {
            line: 122,
            column: 39
          }
        }, {
          start: {
            line: 122,
            column: 43
          },
          end: {
            line: 122,
            column: 66
          }
        }],
        line: 122
      },
      "8": {
        loc: {
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 255,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 255,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/prompt-card-system/backend/src/server.ts",
      mappings: "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",
      names: [],
      sources: ["/workspaces/prompt-card-system/backend/src/server.ts"],
      sourcesContent: ["import express from 'express';\nimport cors from 'cors';\nimport helmet from 'helmet';\nimport morgan from 'morgan';\nimport dotenv from 'dotenv';\nimport { createServer } from 'http';\nimport { Server as SocketIOServer } from 'socket.io';\n\n// Security middleware imports\nimport { \n  generalRateLimit, \n  apiRateLimit, \n  testExecutionRateLimit,\n  heavyOperationRateLimit,\n  speedLimiter \n} from './middleware/rateLimiting';\nimport {\n  enhancedHelmetConfig,\n  requestId,\n  securityLogger,\n  securityHeaders,\n  csrfProtection,\n  getCSRFToken\n} from './middleware/security';\nimport { sanitizeRequestBody, limitRequestSize } from './middleware/validation';\nimport { optionalAuth } from './middleware/auth';\nimport { initializeDatabase } from './database/connection';\nimport { llmService } from './services/llmService';\nimport { healthRoutes } from './routes/health';\nimport { enhancedHealthRoutes } from './routes/health-enhanced';\nimport { healthOrchestratorRoutes } from './routes/health-orchestrator';\nimport { alertRoutes } from './routes/alerts';\nimport { promptCardRoutes } from './routes/promptCards';\nimport { testCaseRoutes } from './routes/testCases';\nimport { testExecutionRoutes } from './routes/testExecution';\nimport { parallelTestExecutionRoutes } from './routes/parallelTestExecution';\nimport { yamlRoutes } from './routes/yaml';\nimport { assertionRoutes } from './routes/assertions';\nimport { analyticsRoutes } from './routes/analytics';\nimport { predictiveAnalyticsRoutes } from './routes/predictive-analytics';\nimport optimizationRoutes from './routes/optimization';\nimport { reportRoutes } from './routes/reports';\nimport performanceRoutes from './routes/performance';\nimport trainingRoutes from './routes/training';\nimport { authRoutes } from './routes/auth';\nimport loadTestingRoutes from './routes/loadTesting';\nimport { securityRoutes } from './routes/security';\nimport { samplePromptRoutes } from './routes/samplePrompts';\nimport { initializeOptimizationServices } from './services/optimization';\nimport { performanceMonitor } from './services/performance/PerformanceMonitor';\nimport { loadTestScheduler } from './services/performance/LoadTestScheduler';\nimport { performanceRegressionDetector } from './services/performance/PerformanceRegressionDetector';\nimport { ProgressService } from './services/websocket/ProgressService';\nimport { errorHandler } from './middleware/errorHandler';\nimport { healthOrchestrator } from './services/health/HealthOrchestrator';\nimport { alertingSystem } from './services/health/AlertingSystem';\nimport { modelTrainingEngine } from './services/training/ModelTrainingEngine';\nimport { modelRegistry } from './services/training/ModelRegistry';\nimport { securityMonitor, logAggregator, alertingSystem as securityAlerting, complianceChecker } from './services/security';\nimport { mlAnalyticsCoordinator } from './services/analytics/MLAnalyticsCoordinator';\n\ndotenv.config();\n\nconst app = express();\nconst server = createServer(app);\nconst PORT = process.env.PORT || 3001;\n\n// Trust proxy for correct IP detection behind reverse proxy\napp.set('trust proxy', 1);\n\n// Security middleware (order matters!)\napp.use(requestId); // Add request ID for tracing\napp.use(securityLogger); // Log security-relevant information\napp.use(enhancedHelmetConfig); // Enhanced security headers\napp.use(securityHeaders); // Additional security headers\napp.use(speedLimiter); // Slow down requests after threshold\napp.use(generalRateLimit); // General rate limiting\n\n// CORS configuration with security considerations\napp.use(cors({\n  origin: function (origin, callback) {\n    const allowedOrigins = (process.env.CORS_ORIGIN || 'http://localhost:3000').split(',');\n    \n    // Allow requests with no origin (mobile apps, curl, etc.)\n    if (!origin) return callback(null, true);\n    \n    if (allowedOrigins.indexOf(origin) !== -1) {\n      callback(null, true);\n    } else {\n      callback(new Error('Not allowed by CORS'));\n    }\n  },\n  credentials: true,\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n  allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With', 'X-CSRF-Token', 'X-Session-ID', 'X-Request-ID'],\n  exposedHeaders: ['X-Request-ID', 'X-RateLimit-Limit', 'X-RateLimit-Remaining']\n}));\n// Setup log aggregation middleware\napp.use(logAggregator.getExpressMiddleware());\n\n// Morgan logging with custom format\napp.use(morgan('combined', {\n  skip: (req, res) => res.statusCode < 400 // Only log errors in production\n}));\n\n// Body parsing with security limits\napp.use(limitRequestSize(10 * 1024 * 1024)); // 10MB limit\napp.use(express.json({ \n  limit: '10mb',\n  verify: (req, res, buf, encoding) => {\n    // Store raw body for webhook verification if needed\n    (req as any).rawBody = buf;\n  }\n}));\napp.use(express.urlencoded({ \n  extended: true, \n  limit: '10mb',\n  parameterLimit: 100 // Limit number of parameters\n}));\n\n// Input sanitization (applied globally)\napp.use(sanitizeRequestBody);\n\n// Optional authentication for all routes (doesn't fail if no token)\napp.use(optionalAuth);\n\n// Initialize database\nconst db = initializeDatabase();\n\n// Initialize LLM service with enhanced assertion engine\nllmService.initialize().catch(error => {\n  console.error('Failed to initialize LLM service:', error);\n  // Continue without enhanced assertions if initialization fails\n});\n\n// Initialize AI-powered optimization services\ninitializeOptimizationServices().catch(error => {\n  console.error('Failed to initialize optimization services:', error);\n  // Continue without optimization services if initialization fails\n});\n\n// Setup WebSocket server\nconst io = new SocketIOServer(server, {\n  cors: {\n    origin: process.env.CORS_ORIGIN || 'http://localhost:3000',\n    methods: ['GET', 'POST'],\n    credentials: true\n  }\n});\n\n// Initialize performance monitoring\nconst progressService = new ProgressService(io);\nperformanceMonitor.startMonitoring(5000); // Monitor every 5 seconds\n\n// Initialize health orchestrator\nhealthOrchestrator.start().catch(error => {\n  console.error('Failed to start health orchestrator:', error);\n});\n\n// Initialize alerting system\nalertingSystem.initialize().catch(error => {\n  console.error('Failed to initialize alerting system:', error);\n});\n\n// Initialize training services\nmodelTrainingEngine.initialize().catch(error => {\n  console.error('Failed to initialize model training engine:', error);\n});\n\nmodelRegistry.initialize().catch(error => {\n  console.error('Failed to initialize model registry:', error);\n});\n\n// Initialize load testing services\nloadTestScheduler.initialize().catch(error => {\n  console.error('Failed to initialize load test scheduler:', error);\n});\n\ntry {\n  performanceRegressionDetector.startMonitoring(15);\n} catch (error) {\n  console.error('Failed to start regression monitoring:', error);\n}\n\n// Initialize security monitoring systems\nconsole.log('Initializing security monitoring systems...');\nlogAggregator.info('server', 'Security monitoring systems starting up', {}, ['security', 'startup']);\n\n// Perform initial security scan\nsecurityMonitor.performComprehensiveScan().then(() => {\n  logAggregator.info('server', 'Initial security scan completed', {}, ['security', 'scan']);\n}).catch(error => {\n  logAggregator.error('server', 'Initial security scan failed', { error }, ['security', 'error']);\n});\n\n// Generate initial compliance report\ncomplianceChecker.generateComplianceReport().then(() => {\n  logAggregator.info('server', 'Initial compliance report generated', {}, ['compliance', 'report']);\n}).catch(error => {\n  logAggregator.error('server', 'Initial compliance report failed', { error }, ['compliance', 'error']);\n});\n\n// Initialize ML Analytics Coordinator\nconsole.log('Initializing ML Analytics Coordinator...');\nmlAnalyticsCoordinator.initialize().then(() => {\n  console.log('ML Analytics Coordinator initialized successfully');\n  return mlAnalyticsCoordinator.start();\n}).then(() => {\n  console.log('ML Analytics Coordinator started successfully');\n}).catch(error => {\n  console.error('Failed to initialize ML Analytics Coordinator:', error);\n});\n\n// Security endpoints (no rate limiting for CSRF token)\napp.get('/api/security/csrf-token', getCSRFToken);\n\n// Authentication routes (with auth-specific rate limiting)\napp.use('/api/auth', authRoutes);\n\n// API routes with appropriate rate limiting\napp.use('/api/health', healthRoutes);\napp.use('/api/health/v2', enhancedHealthRoutes);\napp.use('/api/health/orchestrator', healthOrchestratorRoutes);\napp.use('/api/alerts', apiRateLimit, alertRoutes);\napp.use('/api/prompt-cards', apiRateLimit, promptCardRoutes);\napp.use('/api/test-cases', apiRateLimit, testCaseRoutes);\napp.use('/api/test-cases', testExecutionRateLimit, testExecutionRoutes); // Test execution routes\napp.use('/api/parallel-test-execution', testExecutionRateLimit, parallelTestExecutionRoutes); // Parallel test execution routes\napp.use('/api/yaml', apiRateLimit, yamlRoutes);\napp.use('/api/assertions', apiRateLimit, assertionRoutes);\napp.use('/api/analytics', apiRateLimit, analyticsRoutes);\napp.use('/api/predictive-analytics', predictiveAnalyticsRoutes);\napp.use('/api/optimization', heavyOperationRateLimit, optimizationRoutes); // Heavy operations\napp.use('/api/reports', heavyOperationRateLimit, reportRoutes); // Heavy operations\napp.use('/api/performance', apiRateLimit, performanceRoutes);\napp.use('/api/training', heavyOperationRateLimit, trainingRoutes); // Heavy operations\napp.use('/api/load-testing', loadTestingRoutes);\napp.use('/api/security', securityRoutes);\napp.use('/api/sample-prompts', apiRateLimit, samplePromptRoutes);\n\n// Error handling middleware\napp.use(errorHandler);\n\n// Store WebSocket instance for health checks and log aggregator\napp.set('io', io);\napp.set('logAggregator', logAggregator);\n\n// Start server\nserver.listen(PORT, () => {\n  console.log(`\uD83D\uDE80 Backend server running on port ${PORT}`);\n  console.log(`\uD83C\uDF0D Environment: ${process.env.NODE_ENV}`);\n  console.log(`\uD83D\uDCBE Database path: ${process.env.DATABASE_PATH}`);\n  console.log(`\uD83E\uDD16 Ollama URL: ${process.env.OLLAMA_BASE_URL}`);\n  console.log(`\uD83D\uDD0C WebSocket server initialized`);\n  console.log(`\u26A1 Parallel test execution system ready`);\n  console.log(`\uD83E\uDDE0 AI-powered prompt optimization services active`);\n  console.log(`\uD83D\uDCCA Performance monitoring active`);\n  console.log(`\uD83D\uDCC8 Performance API available at /api/performance`);\n  console.log(`\uD83C\uDFE5 Health orchestrator system active`);\n  console.log(`\uD83D\uDCCB Health dashboard available at /api/health/orchestrator/summary`);\n  console.log(`\uD83D\uDEA8 Alerting system active`);\n  console.log(`\uD83D\uDCE2 Alerts API available at /api/alerts`);\n  console.log(`\uD83E\uDDEA Load testing framework active`);\n  console.log(`\u26A1 Load testing API available at /api/load-testing`);\n  console.log(`\uD83D\uDCC9 Performance regression detection active`);\n  console.log(`\u23F0 Automated load test scheduling enabled`);\n  console.log(`\uD83D\uDEE1\uFE0F Security monitoring system active`);\n  console.log(`\uD83D\uDD12 Security API available at /api/security`);\n  console.log(`\uD83D\uDD0D Vulnerability scanning enabled`);\n  console.log(`\u2705 Compliance checking active`);\n  console.log(`\uD83D\uDCDD Log aggregation and analysis enabled`);\n  console.log(`\uD83D\uDD2E Predictive Analytics API available at /api/predictive-analytics`);\n  console.log(`\uD83E\uDD16 ML-powered anomaly detection active`);\n  console.log(`\uD83D\uDCCA Capacity planning and forecasting enabled`);\n  console.log(`\uD83C\uDFAF Auto-training ML models enabled`);\n  \n  // Security status\n  console.log(`\\n\uD83D\uDD12 Security Features Active:`);\n  console.log(`   \u2705 Rate limiting enabled`);\n  console.log(`   \u2705 Enhanced security headers`);\n  console.log(`   \u2705 Input validation and sanitization`);\n  console.log(`   \u2705 CSRF protection`);\n  console.log(`   \u2705 JWT authentication`);\n  console.log(`   \u2705 Request logging and monitoring`);\n  console.log(`   \u2705 Content Security Policy`);\n  console.log(`   \uD83D\uDD11 Auth API available at /api/auth`);\n  console.log(`   \uD83D\uDEE1\uFE0F CSRF token endpoint at /api/security/csrf-token`);\n  \n  if (process.env.NODE_ENV === 'production') {\n    console.log(`\\n\uD83D\uDEE1\uFE0F Production Security Reminders:`);\n    console.log(`   - Update JWT_SECRET and JWT_REFRESH_SECRET`);\n    console.log(`   - Configure Redis for distributed rate limiting`);\n    console.log(`   - Set up proper CORS origins`);\n    console.log(`   - Enable HTTPS`);\n    console.log(`   - Configure proper CSP directives`);\n  }\n});\n\nexport default app;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "966a2daa507dbe7c2208f936402909313e6c955a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2hc3wgmahg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2hc3wgmahg();
var __importDefault =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[0]++,
/* istanbul ignore next */
(cov_2hc3wgmahg().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2hc3wgmahg().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_2hc3wgmahg().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_2hc3wgmahg().f[0]++;
  cov_2hc3wgmahg().s[1]++;
  return /* istanbul ignore next */(cov_2hc3wgmahg().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_2hc3wgmahg().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_2hc3wgmahg().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_2hc3wgmahg().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_2hc3wgmahg().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[3]++, __importDefault(require("express")));
const cors_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[4]++, __importDefault(require("cors")));
const morgan_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[5]++, __importDefault(require("morgan")));
const dotenv_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[6]++, __importDefault(require("dotenv")));
const http_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[7]++, require("http"));
const socket_io_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[8]++, require("socket.io"));
// Security middleware imports
const rateLimiting_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[9]++, require("./middleware/rateLimiting"));
const security_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[10]++, require("./middleware/security"));
const validation_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[11]++, require("./middleware/validation"));
const auth_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[12]++, require("./middleware/auth"));
const connection_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[13]++, require("./database/connection"));
const llmService_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[14]++, require("./services/llmService"));
const health_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[15]++, require("./routes/health"));
const health_enhanced_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[16]++, require("./routes/health-enhanced"));
const health_orchestrator_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[17]++, require("./routes/health-orchestrator"));
const alerts_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[18]++, require("./routes/alerts"));
const promptCards_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[19]++, require("./routes/promptCards"));
const testCases_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[20]++, require("./routes/testCases"));
const testExecution_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[21]++, require("./routes/testExecution"));
const parallelTestExecution_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[22]++, require("./routes/parallelTestExecution"));
const yaml_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[23]++, require("./routes/yaml"));
const assertions_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[24]++, require("./routes/assertions"));
const analytics_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[25]++, require("./routes/analytics"));
const predictive_analytics_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[26]++, require("./routes/predictive-analytics"));
const optimization_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[27]++, __importDefault(require("./routes/optimization")));
const reports_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[28]++, require("./routes/reports"));
const performance_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[29]++, __importDefault(require("./routes/performance")));
const training_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[30]++, __importDefault(require("./routes/training")));
const auth_2 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[31]++, require("./routes/auth"));
const loadTesting_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[32]++, __importDefault(require("./routes/loadTesting")));
const security_2 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[33]++, require("./routes/security"));
const samplePrompts_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[34]++, require("./routes/samplePrompts"));
const optimization_2 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[35]++, require("./services/optimization"));
const PerformanceMonitor_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[36]++, require("./services/performance/PerformanceMonitor"));
const LoadTestScheduler_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[37]++, require("./services/performance/LoadTestScheduler"));
const PerformanceRegressionDetector_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[38]++, require("./services/performance/PerformanceRegressionDetector"));
const ProgressService_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[39]++, require("./services/websocket/ProgressService"));
const errorHandler_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[40]++, require("./middleware/errorHandler"));
const HealthOrchestrator_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[41]++, require("./services/health/HealthOrchestrator"));
const AlertingSystem_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[42]++, require("./services/health/AlertingSystem"));
const ModelTrainingEngine_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[43]++, require("./services/training/ModelTrainingEngine"));
const ModelRegistry_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[44]++, require("./services/training/ModelRegistry"));
const security_3 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[45]++, require("./services/security"));
const MLAnalyticsCoordinator_1 =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[46]++, require("./services/analytics/MLAnalyticsCoordinator"));
/* istanbul ignore next */
cov_2hc3wgmahg().s[47]++;
dotenv_1.default.config();
const app =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[48]++, (0, express_1.default)());
const server =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[49]++, (0, http_1.createServer)(app));
const PORT =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[50]++,
/* istanbul ignore next */
(cov_2hc3wgmahg().b[3][0]++, process.env.PORT) ||
/* istanbul ignore next */
(cov_2hc3wgmahg().b[3][1]++, 3001));
// Trust proxy for correct IP detection behind reverse proxy
/* istanbul ignore next */
cov_2hc3wgmahg().s[51]++;
app.set('trust proxy', 1);
// Security middleware (order matters!)
/* istanbul ignore next */
cov_2hc3wgmahg().s[52]++;
app.use(security_1.requestId); // Add request ID for tracing
/* istanbul ignore next */
cov_2hc3wgmahg().s[53]++;
app.use(security_1.securityLogger); // Log security-relevant information
/* istanbul ignore next */
cov_2hc3wgmahg().s[54]++;
app.use(security_1.enhancedHelmetConfig); // Enhanced security headers
/* istanbul ignore next */
cov_2hc3wgmahg().s[55]++;
app.use(security_1.securityHeaders); // Additional security headers
/* istanbul ignore next */
cov_2hc3wgmahg().s[56]++;
app.use(rateLimiting_1.speedLimiter); // Slow down requests after threshold
/* istanbul ignore next */
cov_2hc3wgmahg().s[57]++;
app.use(rateLimiting_1.generalRateLimit); // General rate limiting
// CORS configuration with security considerations
/* istanbul ignore next */
cov_2hc3wgmahg().s[58]++;
app.use((0, cors_1.default)({
  origin: function (origin, callback) {
    /* istanbul ignore next */
    cov_2hc3wgmahg().f[1]++;
    const allowedOrigins =
    /* istanbul ignore next */
    (cov_2hc3wgmahg().s[59]++, (
    /* istanbul ignore next */
    (cov_2hc3wgmahg().b[4][0]++, process.env.CORS_ORIGIN) ||
    /* istanbul ignore next */
    (cov_2hc3wgmahg().b[4][1]++, 'http://localhost:3000')).split(','));
    // Allow requests with no origin (mobile apps, curl, etc.)
    /* istanbul ignore next */
    cov_2hc3wgmahg().s[60]++;
    if (!origin) {
      /* istanbul ignore next */
      cov_2hc3wgmahg().b[5][0]++;
      cov_2hc3wgmahg().s[61]++;
      return callback(null, true);
    } else
    /* istanbul ignore next */
    {
      cov_2hc3wgmahg().b[5][1]++;
    }
    cov_2hc3wgmahg().s[62]++;
    if (allowedOrigins.indexOf(origin) !== -1) {
      /* istanbul ignore next */
      cov_2hc3wgmahg().b[6][0]++;
      cov_2hc3wgmahg().s[63]++;
      callback(null, true);
    } else {
      /* istanbul ignore next */
      cov_2hc3wgmahg().b[6][1]++;
      cov_2hc3wgmahg().s[64]++;
      callback(new Error('Not allowed by CORS'));
    }
  },
  credentials: true,
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
  allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With', 'X-CSRF-Token', 'X-Session-ID', 'X-Request-ID'],
  exposedHeaders: ['X-Request-ID', 'X-RateLimit-Limit', 'X-RateLimit-Remaining']
}));
// Setup log aggregation middleware
/* istanbul ignore next */
cov_2hc3wgmahg().s[65]++;
app.use(security_3.logAggregator.getExpressMiddleware());
// Morgan logging with custom format
/* istanbul ignore next */
cov_2hc3wgmahg().s[66]++;
app.use((0, morgan_1.default)('combined', {
  skip: (req, res) => {
    /* istanbul ignore next */
    cov_2hc3wgmahg().f[2]++;
    cov_2hc3wgmahg().s[67]++;
    return res.statusCode < 400;
  } // Only log errors in production
}));
// Body parsing with security limits
/* istanbul ignore next */
cov_2hc3wgmahg().s[68]++;
app.use((0, validation_1.limitRequestSize)(10 * 1024 * 1024)); // 10MB limit
/* istanbul ignore next */
cov_2hc3wgmahg().s[69]++;
app.use(express_1.default.json({
  limit: '10mb',
  verify: (req, res, buf, encoding) => {
    /* istanbul ignore next */
    cov_2hc3wgmahg().f[3]++;
    cov_2hc3wgmahg().s[70]++;
    // Store raw body for webhook verification if needed
    req.rawBody = buf;
  }
}));
/* istanbul ignore next */
cov_2hc3wgmahg().s[71]++;
app.use(express_1.default.urlencoded({
  extended: true,
  limit: '10mb',
  parameterLimit: 100 // Limit number of parameters
}));
// Input sanitization (applied globally)
/* istanbul ignore next */
cov_2hc3wgmahg().s[72]++;
app.use(validation_1.sanitizeRequestBody);
// Optional authentication for all routes (doesn't fail if no token)
/* istanbul ignore next */
cov_2hc3wgmahg().s[73]++;
app.use(auth_1.optionalAuth);
// Initialize database
const db =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[74]++, (0, connection_1.initializeDatabase)());
// Initialize LLM service with enhanced assertion engine
/* istanbul ignore next */
cov_2hc3wgmahg().s[75]++;
llmService_1.llmService.initialize().catch(error => {
  /* istanbul ignore next */
  cov_2hc3wgmahg().f[4]++;
  cov_2hc3wgmahg().s[76]++;
  console.error('Failed to initialize LLM service:', error);
  // Continue without enhanced assertions if initialization fails
});
// Initialize AI-powered optimization services
/* istanbul ignore next */
cov_2hc3wgmahg().s[77]++;
(0, optimization_2.initializeOptimizationServices)().catch(error => {
  /* istanbul ignore next */
  cov_2hc3wgmahg().f[5]++;
  cov_2hc3wgmahg().s[78]++;
  console.error('Failed to initialize optimization services:', error);
  // Continue without optimization services if initialization fails
});
// Setup WebSocket server
const io =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[79]++, new socket_io_1.Server(server, {
  cors: {
    origin:
    /* istanbul ignore next */
    (cov_2hc3wgmahg().b[7][0]++, process.env.CORS_ORIGIN) ||
    /* istanbul ignore next */
    (cov_2hc3wgmahg().b[7][1]++, 'http://localhost:3000'),
    methods: ['GET', 'POST'],
    credentials: true
  }
}));
// Initialize performance monitoring
const progressService =
/* istanbul ignore next */
(cov_2hc3wgmahg().s[80]++, new ProgressService_1.ProgressService(io));
/* istanbul ignore next */
cov_2hc3wgmahg().s[81]++;
PerformanceMonitor_1.performanceMonitor.startMonitoring(5000); // Monitor every 5 seconds
// Initialize health orchestrator
/* istanbul ignore next */
cov_2hc3wgmahg().s[82]++;
HealthOrchestrator_1.healthOrchestrator.start().catch(error => {
  /* istanbul ignore next */
  cov_2hc3wgmahg().f[6]++;
  cov_2hc3wgmahg().s[83]++;
  console.error('Failed to start health orchestrator:', error);
});
// Initialize alerting system
/* istanbul ignore next */
cov_2hc3wgmahg().s[84]++;
AlertingSystem_1.alertingSystem.initialize().catch(error => {
  /* istanbul ignore next */
  cov_2hc3wgmahg().f[7]++;
  cov_2hc3wgmahg().s[85]++;
  console.error('Failed to initialize alerting system:', error);
});
// Initialize training services
/* istanbul ignore next */
cov_2hc3wgmahg().s[86]++;
ModelTrainingEngine_1.modelTrainingEngine.initialize().catch(error => {
  /* istanbul ignore next */
  cov_2hc3wgmahg().f[8]++;
  cov_2hc3wgmahg().s[87]++;
  console.error('Failed to initialize model training engine:', error);
});
/* istanbul ignore next */
cov_2hc3wgmahg().s[88]++;
ModelRegistry_1.modelRegistry.initialize().catch(error => {
  /* istanbul ignore next */
  cov_2hc3wgmahg().f[9]++;
  cov_2hc3wgmahg().s[89]++;
  console.error('Failed to initialize model registry:', error);
});
// Initialize load testing services
/* istanbul ignore next */
cov_2hc3wgmahg().s[90]++;
LoadTestScheduler_1.loadTestScheduler.initialize().catch(error => {
  /* istanbul ignore next */
  cov_2hc3wgmahg().f[10]++;
  cov_2hc3wgmahg().s[91]++;
  console.error('Failed to initialize load test scheduler:', error);
});
/* istanbul ignore next */
cov_2hc3wgmahg().s[92]++;
try {
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[93]++;
  PerformanceRegressionDetector_1.performanceRegressionDetector.startMonitoring(15);
} catch (error) {
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[94]++;
  console.error('Failed to start regression monitoring:', error);
}
// Initialize security monitoring systems
/* istanbul ignore next */
cov_2hc3wgmahg().s[95]++;
console.log('Initializing security monitoring systems...');
/* istanbul ignore next */
cov_2hc3wgmahg().s[96]++;
security_3.logAggregator.info('server', 'Security monitoring systems starting up', {}, ['security', 'startup']);
// Perform initial security scan
/* istanbul ignore next */
cov_2hc3wgmahg().s[97]++;
security_3.securityMonitor.performComprehensiveScan().then(() => {
  /* istanbul ignore next */
  cov_2hc3wgmahg().f[11]++;
  cov_2hc3wgmahg().s[98]++;
  security_3.logAggregator.info('server', 'Initial security scan completed', {}, ['security', 'scan']);
}).catch(error => {
  /* istanbul ignore next */
  cov_2hc3wgmahg().f[12]++;
  cov_2hc3wgmahg().s[99]++;
  security_3.logAggregator.error('server', 'Initial security scan failed', {
    error
  }, ['security', 'error']);
});
// Generate initial compliance report
/* istanbul ignore next */
cov_2hc3wgmahg().s[100]++;
security_3.complianceChecker.generateComplianceReport().then(() => {
  /* istanbul ignore next */
  cov_2hc3wgmahg().f[13]++;
  cov_2hc3wgmahg().s[101]++;
  security_3.logAggregator.info('server', 'Initial compliance report generated', {}, ['compliance', 'report']);
}).catch(error => {
  /* istanbul ignore next */
  cov_2hc3wgmahg().f[14]++;
  cov_2hc3wgmahg().s[102]++;
  security_3.logAggregator.error('server', 'Initial compliance report failed', {
    error
  }, ['compliance', 'error']);
});
// Initialize ML Analytics Coordinator
/* istanbul ignore next */
cov_2hc3wgmahg().s[103]++;
console.log('Initializing ML Analytics Coordinator...');
/* istanbul ignore next */
cov_2hc3wgmahg().s[104]++;
MLAnalyticsCoordinator_1.mlAnalyticsCoordinator.initialize().then(() => {
  /* istanbul ignore next */
  cov_2hc3wgmahg().f[15]++;
  cov_2hc3wgmahg().s[105]++;
  console.log('ML Analytics Coordinator initialized successfully');
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[106]++;
  return MLAnalyticsCoordinator_1.mlAnalyticsCoordinator.start();
}).then(() => {
  /* istanbul ignore next */
  cov_2hc3wgmahg().f[16]++;
  cov_2hc3wgmahg().s[107]++;
  console.log('ML Analytics Coordinator started successfully');
}).catch(error => {
  /* istanbul ignore next */
  cov_2hc3wgmahg().f[17]++;
  cov_2hc3wgmahg().s[108]++;
  console.error('Failed to initialize ML Analytics Coordinator:', error);
});
// Security endpoints (no rate limiting for CSRF token)
/* istanbul ignore next */
cov_2hc3wgmahg().s[109]++;
app.get('/api/security/csrf-token', security_1.getCSRFToken);
// Authentication routes (with auth-specific rate limiting)
/* istanbul ignore next */
cov_2hc3wgmahg().s[110]++;
app.use('/api/auth', auth_2.authRoutes);
// API routes with appropriate rate limiting
/* istanbul ignore next */
cov_2hc3wgmahg().s[111]++;
app.use('/api/health', health_1.healthRoutes);
/* istanbul ignore next */
cov_2hc3wgmahg().s[112]++;
app.use('/api/health/v2', health_enhanced_1.enhancedHealthRoutes);
/* istanbul ignore next */
cov_2hc3wgmahg().s[113]++;
app.use('/api/health/orchestrator', health_orchestrator_1.healthOrchestratorRoutes);
/* istanbul ignore next */
cov_2hc3wgmahg().s[114]++;
app.use('/api/alerts', rateLimiting_1.apiRateLimit, alerts_1.alertRoutes);
/* istanbul ignore next */
cov_2hc3wgmahg().s[115]++;
app.use('/api/prompt-cards', rateLimiting_1.apiRateLimit, promptCards_1.promptCardRoutes);
/* istanbul ignore next */
cov_2hc3wgmahg().s[116]++;
app.use('/api/test-cases', rateLimiting_1.apiRateLimit, testCases_1.testCaseRoutes);
/* istanbul ignore next */
cov_2hc3wgmahg().s[117]++;
app.use('/api/test-cases', rateLimiting_1.testExecutionRateLimit, testExecution_1.testExecutionRoutes); // Test execution routes
/* istanbul ignore next */
cov_2hc3wgmahg().s[118]++;
app.use('/api/parallel-test-execution', rateLimiting_1.testExecutionRateLimit, parallelTestExecution_1.parallelTestExecutionRoutes); // Parallel test execution routes
/* istanbul ignore next */
cov_2hc3wgmahg().s[119]++;
app.use('/api/yaml', rateLimiting_1.apiRateLimit, yaml_1.yamlRoutes);
/* istanbul ignore next */
cov_2hc3wgmahg().s[120]++;
app.use('/api/assertions', rateLimiting_1.apiRateLimit, assertions_1.assertionRoutes);
/* istanbul ignore next */
cov_2hc3wgmahg().s[121]++;
app.use('/api/analytics', rateLimiting_1.apiRateLimit, analytics_1.analyticsRoutes);
/* istanbul ignore next */
cov_2hc3wgmahg().s[122]++;
app.use('/api/predictive-analytics', predictive_analytics_1.predictiveAnalyticsRoutes);
/* istanbul ignore next */
cov_2hc3wgmahg().s[123]++;
app.use('/api/optimization', rateLimiting_1.heavyOperationRateLimit, optimization_1.default); // Heavy operations
/* istanbul ignore next */
cov_2hc3wgmahg().s[124]++;
app.use('/api/reports', rateLimiting_1.heavyOperationRateLimit, reports_1.reportRoutes); // Heavy operations
/* istanbul ignore next */
cov_2hc3wgmahg().s[125]++;
app.use('/api/performance', rateLimiting_1.apiRateLimit, performance_1.default);
/* istanbul ignore next */
cov_2hc3wgmahg().s[126]++;
app.use('/api/training', rateLimiting_1.heavyOperationRateLimit, training_1.default); // Heavy operations
/* istanbul ignore next */
cov_2hc3wgmahg().s[127]++;
app.use('/api/load-testing', loadTesting_1.default);
/* istanbul ignore next */
cov_2hc3wgmahg().s[128]++;
app.use('/api/security', security_2.securityRoutes);
/* istanbul ignore next */
cov_2hc3wgmahg().s[129]++;
app.use('/api/sample-prompts', rateLimiting_1.apiRateLimit, samplePrompts_1.samplePromptRoutes);
// Error handling middleware
/* istanbul ignore next */
cov_2hc3wgmahg().s[130]++;
app.use(errorHandler_1.errorHandler);
// Store WebSocket instance for health checks and log aggregator
/* istanbul ignore next */
cov_2hc3wgmahg().s[131]++;
app.set('io', io);
/* istanbul ignore next */
cov_2hc3wgmahg().s[132]++;
app.set('logAggregator', security_3.logAggregator);
// Start server
/* istanbul ignore next */
cov_2hc3wgmahg().s[133]++;
server.listen(PORT, () => {
  /* istanbul ignore next */
  cov_2hc3wgmahg().f[18]++;
  cov_2hc3wgmahg().s[134]++;
  console.log(`🚀 Backend server running on port ${PORT}`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[135]++;
  console.log(`🌍 Environment: ${process.env.NODE_ENV}`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[136]++;
  console.log(`💾 Database path: ${process.env.DATABASE_PATH}`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[137]++;
  console.log(`🤖 Ollama URL: ${process.env.OLLAMA_BASE_URL}`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[138]++;
  console.log(`🔌 WebSocket server initialized`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[139]++;
  console.log(`⚡ Parallel test execution system ready`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[140]++;
  console.log(`🧠 AI-powered prompt optimization services active`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[141]++;
  console.log(`📊 Performance monitoring active`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[142]++;
  console.log(`📈 Performance API available at /api/performance`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[143]++;
  console.log(`🏥 Health orchestrator system active`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[144]++;
  console.log(`📋 Health dashboard available at /api/health/orchestrator/summary`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[145]++;
  console.log(`🚨 Alerting system active`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[146]++;
  console.log(`📢 Alerts API available at /api/alerts`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[147]++;
  console.log(`🧪 Load testing framework active`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[148]++;
  console.log(`⚡ Load testing API available at /api/load-testing`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[149]++;
  console.log(`📉 Performance regression detection active`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[150]++;
  console.log(`⏰ Automated load test scheduling enabled`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[151]++;
  console.log(`🛡️ Security monitoring system active`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[152]++;
  console.log(`🔒 Security API available at /api/security`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[153]++;
  console.log(`🔍 Vulnerability scanning enabled`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[154]++;
  console.log(`✅ Compliance checking active`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[155]++;
  console.log(`📝 Log aggregation and analysis enabled`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[156]++;
  console.log(`🔮 Predictive Analytics API available at /api/predictive-analytics`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[157]++;
  console.log(`🤖 ML-powered anomaly detection active`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[158]++;
  console.log(`📊 Capacity planning and forecasting enabled`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[159]++;
  console.log(`🎯 Auto-training ML models enabled`);
  // Security status
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[160]++;
  console.log(`\n🔒 Security Features Active:`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[161]++;
  console.log(`   ✅ Rate limiting enabled`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[162]++;
  console.log(`   ✅ Enhanced security headers`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[163]++;
  console.log(`   ✅ Input validation and sanitization`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[164]++;
  console.log(`   ✅ CSRF protection`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[165]++;
  console.log(`   ✅ JWT authentication`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[166]++;
  console.log(`   ✅ Request logging and monitoring`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[167]++;
  console.log(`   ✅ Content Security Policy`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[168]++;
  console.log(`   🔑 Auth API available at /api/auth`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[169]++;
  console.log(`   🛡️ CSRF token endpoint at /api/security/csrf-token`);
  /* istanbul ignore next */
  cov_2hc3wgmahg().s[170]++;
  if (process.env.NODE_ENV === 'production') {
    /* istanbul ignore next */
    cov_2hc3wgmahg().b[8][0]++;
    cov_2hc3wgmahg().s[171]++;
    console.log(`\n🛡️ Production Security Reminders:`);
    /* istanbul ignore next */
    cov_2hc3wgmahg().s[172]++;
    console.log(`   - Update JWT_SECRET and JWT_REFRESH_SECRET`);
    /* istanbul ignore next */
    cov_2hc3wgmahg().s[173]++;
    console.log(`   - Configure Redis for distributed rate limiting`);
    /* istanbul ignore next */
    cov_2hc3wgmahg().s[174]++;
    console.log(`   - Set up proper CORS origins`);
    /* istanbul ignore next */
    cov_2hc3wgmahg().s[175]++;
    console.log(`   - Enable HTTPS`);
    /* istanbul ignore next */
    cov_2hc3wgmahg().s[176]++;
    console.log(`   - Configure proper CSP directives`);
  } else
  /* istanbul ignore next */
  {
    cov_2hc3wgmahg().b[8][1]++;
  }
});
/* istanbul ignore next */
cov_2hc3wgmahg().s[177]++;
exports.default = app;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,