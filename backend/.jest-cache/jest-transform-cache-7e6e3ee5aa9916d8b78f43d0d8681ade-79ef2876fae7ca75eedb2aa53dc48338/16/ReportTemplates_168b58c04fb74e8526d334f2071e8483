9ae3126f6d4c0757393b94e771d28bfd
"use strict";

/* istanbul ignore next */
function cov_dvsb6cx9u() {
  var path = "/workspaces/prompt-card-system/backend/src/services/reports/templates/ReportTemplates.ts";
  var hash = "8d1f4125f5a9a93368603f330011ee4917115531";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/prompt-card-system/backend/src/services/reports/templates/ReportTemplates.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 50,
          column: 11
        }
      },
      "3": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 110,
          column: 11
        }
      },
      "4": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 169,
          column: 11
        }
      },
      "5": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 229,
          column: 11
        }
      },
      "6": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 269,
          column: 11
        }
      },
      "7": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 270,
          column: 75
        }
      },
      "8": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 273,
          column: 38
        }
      },
      "9": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 51
        }
      },
      "10": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 94
        }
      },
      "11": {
        start: {
          line: 279,
          column: 70
        },
        end: {
          line: 279,
          column: 92
        }
      },
      "12": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 282,
          column: 50
        }
      },
      "13": {
        start: {
          line: 285,
          column: 8
        },
        end: {
          line: 285,
          column: 41
        }
      },
      "14": {
        start: {
          line: 288,
          column: 25
        },
        end: {
          line: 288,
          column: 47
        }
      },
      "15": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 290,
          column: 25
        }
      },
      "16": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 290,
          column: 25
        }
      },
      "17": {
        start: {
          line: 291,
          column: 32
        },
        end: {
          line: 291,
          column: 59
        }
      },
      "18": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 48
        }
      },
      "19": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 293,
          column: 20
        }
      },
      "20": {
        start: {
          line: 296,
          column: 23
        },
        end: {
          line: 296,
          column: 25
        }
      },
      "21": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 299,
          column: 9
        }
      },
      "22": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 298,
          column: 51
        }
      },
      "23": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 302,
          column: 9
        }
      },
      "24": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 301,
          column: 53
        }
      },
      "25": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 305,
          column: 9
        }
      },
      "26": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 53
        }
      },
      "27": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 308,
          column: 9
        }
      },
      "28": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 307,
          column: 65
        }
      },
      "29": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 311,
          column: 9
        }
      },
      "30": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 310,
          column: 76
        }
      },
      "31": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 323,
          column: 11
        }
      },
      "32": {
        start: {
          line: 314,
          column: 12
        },
        end: {
          line: 316,
          column: 13
        }
      },
      "33": {
        start: {
          line: 315,
          column: 16
        },
        end: {
          line: 315,
          column: 65
        }
      },
      "34": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 319,
          column: 13
        }
      },
      "35": {
        start: {
          line: 318,
          column: 16
        },
        end: {
          line: 318,
          column: 67
        }
      },
      "36": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 322,
          column: 13
        }
      },
      "37": {
        start: {
          line: 321,
          column: 16
        },
        end: {
          line: 321,
          column: 66
        }
      },
      "38": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 324,
          column: 22
        }
      },
      "39": {
        start: {
          line: 327,
          column: 0
        },
        end: {
          line: 327,
          column: 42
        }
      },
      "40": {
        start: {
          line: 328,
          column: 0
        },
        end: {
          line: 328,
          column: 38
        }
      },
      "41": {
        start: {
          line: 330,
          column: 0
        },
        end: {
          line: 330,
          column: 29
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 5,
            column: 5
          }
        },
        loc: {
          start: {
            line: 5,
            column: 24
          },
          end: {
            line: 271,
            column: 5
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 272,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        },
        loc: {
          start: {
            line: 272,
            column: 27
          },
          end: {
            line: 274,
            column: 5
          }
        },
        line: 272
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 275,
            column: 4
          },
          end: {
            line: 275,
            column: 5
          }
        },
        loc: {
          start: {
            line: 275,
            column: 29
          },
          end: {
            line: 277,
            column: 5
          }
        },
        line: 275
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 278,
            column: 4
          },
          end: {
            line: 278,
            column: 5
          }
        },
        loc: {
          start: {
            line: 278,
            column: 36
          },
          end: {
            line: 280,
            column: 5
          }
        },
        line: 278
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 279,
            column: 58
          },
          end: {
            line: 279,
            column: 59
          }
        },
        loc: {
          start: {
            line: 279,
            column: 70
          },
          end: {
            line: 279,
            column: 92
          }
        },
        line: 279
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 281,
            column: 4
          },
          end: {
            line: 281,
            column: 5
          }
        },
        loc: {
          start: {
            line: 281,
            column: 39
          },
          end: {
            line: 283,
            column: 5
          }
        },
        line: 281
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 284,
            column: 4
          },
          end: {
            line: 284,
            column: 5
          }
        },
        loc: {
          start: {
            line: 284,
            column: 30
          },
          end: {
            line: 286,
            column: 5
          }
        },
        line: 284
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 287,
            column: 4
          },
          end: {
            line: 287,
            column: 5
          }
        },
        loc: {
          start: {
            line: 287,
            column: 39
          },
          end: {
            line: 294,
            column: 5
          }
        },
        line: 287
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 295,
            column: 4
          },
          end: {
            line: 295,
            column: 5
          }
        },
        loc: {
          start: {
            line: 295,
            column: 38
          },
          end: {
            line: 325,
            column: 5
          }
        },
        line: 295
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 313,
            column: 33
          },
          end: {
            line: 313,
            column: 34
          }
        },
        loc: {
          start: {
            line: 313,
            column: 51
          },
          end: {
            line: 323,
            column: 9
          }
        },
        line: 313
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 289,
            column: 8
          },
          end: {
            line: 290,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 289,
            column: 8
          },
          end: {
            line: 290,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 289
      },
      "1": {
        loc: {
          start: {
            line: 297,
            column: 8
          },
          end: {
            line: 299,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 297,
            column: 8
          },
          end: {
            line: 299,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 297
      },
      "2": {
        loc: {
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 300
      },
      "3": {
        loc: {
          start: {
            line: 303,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 303,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 303
      },
      "4": {
        loc: {
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 308,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 308,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 306
      },
      "5": {
        loc: {
          start: {
            line: 306,
            column: 12
          },
          end: {
            line: 306,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 306,
            column: 12
          },
          end: {
            line: 306,
            column: 28
          }
        }, {
          start: {
            line: 306,
            column: 32
          },
          end: {
            line: 306,
            column: 60
          }
        }],
        line: 306
      },
      "6": {
        loc: {
          start: {
            line: 309,
            column: 8
          },
          end: {
            line: 311,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 309,
            column: 8
          },
          end: {
            line: 311,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 309
      },
      "7": {
        loc: {
          start: {
            line: 309,
            column: 12
          },
          end: {
            line: 309,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 309,
            column: 12
          },
          end: {
            line: 309,
            column: 38
          }
        }, {
          start: {
            line: 309,
            column: 42
          },
          end: {
            line: 309,
            column: 80
          }
        }],
        line: 309
      },
      "8": {
        loc: {
          start: {
            line: 314,
            column: 12
          },
          end: {
            line: 316,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 314,
            column: 12
          },
          end: {
            line: 316,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 314
      },
      "9": {
        loc: {
          start: {
            line: 317,
            column: 12
          },
          end: {
            line: 319,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 12
          },
          end: {
            line: 319,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "10": {
        loc: {
          start: {
            line: 320,
            column: 12
          },
          end: {
            line: 322,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 320,
            column: 12
          },
          end: {
            line: 322,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 320
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/prompt-card-system/backend/src/services/reports/templates/ReportTemplates.ts",
      mappings: "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",
      names: [],
      sources: ["/workspaces/prompt-card-system/backend/src/services/reports/templates/ReportTemplates.ts"],
      sourcesContent: ["import { ReportTemplate } from '../../../types/reports';\n\nexport class ReportTemplates {\n  private static templates: Map<string, ReportTemplate> = new Map();\n\n  static initialize(): void {\n    // Executive Summary Template\n    this.templates.set('executive-summary', {\n      id: 'executive-summary',\n      name: 'Executive Summary',\n      description: 'High-level overview of test execution metrics and cost analysis',\n      type: 'executive',\n      fields: [\n        {\n          key: 'overview-metrics',\n          label: 'Overview Metrics',\n          type: 'metric',\n          required: true,\n          description: 'Key performance indicators and success metrics'\n        },\n        {\n          key: 'cost-summary',\n          label: 'Cost Summary',\n          type: 'chart',\n          required: true,\n          description: 'Cost breakdown by model and time period',\n          chartType: 'pie'\n        },\n        {\n          key: 'performance-trends',\n          label: 'Performance Trends',\n          type: 'chart',\n          required: true,\n          description: 'Performance metrics over time',\n          chartType: 'line'\n        },\n        {\n          key: 'key-insights',\n          label: 'Key Insights',\n          type: 'insight',\n          required: true,\n          description: 'AI-generated insights and recommendations'\n        }\n      ],\n      defaultFilters: {\n        period: '30d',\n        status: 'all'\n      },\n      supportedFormats: ['pdf', 'excel', 'json'],\n      customizable: true\n    });\n\n    // Detailed Test Execution Template\n    this.templates.set('detailed-execution', {\n      id: 'detailed-execution',\n      name: 'Detailed Test Execution Report',\n      description: 'Comprehensive analysis of test execution with full analytics',\n      type: 'detailed',\n      fields: [\n        {\n          key: 'execution-overview',\n          label: 'Execution Overview',\n          type: 'metric',\n          required: true,\n          description: 'Overall execution statistics and success rates'\n        },\n        {\n          key: 'model-performance',\n          label: 'Model Performance Comparison',\n          type: 'table',\n          required: true,\n          description: 'Performance metrics by model'\n        },\n        {\n          key: 'failure-analysis',\n          label: 'Failure Analysis',\n          type: 'chart',\n          required: true,\n          description: 'Analysis of test failures and common issues',\n          chartType: 'bar'\n        },\n        {\n          key: 'execution-timeline',\n          label: 'Execution Timeline',\n          type: 'chart',\n          required: true,\n          description: 'Test execution timeline with performance metrics',\n          chartType: 'line'\n        },\n        {\n          key: 'detailed-results',\n          label: 'Detailed Results',\n          type: 'table',\n          required: true,\n          description: 'Detailed test results with execution data'\n        },\n        {\n          key: 'recommendations',\n          label: 'Optimization Recommendations',\n          type: 'insight',\n          required: true,\n          description: 'Performance and cost optimization suggestions'\n        }\n      ],\n      defaultFilters: {\n        period: '7d',\n        status: 'all',\n        includeFailures: true\n      },\n      supportedFormats: ['pdf', 'excel', 'json', 'csv'],\n      customizable: true\n    });\n\n    // Cost Analysis Template\n    this.templates.set('cost-analysis', {\n      id: 'cost-analysis',\n      name: 'Cost Analysis Report',\n      description: 'Detailed cost breakdown with optimization recommendations',\n      type: 'cost',\n      fields: [\n        {\n          key: 'cost-overview',\n          label: 'Cost Overview',\n          type: 'metric',\n          required: true,\n          description: 'Total costs and key cost metrics'\n        },\n        {\n          key: 'cost-by-model',\n          label: 'Cost by Model',\n          type: 'chart',\n          required: true,\n          description: 'Cost distribution across different models',\n          chartType: 'pie'\n        },\n        {\n          key: 'cost-trends',\n          label: 'Cost Trends',\n          type: 'chart',\n          required: true,\n          description: 'Cost trends over time',\n          chartType: 'line'\n        },\n        {\n          key: 'usage-patterns',\n          label: 'Usage Patterns',\n          type: 'table',\n          required: true,\n          description: 'Token usage and execution patterns'\n        },\n        {\n          key: 'roi-analysis',\n          label: 'ROI Analysis',\n          type: 'metric',\n          required: true,\n          description: 'Return on investment calculations'\n        },\n        {\n          key: 'cost-optimization',\n          label: 'Cost Optimization',\n          type: 'insight',\n          required: true,\n          description: 'Cost reduction recommendations and strategies'\n        }\n      ],\n      defaultFilters: {\n        period: '30d',\n        includeProjections: true\n      },\n      supportedFormats: ['pdf', 'excel', 'json'],\n      customizable: true\n    });\n\n    // Performance Analysis Template\n    this.templates.set('performance-analysis', {\n      id: 'performance-analysis',\n      name: 'Performance Analysis Report',\n      description: 'Comprehensive performance metrics and trend analysis',\n      type: 'performance',\n      fields: [\n        {\n          key: 'performance-overview',\n          label: 'Performance Overview',\n          type: 'metric',\n          required: true,\n          description: 'Key performance metrics and benchmarks'\n        },\n        {\n          key: 'response-times',\n          label: 'Response Time Analysis',\n          type: 'chart',\n          required: true,\n          description: 'Response time distribution and trends',\n          chartType: 'line'\n        },\n        {\n          key: 'throughput-analysis',\n          label: 'Throughput Analysis',\n          type: 'chart',\n          required: true,\n          description: 'Tests per second and throughput metrics',\n          chartType: 'bar'\n        },\n        {\n          key: 'performance-by-model',\n          label: 'Performance by Model',\n          type: 'table',\n          required: true,\n          description: 'Performance comparison across models'\n        },\n        {\n          key: 'bottleneck-analysis',\n          label: 'Bottleneck Analysis',\n          type: 'insight',\n          required: true,\n          description: 'Performance bottlenecks and optimization opportunities'\n        },\n        {\n          key: 'performance-trends',\n          label: 'Performance Trends',\n          type: 'chart',\n          required: true,\n          description: 'Historical performance trends',\n          chartType: 'area'\n        }\n      ],\n      defaultFilters: {\n        period: '7d',\n        includeSystemMetrics: true\n      },\n      supportedFormats: ['pdf', 'excel', 'json'],\n      customizable: true\n    });\n\n    // Custom Report Template\n    this.templates.set('custom-report', {\n      id: 'custom-report',\n      name: 'Custom Report',\n      description: 'Customizable report template with flexible fields',\n      type: 'custom',\n      fields: [\n        {\n          key: 'custom-metrics',\n          label: 'Custom Metrics',\n          type: 'metric',\n          required: false,\n          description: 'User-defined metrics and KPIs'\n        },\n        {\n          key: 'custom-charts',\n          label: 'Custom Charts',\n          type: 'chart',\n          required: false,\n          description: 'User-defined charts and visualizations'\n        },\n        {\n          key: 'custom-tables',\n          label: 'Custom Tables',\n          type: 'table',\n          required: false,\n          description: 'User-defined data tables'\n        },\n        {\n          key: 'custom-insights',\n          label: 'Custom Insights',\n          type: 'insight',\n          required: false,\n          description: 'User-defined insights and analysis'\n        }\n      ],\n      defaultFilters: {},\n      supportedFormats: ['pdf', 'excel', 'json', 'csv'],\n      customizable: true\n    });\n\n    console.log(`Initialized ${this.templates.size} report templates`);\n  }\n\n  static getTemplate(id: string): ReportTemplate | undefined {\n    return this.templates.get(id);\n  }\n\n  static getAllTemplates(): ReportTemplate[] {\n    return Array.from(this.templates.values());\n  }\n\n  static getTemplatesByType(type: ReportTemplate['type']): ReportTemplate[] {\n    return Array.from(this.templates.values()).filter(template => template.type === type);\n  }\n\n  static addCustomTemplate(template: ReportTemplate): void {\n    this.templates.set(template.id, template);\n  }\n\n  static removeTemplate(id: string): boolean {\n    return this.templates.delete(id);\n  }\n\n  static updateTemplate(id: string, updates: Partial<ReportTemplate>): boolean {\n    const template = this.templates.get(id);\n    if (!template) return false;\n\n    const updatedTemplate = { ...template, ...updates };\n    this.templates.set(id, updatedTemplate);\n    return true;\n  }\n\n  static validateTemplate(template: ReportTemplate): string[] {\n    const errors: string[] = [];\n\n    if (!template.id) {\n      errors.push('Template ID is required');\n    }\n\n    if (!template.name) {\n      errors.push('Template name is required');\n    }\n\n    if (!template.type) {\n      errors.push('Template type is required');\n    }\n\n    if (!template.fields || template.fields.length === 0) {\n      errors.push('Template must have at least one field');\n    }\n\n    if (!template.supportedFormats || template.supportedFormats.length === 0) {\n      errors.push('Template must support at least one export format');\n    }\n\n    // Validate fields\n    template.fields?.forEach((field, index) => {\n      if (!field.key) {\n        errors.push(`Field ${index + 1} is missing key`);\n      }\n      if (!field.label) {\n        errors.push(`Field ${index + 1} is missing label`);\n      }\n      if (!field.type) {\n        errors.push(`Field ${index + 1} is missing type`);\n      }\n    });\n\n    return errors;\n  }\n}\n\n// Initialize templates on module load\nReportTemplates.initialize();"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8d1f4125f5a9a93368603f330011ee4917115531"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_dvsb6cx9u = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_dvsb6cx9u();
cov_dvsb6cx9u().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_dvsb6cx9u().s[1]++;
exports.ReportTemplates = void 0;
class ReportTemplates {
  static initialize() {
    /* istanbul ignore next */
    cov_dvsb6cx9u().f[0]++;
    cov_dvsb6cx9u().s[2]++;
    // Executive Summary Template
    this.templates.set('executive-summary', {
      id: 'executive-summary',
      name: 'Executive Summary',
      description: 'High-level overview of test execution metrics and cost analysis',
      type: 'executive',
      fields: [{
        key: 'overview-metrics',
        label: 'Overview Metrics',
        type: 'metric',
        required: true,
        description: 'Key performance indicators and success metrics'
      }, {
        key: 'cost-summary',
        label: 'Cost Summary',
        type: 'chart',
        required: true,
        description: 'Cost breakdown by model and time period',
        chartType: 'pie'
      }, {
        key: 'performance-trends',
        label: 'Performance Trends',
        type: 'chart',
        required: true,
        description: 'Performance metrics over time',
        chartType: 'line'
      }, {
        key: 'key-insights',
        label: 'Key Insights',
        type: 'insight',
        required: true,
        description: 'AI-generated insights and recommendations'
      }],
      defaultFilters: {
        period: '30d',
        status: 'all'
      },
      supportedFormats: ['pdf', 'excel', 'json'],
      customizable: true
    });
    // Detailed Test Execution Template
    /* istanbul ignore next */
    cov_dvsb6cx9u().s[3]++;
    this.templates.set('detailed-execution', {
      id: 'detailed-execution',
      name: 'Detailed Test Execution Report',
      description: 'Comprehensive analysis of test execution with full analytics',
      type: 'detailed',
      fields: [{
        key: 'execution-overview',
        label: 'Execution Overview',
        type: 'metric',
        required: true,
        description: 'Overall execution statistics and success rates'
      }, {
        key: 'model-performance',
        label: 'Model Performance Comparison',
        type: 'table',
        required: true,
        description: 'Performance metrics by model'
      }, {
        key: 'failure-analysis',
        label: 'Failure Analysis',
        type: 'chart',
        required: true,
        description: 'Analysis of test failures and common issues',
        chartType: 'bar'
      }, {
        key: 'execution-timeline',
        label: 'Execution Timeline',
        type: 'chart',
        required: true,
        description: 'Test execution timeline with performance metrics',
        chartType: 'line'
      }, {
        key: 'detailed-results',
        label: 'Detailed Results',
        type: 'table',
        required: true,
        description: 'Detailed test results with execution data'
      }, {
        key: 'recommendations',
        label: 'Optimization Recommendations',
        type: 'insight',
        required: true,
        description: 'Performance and cost optimization suggestions'
      }],
      defaultFilters: {
        period: '7d',
        status: 'all',
        includeFailures: true
      },
      supportedFormats: ['pdf', 'excel', 'json', 'csv'],
      customizable: true
    });
    // Cost Analysis Template
    /* istanbul ignore next */
    cov_dvsb6cx9u().s[4]++;
    this.templates.set('cost-analysis', {
      id: 'cost-analysis',
      name: 'Cost Analysis Report',
      description: 'Detailed cost breakdown with optimization recommendations',
      type: 'cost',
      fields: [{
        key: 'cost-overview',
        label: 'Cost Overview',
        type: 'metric',
        required: true,
        description: 'Total costs and key cost metrics'
      }, {
        key: 'cost-by-model',
        label: 'Cost by Model',
        type: 'chart',
        required: true,
        description: 'Cost distribution across different models',
        chartType: 'pie'
      }, {
        key: 'cost-trends',
        label: 'Cost Trends',
        type: 'chart',
        required: true,
        description: 'Cost trends over time',
        chartType: 'line'
      }, {
        key: 'usage-patterns',
        label: 'Usage Patterns',
        type: 'table',
        required: true,
        description: 'Token usage and execution patterns'
      }, {
        key: 'roi-analysis',
        label: 'ROI Analysis',
        type: 'metric',
        required: true,
        description: 'Return on investment calculations'
      }, {
        key: 'cost-optimization',
        label: 'Cost Optimization',
        type: 'insight',
        required: true,
        description: 'Cost reduction recommendations and strategies'
      }],
      defaultFilters: {
        period: '30d',
        includeProjections: true
      },
      supportedFormats: ['pdf', 'excel', 'json'],
      customizable: true
    });
    // Performance Analysis Template
    /* istanbul ignore next */
    cov_dvsb6cx9u().s[5]++;
    this.templates.set('performance-analysis', {
      id: 'performance-analysis',
      name: 'Performance Analysis Report',
      description: 'Comprehensive performance metrics and trend analysis',
      type: 'performance',
      fields: [{
        key: 'performance-overview',
        label: 'Performance Overview',
        type: 'metric',
        required: true,
        description: 'Key performance metrics and benchmarks'
      }, {
        key: 'response-times',
        label: 'Response Time Analysis',
        type: 'chart',
        required: true,
        description: 'Response time distribution and trends',
        chartType: 'line'
      }, {
        key: 'throughput-analysis',
        label: 'Throughput Analysis',
        type: 'chart',
        required: true,
        description: 'Tests per second and throughput metrics',
        chartType: 'bar'
      }, {
        key: 'performance-by-model',
        label: 'Performance by Model',
        type: 'table',
        required: true,
        description: 'Performance comparison across models'
      }, {
        key: 'bottleneck-analysis',
        label: 'Bottleneck Analysis',
        type: 'insight',
        required: true,
        description: 'Performance bottlenecks and optimization opportunities'
      }, {
        key: 'performance-trends',
        label: 'Performance Trends',
        type: 'chart',
        required: true,
        description: 'Historical performance trends',
        chartType: 'area'
      }],
      defaultFilters: {
        period: '7d',
        includeSystemMetrics: true
      },
      supportedFormats: ['pdf', 'excel', 'json'],
      customizable: true
    });
    // Custom Report Template
    /* istanbul ignore next */
    cov_dvsb6cx9u().s[6]++;
    this.templates.set('custom-report', {
      id: 'custom-report',
      name: 'Custom Report',
      description: 'Customizable report template with flexible fields',
      type: 'custom',
      fields: [{
        key: 'custom-metrics',
        label: 'Custom Metrics',
        type: 'metric',
        required: false,
        description: 'User-defined metrics and KPIs'
      }, {
        key: 'custom-charts',
        label: 'Custom Charts',
        type: 'chart',
        required: false,
        description: 'User-defined charts and visualizations'
      }, {
        key: 'custom-tables',
        label: 'Custom Tables',
        type: 'table',
        required: false,
        description: 'User-defined data tables'
      }, {
        key: 'custom-insights',
        label: 'Custom Insights',
        type: 'insight',
        required: false,
        description: 'User-defined insights and analysis'
      }],
      defaultFilters: {},
      supportedFormats: ['pdf', 'excel', 'json', 'csv'],
      customizable: true
    });
    /* istanbul ignore next */
    cov_dvsb6cx9u().s[7]++;
    console.log(`Initialized ${this.templates.size} report templates`);
  }
  static getTemplate(id) {
    /* istanbul ignore next */
    cov_dvsb6cx9u().f[1]++;
    cov_dvsb6cx9u().s[8]++;
    return this.templates.get(id);
  }
  static getAllTemplates() {
    /* istanbul ignore next */
    cov_dvsb6cx9u().f[2]++;
    cov_dvsb6cx9u().s[9]++;
    return Array.from(this.templates.values());
  }
  static getTemplatesByType(type) {
    /* istanbul ignore next */
    cov_dvsb6cx9u().f[3]++;
    cov_dvsb6cx9u().s[10]++;
    return Array.from(this.templates.values()).filter(template => {
      /* istanbul ignore next */
      cov_dvsb6cx9u().f[4]++;
      cov_dvsb6cx9u().s[11]++;
      return template.type === type;
    });
  }
  static addCustomTemplate(template) {
    /* istanbul ignore next */
    cov_dvsb6cx9u().f[5]++;
    cov_dvsb6cx9u().s[12]++;
    this.templates.set(template.id, template);
  }
  static removeTemplate(id) {
    /* istanbul ignore next */
    cov_dvsb6cx9u().f[6]++;
    cov_dvsb6cx9u().s[13]++;
    return this.templates.delete(id);
  }
  static updateTemplate(id, updates) {
    /* istanbul ignore next */
    cov_dvsb6cx9u().f[7]++;
    const template =
    /* istanbul ignore next */
    (cov_dvsb6cx9u().s[14]++, this.templates.get(id));
    /* istanbul ignore next */
    cov_dvsb6cx9u().s[15]++;
    if (!template) {
      /* istanbul ignore next */
      cov_dvsb6cx9u().b[0][0]++;
      cov_dvsb6cx9u().s[16]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_dvsb6cx9u().b[0][1]++;
    }
    const updatedTemplate =
    /* istanbul ignore next */
    (cov_dvsb6cx9u().s[17]++, {
      ...template,
      ...updates
    });
    /* istanbul ignore next */
    cov_dvsb6cx9u().s[18]++;
    this.templates.set(id, updatedTemplate);
    /* istanbul ignore next */
    cov_dvsb6cx9u().s[19]++;
    return true;
  }
  static validateTemplate(template) {
    /* istanbul ignore next */
    cov_dvsb6cx9u().f[8]++;
    const errors =
    /* istanbul ignore next */
    (cov_dvsb6cx9u().s[20]++, []);
    /* istanbul ignore next */
    cov_dvsb6cx9u().s[21]++;
    if (!template.id) {
      /* istanbul ignore next */
      cov_dvsb6cx9u().b[1][0]++;
      cov_dvsb6cx9u().s[22]++;
      errors.push('Template ID is required');
    } else
    /* istanbul ignore next */
    {
      cov_dvsb6cx9u().b[1][1]++;
    }
    cov_dvsb6cx9u().s[23]++;
    if (!template.name) {
      /* istanbul ignore next */
      cov_dvsb6cx9u().b[2][0]++;
      cov_dvsb6cx9u().s[24]++;
      errors.push('Template name is required');
    } else
    /* istanbul ignore next */
    {
      cov_dvsb6cx9u().b[2][1]++;
    }
    cov_dvsb6cx9u().s[25]++;
    if (!template.type) {
      /* istanbul ignore next */
      cov_dvsb6cx9u().b[3][0]++;
      cov_dvsb6cx9u().s[26]++;
      errors.push('Template type is required');
    } else
    /* istanbul ignore next */
    {
      cov_dvsb6cx9u().b[3][1]++;
    }
    cov_dvsb6cx9u().s[27]++;
    if (
    /* istanbul ignore next */
    (cov_dvsb6cx9u().b[5][0]++, !template.fields) ||
    /* istanbul ignore next */
    (cov_dvsb6cx9u().b[5][1]++, template.fields.length === 0)) {
      /* istanbul ignore next */
      cov_dvsb6cx9u().b[4][0]++;
      cov_dvsb6cx9u().s[28]++;
      errors.push('Template must have at least one field');
    } else
    /* istanbul ignore next */
    {
      cov_dvsb6cx9u().b[4][1]++;
    }
    cov_dvsb6cx9u().s[29]++;
    if (
    /* istanbul ignore next */
    (cov_dvsb6cx9u().b[7][0]++, !template.supportedFormats) ||
    /* istanbul ignore next */
    (cov_dvsb6cx9u().b[7][1]++, template.supportedFormats.length === 0)) {
      /* istanbul ignore next */
      cov_dvsb6cx9u().b[6][0]++;
      cov_dvsb6cx9u().s[30]++;
      errors.push('Template must support at least one export format');
    } else
    /* istanbul ignore next */
    {
      cov_dvsb6cx9u().b[6][1]++;
    }
    // Validate fields
    cov_dvsb6cx9u().s[31]++;
    template.fields?.forEach((field, index) => {
      /* istanbul ignore next */
      cov_dvsb6cx9u().f[9]++;
      cov_dvsb6cx9u().s[32]++;
      if (!field.key) {
        /* istanbul ignore next */
        cov_dvsb6cx9u().b[8][0]++;
        cov_dvsb6cx9u().s[33]++;
        errors.push(`Field ${index + 1} is missing key`);
      } else
      /* istanbul ignore next */
      {
        cov_dvsb6cx9u().b[8][1]++;
      }
      cov_dvsb6cx9u().s[34]++;
      if (!field.label) {
        /* istanbul ignore next */
        cov_dvsb6cx9u().b[9][0]++;
        cov_dvsb6cx9u().s[35]++;
        errors.push(`Field ${index + 1} is missing label`);
      } else
      /* istanbul ignore next */
      {
        cov_dvsb6cx9u().b[9][1]++;
      }
      cov_dvsb6cx9u().s[36]++;
      if (!field.type) {
        /* istanbul ignore next */
        cov_dvsb6cx9u().b[10][0]++;
        cov_dvsb6cx9u().s[37]++;
        errors.push(`Field ${index + 1} is missing type`);
      } else
      /* istanbul ignore next */
      {
        cov_dvsb6cx9u().b[10][1]++;
      }
    });
    /* istanbul ignore next */
    cov_dvsb6cx9u().s[38]++;
    return errors;
  }
}
/* istanbul ignore next */
cov_dvsb6cx9u().s[39]++;
exports.ReportTemplates = ReportTemplates;
/* istanbul ignore next */
cov_dvsb6cx9u().s[40]++;
ReportTemplates.templates = new Map();
// Initialize templates on module load
/* istanbul ignore next */
cov_dvsb6cx9u().s[41]++;
ReportTemplates.initialize();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,