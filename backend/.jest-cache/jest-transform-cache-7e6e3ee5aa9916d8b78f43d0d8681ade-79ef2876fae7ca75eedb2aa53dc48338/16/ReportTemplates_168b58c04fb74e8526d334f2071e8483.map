{"version":3,"names":["ReportTemplates","initialize","cov_dvsb6cx9u","f","s","templates","set","id","name","description","type","fields","key","label","required","chartType","defaultFilters","period","status","supportedFormats","customizable","includeFailures","includeProjections","includeSystemMetrics","console","log","size","getTemplate","get","getAllTemplates","Array","from","values","getTemplatesByType","filter","template","addCustomTemplate","removeTemplate","delete","updateTemplate","updates","b","updatedTemplate","validateTemplate","errors","push","length","forEach","field","index","exports","Map"],"sources":["/workspaces/prompt-card-system/backend/src/services/reports/templates/ReportTemplates.ts"],"sourcesContent":["import { ReportTemplate } from '../../../types/reports';\n\nexport class ReportTemplates {\n  private static templates: Map<string, ReportTemplate> = new Map();\n\n  static initialize(): void {\n    // Executive Summary Template\n    this.templates.set('executive-summary', {\n      id: 'executive-summary',\n      name: 'Executive Summary',\n      description: 'High-level overview of test execution metrics and cost analysis',\n      type: 'executive',\n      fields: [\n        {\n          key: 'overview-metrics',\n          label: 'Overview Metrics',\n          type: 'metric',\n          required: true,\n          description: 'Key performance indicators and success metrics'\n        },\n        {\n          key: 'cost-summary',\n          label: 'Cost Summary',\n          type: 'chart',\n          required: true,\n          description: 'Cost breakdown by model and time period',\n          chartType: 'pie'\n        },\n        {\n          key: 'performance-trends',\n          label: 'Performance Trends',\n          type: 'chart',\n          required: true,\n          description: 'Performance metrics over time',\n          chartType: 'line'\n        },\n        {\n          key: 'key-insights',\n          label: 'Key Insights',\n          type: 'insight',\n          required: true,\n          description: 'AI-generated insights and recommendations'\n        }\n      ],\n      defaultFilters: {\n        period: '30d',\n        status: 'all'\n      },\n      supportedFormats: ['pdf', 'excel', 'json'],\n      customizable: true\n    });\n\n    // Detailed Test Execution Template\n    this.templates.set('detailed-execution', {\n      id: 'detailed-execution',\n      name: 'Detailed Test Execution Report',\n      description: 'Comprehensive analysis of test execution with full analytics',\n      type: 'detailed',\n      fields: [\n        {\n          key: 'execution-overview',\n          label: 'Execution Overview',\n          type: 'metric',\n          required: true,\n          description: 'Overall execution statistics and success rates'\n        },\n        {\n          key: 'model-performance',\n          label: 'Model Performance Comparison',\n          type: 'table',\n          required: true,\n          description: 'Performance metrics by model'\n        },\n        {\n          key: 'failure-analysis',\n          label: 'Failure Analysis',\n          type: 'chart',\n          required: true,\n          description: 'Analysis of test failures and common issues',\n          chartType: 'bar'\n        },\n        {\n          key: 'execution-timeline',\n          label: 'Execution Timeline',\n          type: 'chart',\n          required: true,\n          description: 'Test execution timeline with performance metrics',\n          chartType: 'line'\n        },\n        {\n          key: 'detailed-results',\n          label: 'Detailed Results',\n          type: 'table',\n          required: true,\n          description: 'Detailed test results with execution data'\n        },\n        {\n          key: 'recommendations',\n          label: 'Optimization Recommendations',\n          type: 'insight',\n          required: true,\n          description: 'Performance and cost optimization suggestions'\n        }\n      ],\n      defaultFilters: {\n        period: '7d',\n        status: 'all',\n        includeFailures: true\n      },\n      supportedFormats: ['pdf', 'excel', 'json', 'csv'],\n      customizable: true\n    });\n\n    // Cost Analysis Template\n    this.templates.set('cost-analysis', {\n      id: 'cost-analysis',\n      name: 'Cost Analysis Report',\n      description: 'Detailed cost breakdown with optimization recommendations',\n      type: 'cost',\n      fields: [\n        {\n          key: 'cost-overview',\n          label: 'Cost Overview',\n          type: 'metric',\n          required: true,\n          description: 'Total costs and key cost metrics'\n        },\n        {\n          key: 'cost-by-model',\n          label: 'Cost by Model',\n          type: 'chart',\n          required: true,\n          description: 'Cost distribution across different models',\n          chartType: 'pie'\n        },\n        {\n          key: 'cost-trends',\n          label: 'Cost Trends',\n          type: 'chart',\n          required: true,\n          description: 'Cost trends over time',\n          chartType: 'line'\n        },\n        {\n          key: 'usage-patterns',\n          label: 'Usage Patterns',\n          type: 'table',\n          required: true,\n          description: 'Token usage and execution patterns'\n        },\n        {\n          key: 'roi-analysis',\n          label: 'ROI Analysis',\n          type: 'metric',\n          required: true,\n          description: 'Return on investment calculations'\n        },\n        {\n          key: 'cost-optimization',\n          label: 'Cost Optimization',\n          type: 'insight',\n          required: true,\n          description: 'Cost reduction recommendations and strategies'\n        }\n      ],\n      defaultFilters: {\n        period: '30d',\n        includeProjections: true\n      },\n      supportedFormats: ['pdf', 'excel', 'json'],\n      customizable: true\n    });\n\n    // Performance Analysis Template\n    this.templates.set('performance-analysis', {\n      id: 'performance-analysis',\n      name: 'Performance Analysis Report',\n      description: 'Comprehensive performance metrics and trend analysis',\n      type: 'performance',\n      fields: [\n        {\n          key: 'performance-overview',\n          label: 'Performance Overview',\n          type: 'metric',\n          required: true,\n          description: 'Key performance metrics and benchmarks'\n        },\n        {\n          key: 'response-times',\n          label: 'Response Time Analysis',\n          type: 'chart',\n          required: true,\n          description: 'Response time distribution and trends',\n          chartType: 'line'\n        },\n        {\n          key: 'throughput-analysis',\n          label: 'Throughput Analysis',\n          type: 'chart',\n          required: true,\n          description: 'Tests per second and throughput metrics',\n          chartType: 'bar'\n        },\n        {\n          key: 'performance-by-model',\n          label: 'Performance by Model',\n          type: 'table',\n          required: true,\n          description: 'Performance comparison across models'\n        },\n        {\n          key: 'bottleneck-analysis',\n          label: 'Bottleneck Analysis',\n          type: 'insight',\n          required: true,\n          description: 'Performance bottlenecks and optimization opportunities'\n        },\n        {\n          key: 'performance-trends',\n          label: 'Performance Trends',\n          type: 'chart',\n          required: true,\n          description: 'Historical performance trends',\n          chartType: 'area'\n        }\n      ],\n      defaultFilters: {\n        period: '7d',\n        includeSystemMetrics: true\n      },\n      supportedFormats: ['pdf', 'excel', 'json'],\n      customizable: true\n    });\n\n    // Custom Report Template\n    this.templates.set('custom-report', {\n      id: 'custom-report',\n      name: 'Custom Report',\n      description: 'Customizable report template with flexible fields',\n      type: 'custom',\n      fields: [\n        {\n          key: 'custom-metrics',\n          label: 'Custom Metrics',\n          type: 'metric',\n          required: false,\n          description: 'User-defined metrics and KPIs'\n        },\n        {\n          key: 'custom-charts',\n          label: 'Custom Charts',\n          type: 'chart',\n          required: false,\n          description: 'User-defined charts and visualizations'\n        },\n        {\n          key: 'custom-tables',\n          label: 'Custom Tables',\n          type: 'table',\n          required: false,\n          description: 'User-defined data tables'\n        },\n        {\n          key: 'custom-insights',\n          label: 'Custom Insights',\n          type: 'insight',\n          required: false,\n          description: 'User-defined insights and analysis'\n        }\n      ],\n      defaultFilters: {},\n      supportedFormats: ['pdf', 'excel', 'json', 'csv'],\n      customizable: true\n    });\n\n    console.log(`Initialized ${this.templates.size} report templates`);\n  }\n\n  static getTemplate(id: string): ReportTemplate | undefined {\n    return this.templates.get(id);\n  }\n\n  static getAllTemplates(): ReportTemplate[] {\n    return Array.from(this.templates.values());\n  }\n\n  static getTemplatesByType(type: ReportTemplate['type']): ReportTemplate[] {\n    return Array.from(this.templates.values()).filter(template => template.type === type);\n  }\n\n  static addCustomTemplate(template: ReportTemplate): void {\n    this.templates.set(template.id, template);\n  }\n\n  static removeTemplate(id: string): boolean {\n    return this.templates.delete(id);\n  }\n\n  static updateTemplate(id: string, updates: Partial<ReportTemplate>): boolean {\n    const template = this.templates.get(id);\n    if (!template) return false;\n\n    const updatedTemplate = { ...template, ...updates };\n    this.templates.set(id, updatedTemplate);\n    return true;\n  }\n\n  static validateTemplate(template: ReportTemplate): string[] {\n    const errors: string[] = [];\n\n    if (!template.id) {\n      errors.push('Template ID is required');\n    }\n\n    if (!template.name) {\n      errors.push('Template name is required');\n    }\n\n    if (!template.type) {\n      errors.push('Template type is required');\n    }\n\n    if (!template.fields || template.fields.length === 0) {\n      errors.push('Template must have at least one field');\n    }\n\n    if (!template.supportedFormats || template.supportedFormats.length === 0) {\n      errors.push('Template must support at least one export format');\n    }\n\n    // Validate fields\n    template.fields?.forEach((field, index) => {\n      if (!field.key) {\n        errors.push(`Field ${index + 1} is missing key`);\n      }\n      if (!field.label) {\n        errors.push(`Field ${index + 1} is missing label`);\n      }\n      if (!field.type) {\n        errors.push(`Field ${index + 1} is missing type`);\n      }\n    });\n\n    return errors;\n  }\n}\n\n// Initialize templates on module load\nReportTemplates.initialize();"],"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","ignoreList":[]}