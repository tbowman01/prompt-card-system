6aa9098c98554c6e78db4770704db449
"use strict";

/**
 * OpenTelemetry Tracing Configuration
 *
 * Provides distributed tracing for the Prompt Card System backend.
 * Integrates with Jaeger for trace visualization and Prometheus for metrics.
 */
/* istanbul ignore next */
function cov_24ee5noj3b() {
  var path = "/workspaces/prompt-card-system/backend/src/telemetry/tracer.ts";
  var hash = "3c826b2c4232f0efd1a15dfd9b340749f008868f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/prompt-card-system/backend/src/telemetry/tracer.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 34
        }
      },
      "2": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 50
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 50
        }
      },
      "4": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 24
        }
      },
      "5": {
        start: {
          line: 13,
          column: 19
        },
        end: {
          line: 13,
          column: 53
        }
      },
      "6": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 55
        }
      },
      "7": {
        start: {
          line: 15,
          column: 31
        },
        end: {
          line: 15,
          column: 77
        }
      },
      "8": {
        start: {
          line: 16,
          column: 37
        },
        end: {
          line: 16,
          column: 89
        }
      },
      "9": {
        start: {
          line: 17,
          column: 22
        },
        end: {
          line: 17,
          column: 59
        }
      },
      "10": {
        start: {
          line: 18,
          column: 30
        },
        end: {
          line: 18,
          column: 75
        }
      },
      "11": {
        start: {
          line: 19,
          column: 26
        },
        end: {
          line: 19,
          column: 67
        }
      },
      "12": {
        start: {
          line: 20,
          column: 25
        },
        end: {
          line: 20,
          column: 65
        }
      },
      "13": {
        start: {
          line: 21,
          column: 34
        },
        end: {
          line: 21,
          column: 83
        }
      },
      "14": {
        start: {
          line: 22,
          column: 31
        },
        end: {
          line: 22,
          column: 77
        }
      },
      "15": {
        start: {
          line: 23,
          column: 34
        },
        end: {
          line: 23,
          column: 83
        }
      },
      "16": {
        start: {
          line: 24,
          column: 34
        },
        end: {
          line: 24,
          column: 83
        }
      },
      "17": {
        start: {
          line: 26,
          column: 36
        },
        end: {
          line: 26,
          column: 87
        }
      },
      "18": {
        start: {
          line: 27,
          column: 14
        },
        end: {
          line: 27,
          column: 43
        }
      },
      "19": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 24
        }
      },
      "20": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 39
        }
      },
      "21": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 42,
          column: 10
        }
      },
      "22": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "23": {
        start: {
          line: 50,
          column: 29
        },
        end: {
          line: 55,
          column: 14
        }
      },
      "24": {
        start: {
          line: 57,
          column: 35
        },
        end: {
          line: 57,
          column: 37
        }
      },
      "25": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 64,
          column: 13
        }
      },
      "26": {
        start: {
          line: 60,
          column: 39
        },
        end: {
          line: 62,
          column: 18
        }
      },
      "27": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 93
        }
      },
      "28": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 68,
          column: 13
        }
      },
      "29": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 67,
          column: 121
        }
      },
      "30": {
        start: {
          line: 70,
          column: 39
        },
        end: {
          line: 73,
          column: 14
        }
      },
      "31": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 131,
          column: 15
        }
      },
      "32": {
        start: {
          line: 101,
          column: 28
        },
        end: {
          line: 104,
          column: 31
        }
      },
      "33": {
        start: {
          line: 107,
          column: 28
        },
        end: {
          line: 109,
          column: 31
        }
      },
      "34": {
        start: {
          line: 115,
          column: 28
        },
        end: {
          line: 118,
          column: 31
        }
      },
      "35": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 29
        }
      },
      "36": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 101
        }
      },
      "37": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 101
        }
      },
      "38": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 140,
          column: 13
        }
      },
      "39": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 47
        }
      },
      "40": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 118
        }
      },
      "41": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 103
        }
      },
      "42": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 77
        }
      },
      "43": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 74
        }
      },
      "44": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 24
        }
      },
      "45": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 157,
          column: 11
        }
      },
      "46": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 161,
          column: 11
        }
      },
      "47": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 164,
          column: 11
        }
      },
      "48": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 168,
          column: 11
        }
      },
      "49": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 173,
          column: 11
        }
      },
      "50": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 177,
          column: 12
        }
      },
      "51": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 180,
          column: 12
        }
      },
      "52": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 183,
          column: 12
        }
      },
      "53": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 186,
          column: 12
        }
      },
      "54": {
        start: {
          line: 192,
          column: 21
        },
        end: {
          line: 198,
          column: 10
        }
      },
      "55": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 199,
          column: 20
        }
      },
      "56": {
        start: {
          line: 205,
          column: 21
        },
        end: {
          line: 205,
          column: 53
        }
      },
      "57": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 221,
          column: 9
        }
      },
      "58": {
        start: {
          line: 207,
          column: 27
        },
        end: {
          line: 207,
          column: 112
        }
      },
      "59": {
        start: {
          line: 207,
          column: 103
        },
        end: {
          line: 207,
          column: 111
        }
      },
      "60": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 62
        }
      },
      "61": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 26
        }
      },
      "62": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 215,
          column: 15
        }
      },
      "63": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 40
        }
      },
      "64": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 24
        }
      },
      "65": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 23
        }
      },
      "66": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 228,
          column: 19
        }
      },
      "67": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 228,
          column: 19
        }
      },
      "68": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 233,
          column: 11
        }
      },
      "69": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 238,
          column: 11
        }
      },
      "70": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 245,
          column: 19
        }
      },
      "71": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 245,
          column: 19
        }
      },
      "72": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 250,
          column: 11
        }
      },
      "73": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 257,
          column: 19
        }
      },
      "74": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 257,
          column: 19
        }
      },
      "75": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 258,
          column: 43
        }
      },
      "76": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 265,
          column: 19
        }
      },
      "77": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 265,
          column: 19
        }
      },
      "78": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 270,
          column: 11
        }
      },
      "79": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 277,
          column: 19
        }
      },
      "80": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 277,
          column: 19
        }
      },
      "81": {
        start: {
          line: 278,
          column: 23
        },
        end: {
          line: 278,
          column: 57
        }
      },
      "82": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 281,
          column: 9
        }
      },
      "83": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 280,
          column: 48
        }
      },
      "84": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 287,
          column: 27
        }
      },
      "85": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 293,
          column: 26
        }
      },
      "86": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 307,
          column: 9
        }
      },
      "87": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 303,
          column: 13
        }
      },
      "88": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 301,
          column: 42
        }
      },
      "89": {
        start: {
          line: 302,
          column: 16
        },
        end: {
          line: 302,
          column: 67
        }
      },
      "90": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 306,
          column: 75
        }
      },
      "91": {
        start: {
          line: 310,
          column: 0
        },
        end: {
          line: 310,
          column: 44
        }
      },
      "92": {
        start: {
          line: 312,
          column: 23
        },
        end: {
          line: 312,
          column: 27
        }
      },
      "93": {
        start: {
          line: 317,
          column: 4
        },
        end: {
          line: 320,
          column: 5
        }
      },
      "94": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 318,
          column: 56
        }
      },
      "95": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 319,
          column: 38
        }
      },
      "96": {
        start: {
          line: 321,
          column: 4
        },
        end: {
          line: 321,
          column: 28
        }
      },
      "97": {
        start: {
          line: 327,
          column: 4
        },
        end: {
          line: 327,
          column: 28
        }
      },
      "98": {
        start: {
          line: 333,
          column: 4
        },
        end: {
          line: 351,
          column: 6
        }
      },
      "99": {
        start: {
          line: 334,
          column: 31
        },
        end: {
          line: 334,
          column: 47
        }
      },
      "100": {
        start: {
          line: 335,
          column: 25
        },
        end: {
          line: 335,
          column: 85
        }
      },
      "101": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 349,
          column: 10
        }
      },
      "102": {
        start: {
          line: 337,
          column: 30
        },
        end: {
          line: 337,
          column: 51
        }
      },
      "103": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 340,
          column: 13
        }
      },
      "104": {
        start: {
          line: 339,
          column: 16
        },
        end: {
          line: 339,
          column: 56
        }
      },
      "105": {
        start: {
          line: 341,
          column: 12
        },
        end: {
          line: 348,
          column: 15
        }
      },
      "106": {
        start: {
          line: 342,
          column: 16
        },
        end: {
          line: 346,
          column: 19
        }
      },
      "107": {
        start: {
          line: 347,
          column: 16
        },
        end: {
          line: 347,
          column: 56
        }
      },
      "108": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 350,
          column: 26
        }
      },
      "109": {
        start: {
          line: 353,
          column: 0
        },
        end: {
          line: 353,
          column: 35
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 24
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 29
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        loc: {
          start: {
            line: 47,
            column: 17
          },
          end: {
            line: 149,
            column: 5
          }
        },
        line: 47
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 100,
            column: 37
          },
          end: {
            line: 100,
            column: 38
          }
        },
        loc: {
          start: {
            line: 100,
            column: 56
          },
          end: {
            line: 105,
            column: 25
          }
        },
        line: 100
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 106,
            column: 38
          },
          end: {
            line: 106,
            column: 39
          }
        },
        loc: {
          start: {
            line: 106,
            column: 58
          },
          end: {
            line: 110,
            column: 25
          }
        },
        line: 106
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 114,
            column: 37
          },
          end: {
            line: 114,
            column: 38
          }
        },
        loc: {
          start: {
            line: 114,
            column: 56
          },
          end: {
            line: 119,
            column: 25
          }
        },
        line: 114
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 153,
            column: 4
          },
          end: {
            line: 153,
            column: 5
          }
        },
        loc: {
          start: {
            line: 153,
            column: 30
          },
          end: {
            line: 187,
            column: 5
          }
        },
        line: 153
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 191,
            column: 5
          }
        },
        loc: {
          start: {
            line: 191,
            column: 32
          },
          end: {
            line: 200,
            column: 5
          }
        },
        line: 191
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 204,
            column: 5
          }
        },
        loc: {
          start: {
            line: 204,
            column: 35
          },
          end: {
            line: 222,
            column: 5
          }
        },
        line: 204
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 207,
            column: 97
          },
          end: {
            line: 207,
            column: 98
          }
        },
        loc: {
          start: {
            line: 207,
            column: 103
          },
          end: {
            line: 207,
            column: 111
          }
        },
        line: 207
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 226,
            column: 5
          }
        },
        loc: {
          start: {
            line: 226,
            column: 59
          },
          end: {
            line: 239,
            column: 5
          }
        },
        line: 226
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 243,
            column: 4
          },
          end: {
            line: 243,
            column: 5
          }
        },
        loc: {
          start: {
            line: 243,
            column: 47
          },
          end: {
            line: 251,
            column: 5
          }
        },
        line: 243
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 255,
            column: 4
          },
          end: {
            line: 255,
            column: 5
          }
        },
        loc: {
          start: {
            line: 255,
            column: 37
          },
          end: {
            line: 259,
            column: 5
          }
        },
        line: 255
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 263,
            column: 4
          },
          end: {
            line: 263,
            column: 5
          }
        },
        loc: {
          start: {
            line: 263,
            column: 65
          },
          end: {
            line: 271,
            column: 5
          }
        },
        line: 263
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 275,
            column: 4
          },
          end: {
            line: 275,
            column: 5
          }
        },
        loc: {
          start: {
            line: 275,
            column: 54
          },
          end: {
            line: 282,
            column: 5
          }
        },
        line: 275
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 286,
            column: 4
          },
          end: {
            line: 286,
            column: 5
          }
        },
        loc: {
          start: {
            line: 286,
            column: 16
          },
          end: {
            line: 288,
            column: 5
          }
        },
        line: 286
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 292,
            column: 4
          },
          end: {
            line: 292,
            column: 5
          }
        },
        loc: {
          start: {
            line: 292,
            column: 15
          },
          end: {
            line: 294,
            column: 5
          }
        },
        line: 292
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 298,
            column: 4
          },
          end: {
            line: 298,
            column: 5
          }
        },
        loc: {
          start: {
            line: 298,
            column: 21
          },
          end: {
            line: 308,
            column: 5
          }
        },
        line: 298
      },
      "17": {
        name: "initializeTelemetry",
        decl: {
          start: {
            line: 316,
            column: 9
          },
          end: {
            line: 316,
            column: 28
          }
        },
        loc: {
          start: {
            line: 316,
            column: 42
          },
          end: {
            line: 322,
            column: 1
          }
        },
        line: 316
      },
      "18": {
        name: "getTelemetryManager",
        decl: {
          start: {
            line: 326,
            column: 9
          },
          end: {
            line: 326,
            column: 28
          }
        },
        loc: {
          start: {
            line: 326,
            column: 31
          },
          end: {
            line: 328,
            column: 1
          }
        },
        line: 326
      },
      "19": {
        name: "traced",
        decl: {
          start: {
            line: 332,
            column: 9
          },
          end: {
            line: 332,
            column: 15
          }
        },
        loc: {
          start: {
            line: 332,
            column: 31
          },
          end: {
            line: 352,
            column: 1
          }
        },
        line: 332
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 333,
            column: 11
          },
          end: {
            line: 333,
            column: 12
          }
        },
        loc: {
          start: {
            line: 333,
            column: 54
          },
          end: {
            line: 351,
            column: 5
          }
        },
        line: 333
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 336,
            column: 27
          },
          end: {
            line: 336,
            column: 28
          }
        },
        loc: {
          start: {
            line: 336,
            column: 46
          },
          end: {
            line: 349,
            column: 9
          }
        },
        line: 336
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 341,
            column: 48
          },
          end: {
            line: 341,
            column: 49
          }
        },
        loc: {
          start: {
            line: 341,
            column: 58
          },
          end: {
            line: 348,
            column: 13
          }
        },
        line: 341
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 34,
            column: 28
          },
          end: {
            line: 34,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 28
          },
          end: {
            line: 34,
            column: 59
          }
        }, {
          start: {
            line: 34,
            column: 63
          },
          end: {
            line: 34,
            column: 70
          }
        }],
        line: 34
      },
      "1": {
        loc: {
          start: {
            line: 35,
            column: 25
          },
          end: {
            line: 35,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 25
          },
          end: {
            line: 35,
            column: 45
          }
        }, {
          start: {
            line: 35,
            column: 49
          },
          end: {
            line: 35,
            column: 62
          }
        }],
        line: 35
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 28
          },
          end: {
            line: 36,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 28
          },
          end: {
            line: 36,
            column: 55
          }
        }, {
          start: {
            line: 36,
            column: 59
          },
          end: {
            line: 36,
            column: 94
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 37,
            column: 37
          },
          end: {
            line: 37,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 37
          },
          end: {
            line: 37,
            column: 64
          }
        }, {
          start: {
            line: 37,
            column: 68
          },
          end: {
            line: 37,
            column: 74
          }
        }],
        line: 37
      },
      "4": {
        loc: {
          start: {
            line: 54,
            column: 89
          },
          end: {
            line: 54,
            column: 155
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 89
          },
          end: {
            line: 54,
            column: 109
          }
        }, {
          start: {
            line: 54,
            column: 113
          },
          end: {
            line: 54,
            column: 155
          }
        }],
        line: 54
      },
      "5": {
        loc: {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "6": {
        loc: {
          start: {
            line: 59,
            column: 16
          },
          end: {
            line: 59,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 16
          },
          end: {
            line: 59,
            column: 42
          }
        }, {
          start: {
            line: 59,
            column: 46
          },
          end: {
            line: 59,
            column: 80
          }
        }],
        line: 59
      },
      "7": {
        loc: {
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 68,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 68,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "8": {
        loc: {
          start: {
            line: 102,
            column: 58
          },
          end: {
            line: 102,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 58
          },
          end: {
            line: 102,
            column: 91
          }
        }, {
          start: {
            line: 102,
            column: 95
          },
          end: {
            line: 102,
            column: 96
          }
        }],
        line: 102
      },
      "9": {
        loc: {
          start: {
            line: 103,
            column: 54
          },
          end: {
            line: 103,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 54
          },
          end: {
            line: 103,
            column: 84
          }
        }, {
          start: {
            line: 103,
            column: 88
          },
          end: {
            line: 103,
            column: 92
          }
        }],
        line: 103
      },
      "10": {
        loc: {
          start: {
            line: 108,
            column: 59
          },
          end: {
            line: 108,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 59
          },
          end: {
            line: 108,
            column: 89
          }
        }, {
          start: {
            line: 108,
            column: 93
          },
          end: {
            line: 108,
            column: 94
          }
        }],
        line: 108
      },
      "11": {
        loc: {
          start: {
            line: 116,
            column: 49
          },
          end: {
            line: 116,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 49
          },
          end: {
            line: 116,
            column: 68
          }
        }, {
          start: {
            line: 116,
            column: 72
          },
          end: {
            line: 116,
            column: 81
          }
        }],
        line: 116
      },
      "12": {
        loc: {
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 140,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 140,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "13": {
        loc: {
          start: {
            line: 214,
            column: 25
          },
          end: {
            line: 214,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 214,
            column: 50
          },
          end: {
            line: 214,
            column: 63
          }
        }, {
          start: {
            line: 214,
            column: 66
          },
          end: {
            line: 214,
            column: 81
          }
        }],
        line: 214
      },
      "14": {
        loc: {
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 228,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 228,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "15": {
        loc: {
          start: {
            line: 244,
            column: 8
          },
          end: {
            line: 245,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 8
          },
          end: {
            line: 245,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "16": {
        loc: {
          start: {
            line: 249,
            column: 21
          },
          end: {
            line: 249,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 21
          },
          end: {
            line: 249,
            column: 28
          }
        }, {
          start: {
            line: 249,
            column: 32
          },
          end: {
            line: 249,
            column: 41
          }
        }],
        line: 249
      },
      "17": {
        loc: {
          start: {
            line: 256,
            column: 8
          },
          end: {
            line: 257,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 256,
            column: 8
          },
          end: {
            line: 257,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 256
      },
      "18": {
        loc: {
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 265,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 265,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 264
      },
      "19": {
        loc: {
          start: {
            line: 276,
            column: 8
          },
          end: {
            line: 277,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 276,
            column: 8
          },
          end: {
            line: 277,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 276
      },
      "20": {
        loc: {
          start: {
            line: 279,
            column: 8
          },
          end: {
            line: 281,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 279,
            column: 8
          },
          end: {
            line: 281,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 279
      },
      "21": {
        loc: {
          start: {
            line: 280,
            column: 30
          },
          end: {
            line: 280,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 280,
            column: 30
          },
          end: {
            line: 280,
            column: 40
          }
        }, {
          start: {
            line: 280,
            column: 44
          },
          end: {
            line: 280,
            column: 46
          }
        }],
        line: 280
      },
      "22": {
        loc: {
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 303,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 303,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 300
      },
      "23": {
        loc: {
          start: {
            line: 316,
            column: 29
          },
          end: {
            line: 316,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 316,
            column: 38
          },
          end: {
            line: 316,
            column: 40
          }
        }],
        line: 316
      },
      "24": {
        loc: {
          start: {
            line: 317,
            column: 4
          },
          end: {
            line: 320,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 4
          },
          end: {
            line: 320,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "25": {
        loc: {
          start: {
            line: 335,
            column: 25
          },
          end: {
            line: 335,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 335,
            column: 25
          },
          end: {
            line: 335,
            column: 38
          }
        }, {
          start: {
            line: 335,
            column: 42
          },
          end: {
            line: 335,
            column: 85
          }
        }],
        line: 335
      },
      "26": {
        loc: {
          start: {
            line: 338,
            column: 12
          },
          end: {
            line: 340,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 338,
            column: 12
          },
          end: {
            line: 340,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 338
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/prompt-card-system/backend/src/telemetry/tracer.ts",
      mappings: "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",
      names: [],
      sources: ["/workspaces/prompt-card-system/backend/src/telemetry/tracer.ts"],
      sourcesContent: ["/**\n * OpenTelemetry Tracing Configuration\n * \n * Provides distributed tracing for the Prompt Card System backend.\n * Integrates with Jaeger for trace visualization and Prometheus for metrics.\n */\n\nimport { NodeSDK } from '@opentelemetry/sdk-node';\nimport { Resource } from '@opentelemetry/resources';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { getNodeAutoInstrumentations } from '@opentelemetry/auto-instrumentations-node';\nimport { PeriodicExportingMetricReader, MetricReader } from '@opentelemetry/sdk-metrics';\nimport { PrometheusExporter } from '@opentelemetry/exporter-prometheus';\nimport { JaegerExporter } from '@opentelemetry/exporter-jaeger';\nimport { BatchSpanProcessor, ConsoleSpanExporter } from '@opentelemetry/sdk-trace-base';\nimport { WinstonInstrumentation } from '@opentelemetry/instrumentation-winston';\nimport { HttpInstrumentation } from '@opentelemetry/instrumentation-http';\nimport { ExpressInstrumentation } from '@opentelemetry/instrumentation-express';\nimport { RedisInstrumentation } from '@opentelemetry/instrumentation-redis-4';\n// import { SqliteInstrumentation } from '@opentelemetry/instrumentation-sqlite3';\nimport { SocketIoInstrumentation } from '@opentelemetry/instrumentation-socket.io';\nimport { trace, metrics, Span, SpanStatusCode, context } from '@opentelemetry/api';\n\nexport interface TelemetryConfig {\n  serviceName: string;\n  serviceVersion: string;\n  environment: string;\n  jaegerEndpoint?: string;\n  prometheusPort?: number;\n  enableConsoleExporter?: boolean;\n  enableDetailedLogs?: boolean;\n  enableCustomMetrics?: boolean;\n}\n\nexport class TelemetryManager {\n  private sdk: NodeSDK | null = null;\n  private config: TelemetryConfig;\n  private tracer: any;\n  private meter: any;\n\n  // Custom metrics\n  private requestCounter: any;\n  private requestDuration: any;\n  private errorCounter: any;\n  private activeConnections: any;\n  private dbOperationDuration: any;\n  private customMetrics: Map<string, any> = new Map();\n\n  constructor(config: TelemetryConfig) {\n    this.config = {\n      serviceName: 'prompt-card-backend',\n      serviceVersion: process.env.npm_package_version || '1.0.0',\n      environment: process.env.NODE_ENV || 'development',\n      jaegerEndpoint: process.env.JAEGER_ENDPOINT || 'http://localhost:14268/api/traces',\n      prometheusPort: parseInt(process.env.PROMETHEUS_PORT || '9090'),\n      enableConsoleExporter: process.env.NODE_ENV === 'development',\n      enableDetailedLogs: process.env.TELEMETRY_DETAILED_LOGS === 'true',\n      enableCustomMetrics: process.env.TELEMETRY_CUSTOM_METRICS !== 'false',\n      ...config\n    };\n  }\n\n  /**\n   * Initialize OpenTelemetry SDK with all instrumentations\n   */\n  public initialize(): void {\n    try {\n      // Create resource identification\n      const resource = new Resource({\n        [SemanticResourceAttributes.SERVICE_NAME]: this.config.serviceName,\n        [SemanticResourceAttributes.SERVICE_VERSION]: this.config.serviceVersion,\n        [SemanticResourceAttributes.DEPLOYMENT_ENVIRONMENT]: this.config.environment,\n        [SemanticResourceAttributes.SERVICE_INSTANCE_ID]: process.env.HOSTNAME || `${this.config.serviceName}-${Date.now()}`,\n      });\n\n      // Configure span processors\n      const spanProcessors = [];\n\n      // Jaeger exporter for production tracing\n      if (this.config.jaegerEndpoint && this.config.environment !== 'test') {\n        const jaegerExporter = new JaegerExporter({\n          endpoint: this.config.jaegerEndpoint,\n        });\n        spanProcessors.push(new BatchSpanProcessor(jaegerExporter));\n      }\n\n      // Console exporter for development\n      if (this.config.enableConsoleExporter) {\n        spanProcessors.push(new BatchSpanProcessor(new ConsoleSpanExporter()));\n      }\n\n      // Prometheus metrics exporter\n      const prometheusExporter = new PrometheusExporter({\n        port: this.config.prometheusPort,\n        preventServerStart: true, // We'll integrate with main Express server\n      });\n\n      // Configure SDK\n      this.sdk = new NodeSDK({\n        resource,\n        spanProcessors,\n        metricReader: new PeriodicExportingMetricReader({\n          exporter: prometheusExporter as any,\n          exportIntervalMillis: 10000, // Export every 10 seconds\n        }) as any,\n        instrumentations: [\n          getNodeAutoInstrumentations({\n            // Configure specific instrumentations\n            '@opentelemetry/instrumentation-http': {\n              enabled: true,\n            },\n            '@opentelemetry/instrumentation-express': {\n              enabled: true,\n            },\n            '@opentelemetry/instrumentation-fs': {\n              enabled: this.config.enableDetailedLogs,\n            },\n          }),\n          new WinstonInstrumentation({\n            enabled: true,\n          }),\n          new HttpInstrumentation({\n            enabled: true,\n            requestHook: (span: Span, request: any) => {\n              span.setAttributes({\n                'http.request.body.size': request.headers['content-length'] || 0,\n                'custom.api.version': request.headers['api-version'] || 'v1',\n              });\n            },\n            responseHook: (span: Span, response: any) => {\n              span.setAttributes({\n                'http.response.body.size': response.get('content-length') || 0,\n              });\n            },\n          }),\n          new ExpressInstrumentation({\n            enabled: true,\n            requestHook: (span: Span, request: any) => {\n              span.setAttributes({\n                'express.route': request.route?.path || 'unknown',\n                'express.method': request.method,\n              });\n            },\n          }),\n          new RedisInstrumentation({\n            enabled: true,\n          }),\n          // new SqliteInstrumentation({\n          //   enabled: true,\n          // }),\n          new SocketIoInstrumentation({\n            enabled: true,\n          }),\n        ],\n      });\n\n      // Start the SDK\n      this.sdk.start();\n\n      // Initialize tracers and meters\n      this.tracer = trace.getTracer(this.config.serviceName, this.config.serviceVersion);\n      this.meter = metrics.getMeter(this.config.serviceName, this.config.serviceVersion);\n\n      // Initialize custom metrics if enabled\n      if (this.config.enableCustomMetrics) {\n        this.initializeCustomMetrics();\n      }\n\n      console.log(`\uD83D\uDD0D OpenTelemetry initialized for ${this.config.serviceName} v${this.config.serviceVersion}`);\n      console.log(`\uD83D\uDCCA Metrics endpoint: http://localhost:${this.config.prometheusPort}/metrics`);\n      console.log(`\uD83D\uDD17 Jaeger endpoint: ${this.config.jaegerEndpoint}`);\n\n    } catch (error) {\n      console.error('\u274C Failed to initialize OpenTelemetry:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Initialize custom metrics for business logic monitoring\n   */\n  private initializeCustomMetrics(): void {\n    // HTTP request metrics\n    this.requestCounter = this.meter.createCounter('http_requests_total', {\n      description: 'Total number of HTTP requests',\n    });\n\n    this.requestDuration = this.meter.createHistogram('http_request_duration_seconds', {\n      description: 'HTTP request duration in seconds',\n      boundaries: [0.001, 0.005, 0.01, 0.05, 0.1, 0.5, 1, 5, 10], // Define latency buckets\n    });\n\n    this.errorCounter = this.meter.createCounter('application_errors_total', {\n      description: 'Total number of application errors',\n    });\n\n    // WebSocket connection metrics\n    this.activeConnections = this.meter.createUpDownCounter('websocket_connections_active', {\n      description: 'Current number of active WebSocket connections',\n    });\n\n    // Database operation metrics\n    this.dbOperationDuration = this.meter.createHistogram('database_operation_duration_seconds', {\n      description: 'Database operation duration in seconds',\n      boundaries: [0.001, 0.01, 0.1, 0.5, 1, 5], // DB operation latency buckets\n    });\n\n    // Business metrics\n    this.customMetrics.set('prompt_cards_created', this.meter.createCounter('prompt_cards_created_total', {\n      description: 'Total number of prompt cards created',\n    }));\n\n    this.customMetrics.set('test_executions', this.meter.createCounter('test_executions_total', {\n      description: 'Total number of test executions',\n    }));\n\n    this.customMetrics.set('ai_model_requests', this.meter.createCounter('ai_model_requests_total', {\n      description: 'Total number of AI model requests',\n    }));\n\n    this.customMetrics.set('cache_operations', this.meter.createCounter('cache_operations_total', {\n      description: 'Total number of cache operations',\n    }));\n  }\n\n  /**\n   * Create a new span for operation tracing\n   */\n  public startSpan(name: string, attributes?: Record<string, any>): Span {\n    const span = this.tracer.startSpan(name, {\n      attributes: {\n        'service.name': this.config.serviceName,\n        'service.version': this.config.serviceVersion,\n        ...attributes,\n      },\n    });\n    return span;\n  }\n\n  /**\n   * Create an active span that automatically manages context\n   */\n  public withSpan<T>(name: string, fn: (span: Span) => T, attributes?: Record<string, any>): T {\n    const span = this.startSpan(name, attributes);\n    try {\n      const result = context.with(trace.setSpan(context.active(), span), () => fn(span));\n      span.setStatus({ code: SpanStatusCode.OK });\n      return result;\n    } catch (error) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: error instanceof Error ? error.message : 'Unknown error',\n      });\n      span.recordException(error as Error);\n      throw error;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Record HTTP request metrics\n   */\n  public recordHttpRequest(method: string, route: string, statusCode: number, duration: number): void {\n    if (!this.config.enableCustomMetrics) return;\n\n    this.requestCounter?.add(1, {\n      method,\n      route,\n      status_code: statusCode.toString(),\n    });\n\n    this.requestDuration?.record(duration, {\n      method,\n      route,\n      status_code: statusCode.toString(),\n    });\n  }\n\n  /**\n   * Record application error\n   */\n  public recordError(errorType: string, operation: string, message?: string): void {\n    if (!this.config.enableCustomMetrics) return;\n\n    this.errorCounter?.add(1, {\n      error_type: errorType,\n      operation,\n      message: message || 'unknown',\n    });\n  }\n\n  /**\n   * Record WebSocket connection change\n   */\n  public recordWebSocketConnection(delta: number): void {\n    if (!this.config.enableCustomMetrics) return;\n    this.activeConnections?.add(delta);\n  }\n\n  /**\n   * Record database operation metrics\n   */\n  public recordDatabaseOperation(operation: string, table: string, duration: number, success: boolean): void {\n    if (!this.config.enableCustomMetrics) return;\n\n    this.dbOperationDuration?.record(duration, {\n      operation,\n      table,\n      success: success.toString(),\n    });\n  }\n\n  /**\n   * Record custom business metric\n   */\n  public recordCustomMetric(metricName: string, value: number, attributes?: Record<string, any>): void {\n    if (!this.config.enableCustomMetrics) return;\n\n    const metric = this.customMetrics.get(metricName);\n    if (metric) {\n      metric.add(value, attributes || {});\n    }\n  }\n\n  /**\n   * Get the tracer instance\n   */\n  public getTracer(): any {\n    return this.tracer;\n  }\n\n  /**\n   * Get the meter instance\n   */\n  public getMeter(): any {\n    return this.meter;\n  }\n\n  /**\n   * Gracefully shutdown telemetry\n   */\n  public async shutdown(): Promise<void> {\n    try {\n      if (this.sdk) {\n        await this.sdk.shutdown();\n        console.log('\uD83D\uDD0D OpenTelemetry shutdown completed');\n      }\n    } catch (error) {\n      console.error('\u274C Error during OpenTelemetry shutdown:', error);\n    }\n  }\n}\n\n// Singleton instance\nlet telemetryManager: TelemetryManager | null = null;\n\n/**\n * Initialize telemetry with configuration\n */\nexport function initializeTelemetry(config: Partial<TelemetryConfig> = {}): TelemetryManager {\n  if (!telemetryManager) {\n    telemetryManager = new TelemetryManager(config as TelemetryConfig);\n    telemetryManager.initialize();\n  }\n  return telemetryManager;\n}\n\n/**\n * Get the current telemetry manager instance\n */\nexport function getTelemetryManager(): TelemetryManager | null {\n  return telemetryManager;\n}\n\n/**\n * Utility function to create traced decorators for class methods\n */\nexport function traced(operationName?: string) {\n  return function (target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n    const originalMethod = descriptor.value;\n    const spanName = operationName || `${target.constructor.name}.${propertyKey}`;\n\n    descriptor.value = function (...args: any[]) {\n      const telemetry = getTelemetryManager();\n      if (!telemetry) {\n        return originalMethod.apply(this, args);\n      }\n\n      return telemetry.withSpan(spanName, (span: Span) => {\n        span.setAttributes({\n          'method.class': target.constructor.name,\n          'method.name': propertyKey,\n          'method.args.count': args.length,\n        });\n        return originalMethod.apply(this, args);\n      });\n    };\n\n    return descriptor;\n  };\n}\n\nexport default TelemetryManager;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3c826b2c4232f0efd1a15dfd9b340749f008868f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_24ee5noj3b = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_24ee5noj3b();
cov_24ee5noj3b().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_24ee5noj3b().s[1]++;
exports.TelemetryManager = void 0;
/* istanbul ignore next */
cov_24ee5noj3b().s[2]++;
exports.initializeTelemetry = initializeTelemetry;
/* istanbul ignore next */
cov_24ee5noj3b().s[3]++;
exports.getTelemetryManager = getTelemetryManager;
/* istanbul ignore next */
cov_24ee5noj3b().s[4]++;
exports.traced = traced;
const sdk_node_1 =
/* istanbul ignore next */
(cov_24ee5noj3b().s[5]++, require("@opentelemetry/sdk-node"));
const resources_1 =
/* istanbul ignore next */
(cov_24ee5noj3b().s[6]++, require("@opentelemetry/resources"));
const semantic_conventions_1 =
/* istanbul ignore next */
(cov_24ee5noj3b().s[7]++, require("@opentelemetry/semantic-conventions"));
const auto_instrumentations_node_1 =
/* istanbul ignore next */
(cov_24ee5noj3b().s[8]++, require("@opentelemetry/auto-instrumentations-node"));
const sdk_metrics_1 =
/* istanbul ignore next */
(cov_24ee5noj3b().s[9]++, require("@opentelemetry/sdk-metrics"));
const exporter_prometheus_1 =
/* istanbul ignore next */
(cov_24ee5noj3b().s[10]++, require("@opentelemetry/exporter-prometheus"));
const exporter_jaeger_1 =
/* istanbul ignore next */
(cov_24ee5noj3b().s[11]++, require("@opentelemetry/exporter-jaeger"));
const sdk_trace_base_1 =
/* istanbul ignore next */
(cov_24ee5noj3b().s[12]++, require("@opentelemetry/sdk-trace-base"));
const instrumentation_winston_1 =
/* istanbul ignore next */
(cov_24ee5noj3b().s[13]++, require("@opentelemetry/instrumentation-winston"));
const instrumentation_http_1 =
/* istanbul ignore next */
(cov_24ee5noj3b().s[14]++, require("@opentelemetry/instrumentation-http"));
const instrumentation_express_1 =
/* istanbul ignore next */
(cov_24ee5noj3b().s[15]++, require("@opentelemetry/instrumentation-express"));
const instrumentation_redis_4_1 =
/* istanbul ignore next */
(cov_24ee5noj3b().s[16]++, require("@opentelemetry/instrumentation-redis-4"));
// import { SqliteInstrumentation } from '@opentelemetry/instrumentation-sqlite3';
const instrumentation_socket_io_1 =
/* istanbul ignore next */
(cov_24ee5noj3b().s[17]++, require("@opentelemetry/instrumentation-socket.io"));
const api_1 =
/* istanbul ignore next */
(cov_24ee5noj3b().s[18]++, require("@opentelemetry/api"));
class TelemetryManager {
  constructor(config) {
    /* istanbul ignore next */
    cov_24ee5noj3b().f[0]++;
    cov_24ee5noj3b().s[19]++;
    this.sdk = null;
    /* istanbul ignore next */
    cov_24ee5noj3b().s[20]++;
    this.customMetrics = new Map();
    /* istanbul ignore next */
    cov_24ee5noj3b().s[21]++;
    this.config = {
      serviceName: 'prompt-card-backend',
      serviceVersion:
      /* istanbul ignore next */
      (cov_24ee5noj3b().b[0][0]++, process.env.npm_package_version) ||
      /* istanbul ignore next */
      (cov_24ee5noj3b().b[0][1]++, '1.0.0'),
      environment:
      /* istanbul ignore next */
      (cov_24ee5noj3b().b[1][0]++, process.env.NODE_ENV) ||
      /* istanbul ignore next */
      (cov_24ee5noj3b().b[1][1]++, 'development'),
      jaegerEndpoint:
      /* istanbul ignore next */
      (cov_24ee5noj3b().b[2][0]++, process.env.JAEGER_ENDPOINT) ||
      /* istanbul ignore next */
      (cov_24ee5noj3b().b[2][1]++, 'http://localhost:14268/api/traces'),
      prometheusPort: parseInt(
      /* istanbul ignore next */
      (cov_24ee5noj3b().b[3][0]++, process.env.PROMETHEUS_PORT) ||
      /* istanbul ignore next */
      (cov_24ee5noj3b().b[3][1]++, '9090')),
      enableConsoleExporter: process.env.NODE_ENV === 'development',
      enableDetailedLogs: process.env.TELEMETRY_DETAILED_LOGS === 'true',
      enableCustomMetrics: process.env.TELEMETRY_CUSTOM_METRICS !== 'false',
      ...config
    };
  }
  /**
   * Initialize OpenTelemetry SDK with all instrumentations
   */
  initialize() {
    /* istanbul ignore next */
    cov_24ee5noj3b().f[1]++;
    cov_24ee5noj3b().s[22]++;
    try {
      // Create resource identification
      const resource =
      /* istanbul ignore next */
      (cov_24ee5noj3b().s[23]++, new resources_1.Resource({
        [semantic_conventions_1.SemanticResourceAttributes.SERVICE_NAME]: this.config.serviceName,
        [semantic_conventions_1.SemanticResourceAttributes.SERVICE_VERSION]: this.config.serviceVersion,
        [semantic_conventions_1.SemanticResourceAttributes.DEPLOYMENT_ENVIRONMENT]: this.config.environment,
        [semantic_conventions_1.SemanticResourceAttributes.SERVICE_INSTANCE_ID]:
        /* istanbul ignore next */
        (cov_24ee5noj3b().b[4][0]++, process.env.HOSTNAME) ||
        /* istanbul ignore next */
        (cov_24ee5noj3b().b[4][1]++, `${this.config.serviceName}-${Date.now()}`)
      }));
      // Configure span processors
      const spanProcessors =
      /* istanbul ignore next */
      (cov_24ee5noj3b().s[24]++, []);
      // Jaeger exporter for production tracing
      /* istanbul ignore next */
      cov_24ee5noj3b().s[25]++;
      if (
      /* istanbul ignore next */
      (cov_24ee5noj3b().b[6][0]++, this.config.jaegerEndpoint) &&
      /* istanbul ignore next */
      (cov_24ee5noj3b().b[6][1]++, this.config.environment !== 'test')) {
        /* istanbul ignore next */
        cov_24ee5noj3b().b[5][0]++;
        const jaegerExporter =
        /* istanbul ignore next */
        (cov_24ee5noj3b().s[26]++, new exporter_jaeger_1.JaegerExporter({
          endpoint: this.config.jaegerEndpoint
        }));
        /* istanbul ignore next */
        cov_24ee5noj3b().s[27]++;
        spanProcessors.push(new sdk_trace_base_1.BatchSpanProcessor(jaegerExporter));
      } else
      /* istanbul ignore next */
      {
        cov_24ee5noj3b().b[5][1]++;
      }
      // Console exporter for development
      cov_24ee5noj3b().s[28]++;
      if (this.config.enableConsoleExporter) {
        /* istanbul ignore next */
        cov_24ee5noj3b().b[7][0]++;
        cov_24ee5noj3b().s[29]++;
        spanProcessors.push(new sdk_trace_base_1.BatchSpanProcessor(new sdk_trace_base_1.ConsoleSpanExporter()));
      } else
      /* istanbul ignore next */
      {
        cov_24ee5noj3b().b[7][1]++;
      }
      // Prometheus metrics exporter
      const prometheusExporter =
      /* istanbul ignore next */
      (cov_24ee5noj3b().s[30]++, new exporter_prometheus_1.PrometheusExporter({
        port: this.config.prometheusPort,
        preventServerStart: true // We'll integrate with main Express server
      }));
      // Configure SDK
      /* istanbul ignore next */
      cov_24ee5noj3b().s[31]++;
      this.sdk = new sdk_node_1.NodeSDK({
        resource,
        spanProcessors,
        metricReader: new sdk_metrics_1.PeriodicExportingMetricReader({
          exporter: prometheusExporter,
          exportIntervalMillis: 10000 // Export every 10 seconds
        }),
        instrumentations: [(0, auto_instrumentations_node_1.getNodeAutoInstrumentations)({
          // Configure specific instrumentations
          '@opentelemetry/instrumentation-http': {
            enabled: true
          },
          '@opentelemetry/instrumentation-express': {
            enabled: true
          },
          '@opentelemetry/instrumentation-fs': {
            enabled: this.config.enableDetailedLogs
          }
        }), new instrumentation_winston_1.WinstonInstrumentation({
          enabled: true
        }), new instrumentation_http_1.HttpInstrumentation({
          enabled: true,
          requestHook: (span, request) => {
            /* istanbul ignore next */
            cov_24ee5noj3b().f[2]++;
            cov_24ee5noj3b().s[32]++;
            span.setAttributes({
              'http.request.body.size':
              /* istanbul ignore next */
              (cov_24ee5noj3b().b[8][0]++, request.headers['content-length']) ||
              /* istanbul ignore next */
              (cov_24ee5noj3b().b[8][1]++, 0),
              'custom.api.version':
              /* istanbul ignore next */
              (cov_24ee5noj3b().b[9][0]++, request.headers['api-version']) ||
              /* istanbul ignore next */
              (cov_24ee5noj3b().b[9][1]++, 'v1')
            });
          },
          responseHook: (span, response) => {
            /* istanbul ignore next */
            cov_24ee5noj3b().f[3]++;
            cov_24ee5noj3b().s[33]++;
            span.setAttributes({
              'http.response.body.size':
              /* istanbul ignore next */
              (cov_24ee5noj3b().b[10][0]++, response.get('content-length')) ||
              /* istanbul ignore next */
              (cov_24ee5noj3b().b[10][1]++, 0)
            });
          }
        }), new instrumentation_express_1.ExpressInstrumentation({
          enabled: true,
          requestHook: (span, request) => {
            /* istanbul ignore next */
            cov_24ee5noj3b().f[4]++;
            cov_24ee5noj3b().s[34]++;
            span.setAttributes({
              'express.route':
              /* istanbul ignore next */
              (cov_24ee5noj3b().b[11][0]++, request.route?.path) ||
              /* istanbul ignore next */
              (cov_24ee5noj3b().b[11][1]++, 'unknown'),
              'express.method': request.method
            });
          }
        }), new instrumentation_redis_4_1.RedisInstrumentation({
          enabled: true
        }),
        // new SqliteInstrumentation({
        //   enabled: true,
        // }),
        new instrumentation_socket_io_1.SocketIoInstrumentation({
          enabled: true
        })]
      });
      // Start the SDK
      /* istanbul ignore next */
      cov_24ee5noj3b().s[35]++;
      this.sdk.start();
      // Initialize tracers and meters
      /* istanbul ignore next */
      cov_24ee5noj3b().s[36]++;
      this.tracer = api_1.trace.getTracer(this.config.serviceName, this.config.serviceVersion);
      /* istanbul ignore next */
      cov_24ee5noj3b().s[37]++;
      this.meter = api_1.metrics.getMeter(this.config.serviceName, this.config.serviceVersion);
      // Initialize custom metrics if enabled
      /* istanbul ignore next */
      cov_24ee5noj3b().s[38]++;
      if (this.config.enableCustomMetrics) {
        /* istanbul ignore next */
        cov_24ee5noj3b().b[12][0]++;
        cov_24ee5noj3b().s[39]++;
        this.initializeCustomMetrics();
      } else
      /* istanbul ignore next */
      {
        cov_24ee5noj3b().b[12][1]++;
      }
      cov_24ee5noj3b().s[40]++;
      console.log(`🔍 OpenTelemetry initialized for ${this.config.serviceName} v${this.config.serviceVersion}`);
      /* istanbul ignore next */
      cov_24ee5noj3b().s[41]++;
      console.log(`📊 Metrics endpoint: http://localhost:${this.config.prometheusPort}/metrics`);
      /* istanbul ignore next */
      cov_24ee5noj3b().s[42]++;
      console.log(`🔗 Jaeger endpoint: ${this.config.jaegerEndpoint}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_24ee5noj3b().s[43]++;
      console.error('❌ Failed to initialize OpenTelemetry:', error);
      /* istanbul ignore next */
      cov_24ee5noj3b().s[44]++;
      throw error;
    }
  }
  /**
   * Initialize custom metrics for business logic monitoring
   */
  initializeCustomMetrics() {
    /* istanbul ignore next */
    cov_24ee5noj3b().f[5]++;
    cov_24ee5noj3b().s[45]++;
    // HTTP request metrics
    this.requestCounter = this.meter.createCounter('http_requests_total', {
      description: 'Total number of HTTP requests'
    });
    /* istanbul ignore next */
    cov_24ee5noj3b().s[46]++;
    this.requestDuration = this.meter.createHistogram('http_request_duration_seconds', {
      description: 'HTTP request duration in seconds',
      boundaries: [0.001, 0.005, 0.01, 0.05, 0.1, 0.5, 1, 5, 10] // Define latency buckets
    });
    /* istanbul ignore next */
    cov_24ee5noj3b().s[47]++;
    this.errorCounter = this.meter.createCounter('application_errors_total', {
      description: 'Total number of application errors'
    });
    // WebSocket connection metrics
    /* istanbul ignore next */
    cov_24ee5noj3b().s[48]++;
    this.activeConnections = this.meter.createUpDownCounter('websocket_connections_active', {
      description: 'Current number of active WebSocket connections'
    });
    // Database operation metrics
    /* istanbul ignore next */
    cov_24ee5noj3b().s[49]++;
    this.dbOperationDuration = this.meter.createHistogram('database_operation_duration_seconds', {
      description: 'Database operation duration in seconds',
      boundaries: [0.001, 0.01, 0.1, 0.5, 1, 5] // DB operation latency buckets
    });
    // Business metrics
    /* istanbul ignore next */
    cov_24ee5noj3b().s[50]++;
    this.customMetrics.set('prompt_cards_created', this.meter.createCounter('prompt_cards_created_total', {
      description: 'Total number of prompt cards created'
    }));
    /* istanbul ignore next */
    cov_24ee5noj3b().s[51]++;
    this.customMetrics.set('test_executions', this.meter.createCounter('test_executions_total', {
      description: 'Total number of test executions'
    }));
    /* istanbul ignore next */
    cov_24ee5noj3b().s[52]++;
    this.customMetrics.set('ai_model_requests', this.meter.createCounter('ai_model_requests_total', {
      description: 'Total number of AI model requests'
    }));
    /* istanbul ignore next */
    cov_24ee5noj3b().s[53]++;
    this.customMetrics.set('cache_operations', this.meter.createCounter('cache_operations_total', {
      description: 'Total number of cache operations'
    }));
  }
  /**
   * Create a new span for operation tracing
   */
  startSpan(name, attributes) {
    /* istanbul ignore next */
    cov_24ee5noj3b().f[6]++;
    const span =
    /* istanbul ignore next */
    (cov_24ee5noj3b().s[54]++, this.tracer.startSpan(name, {
      attributes: {
        'service.name': this.config.serviceName,
        'service.version': this.config.serviceVersion,
        ...attributes
      }
    }));
    /* istanbul ignore next */
    cov_24ee5noj3b().s[55]++;
    return span;
  }
  /**
   * Create an active span that automatically manages context
   */
  withSpan(name, fn, attributes) {
    /* istanbul ignore next */
    cov_24ee5noj3b().f[7]++;
    const span =
    /* istanbul ignore next */
    (cov_24ee5noj3b().s[56]++, this.startSpan(name, attributes));
    /* istanbul ignore next */
    cov_24ee5noj3b().s[57]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_24ee5noj3b().s[58]++, api_1.context.with(api_1.trace.setSpan(api_1.context.active(), span), () => {
        /* istanbul ignore next */
        cov_24ee5noj3b().f[8]++;
        cov_24ee5noj3b().s[59]++;
        return fn(span);
      }));
      /* istanbul ignore next */
      cov_24ee5noj3b().s[60]++;
      span.setStatus({
        code: api_1.SpanStatusCode.OK
      });
      /* istanbul ignore next */
      cov_24ee5noj3b().s[61]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_24ee5noj3b().s[62]++;
      span.setStatus({
        code: api_1.SpanStatusCode.ERROR,
        message: error instanceof Error ?
        /* istanbul ignore next */
        (cov_24ee5noj3b().b[13][0]++, error.message) :
        /* istanbul ignore next */
        (cov_24ee5noj3b().b[13][1]++, 'Unknown error')
      });
      /* istanbul ignore next */
      cov_24ee5noj3b().s[63]++;
      span.recordException(error);
      /* istanbul ignore next */
      cov_24ee5noj3b().s[64]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_24ee5noj3b().s[65]++;
      span.end();
    }
  }
  /**
   * Record HTTP request metrics
   */
  recordHttpRequest(method, route, statusCode, duration) {
    /* istanbul ignore next */
    cov_24ee5noj3b().f[9]++;
    cov_24ee5noj3b().s[66]++;
    if (!this.config.enableCustomMetrics) {
      /* istanbul ignore next */
      cov_24ee5noj3b().b[14][0]++;
      cov_24ee5noj3b().s[67]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_24ee5noj3b().b[14][1]++;
    }
    cov_24ee5noj3b().s[68]++;
    this.requestCounter?.add(1, {
      method,
      route,
      status_code: statusCode.toString()
    });
    /* istanbul ignore next */
    cov_24ee5noj3b().s[69]++;
    this.requestDuration?.record(duration, {
      method,
      route,
      status_code: statusCode.toString()
    });
  }
  /**
   * Record application error
   */
  recordError(errorType, operation, message) {
    /* istanbul ignore next */
    cov_24ee5noj3b().f[10]++;
    cov_24ee5noj3b().s[70]++;
    if (!this.config.enableCustomMetrics) {
      /* istanbul ignore next */
      cov_24ee5noj3b().b[15][0]++;
      cov_24ee5noj3b().s[71]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_24ee5noj3b().b[15][1]++;
    }
    cov_24ee5noj3b().s[72]++;
    this.errorCounter?.add(1, {
      error_type: errorType,
      operation,
      message:
      /* istanbul ignore next */
      (cov_24ee5noj3b().b[16][0]++, message) ||
      /* istanbul ignore next */
      (cov_24ee5noj3b().b[16][1]++, 'unknown')
    });
  }
  /**
   * Record WebSocket connection change
   */
  recordWebSocketConnection(delta) {
    /* istanbul ignore next */
    cov_24ee5noj3b().f[11]++;
    cov_24ee5noj3b().s[73]++;
    if (!this.config.enableCustomMetrics) {
      /* istanbul ignore next */
      cov_24ee5noj3b().b[17][0]++;
      cov_24ee5noj3b().s[74]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_24ee5noj3b().b[17][1]++;
    }
    cov_24ee5noj3b().s[75]++;
    this.activeConnections?.add(delta);
  }
  /**
   * Record database operation metrics
   */
  recordDatabaseOperation(operation, table, duration, success) {
    /* istanbul ignore next */
    cov_24ee5noj3b().f[12]++;
    cov_24ee5noj3b().s[76]++;
    if (!this.config.enableCustomMetrics) {
      /* istanbul ignore next */
      cov_24ee5noj3b().b[18][0]++;
      cov_24ee5noj3b().s[77]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_24ee5noj3b().b[18][1]++;
    }
    cov_24ee5noj3b().s[78]++;
    this.dbOperationDuration?.record(duration, {
      operation,
      table,
      success: success.toString()
    });
  }
  /**
   * Record custom business metric
   */
  recordCustomMetric(metricName, value, attributes) {
    /* istanbul ignore next */
    cov_24ee5noj3b().f[13]++;
    cov_24ee5noj3b().s[79]++;
    if (!this.config.enableCustomMetrics) {
      /* istanbul ignore next */
      cov_24ee5noj3b().b[19][0]++;
      cov_24ee5noj3b().s[80]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_24ee5noj3b().b[19][1]++;
    }
    const metric =
    /* istanbul ignore next */
    (cov_24ee5noj3b().s[81]++, this.customMetrics.get(metricName));
    /* istanbul ignore next */
    cov_24ee5noj3b().s[82]++;
    if (metric) {
      /* istanbul ignore next */
      cov_24ee5noj3b().b[20][0]++;
      cov_24ee5noj3b().s[83]++;
      metric.add(value,
      /* istanbul ignore next */
      (cov_24ee5noj3b().b[21][0]++, attributes) ||
      /* istanbul ignore next */
      (cov_24ee5noj3b().b[21][1]++, {}));
    } else
    /* istanbul ignore next */
    {
      cov_24ee5noj3b().b[20][1]++;
    }
  }
  /**
   * Get the tracer instance
   */
  getTracer() {
    /* istanbul ignore next */
    cov_24ee5noj3b().f[14]++;
    cov_24ee5noj3b().s[84]++;
    return this.tracer;
  }
  /**
   * Get the meter instance
   */
  getMeter() {
    /* istanbul ignore next */
    cov_24ee5noj3b().f[15]++;
    cov_24ee5noj3b().s[85]++;
    return this.meter;
  }
  /**
   * Gracefully shutdown telemetry
   */
  async shutdown() {
    /* istanbul ignore next */
    cov_24ee5noj3b().f[16]++;
    cov_24ee5noj3b().s[86]++;
    try {
      /* istanbul ignore next */
      cov_24ee5noj3b().s[87]++;
      if (this.sdk) {
        /* istanbul ignore next */
        cov_24ee5noj3b().b[22][0]++;
        cov_24ee5noj3b().s[88]++;
        await this.sdk.shutdown();
        /* istanbul ignore next */
        cov_24ee5noj3b().s[89]++;
        console.log('🔍 OpenTelemetry shutdown completed');
      } else
      /* istanbul ignore next */
      {
        cov_24ee5noj3b().b[22][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_24ee5noj3b().s[90]++;
      console.error('❌ Error during OpenTelemetry shutdown:', error);
    }
  }
}
/* istanbul ignore next */
cov_24ee5noj3b().s[91]++;
exports.TelemetryManager = TelemetryManager;
// Singleton instance
let telemetryManager =
/* istanbul ignore next */
(cov_24ee5noj3b().s[92]++, null);
/**
 * Initialize telemetry with configuration
 */
function initializeTelemetry(config =
/* istanbul ignore next */
(cov_24ee5noj3b().b[23][0]++, {})) {
  /* istanbul ignore next */
  cov_24ee5noj3b().f[17]++;
  cov_24ee5noj3b().s[93]++;
  if (!telemetryManager) {
    /* istanbul ignore next */
    cov_24ee5noj3b().b[24][0]++;
    cov_24ee5noj3b().s[94]++;
    telemetryManager = new TelemetryManager(config);
    /* istanbul ignore next */
    cov_24ee5noj3b().s[95]++;
    telemetryManager.initialize();
  } else
  /* istanbul ignore next */
  {
    cov_24ee5noj3b().b[24][1]++;
  }
  cov_24ee5noj3b().s[96]++;
  return telemetryManager;
}
/**
 * Get the current telemetry manager instance
 */
function getTelemetryManager() {
  /* istanbul ignore next */
  cov_24ee5noj3b().f[18]++;
  cov_24ee5noj3b().s[97]++;
  return telemetryManager;
}
/**
 * Utility function to create traced decorators for class methods
 */
function traced(operationName) {
  /* istanbul ignore next */
  cov_24ee5noj3b().f[19]++;
  cov_24ee5noj3b().s[98]++;
  return function (target, propertyKey, descriptor) {
    /* istanbul ignore next */
    cov_24ee5noj3b().f[20]++;
    const originalMethod =
    /* istanbul ignore next */
    (cov_24ee5noj3b().s[99]++, descriptor.value);
    const spanName =
    /* istanbul ignore next */
    (cov_24ee5noj3b().s[100]++,
    /* istanbul ignore next */
    (cov_24ee5noj3b().b[25][0]++, operationName) ||
    /* istanbul ignore next */
    (cov_24ee5noj3b().b[25][1]++, `${target.constructor.name}.${propertyKey}`));
    /* istanbul ignore next */
    cov_24ee5noj3b().s[101]++;
    descriptor.value = function (...args) {
      /* istanbul ignore next */
      cov_24ee5noj3b().f[21]++;
      const telemetry =
      /* istanbul ignore next */
      (cov_24ee5noj3b().s[102]++, getTelemetryManager());
      /* istanbul ignore next */
      cov_24ee5noj3b().s[103]++;
      if (!telemetry) {
        /* istanbul ignore next */
        cov_24ee5noj3b().b[26][0]++;
        cov_24ee5noj3b().s[104]++;
        return originalMethod.apply(this, args);
      } else
      /* istanbul ignore next */
      {
        cov_24ee5noj3b().b[26][1]++;
      }
      cov_24ee5noj3b().s[105]++;
      return telemetry.withSpan(spanName, span => {
        /* istanbul ignore next */
        cov_24ee5noj3b().f[22]++;
        cov_24ee5noj3b().s[106]++;
        span.setAttributes({
          'method.class': target.constructor.name,
          'method.name': propertyKey,
          'method.args.count': args.length
        });
        /* istanbul ignore next */
        cov_24ee5noj3b().s[107]++;
        return originalMethod.apply(this, args);
      });
    };
    /* istanbul ignore next */
    cov_24ee5noj3b().s[108]++;
    return descriptor;
  };
}
/* istanbul ignore next */
cov_24ee5noj3b().s[109]++;
exports.default = TelemetryManager;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,