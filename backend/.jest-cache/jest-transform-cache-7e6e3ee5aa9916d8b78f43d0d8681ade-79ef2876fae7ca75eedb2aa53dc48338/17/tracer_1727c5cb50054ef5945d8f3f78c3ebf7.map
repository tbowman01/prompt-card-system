{"version":3,"names":["cov_24ee5noj3b","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","initializeTelemetry","getTelemetryManager","traced","sdk_node_1","require","resources_1","semantic_conventions_1","auto_instrumentations_node_1","sdk_metrics_1","exporter_prometheus_1","exporter_jaeger_1","sdk_trace_base_1","instrumentation_winston_1","instrumentation_http_1","instrumentation_express_1","instrumentation_redis_4_1","instrumentation_socket_io_1","api_1","TelemetryManager","constructor","config","sdk","customMetrics","Map","serviceName","serviceVersion","process","env","npm_package_version","environment","NODE_ENV","jaegerEndpoint","JAEGER_ENDPOINT","prometheusPort","parseInt","PROMETHEUS_PORT","enableConsoleExporter","enableDetailedLogs","TELEMETRY_DETAILED_LOGS","enableCustomMetrics","TELEMETRY_CUSTOM_METRICS","initialize","resource","Resource","SemanticResourceAttributes","SERVICE_NAME","SERVICE_VERSION","DEPLOYMENT_ENVIRONMENT","SERVICE_INSTANCE_ID","HOSTNAME","Date","now","spanProcessors","jaegerExporter","JaegerExporter","endpoint","push","BatchSpanProcessor","ConsoleSpanExporter","prometheusExporter","PrometheusExporter","port","preventServerStart","NodeSDK","metricReader","PeriodicExportingMetricReader","exporter","exportIntervalMillis","instrumentations","getNodeAutoInstrumentations","enabled","WinstonInstrumentation","HttpInstrumentation","requestHook","span","request","setAttributes","headers","responseHook","response","get","ExpressInstrumentation","route","method","RedisInstrumentation","SocketIoInstrumentation","tracer","trace","getTracer","meter","metrics","getMeter","initializeCustomMetrics","console","log","error","requestCounter","createCounter","description","requestDuration","createHistogram","boundaries","errorCounter","activeConnections","createUpDownCounter","dbOperationDuration","set","startSpan","attributes","withSpan","fn","result","context","with","setSpan","active","setStatus","code","SpanStatusCode","OK","ERROR","message","Error","recordException","recordHttpRequest","statusCode","duration","add","status_code","toString","record","recordError","errorType","operation","error_type","recordWebSocketConnection","delta","recordDatabaseOperation","table","success","recordCustomMetric","metricName","value","metric","shutdown","telemetryManager","operationName","target","propertyKey","descriptor","originalMethod","spanName","args","telemetry","apply","length","default"],"sources":["/workspaces/prompt-card-system/backend/src/telemetry/tracer.ts"],"sourcesContent":["/**\n * OpenTelemetry Tracing Configuration\n * \n * Provides distributed tracing for the Prompt Card System backend.\n * Integrates with Jaeger for trace visualization and Prometheus for metrics.\n */\n\nimport { NodeSDK } from '@opentelemetry/sdk-node';\nimport { Resource } from '@opentelemetry/resources';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { getNodeAutoInstrumentations } from '@opentelemetry/auto-instrumentations-node';\nimport { PeriodicExportingMetricReader, MetricReader } from '@opentelemetry/sdk-metrics';\nimport { PrometheusExporter } from '@opentelemetry/exporter-prometheus';\nimport { JaegerExporter } from '@opentelemetry/exporter-jaeger';\nimport { BatchSpanProcessor, ConsoleSpanExporter } from '@opentelemetry/sdk-trace-base';\nimport { WinstonInstrumentation } from '@opentelemetry/instrumentation-winston';\nimport { HttpInstrumentation } from '@opentelemetry/instrumentation-http';\nimport { ExpressInstrumentation } from '@opentelemetry/instrumentation-express';\nimport { RedisInstrumentation } from '@opentelemetry/instrumentation-redis-4';\n// import { SqliteInstrumentation } from '@opentelemetry/instrumentation-sqlite3';\nimport { SocketIoInstrumentation } from '@opentelemetry/instrumentation-socket.io';\nimport { trace, metrics, Span, SpanStatusCode, context } from '@opentelemetry/api';\n\nexport interface TelemetryConfig {\n  serviceName: string;\n  serviceVersion: string;\n  environment: string;\n  jaegerEndpoint?: string;\n  prometheusPort?: number;\n  enableConsoleExporter?: boolean;\n  enableDetailedLogs?: boolean;\n  enableCustomMetrics?: boolean;\n}\n\nexport class TelemetryManager {\n  private sdk: NodeSDK | null = null;\n  private config: TelemetryConfig;\n  private tracer: any;\n  private meter: any;\n\n  // Custom metrics\n  private requestCounter: any;\n  private requestDuration: any;\n  private errorCounter: any;\n  private activeConnections: any;\n  private dbOperationDuration: any;\n  private customMetrics: Map<string, any> = new Map();\n\n  constructor(config: TelemetryConfig) {\n    this.config = {\n      serviceName: 'prompt-card-backend',\n      serviceVersion: process.env.npm_package_version || '1.0.0',\n      environment: process.env.NODE_ENV || 'development',\n      jaegerEndpoint: process.env.JAEGER_ENDPOINT || 'http://localhost:14268/api/traces',\n      prometheusPort: parseInt(process.env.PROMETHEUS_PORT || '9090'),\n      enableConsoleExporter: process.env.NODE_ENV === 'development',\n      enableDetailedLogs: process.env.TELEMETRY_DETAILED_LOGS === 'true',\n      enableCustomMetrics: process.env.TELEMETRY_CUSTOM_METRICS !== 'false',\n      ...config\n    };\n  }\n\n  /**\n   * Initialize OpenTelemetry SDK with all instrumentations\n   */\n  public initialize(): void {\n    try {\n      // Create resource identification\n      const resource = new Resource({\n        [SemanticResourceAttributes.SERVICE_NAME]: this.config.serviceName,\n        [SemanticResourceAttributes.SERVICE_VERSION]: this.config.serviceVersion,\n        [SemanticResourceAttributes.DEPLOYMENT_ENVIRONMENT]: this.config.environment,\n        [SemanticResourceAttributes.SERVICE_INSTANCE_ID]: process.env.HOSTNAME || `${this.config.serviceName}-${Date.now()}`,\n      });\n\n      // Configure span processors\n      const spanProcessors = [];\n\n      // Jaeger exporter for production tracing\n      if (this.config.jaegerEndpoint && this.config.environment !== 'test') {\n        const jaegerExporter = new JaegerExporter({\n          endpoint: this.config.jaegerEndpoint,\n        });\n        spanProcessors.push(new BatchSpanProcessor(jaegerExporter));\n      }\n\n      // Console exporter for development\n      if (this.config.enableConsoleExporter) {\n        spanProcessors.push(new BatchSpanProcessor(new ConsoleSpanExporter()));\n      }\n\n      // Prometheus metrics exporter\n      const prometheusExporter = new PrometheusExporter({\n        port: this.config.prometheusPort,\n        preventServerStart: true, // We'll integrate with main Express server\n      });\n\n      // Configure SDK\n      this.sdk = new NodeSDK({\n        resource,\n        spanProcessors,\n        metricReader: new PeriodicExportingMetricReader({\n          exporter: prometheusExporter as any,\n          exportIntervalMillis: 10000, // Export every 10 seconds\n        }) as any,\n        instrumentations: [\n          getNodeAutoInstrumentations({\n            // Configure specific instrumentations\n            '@opentelemetry/instrumentation-http': {\n              enabled: true,\n            },\n            '@opentelemetry/instrumentation-express': {\n              enabled: true,\n            },\n            '@opentelemetry/instrumentation-fs': {\n              enabled: this.config.enableDetailedLogs,\n            },\n          }),\n          new WinstonInstrumentation({\n            enabled: true,\n          }),\n          new HttpInstrumentation({\n            enabled: true,\n            requestHook: (span: Span, request: any) => {\n              span.setAttributes({\n                'http.request.body.size': request.headers['content-length'] || 0,\n                'custom.api.version': request.headers['api-version'] || 'v1',\n              });\n            },\n            responseHook: (span: Span, response: any) => {\n              span.setAttributes({\n                'http.response.body.size': response.get('content-length') || 0,\n              });\n            },\n          }),\n          new ExpressInstrumentation({\n            enabled: true,\n            requestHook: (span: Span, request: any) => {\n              span.setAttributes({\n                'express.route': request.route?.path || 'unknown',\n                'express.method': request.method,\n              });\n            },\n          }),\n          new RedisInstrumentation({\n            enabled: true,\n          }),\n          // new SqliteInstrumentation({\n          //   enabled: true,\n          // }),\n          new SocketIoInstrumentation({\n            enabled: true,\n          }),\n        ],\n      });\n\n      // Start the SDK\n      this.sdk.start();\n\n      // Initialize tracers and meters\n      this.tracer = trace.getTracer(this.config.serviceName, this.config.serviceVersion);\n      this.meter = metrics.getMeter(this.config.serviceName, this.config.serviceVersion);\n\n      // Initialize custom metrics if enabled\n      if (this.config.enableCustomMetrics) {\n        this.initializeCustomMetrics();\n      }\n\n      console.log(`üîç OpenTelemetry initialized for ${this.config.serviceName} v${this.config.serviceVersion}`);\n      console.log(`üìä Metrics endpoint: http://localhost:${this.config.prometheusPort}/metrics`);\n      console.log(`üîó Jaeger endpoint: ${this.config.jaegerEndpoint}`);\n\n    } catch (error) {\n      console.error('‚ùå Failed to initialize OpenTelemetry:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Initialize custom metrics for business logic monitoring\n   */\n  private initializeCustomMetrics(): void {\n    // HTTP request metrics\n    this.requestCounter = this.meter.createCounter('http_requests_total', {\n      description: 'Total number of HTTP requests',\n    });\n\n    this.requestDuration = this.meter.createHistogram('http_request_duration_seconds', {\n      description: 'HTTP request duration in seconds',\n      boundaries: [0.001, 0.005, 0.01, 0.05, 0.1, 0.5, 1, 5, 10], // Define latency buckets\n    });\n\n    this.errorCounter = this.meter.createCounter('application_errors_total', {\n      description: 'Total number of application errors',\n    });\n\n    // WebSocket connection metrics\n    this.activeConnections = this.meter.createUpDownCounter('websocket_connections_active', {\n      description: 'Current number of active WebSocket connections',\n    });\n\n    // Database operation metrics\n    this.dbOperationDuration = this.meter.createHistogram('database_operation_duration_seconds', {\n      description: 'Database operation duration in seconds',\n      boundaries: [0.001, 0.01, 0.1, 0.5, 1, 5], // DB operation latency buckets\n    });\n\n    // Business metrics\n    this.customMetrics.set('prompt_cards_created', this.meter.createCounter('prompt_cards_created_total', {\n      description: 'Total number of prompt cards created',\n    }));\n\n    this.customMetrics.set('test_executions', this.meter.createCounter('test_executions_total', {\n      description: 'Total number of test executions',\n    }));\n\n    this.customMetrics.set('ai_model_requests', this.meter.createCounter('ai_model_requests_total', {\n      description: 'Total number of AI model requests',\n    }));\n\n    this.customMetrics.set('cache_operations', this.meter.createCounter('cache_operations_total', {\n      description: 'Total number of cache operations',\n    }));\n  }\n\n  /**\n   * Create a new span for operation tracing\n   */\n  public startSpan(name: string, attributes?: Record<string, any>): Span {\n    const span = this.tracer.startSpan(name, {\n      attributes: {\n        'service.name': this.config.serviceName,\n        'service.version': this.config.serviceVersion,\n        ...attributes,\n      },\n    });\n    return span;\n  }\n\n  /**\n   * Create an active span that automatically manages context\n   */\n  public withSpan<T>(name: string, fn: (span: Span) => T, attributes?: Record<string, any>): T {\n    const span = this.startSpan(name, attributes);\n    try {\n      const result = context.with(trace.setSpan(context.active(), span), () => fn(span));\n      span.setStatus({ code: SpanStatusCode.OK });\n      return result;\n    } catch (error) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: error instanceof Error ? error.message : 'Unknown error',\n      });\n      span.recordException(error as Error);\n      throw error;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Record HTTP request metrics\n   */\n  public recordHttpRequest(method: string, route: string, statusCode: number, duration: number): void {\n    if (!this.config.enableCustomMetrics) return;\n\n    this.requestCounter?.add(1, {\n      method,\n      route,\n      status_code: statusCode.toString(),\n    });\n\n    this.requestDuration?.record(duration, {\n      method,\n      route,\n      status_code: statusCode.toString(),\n    });\n  }\n\n  /**\n   * Record application error\n   */\n  public recordError(errorType: string, operation: string, message?: string): void {\n    if (!this.config.enableCustomMetrics) return;\n\n    this.errorCounter?.add(1, {\n      error_type: errorType,\n      operation,\n      message: message || 'unknown',\n    });\n  }\n\n  /**\n   * Record WebSocket connection change\n   */\n  public recordWebSocketConnection(delta: number): void {\n    if (!this.config.enableCustomMetrics) return;\n    this.activeConnections?.add(delta);\n  }\n\n  /**\n   * Record database operation metrics\n   */\n  public recordDatabaseOperation(operation: string, table: string, duration: number, success: boolean): void {\n    if (!this.config.enableCustomMetrics) return;\n\n    this.dbOperationDuration?.record(duration, {\n      operation,\n      table,\n      success: success.toString(),\n    });\n  }\n\n  /**\n   * Record custom business metric\n   */\n  public recordCustomMetric(metricName: string, value: number, attributes?: Record<string, any>): void {\n    if (!this.config.enableCustomMetrics) return;\n\n    const metric = this.customMetrics.get(metricName);\n    if (metric) {\n      metric.add(value, attributes || {});\n    }\n  }\n\n  /**\n   * Get the tracer instance\n   */\n  public getTracer(): any {\n    return this.tracer;\n  }\n\n  /**\n   * Get the meter instance\n   */\n  public getMeter(): any {\n    return this.meter;\n  }\n\n  /**\n   * Gracefully shutdown telemetry\n   */\n  public async shutdown(): Promise<void> {\n    try {\n      if (this.sdk) {\n        await this.sdk.shutdown();\n        console.log('üîç OpenTelemetry shutdown completed');\n      }\n    } catch (error) {\n      console.error('‚ùå Error during OpenTelemetry shutdown:', error);\n    }\n  }\n}\n\n// Singleton instance\nlet telemetryManager: TelemetryManager | null = null;\n\n/**\n * Initialize telemetry with configuration\n */\nexport function initializeTelemetry(config: Partial<TelemetryConfig> = {}): TelemetryManager {\n  if (!telemetryManager) {\n    telemetryManager = new TelemetryManager(config as TelemetryConfig);\n    telemetryManager.initialize();\n  }\n  return telemetryManager;\n}\n\n/**\n * Get the current telemetry manager instance\n */\nexport function getTelemetryManager(): TelemetryManager | null {\n  return telemetryManager;\n}\n\n/**\n * Utility function to create traced decorators for class methods\n */\nexport function traced(operationName?: string) {\n  return function (target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n    const originalMethod = descriptor.value;\n    const spanName = operationName || `${target.constructor.name}.${propertyKey}`;\n\n    descriptor.value = function (...args: any[]) {\n      const telemetry = getTelemetryManager();\n      if (!telemetry) {\n        return originalMethod.apply(this, args);\n      }\n\n      return telemetry.withSpan(spanName, (span: Span) => {\n        span.setAttributes({\n          'method.class': target.constructor.name,\n          'method.name': propertyKey,\n          'method.args.count': args.length,\n        });\n        return originalMethod.apply(this, args);\n      });\n    };\n\n    return descriptor;\n  };\n}\n\nexport default TelemetryManager;"],"mappings":"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","ignoreList":[]}