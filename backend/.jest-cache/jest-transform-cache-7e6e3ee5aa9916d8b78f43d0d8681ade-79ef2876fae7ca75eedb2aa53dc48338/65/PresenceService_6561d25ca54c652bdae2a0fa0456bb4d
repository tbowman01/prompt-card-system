93cfbe6489811a408a0c8b59f7c06ea1
"use strict";

/* istanbul ignore next */
function cov_gx3o36gw0() {
  var path = "/workspaces/prompt-card-system/backend/src/services/collaboration/PresenceService.ts";
  var hash = "149a1d18601030d6a4d5b0f5e3cd3971eb32c561";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/prompt-card-system/backend/src/services/collaboration/PresenceService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 7,
          column: 37
        }
      },
      "3": {
        start: {
          line: 10,
          column: 25
        },
        end: {
          line: 15,
          column: 9
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 47
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 51
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 52
        }
      },
      "7": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 42
        }
      },
      "8": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 5
          }
        },
        loc: {
          start: {
            line: 6,
            column: 18
          },
          end: {
            line: 8,
            column: 5
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 53
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 27
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 30
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 15
          },
          end: {
            line: 22,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 15
          },
          end: {
            line: 22,
            column: 43
          }
        }, {
          start: {
            line: 22,
            column: 47
          },
          end: {
            line: 22,
            column: 51
          }
        }],
        line: 22
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/prompt-card-system/backend/src/services/collaboration/PresenceService.ts",
      mappings: ";;;AAEA,kDAAkD;AAElD,MAAa,eAAe;IAG1B;QAFQ,gBAAW,GAA8B,IAAI,GAAG,EAAE,CAAC;IAE5C,CAAC;IAEhB,KAAK,CAAC,cAAc,CAAC,MAAc,EAAE,UAAkB,EAAE,MAAc;QACrE,MAAM,QAAQ,GAAiB;YAC7B,MAAM;YACN,UAAU;YACV,MAAM,EAAE,MAAuC;YAC/C,QAAQ,EAAE,IAAI,IAAI,EAAE;SACrB,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IACzC,CAAC;IAED,KAAK,CAAC,cAAc;QAClB,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC;IAC7C,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,MAAc;QAC9B,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC;IAC9C,CAAC;CACF;AAtBD,0CAsBC;AAED,kBAAe,eAAe,CAAC",
      names: [],
      sources: ["/workspaces/prompt-card-system/backend/src/services/collaboration/PresenceService.ts"],
      sourcesContent: ["import { UserPresence } from '../../types/collaboration';\n\n// Placeholder PresenceService to fix import error\n\nexport class PresenceService {\n  private presenceMap: Map<string, UserPresence> = new Map();\n  \n  constructor() {}\n  \n  async updatePresence(userId: string, documentId: string, status: string): Promise<void> {\n    const presence: UserPresence = {\n      userId,\n      documentId,\n      status: status as 'online' | 'offline' | 'away',\n      lastSeen: new Date()\n    };\n    this.presenceMap.set(userId, presence);\n  }\n  \n  async getActiveUsers(): Promise<string[]> {\n    return Array.from(this.presenceMap.keys());\n  }\n  \n  async getPresence(userId: string): Promise<UserPresence | null> {\n    return this.presenceMap.get(userId) || null;\n  }\n}\n\nexport default PresenceService;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "149a1d18601030d6a4d5b0f5e3cd3971eb32c561"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_gx3o36gw0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_gx3o36gw0();
cov_gx3o36gw0().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_gx3o36gw0().s[1]++;
exports.PresenceService = void 0;
// Placeholder PresenceService to fix import error
class PresenceService {
  constructor() {
    /* istanbul ignore next */
    cov_gx3o36gw0().f[0]++;
    cov_gx3o36gw0().s[2]++;
    this.presenceMap = new Map();
  }
  async updatePresence(userId, documentId, status) {
    /* istanbul ignore next */
    cov_gx3o36gw0().f[1]++;
    const presence =
    /* istanbul ignore next */
    (cov_gx3o36gw0().s[3]++, {
      userId,
      documentId,
      status: status,
      lastSeen: new Date()
    });
    /* istanbul ignore next */
    cov_gx3o36gw0().s[4]++;
    this.presenceMap.set(userId, presence);
  }
  async getActiveUsers() {
    /* istanbul ignore next */
    cov_gx3o36gw0().f[2]++;
    cov_gx3o36gw0().s[5]++;
    return Array.from(this.presenceMap.keys());
  }
  async getPresence(userId) {
    /* istanbul ignore next */
    cov_gx3o36gw0().f[3]++;
    cov_gx3o36gw0().s[6]++;
    return /* istanbul ignore next */(cov_gx3o36gw0().b[0][0]++, this.presenceMap.get(userId)) ||
    /* istanbul ignore next */
    (cov_gx3o36gw0().b[0][1]++, null);
  }
}
/* istanbul ignore next */
cov_gx3o36gw0().s[7]++;
exports.PresenceService = PresenceService;
/* istanbul ignore next */
cov_gx3o36gw0().s[8]++;
exports.default = PresenceService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfZ3gzbzM2Z3cwIiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiUHJlc2VuY2VTZXJ2aWNlIiwiY29uc3RydWN0b3IiLCJmIiwicHJlc2VuY2VNYXAiLCJNYXAiLCJ1cGRhdGVQcmVzZW5jZSIsInVzZXJJZCIsImRvY3VtZW50SWQiLCJzdGF0dXMiLCJwcmVzZW5jZSIsImxhc3RTZWVuIiwiRGF0ZSIsInNldCIsImdldEFjdGl2ZVVzZXJzIiwiQXJyYXkiLCJmcm9tIiwia2V5cyIsImdldFByZXNlbmNlIiwiYiIsImdldCIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsiL3dvcmtzcGFjZXMvcHJvbXB0LWNhcmQtc3lzdGVtL2JhY2tlbmQvc3JjL3NlcnZpY2VzL2NvbGxhYm9yYXRpb24vUHJlc2VuY2VTZXJ2aWNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFVzZXJQcmVzZW5jZSB9IGZyb20gJy4uLy4uL3R5cGVzL2NvbGxhYm9yYXRpb24nO1xuXG4vLyBQbGFjZWhvbGRlciBQcmVzZW5jZVNlcnZpY2UgdG8gZml4IGltcG9ydCBlcnJvclxuXG5leHBvcnQgY2xhc3MgUHJlc2VuY2VTZXJ2aWNlIHtcbiAgcHJpdmF0ZSBwcmVzZW5jZU1hcDogTWFwPHN0cmluZywgVXNlclByZXNlbmNlPiA9IG5ldyBNYXAoKTtcbiAgXG4gIGNvbnN0cnVjdG9yKCkge31cbiAgXG4gIGFzeW5jIHVwZGF0ZVByZXNlbmNlKHVzZXJJZDogc3RyaW5nLCBkb2N1bWVudElkOiBzdHJpbmcsIHN0YXR1czogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgY29uc3QgcHJlc2VuY2U6IFVzZXJQcmVzZW5jZSA9IHtcbiAgICAgIHVzZXJJZCxcbiAgICAgIGRvY3VtZW50SWQsXG4gICAgICBzdGF0dXM6IHN0YXR1cyBhcyAnb25saW5lJyB8ICdvZmZsaW5lJyB8ICdhd2F5JyxcbiAgICAgIGxhc3RTZWVuOiBuZXcgRGF0ZSgpXG4gICAgfTtcbiAgICB0aGlzLnByZXNlbmNlTWFwLnNldCh1c2VySWQsIHByZXNlbmNlKTtcbiAgfVxuICBcbiAgYXN5bmMgZ2V0QWN0aXZlVXNlcnMoKTogUHJvbWlzZTxzdHJpbmdbXT4ge1xuICAgIHJldHVybiBBcnJheS5mcm9tKHRoaXMucHJlc2VuY2VNYXAua2V5cygpKTtcbiAgfVxuICBcbiAgYXN5bmMgZ2V0UHJlc2VuY2UodXNlcklkOiBzdHJpbmcpOiBQcm9taXNlPFVzZXJQcmVzZW5jZSB8IG51bGw+IHtcbiAgICByZXR1cm4gdGhpcy5wcmVzZW5jZU1hcC5nZXQodXNlcklkKSB8fCBudWxsO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFByZXNlbmNlU2VydmljZTsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBZ0JRO0lBQUFBLGFBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGFBQUE7QUFBQUEsYUFBQSxHQUFBRSxDQUFBOzs7Ozs7O0FBZFI7QUFFQSxNQUFhQyxlQUFlO0VBRzFCQyxZQUFBO0lBQUE7SUFBQUosYUFBQSxHQUFBSyxDQUFBO0lBQUFMLGFBQUEsR0FBQUUsQ0FBQTtJQUZRLEtBQUFJLFdBQVcsR0FBOEIsSUFBSUMsR0FBRyxFQUFFO0VBRTNDO0VBRWYsTUFBTUMsY0FBY0EsQ0FBQ0MsTUFBYyxFQUFFQyxVQUFrQixFQUFFQyxNQUFjO0lBQUE7SUFBQVgsYUFBQSxHQUFBSyxDQUFBO0lBQ3JFLE1BQU1PLFFBQVE7SUFBQTtJQUFBLENBQUFaLGFBQUEsR0FBQUUsQ0FBQSxPQUFpQjtNQUM3Qk8sTUFBTTtNQUNOQyxVQUFVO01BQ1ZDLE1BQU0sRUFBRUEsTUFBdUM7TUFDL0NFLFFBQVEsRUFBRSxJQUFJQyxJQUFJO0tBQ25CO0lBQUM7SUFBQWQsYUFBQSxHQUFBRSxDQUFBO0lBQ0YsSUFBSSxDQUFDSSxXQUFXLENBQUNTLEdBQUcsQ0FBQ04sTUFBTSxFQUFFRyxRQUFRLENBQUM7RUFDeEM7RUFFQSxNQUFNSSxjQUFjQSxDQUFBO0lBQUE7SUFBQWhCLGFBQUEsR0FBQUssQ0FBQTtJQUFBTCxhQUFBLEdBQUFFLENBQUE7SUFDbEIsT0FBT2UsS0FBSyxDQUFDQyxJQUFJLENBQUMsSUFBSSxDQUFDWixXQUFXLENBQUNhLElBQUksRUFBRSxDQUFDO0VBQzVDO0VBRUEsTUFBTUMsV0FBV0EsQ0FBQ1gsTUFBYztJQUFBO0lBQUFULGFBQUEsR0FBQUssQ0FBQTtJQUFBTCxhQUFBLEdBQUFFLENBQUE7SUFDOUIsT0FBTywyQkFBQUYsYUFBQSxHQUFBcUIsQ0FBQSxjQUFJLENBQUNmLFdBQVcsQ0FBQ2dCLEdBQUcsQ0FBQ2IsTUFBTSxDQUFDO0lBQUE7SUFBQSxDQUFBVCxhQUFBLEdBQUFxQixDQUFBLFVBQUksSUFBSTtFQUM3Qzs7QUFDRDtBQUFBckIsYUFBQSxHQUFBRSxDQUFBO0FBdEJEcUIsT0FBQSxDQUFBcEIsZUFBQSxHQUFBQSxlQUFBO0FBc0JDO0FBQUFILGFBQUEsR0FBQUUsQ0FBQTtBQUVEcUIsT0FBQSxDQUFBQyxPQUFBLEdBQWVyQixlQUFlIiwiaWdub3JlTGlzdCI6W119