1c7fad74b99087ad513463726eb6263d
"use strict";

/**
 * Advanced Error Monitoring System
 *
 * Provides comprehensive error tracking, monitoring, and alerting capabilities.
 * Includes error classification, rate limiting, recovery strategies, and integration
 * with external monitoring services.
 */
/* istanbul ignore next */
function cov_2a07z5mqrf() {
  var path = "/workspaces/prompt-card-system/backend/src/monitoring/errorMonitoring.ts";
  var hash = "86adaa564f065e90399341f0e1c6a809b618f1fa";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/prompt-card-system/backend/src/monitoring/errorMonitoring.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 22
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "1": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "2": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "3": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 52
        }
      },
      "4": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 14,
          column: 5
        }
      },
      "5": {
        start: {
          line: 13,
          column: 6
        },
        end: {
          line: 13,
          column: 68
        }
      },
      "6": {
        start: {
          line: 13,
          column: 51
        },
        end: {
          line: 13,
          column: 63
        }
      },
      "7": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 39
        }
      },
      "8": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 33
        }
      },
      "9": {
        start: {
          line: 17,
          column: 26
        },
        end: {
          line: 17,
          column: 33
        }
      },
      "10": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 17
        }
      },
      "11": {
        start: {
          line: 20,
          column: 25
        },
        end: {
          line: 24,
          column: 2
        }
      },
      "12": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 72
        }
      },
      "13": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 21
        }
      },
      "14": {
        start: {
          line: 25,
          column: 19
        },
        end: {
          line: 41,
          column: 4
        }
      },
      "15": {
        start: {
          line: 26,
          column: 18
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "16": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 31,
          column: 10
        }
      },
      "17": {
        start: {
          line: 28,
          column: 21
        },
        end: {
          line: 28,
          column: 23
        }
      },
      "18": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 95
        }
      },
      "19": {
        start: {
          line: 29,
          column: 29
        },
        end: {
          line: 29,
          column: 95
        }
      },
      "20": {
        start: {
          line: 29,
          column: 77
        },
        end: {
          line: 29,
          column: 95
        }
      },
      "21": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 22
        }
      },
      "22": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 26
        }
      },
      "23": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 40,
          column: 6
        }
      },
      "24": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 46
        }
      },
      "25": {
        start: {
          line: 35,
          column: 35
        },
        end: {
          line: 35,
          column: 46
        }
      },
      "26": {
        start: {
          line: 36,
          column: 21
        },
        end: {
          line: 36,
          column: 23
        }
      },
      "27": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 137
        }
      },
      "28": {
        start: {
          line: 37,
          column: 25
        },
        end: {
          line: 37,
          column: 137
        }
      },
      "29": {
        start: {
          line: 37,
          column: 38
        },
        end: {
          line: 37,
          column: 50
        }
      },
      "30": {
        start: {
          line: 37,
          column: 56
        },
        end: {
          line: 37,
          column: 57
        }
      },
      "31": {
        start: {
          line: 37,
          column: 78
        },
        end: {
          line: 37,
          column: 137
        }
      },
      "32": {
        start: {
          line: 37,
          column: 102
        },
        end: {
          line: 37,
          column: 137
        }
      },
      "33": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 40
        }
      },
      "34": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 22
        }
      },
      "35": {
        start: {
          line: 42,
          column: 0
        },
        end: {
          line: 42,
          column: 62
        }
      },
      "36": {
        start: {
          line: 43,
          column: 0
        },
        end: {
          line: 43,
          column: 39
        }
      },
      "37": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 44,
          column: 62
        }
      },
      "38": {
        start: {
          line: 45,
          column: 0
        },
        end: {
          line: 45,
          column: 60
        }
      },
      "39": {
        start: {
          line: 46,
          column: 17
        },
        end: {
          line: 46,
          column: 47
        }
      },
      "40": {
        start: {
          line: 47,
          column: 15
        },
        end: {
          line: 47,
          column: 46
        }
      },
      "41": {
        start: {
          line: 48,
          column: 11
        },
        end: {
          line: 48,
          column: 47
        }
      },
      "42": {
        start: {
          line: 49,
          column: 13
        },
        end: {
          line: 49,
          column: 42
        }
      },
      "43": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 36
        }
      },
      "44": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 36
        }
      },
      "45": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 38
        }
      },
      "46": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 65,
          column: 10
        }
      },
      "47": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 71
        }
      },
      "48": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 36
        }
      },
      "49": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 37
        }
      },
      "50": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 96,
          column: 11
        }
      },
      "51": {
        start: {
          line: 79,
          column: 36
        },
        end: {
          line: 79,
          column: 87
        }
      },
      "52": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 41
        }
      },
      "53": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 89,
          column: 19
        }
      },
      "54": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 116,
          column: 11
        }
      },
      "55": {
        start: {
          line: 101,
          column: 43
        },
        end: {
          line: 101,
          column: 62
        }
      },
      "56": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 109,
          column: 19
        }
      },
      "57": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 145,
          column: 11
        }
      },
      "58": {
        start: {
          line: 122,
          column: 41
        },
        end: {
          line: 128,
          column: 17
        }
      },
      "59": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 85
        }
      },
      "60": {
        start: {
          line: 129,
          column: 56
        },
        end: {
          line: 129,
          column: 83
        }
      },
      "61": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 138,
          column: 19
        }
      },
      "62": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 165,
          column: 11
        }
      },
      "63": {
        start: {
          line: 150,
          column: 43
        },
        end: {
          line: 150,
          column: 74
        }
      },
      "64": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 158,
          column: 19
        }
      },
      "65": {
        start: {
          line: 171,
          column: 26
        },
        end: {
          line: 171,
          column: 48
        }
      },
      "66": {
        start: {
          line: 172,
          column: 24
        },
        end: {
          line: 172,
          column: 56
        }
      },
      "67": {
        start: {
          line: 173,
          column: 22
        },
        end: {
          line: 173,
          column: 76
        }
      },
      "68": {
        start: {
          line: 175,
          column: 26
        },
        end: {
          line: 175,
          column: 94
        }
      },
      "69": {
        start: {
          line: 176,
          column: 21
        },
        end: {
          line: 176,
          column: 97
        }
      },
      "70": {
        start: {
          line: 177,
          column: 28
        },
        end: {
          line: 182,
          column: 9
        }
      },
      "71": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 189,
          column: 10
        }
      },
      "72": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 196,
          column: 22
        }
      },
      "73": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 22
        }
      },
      "74": {
        start: {
          line: 198,
          column: 23
        },
        end: {
          line: 207,
          column: 24
        }
      },
      "75": {
        start: {
          line: 201,
          column: 29
        },
        end: {
          line: 201,
          column: 60
        }
      },
      "76": {
        start: {
          line: 204,
          column: 26
        },
        end: {
          line: 204,
          column: 107
        }
      },
      "77": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 83
        }
      },
      "78": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 208,
          column: 32
        }
      },
      "79": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 253,
          column: 9
        }
      },
      "80": {
        start: {
          line: 215,
          column: 32
        },
        end: {
          line: 215,
          column: 70
        }
      },
      "81": {
        start: {
          line: 216,
          column: 36
        },
        end: {
          line: 216,
          column: 73
        }
      },
      "82": {
        start: {
          line: 217,
          column: 28
        },
        end: {
          line: 225,
          column: 13
        }
      },
      "83": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 28
        }
      },
      "84": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 228,
          column: 61
        }
      },
      "85": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 231,
          column: 13
        }
      },
      "86": {
        start: {
          line: 230,
          column: 16
        },
        end: {
          line: 230,
          column: 58
        }
      },
      "87": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 234,
          column: 13
        }
      },
      "88": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 233,
          column: 56
        }
      },
      "89": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 59
        }
      },
      "90": {
        start: {
          line: 237,
          column: 30
        },
        end: {
          line: 237,
          column: 65
        }
      },
      "91": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 240,
          column: 13
        }
      },
      "92": {
        start: {
          line: 239,
          column: 16
        },
        end: {
          line: 239,
          column: 108
        }
      },
      "93": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 60
        }
      },
      "94": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 246,
          column: 13
        }
      },
      "95": {
        start: {
          line: 245,
          column: 16
        },
        end: {
          line: 245,
          column: 65
        }
      },
      "96": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 46
        }
      },
      "97": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 251,
          column: 82
        }
      },
      "98": {
        start: {
          line: 259,
          column: 29
        },
        end: {
          line: 259,
          column: 56
        }
      },
      "99": {
        start: {
          line: 260,
          column: 26
        },
        end: {
          line: 260,
          column: 48
        }
      },
      "100": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 268,
          column: 9
        }
      },
      "101": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 30
        }
      },
      "102": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 275,
          column: 9
        }
      },
      "103": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 26
        }
      },
      "104": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 281,
          column: 9
        }
      },
      "105": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 280,
          column: 28
        }
      },
      "106": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 282,
          column: 21
        }
      },
      "107": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 305,
          column: 9
        }
      },
      "108": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 67
        }
      },
      "109": {
        start: {
          line: 290,
          column: 29
        },
        end: {
          line: 299,
          column: 13
        }
      },
      "110": {
        start: {
          line: 300,
          column: 28
        },
        end: {
          line: 300,
          column: 133
        }
      },
      "111": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 301,
          column: 74
        }
      },
      "112": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 67
        }
      },
      "113": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 327,
          column: 9
        }
      },
      "114": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 313,
          column: 25
        }
      },
      "115": {
        start: {
          line: 313,
          column: 16
        },
        end: {
          line: 313,
          column: 25
        }
      },
      "116": {
        start: {
          line: 314,
          column: 12
        },
        end: {
          line: 326,
          column: 13
        }
      },
      "117": {
        start: {
          line: 315,
          column: 16
        },
        end: {
          line: 322,
          column: 17
        }
      },
      "118": {
        start: {
          line: 317,
          column: 20
        },
        end: {
          line: 319,
          column: 21
        }
      },
      "119": {
        start: {
          line: 318,
          column: 24
        },
        end: {
          line: 318,
          column: 33
        }
      },
      "120": {
        start: {
          line: 320,
          column: 20
        },
        end: {
          line: 320,
          column: 60
        }
      },
      "121": {
        start: {
          line: 321,
          column: 20
        },
        end: {
          line: 321,
          column: 45
        }
      },
      "122": {
        start: {
          line: 325,
          column: 16
        },
        end: {
          line: 325,
          column: 73
        }
      },
      "123": {
        start: {
          line: 333,
          column: 20
        },
        end: {
          line: 333,
          column: 30
        }
      },
      "124": {
        start: {
          line: 334,
          column: 29
        },
        end: {
          line: 334,
          column: 64
        }
      },
      "125": {
        start: {
          line: 336,
          column: 28
        },
        end: {
          line: 336,
          column: 100
        }
      },
      "126": {
        start: {
          line: 336,
          column: 61
        },
        end: {
          line: 336,
          column: 99
        }
      },
      "127": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 337,
          column: 56
        }
      },
      "128": {
        start: {
          line: 343,
          column: 20
        },
        end: {
          line: 343,
          column: 30
        }
      },
      "129": {
        start: {
          line: 344,
          column: 29
        },
        end: {
          line: 344,
          column: 64
        }
      },
      "130": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 345,
          column: 31
        }
      },
      "131": {
        start: {
          line: 346,
          column: 8
        },
        end: {
          line: 346,
          column: 52
        }
      },
      "132": {
        start: {
          line: 354,
          column: 24
        },
        end: {
          line: 354,
          column: 54
        }
      },
      "133": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 356,
          column: 21
        }
      },
      "134": {
        start: {
          line: 356,
          column: 12
        },
        end: {
          line: 356,
          column: 21
        }
      },
      "135": {
        start: {
          line: 357,
          column: 34
        },
        end: {
          line: 357,
          column: 73
        }
      },
      "136": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 358,
          column: 66
        }
      },
      "137": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 394,
          column: 9
        }
      },
      "138": {
        start: {
          line: 366,
          column: 12
        },
        end: {
          line: 366,
          column: 90
        }
      },
      "139": {
        start: {
          line: 375,
          column: 12
        },
        end: {
          line: 390,
          column: 13
        }
      },
      "140": {
        start: {
          line: 376,
          column: 32
        },
        end: {
          line: 387,
          column: 17
        }
      },
      "141": {
        start: {
          line: 389,
          column: 16
        },
        end: {
          line: 389,
          column: 66
        }
      },
      "142": {
        start: {
          line: 393,
          column: 12
        },
        end: {
          line: 393,
          column: 60
        }
      },
      "143": {
        start: {
          line: 400,
          column: 8
        },
        end: {
          line: 400,
          column: 43
        }
      },
      "144": {
        start: {
          line: 406,
          column: 8
        },
        end: {
          line: 406,
          column: 46
        }
      },
      "145": {
        start: {
          line: 412,
          column: 28
        },
        end: {
          line: 412,
          column: 113
        }
      },
      "146": {
        start: {
          line: 412,
          column: 90
        },
        end: {
          line: 412,
          column: 109
        }
      },
      "147": {
        start: {
          line: 413,
          column: 29
        },
        end: {
          line: 413,
          column: 49
        }
      },
      "148": {
        start: {
          line: 414,
          column: 29
        },
        end: {
          line: 414,
          column: 31
        }
      },
      "149": {
        start: {
          line: 415,
          column: 33
        },
        end: {
          line: 415,
          column: 35
        }
      },
      "150": {
        start: {
          line: 417,
          column: 8
        },
        end: {
          line: 419,
          column: 9
        }
      },
      "151": {
        start: {
          line: 418,
          column: 12
        },
        end: {
          line: 418,
          column: 107
        }
      },
      "152": {
        start: {
          line: 420,
          column: 26
        },
        end: {
          line: 428,
          column: 11
        }
      },
      "153": {
        start: {
          line: 421,
          column: 36
        },
        end: {
          line: 421,
          column: 53
        }
      },
      "154": {
        start: {
          line: 423,
          column: 39
        },
        end: {
          line: 428,
          column: 9
        }
      },
      "155": {
        start: {
          line: 429,
          column: 8
        },
        end: {
          line: 435,
          column: 10
        }
      },
      "156": {
        start: {
          line: 441,
          column: 8
        },
        end: {
          line: 442,
          column: 19
        }
      },
      "157": {
        start: {
          line: 442,
          column: 12
        },
        end: {
          line: 442,
          column: 19
        }
      },
      "158": {
        start: {
          line: 444,
          column: 29
        },
        end: {
          line: 445,
          column: 80
        }
      },
      "159": {
        start: {
          line: 445,
          column: 36
        },
        end: {
          line: 445,
          column: 79
        }
      },
      "160": {
        start: {
          line: 446,
          column: 25
        },
        end: {
          line: 446,
          column: 97
        }
      },
      "161": {
        start: {
          line: 447,
          column: 8
        },
        end: {
          line: 449,
          column: 9
        }
      },
      "162": {
        start: {
          line: 448,
          column: 12
        },
        end: {
          line: 448,
          column: 41
        }
      },
      "163": {
        start: {
          line: 456,
          column: 8
        },
        end: {
          line: 458,
          column: 27
        }
      },
      "164": {
        start: {
          line: 457,
          column: 12
        },
        end: {
          line: 457,
          column: 36
        }
      },
      "165": {
        start: {
          line: 460,
          column: 8
        },
        end: {
          line: 462,
          column: 27
        }
      },
      "166": {
        start: {
          line: 461,
          column: 12
        },
        end: {
          line: 461,
          column: 36
        }
      },
      "167": {
        start: {
          line: 468,
          column: 27
        },
        end: {
          line: 468,
          column: 102
        }
      },
      "168": {
        start: {
          line: 469,
          column: 8
        },
        end: {
          line: 473,
          column: 9
        }
      },
      "169": {
        start: {
          line: 470,
          column: 12
        },
        end: {
          line: 472,
          column: 13
        }
      },
      "170": {
        start: {
          line: 471,
          column: 16
        },
        end: {
          line: 471,
          column: 45
        }
      },
      "171": {
        start: {
          line: 479,
          column: 20
        },
        end: {
          line: 479,
          column: 30
        }
      },
      "172": {
        start: {
          line: 480,
          column: 8
        },
        end: {
          line: 488,
          column: 9
        }
      },
      "173": {
        start: {
          line: 481,
          column: 32
        },
        end: {
          line: 481,
          column: 97
        }
      },
      "174": {
        start: {
          line: 481,
          column: 59
        },
        end: {
          line: 481,
          column: 96
        }
      },
      "175": {
        start: {
          line: 482,
          column: 12
        },
        end: {
          line: 487,
          column: 13
        }
      },
      "176": {
        start: {
          line: 483,
          column: 16
        },
        end: {
          line: 483,
          column: 49
        }
      },
      "177": {
        start: {
          line: 486,
          column: 16
        },
        end: {
          line: 486,
          column: 59
        }
      },
      "178": {
        start: {
          line: 494,
          column: 8
        },
        end: {
          line: 511,
          column: 10
        }
      },
      "179": {
        start: {
          line: 496,
          column: 28
        },
        end: {
          line: 504,
          column: 13
        }
      },
      "180": {
        start: {
          line: 506,
          column: 12
        },
        end: {
          line: 508,
          column: 15
        }
      },
      "181": {
        start: {
          line: 507,
          column: 16
        },
        end: {
          line: 507,
          column: 85
        }
      },
      "182": {
        start: {
          line: 510,
          column: 12
        },
        end: {
          line: 510,
          column: 24
        }
      },
      "183": {
        start: {
          line: 514,
          column: 0
        },
        end: {
          line: 514,
          column: 54
        }
      },
      "184": {
        start: {
          line: 516,
          column: 28
        },
        end: {
          line: 516,
          column: 32
        }
      },
      "185": {
        start: {
          line: 521,
          column: 4
        },
        end: {
          line: 524,
          column: 5
        }
      },
      "186": {
        start: {
          line: 522,
          column: 8
        },
        end: {
          line: 522,
          column: 66
        }
      },
      "187": {
        start: {
          line: 523,
          column: 8
        },
        end: {
          line: 523,
          column: 62
        }
      },
      "188": {
        start: {
          line: 525,
          column: 4
        },
        end: {
          line: 525,
          column: 33
        }
      },
      "189": {
        start: {
          line: 531,
          column: 4
        },
        end: {
          line: 531,
          column: 33
        }
      },
      "190": {
        start: {
          line: 533,
          column: 0
        },
        end: {
          line: 533,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 74
          },
          end: {
            line: 9,
            column: 75
          }
        },
        loc: {
          start: {
            line: 9,
            column: 96
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 38
          },
          end: {
            line: 13,
            column: 39
          }
        },
        loc: {
          start: {
            line: 13,
            column: 49
          },
          end: {
            line: 13,
            column: 65
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 6
          },
          end: {
            line: 16,
            column: 7
          }
        },
        loc: {
          start: {
            line: 16,
            column: 28
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 20,
            column: 80
          },
          end: {
            line: 20,
            column: 81
          }
        },
        loc: {
          start: {
            line: 20,
            column: 95
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 20
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 5
          },
          end: {
            line: 22,
            column: 6
          }
        },
        loc: {
          start: {
            line: 22,
            column: 20
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 51
          },
          end: {
            line: 25,
            column: 52
          }
        },
        loc: {
          start: {
            line: 25,
            column: 63
          },
          end: {
            line: 41,
            column: 1
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 26,
            column: 18
          },
          end: {
            line: 26,
            column: 19
          }
        },
        loc: {
          start: {
            line: 26,
            column: 30
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 26
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 27,
            column: 48
          },
          end: {
            line: 27,
            column: 49
          }
        },
        loc: {
          start: {
            line: 27,
            column: 61
          },
          end: {
            line: 31,
            column: 9
          }
        },
        line: 27
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 34,
            column: 11
          },
          end: {
            line: 34,
            column: 12
          }
        },
        loc: {
          start: {
            line: 34,
            column: 26
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 34
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 30
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 51
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        loc: {
          start: {
            line: 73,
            column: 27
          },
          end: {
            line: 166,
            column: 5
          }
        },
        line: 73
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 78,
            column: 23
          },
          end: {
            line: 78,
            column: 24
          }
        },
        loc: {
          start: {
            line: 78,
            column: 43
          },
          end: {
            line: 81,
            column: 13
          }
        },
        line: 78
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 82,
            column: 20
          },
          end: {
            line: 82,
            column: 21
          }
        },
        loc: {
          start: {
            line: 82,
            column: 46
          },
          end: {
            line: 90,
            column: 13
          }
        },
        line: 82
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 101,
            column: 23
          },
          end: {
            line: 101,
            column: 24
          }
        },
        loc: {
          start: {
            line: 101,
            column: 43
          },
          end: {
            line: 101,
            column: 62
          }
        },
        line: 101
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 102,
            column: 20
          },
          end: {
            line: 102,
            column: 21
          }
        },
        loc: {
          start: {
            line: 102,
            column: 46
          },
          end: {
            line: 110,
            column: 13
          }
        },
        line: 102
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 121,
            column: 23
          },
          end: {
            line: 121,
            column: 24
          }
        },
        loc: {
          start: {
            line: 121,
            column: 43
          },
          end: {
            line: 130,
            column: 13
          }
        },
        line: 121
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 129,
            column: 45
          },
          end: {
            line: 129,
            column: 46
          }
        },
        loc: {
          start: {
            line: 129,
            column: 56
          },
          end: {
            line: 129,
            column: 83
          }
        },
        line: 129
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 131,
            column: 20
          },
          end: {
            line: 131,
            column: 21
          }
        },
        loc: {
          start: {
            line: 131,
            column: 46
          },
          end: {
            line: 139,
            column: 13
          }
        },
        line: 131
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 150,
            column: 23
          },
          end: {
            line: 150,
            column: 24
          }
        },
        loc: {
          start: {
            line: 150,
            column: 43
          },
          end: {
            line: 150,
            column: 74
          }
        },
        line: 150
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 151,
            column: 20
          },
          end: {
            line: 151,
            column: 21
          }
        },
        loc: {
          start: {
            line: 151,
            column: 46
          },
          end: {
            line: 159,
            column: 13
          }
        },
        line: 151
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        },
        loc: {
          start: {
            line: 170,
            column: 38
          },
          end: {
            line: 190,
            column: 5
          }
        },
        line: 170
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 194,
            column: 4
          },
          end: {
            line: 194,
            column: 5
          }
        },
        loc: {
          start: {
            line: 194,
            column: 33
          },
          end: {
            line: 209,
            column: 5
          }
        },
        line: 194
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 201,
            column: 20
          },
          end: {
            line: 201,
            column: 21
          }
        },
        loc: {
          start: {
            line: 201,
            column: 29
          },
          end: {
            line: 201,
            column: 60
          }
        },
        line: 201
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 202,
            column: 17
          },
          end: {
            line: 202,
            column: 18
          }
        },
        loc: {
          start: {
            line: 202,
            column: 26
          },
          end: {
            line: 206,
            column: 9
          }
        },
        line: 202
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        },
        loc: {
          start: {
            line: 213,
            column: 43
          },
          end: {
            line: 254,
            column: 5
          }
        },
        line: 213
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 258,
            column: 4
          },
          end: {
            line: 258,
            column: 5
          }
        },
        loc: {
          start: {
            line: 258,
            column: 38
          },
          end: {
            line: 283,
            column: 5
          }
        },
        line: 258
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 287,
            column: 4
          },
          end: {
            line: 287,
            column: 5
          }
        },
        loc: {
          start: {
            line: 287,
            column: 47
          },
          end: {
            line: 306,
            column: 5
          }
        },
        line: 287
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 310,
            column: 4
          },
          end: {
            line: 310,
            column: 5
          }
        },
        loc: {
          start: {
            line: 310,
            column: 48
          },
          end: {
            line: 328,
            column: 5
          }
        },
        line: 310
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 332,
            column: 4
          },
          end: {
            line: 332,
            column: 5
          }
        },
        loc: {
          start: {
            line: 332,
            column: 36
          },
          end: {
            line: 338,
            column: 5
          }
        },
        line: 332
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 336,
            column: 48
          },
          end: {
            line: 336,
            column: 49
          }
        },
        loc: {
          start: {
            line: 336,
            column: 61
          },
          end: {
            line: 336,
            column: 99
          }
        },
        line: 336
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 342,
            column: 4
          },
          end: {
            line: 342,
            column: 5
          }
        },
        loc: {
          start: {
            line: 342,
            column: 24
          },
          end: {
            line: 347,
            column: 5
          }
        },
        line: 342
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 351,
            column: 4
          },
          end: {
            line: 351,
            column: 5
          }
        },
        loc: {
          start: {
            line: 351,
            column: 47
          },
          end: {
            line: 359,
            column: 5
          }
        },
        line: 351
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 363,
            column: 4
          },
          end: {
            line: 363,
            column: 5
          }
        },
        loc: {
          start: {
            line: 363,
            column: 37
          },
          end: {
            line: 395,
            column: 5
          }
        },
        line: 363
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 399,
            column: 4
          },
          end: {
            line: 399,
            column: 5
          }
        },
        loc: {
          start: {
            line: 399,
            column: 23
          },
          end: {
            line: 401,
            column: 5
          }
        },
        line: 399
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 405,
            column: 4
          },
          end: {
            line: 405,
            column: 5
          }
        },
        loc: {
          start: {
            line: 405,
            column: 28
          },
          end: {
            line: 407,
            column: 5
          }
        },
        line: 405
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 411,
            column: 4
          },
          end: {
            line: 411,
            column: 5
          }
        },
        loc: {
          start: {
            line: 411,
            column: 25
          },
          end: {
            line: 436,
            column: 5
          }
        },
        line: 411
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 412,
            column: 72
          },
          end: {
            line: 412,
            column: 73
          }
        },
        loc: {
          start: {
            line: 412,
            column: 90
          },
          end: {
            line: 412,
            column: 109
          }
        },
        line: 412
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 421,
            column: 18
          },
          end: {
            line: 421,
            column: 19
          }
        },
        loc: {
          start: {
            line: 421,
            column: 36
          },
          end: {
            line: 421,
            column: 53
          }
        },
        line: 421
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 423,
            column: 17
          },
          end: {
            line: 423,
            column: 18
          }
        },
        loc: {
          start: {
            line: 423,
            column: 39
          },
          end: {
            line: 428,
            column: 9
          }
        },
        line: 423
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 440,
            column: 4
          },
          end: {
            line: 440,
            column: 5
          }
        },
        loc: {
          start: {
            line: 440,
            column: 33
          },
          end: {
            line: 450,
            column: 5
          }
        },
        line: 440
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 445,
            column: 18
          },
          end: {
            line: 445,
            column: 19
          }
        },
        loc: {
          start: {
            line: 445,
            column: 36
          },
          end: {
            line: 445,
            column: 79
          }
        },
        line: 445
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 454,
            column: 4
          },
          end: {
            line: 454,
            column: 5
          }
        },
        loc: {
          start: {
            line: 454,
            column: 28
          },
          end: {
            line: 463,
            column: 5
          }
        },
        line: 454
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 456,
            column: 20
          },
          end: {
            line: 456,
            column: 21
          }
        },
        loc: {
          start: {
            line: 456,
            column: 26
          },
          end: {
            line: 458,
            column: 9
          }
        },
        line: 456
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 460,
            column: 20
          },
          end: {
            line: 460,
            column: 21
          }
        },
        loc: {
          start: {
            line: 460,
            column: 26
          },
          end: {
            line: 462,
            column: 9
          }
        },
        line: 460
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 467,
            column: 4
          },
          end: {
            line: 467,
            column: 5
          }
        },
        loc: {
          start: {
            line: 467,
            column: 23
          },
          end: {
            line: 474,
            column: 5
          }
        },
        line: 467
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 478,
            column: 4
          },
          end: {
            line: 478,
            column: 5
          }
        },
        loc: {
          start: {
            line: 478,
            column: 23
          },
          end: {
            line: 489,
            column: 5
          }
        },
        line: 478
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 481,
            column: 46
          },
          end: {
            line: 481,
            column: 47
          }
        },
        loc: {
          start: {
            line: 481,
            column: 59
          },
          end: {
            line: 481,
            column: 96
          }
        },
        line: 481
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 493,
            column: 4
          },
          end: {
            line: 493,
            column: 5
          }
        },
        loc: {
          start: {
            line: 493,
            column: 17
          },
          end: {
            line: 512,
            column: 5
          }
        },
        line: 493
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 494,
            column: 15
          },
          end: {
            line: 494,
            column: 16
          }
        },
        loc: {
          start: {
            line: 494,
            column: 42
          },
          end: {
            line: 511,
            column: 9
          }
        },
        line: 494
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 506,
            column: 51
          },
          end: {
            line: 506,
            column: 52
          }
        },
        loc: {
          start: {
            line: 506,
            column: 58
          },
          end: {
            line: 508,
            column: 13
          }
        },
        line: 506
      },
      "50": {
        name: "initializeErrorMonitoring",
        decl: {
          start: {
            line: 520,
            column: 9
          },
          end: {
            line: 520,
            column: 34
          }
        },
        loc: {
          start: {
            line: 520,
            column: 48
          },
          end: {
            line: 526,
            column: 1
          }
        },
        line: 520
      },
      "51": {
        name: "getErrorMonitoringSystem",
        decl: {
          start: {
            line: 530,
            column: 9
          },
          end: {
            line: 530,
            column: 33
          }
        },
        loc: {
          start: {
            line: 530,
            column: 36
          },
          end: {
            line: 532,
            column: 1
          }
        },
        line: 530
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 22
          },
          end: {
            line: 19,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 23
          },
          end: {
            line: 9,
            column: 27
          }
        }, {
          start: {
            line: 9,
            column: 31
          },
          end: {
            line: 9,
            column: 51
          }
        }, {
          start: {
            line: 9,
            column: 57
          },
          end: {
            line: 19,
            column: 2
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 9,
            column: 57
          },
          end: {
            line: 19,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 9,
            column: 74
          },
          end: {
            line: 16,
            column: 1
          }
        }, {
          start: {
            line: 16,
            column: 6
          },
          end: {
            line: 19,
            column: 1
          }
        }],
        line: 9
      },
      "2": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "3": {
        loc: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 12
      },
      "4": {
        loc: {
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 12,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 12,
            column: 13
          }
        }, {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 12,
            column: 84
          }
        }],
        line: 12
      },
      "5": {
        loc: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 12,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 12,
            column: 34
          },
          end: {
            line: 12,
            column: 47
          }
        }, {
          start: {
            line: 12,
            column: 50
          },
          end: {
            line: 12,
            column: 84
          }
        }],
        line: 12
      },
      "6": {
        loc: {
          start: {
            line: 12,
            column: 50
          },
          end: {
            line: 12,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 50
          },
          end: {
            line: 12,
            column: 63
          }
        }, {
          start: {
            line: 12,
            column: 67
          },
          end: {
            line: 12,
            column: 84
          }
        }],
        line: 12
      },
      "7": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "8": {
        loc: {
          start: {
            line: 20,
            column: 25
          },
          end: {
            line: 24,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 26
          },
          end: {
            line: 20,
            column: 30
          }
        }, {
          start: {
            line: 20,
            column: 34
          },
          end: {
            line: 20,
            column: 57
          }
        }, {
          start: {
            line: 20,
            column: 63
          },
          end: {
            line: 24,
            column: 1
          }
        }],
        line: 20
      },
      "9": {
        loc: {
          start: {
            line: 20,
            column: 63
          },
          end: {
            line: 24,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 80
          },
          end: {
            line: 22,
            column: 1
          }
        }, {
          start: {
            line: 22,
            column: 5
          },
          end: {
            line: 24,
            column: 1
          }
        }],
        line: 20
      },
      "10": {
        loc: {
          start: {
            line: 25,
            column: 19
          },
          end: {
            line: 41,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 20
          },
          end: {
            line: 25,
            column: 24
          }
        }, {
          start: {
            line: 25,
            column: 28
          },
          end: {
            line: 25,
            column: 45
          }
        }, {
          start: {
            line: 25,
            column: 50
          },
          end: {
            line: 41,
            column: 4
          }
        }],
        line: 25
      },
      "11": {
        loc: {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 31,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 44
          }
        }, {
          start: {
            line: 27,
            column: 48
          },
          end: {
            line: 31,
            column: 9
          }
        }],
        line: 27
      },
      "12": {
        loc: {
          start: {
            line: 29,
            column: 29
          },
          end: {
            line: 29,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 29
          },
          end: {
            line: 29,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "13": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "14": {
        loc: {
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 15
          }
        }, {
          start: {
            line: 35,
            column: 19
          },
          end: {
            line: 35,
            column: 33
          }
        }],
        line: 35
      },
      "15": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "16": {
        loc: {
          start: {
            line: 37,
            column: 78
          },
          end: {
            line: 37,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 78
          },
          end: {
            line: 37,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "17": {
        loc: {
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 51,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 51,
            column: 26
          },
          end: {
            line: 51,
            column: 28
          }
        }],
        line: 51
      },
      "18": {
        loc: {
          start: {
            line: 56,
            column: 38
          },
          end: {
            line: 56,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 38
          },
          end: {
            line: 56,
            column: 77
          }
        }, {
          start: {
            line: 56,
            column: 81
          },
          end: {
            line: 56,
            column: 88
          }
        }],
        line: 56
      },
      "19": {
        loc: {
          start: {
            line: 57,
            column: 41
          },
          end: {
            line: 57,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 41
          },
          end: {
            line: 57,
            column: 84
          }
        }, {
          start: {
            line: 57,
            column: 88
          },
          end: {
            line: 57,
            column: 92
          }
        }],
        line: 57
      },
      "20": {
        loc: {
          start: {
            line: 62,
            column: 25
          },
          end: {
            line: 62,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 25
          },
          end: {
            line: 62,
            column: 45
          }
        }, {
          start: {
            line: 62,
            column: 49
          },
          end: {
            line: 62,
            column: 62
          }
        }],
        line: 62
      },
      "21": {
        loc: {
          start: {
            line: 63,
            column: 28
          },
          end: {
            line: 63,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 28
          },
          end: {
            line: 63,
            column: 59
          }
        }, {
          start: {
            line: 63,
            column: 63
          },
          end: {
            line: 63,
            column: 70
          }
        }],
        line: 63
      },
      "22": {
        loc: {
          start: {
            line: 172,
            column: 24
          },
          end: {
            line: 172,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 24
          },
          end: {
            line: 172,
            column: 37
          }
        }, {
          start: {
            line: 172,
            column: 41
          },
          end: {
            line: 172,
            column: 56
          }
        }],
        line: 172
      },
      "23": {
        loc: {
          start: {
            line: 173,
            column: 22
          },
          end: {
            line: 173,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 173,
            column: 53
          },
          end: {
            line: 173,
            column: 64
          }
        }, {
          start: {
            line: 173,
            column: 67
          },
          end: {
            line: 173,
            column: 76
          }
        }],
        line: 173
      },
      "24": {
        loc: {
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 196,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 196,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "25": {
        loc: {
          start: {
            line: 204,
            column: 26
          },
          end: {
            line: 204,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 26
          },
          end: {
            line: 204,
            column: 69
          }
        }, {
          start: {
            line: 204,
            column: 73
          },
          end: {
            line: 204,
            column: 107
          }
        }],
        line: 204
      },
      "26": {
        loc: {
          start: {
            line: 205,
            column: 19
          },
          end: {
            line: 205,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 205,
            column: 27
          },
          end: {
            line: 205,
            column: 67
          }
        }, {
          start: {
            line: 205,
            column: 70
          },
          end: {
            line: 205,
            column: 82
          }
        }],
        line: 205
      },
      "27": {
        loc: {
          start: {
            line: 213,
            column: 29
          },
          end: {
            line: 213,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 213,
            column: 39
          },
          end: {
            line: 213,
            column: 41
          }
        }],
        line: 213
      },
      "28": {
        loc: {
          start: {
            line: 217,
            column: 28
          },
          end: {
            line: 225,
            column: 13
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 217,
            column: 28
          },
          end: {
            line: 217,
            column: 43
          }
        }, {
          start: {
            line: 217,
            column: 47
          },
          end: {
            line: 225,
            column: 13
          }
        }],
        line: 217
      },
      "29": {
        loc: {
          start: {
            line: 229,
            column: 12
          },
          end: {
            line: 231,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 12
          },
          end: {
            line: 231,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "30": {
        loc: {
          start: {
            line: 229,
            column: 16
          },
          end: {
            line: 229,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 229,
            column: 16
          },
          end: {
            line: 229,
            column: 30
          }
        }, {
          start: {
            line: 229,
            column: 34
          },
          end: {
            line: 229,
            column: 64
          }
        }],
        line: 229
      },
      "31": {
        loc: {
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 234,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 234,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "32": {
        loc: {
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 240,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 240,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "33": {
        loc: {
          start: {
            line: 239,
            column: 56
          },
          end: {
            line: 239,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 239,
            column: 56
          },
          end: {
            line: 239,
            column: 72
          }
        }, {
          start: {
            line: 239,
            column: 76
          },
          end: {
            line: 239,
            column: 85
          }
        }],
        line: 239
      },
      "34": {
        loc: {
          start: {
            line: 244,
            column: 12
          },
          end: {
            line: 246,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 12
          },
          end: {
            line: 246,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "35": {
        loc: {
          start: {
            line: 262,
            column: 8
          },
          end: {
            line: 268,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 8
          },
          end: {
            line: 268,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      },
      "36": {
        loc: {
          start: {
            line: 262,
            column: 12
          },
          end: {
            line: 266,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 262,
            column: 12
          },
          end: {
            line: 262,
            column: 45
          }
        }, {
          start: {
            line: 263,
            column: 12
          },
          end: {
            line: 263,
            column: 47
          }
        }, {
          start: {
            line: 264,
            column: 12
          },
          end: {
            line: 264,
            column: 43
          }
        }, {
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 265,
            column: 42
          }
        }, {
          start: {
            line: 266,
            column: 12
          },
          end: {
            line: 266,
            column: 37
          }
        }, {
          start: {
            line: 266,
            column: 41
          },
          end: {
            line: 266,
            column: 77
          }
        }],
        line: 262
      },
      "37": {
        loc: {
          start: {
            line: 270,
            column: 8
          },
          end: {
            line: 275,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 8
          },
          end: {
            line: 275,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 270
      },
      "38": {
        loc: {
          start: {
            line: 270,
            column: 12
          },
          end: {
            line: 273,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 270,
            column: 12
          },
          end: {
            line: 270,
            column: 44
          }
        }, {
          start: {
            line: 271,
            column: 12
          },
          end: {
            line: 271,
            column: 49
          }
        }, {
          start: {
            line: 272,
            column: 12
          },
          end: {
            line: 272,
            column: 46
          }
        }, {
          start: {
            line: 273,
            column: 12
          },
          end: {
            line: 273,
            column: 43
          }
        }],
        line: 270
      },
      "39": {
        loc: {
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 281,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 281,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "40": {
        loc: {
          start: {
            line: 277,
            column: 12
          },
          end: {
            line: 279,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 277,
            column: 12
          },
          end: {
            line: 277,
            column: 46
          }
        }, {
          start: {
            line: 278,
            column: 12
          },
          end: {
            line: 278,
            column: 44
          }
        }, {
          start: {
            line: 279,
            column: 12
          },
          end: {
            line: 279,
            column: 39
          }
        }],
        line: 277
      },
      "41": {
        loc: {
          start: {
            line: 312,
            column: 12
          },
          end: {
            line: 313,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 312,
            column: 12
          },
          end: {
            line: 313,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 312
      },
      "42": {
        loc: {
          start: {
            line: 315,
            column: 16
          },
          end: {
            line: 322,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 315,
            column: 16
          },
          end: {
            line: 322,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 315
      },
      "43": {
        loc: {
          start: {
            line: 317,
            column: 20
          },
          end: {
            line: 319,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 20
          },
          end: {
            line: 319,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "44": {
        loc: {
          start: {
            line: 317,
            column: 24
          },
          end: {
            line: 317,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 317,
            column: 24
          },
          end: {
            line: 317,
            column: 38
          }
        }, {
          start: {
            line: 317,
            column: 42
          },
          end: {
            line: 317,
            column: 84
          }
        }],
        line: 317
      },
      "45": {
        loc: {
          start: {
            line: 334,
            column: 29
          },
          end: {
            line: 334,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 334,
            column: 29
          },
          end: {
            line: 334,
            column: 58
          }
        }, {
          start: {
            line: 334,
            column: 62
          },
          end: {
            line: 334,
            column: 64
          }
        }],
        line: 334
      },
      "46": {
        loc: {
          start: {
            line: 344,
            column: 29
          },
          end: {
            line: 344,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 344,
            column: 29
          },
          end: {
            line: 344,
            column: 58
          }
        }, {
          start: {
            line: 344,
            column: 62
          },
          end: {
            line: 344,
            column: 64
          }
        }],
        line: 344
      },
      "47": {
        loc: {
          start: {
            line: 355,
            column: 8
          },
          end: {
            line: 356,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 355,
            column: 8
          },
          end: {
            line: 356,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 355
      },
      "48": {
        loc: {
          start: {
            line: 358,
            column: 15
          },
          end: {
            line: 358,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 358,
            column: 48
          },
          end: {
            line: 358,
            column: 61
          }
        }, {
          start: {
            line: 358,
            column: 64
          },
          end: {
            line: 358,
            column: 65
          }
        }],
        line: 358
      },
      "49": {
        loc: {
          start: {
            line: 375,
            column: 12
          },
          end: {
            line: 390,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 375,
            column: 12
          },
          end: {
            line: 390,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 375
      },
      "50": {
        loc: {
          start: {
            line: 379,
            column: 35
          },
          end: {
            line: 379,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 379,
            column: 71
          },
          end: {
            line: 379,
            column: 79
          }
        }, {
          start: {
            line: 379,
            column: 82
          },
          end: {
            line: 379,
            column: 91
          }
        }],
        line: 379
      },
      "51": {
        loc: {
          start: {
            line: 418,
            column: 50
          },
          end: {
            line: 418,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 418,
            column: 50
          },
          end: {
            line: 418,
            column: 84
          }
        }, {
          start: {
            line: 418,
            column: 88
          },
          end: {
            line: 418,
            column: 89
          }
        }],
        line: 418
      },
      "52": {
        loc: {
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 442,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 442,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 441
      },
      "53": {
        loc: {
          start: {
            line: 470,
            column: 12
          },
          end: {
            line: 472,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 470,
            column: 12
          },
          end: {
            line: 472,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 470
      },
      "54": {
        loc: {
          start: {
            line: 482,
            column: 12
          },
          end: {
            line: 487,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 482,
            column: 12
          },
          end: {
            line: 487,
            column: 13
          }
        }, {
          start: {
            line: 485,
            column: 17
          },
          end: {
            line: 487,
            column: 13
          }
        }],
        line: 482
      },
      "55": {
        loc: {
          start: {
            line: 498,
            column: 27
          },
          end: {
            line: 498,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 498,
            column: 27
          },
          end: {
            line: 498,
            column: 42
          }
        }, {
          start: {
            line: 498,
            column: 46
          },
          end: {
            line: 498,
            column: 59
          }
        }],
        line: 498
      },
      "56": {
        loc: {
          start: {
            line: 501,
            column: 20
          },
          end: {
            line: 501,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 501,
            column: 20
          },
          end: {
            line: 501,
            column: 26
          }
        }, {
          start: {
            line: 501,
            column: 30
          },
          end: {
            line: 501,
            column: 58
          }
        }],
        line: 501
      },
      "57": {
        loc: {
          start: {
            line: 502,
            column: 26
          },
          end: {
            line: 502,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 502,
            column: 26
          },
          end: {
            line: 502,
            column: 41
          }
        }, {
          start: {
            line: 502,
            column: 45
          },
          end: {
            line: 502,
            column: 52
          }
        }],
        line: 502
      },
      "58": {
        loc: {
          start: {
            line: 520,
            column: 35
          },
          end: {
            line: 520,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 520,
            column: 44
          },
          end: {
            line: 520,
            column: 46
          }
        }],
        line: 520
      },
      "59": {
        loc: {
          start: {
            line: 521,
            column: 4
          },
          end: {
            line: 524,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 521,
            column: 4
          },
          end: {
            line: 524,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 521
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0, 0, 0, 0, 0],
      "37": [0, 0],
      "38": [0, 0, 0, 0],
      "39": [0, 0],
      "40": [0, 0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0],
      "59": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/prompt-card-system/backend/src/monitoring/errorMonitoring.ts",
      mappings: "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",
      names: [],
      sources: ["/workspaces/prompt-card-system/backend/src/monitoring/errorMonitoring.ts"],
      sourcesContent: ["/**\n * Advanced Error Monitoring System\n * \n * Provides comprehensive error tracking, monitoring, and alerting capabilities.\n * Includes error classification, rate limiting, recovery strategies, and integration\n * with external monitoring services.\n */\n\nimport { Request, Response, NextFunction } from 'express';\nimport { getTelemetryManager } from '../telemetry/tracer';\nimport { SpanStatusCode } from '@opentelemetry/api';\nimport * as crypto from 'crypto';\nimport * as fs from 'fs/promises';\nimport * as path from 'path';\n\nexport interface ErrorContext {\n  userId?: string;\n  sessionId?: string;\n  requestId?: string;\n  userAgent?: string;\n  ip?: string;\n  endpoint?: string;\n  method?: string;\n  timestamp: Date;\n  environment: string;\n  serviceVersion: string;\n  additional?: Record<string, any>;\n}\n\nexport interface ErrorFingerprint {\n  hash: string;\n  type: string;\n  message: string;\n  stack?: string;\n  context: ErrorContext;\n}\n\nexport interface ErrorMetrics {\n  count: number;\n  firstSeen: Date;\n  lastSeen: Date;\n  affectedUsers: Set<string>;\n  endpoints: Set<string>;\n  severity: 'low' | 'medium' | 'high' | 'critical';\n  status: 'active' | 'resolved' | 'ignored';\n}\n\nexport interface AlertRule {\n  id: string;\n  name: string;\n  condition: (error: ErrorFingerprint, metrics: ErrorMetrics) => boolean;\n  action: (error: ErrorFingerprint, metrics: ErrorMetrics) => Promise<void>;\n  enabled: boolean;\n  rateLimit?: {\n    maxAlerts: number;\n    timeWindow: number; // in milliseconds\n  };\n}\n\nexport class ErrorMonitoringSystem {\n  private errorStore: Map<string, ErrorMetrics> = new Map();\n  private alertRules: Map<string, AlertRule> = new Map();\n  private recentAlerts: Map<string, number[]> = new Map();\n  private errorLogPath: string;\n  private config: {\n    maxStoredErrors: number;\n    errorRetentionDays: number;\n    enableStackTrace: boolean;\n    enableUserTracking: boolean;\n    enablePerformanceImpact: boolean;\n    alertingEnabled: boolean;\n    environment: string;\n    serviceVersion: string;\n  };\n\n  constructor(options: Partial<typeof ErrorMonitoringSystem.prototype.config> = {}) {\n    this.config = {\n      maxStoredErrors: parseInt(process.env.ERROR_MONITORING_MAX_ERRORS || '10000'),\n      errorRetentionDays: parseInt(process.env.ERROR_MONITORING_RETENTION_DAYS || '30'),\n      enableStackTrace: process.env.ERROR_MONITORING_STACK_TRACE !== 'false',\n      enableUserTracking: process.env.ERROR_MONITORING_USER_TRACKING !== 'false',\n      enablePerformanceImpact: process.env.ERROR_MONITORING_PERFORMANCE !== 'false',\n      alertingEnabled: process.env.ERROR_MONITORING_ALERTS !== 'false',\n      environment: process.env.NODE_ENV || 'development',\n      serviceVersion: process.env.npm_package_version || '1.0.0',\n      ...options,\n    };\n\n    this.errorLogPath = path.join(process.cwd(), 'logs', 'errors');\n    this.initializeAlertRules();\n    this.startMaintenanceTasks();\n  }\n\n  /**\n   * Initialize default alert rules\n   */\n  private initializeAlertRules(): void {\n    // High error rate alert\n    this.addAlertRule({\n      id: 'high-error-rate',\n      name: 'High Error Rate',\n      condition: (error, metrics) => {\n        const recentCount = this.getRecentErrorCount(error.hash, 5 * 60 * 1000); // 5 minutes\n        return recentCount >= 10;\n      },\n      action: async (error, metrics) => {\n        await this.sendAlert('high-error-rate', {\n          title: 'High Error Rate Detected',\n          message: `Error \"${error.message}\" occurred ${metrics.count} times in the last 5 minutes`,\n          severity: 'critical',\n          error,\n          metrics,\n        });\n      },\n      enabled: true,\n      rateLimit: {\n        maxAlerts: 1,\n        timeWindow: 30 * 60 * 1000, // 30 minutes\n      },\n    });\n\n    // New error type alert\n    this.addAlertRule({\n      id: 'new-error-type',\n      name: 'New Error Type',\n      condition: (error, metrics) => metrics.count === 1,\n      action: async (error, metrics) => {\n        await this.sendAlert('new-error-type', {\n          title: 'New Error Type Detected',\n          message: `New error type: ${error.type} - ${error.message}`,\n          severity: 'medium',\n          error,\n          metrics,\n        });\n      },\n      enabled: true,\n      rateLimit: {\n        maxAlerts: 5,\n        timeWindow: 60 * 60 * 1000, // 1 hour\n      },\n    });\n\n    // Critical error alert\n    this.addAlertRule({\n      id: 'critical-error',\n      name: 'Critical Error',\n      condition: (error, metrics) => {\n        const criticalPatterns = [\n          /database.*connection/i,\n          /memory.*leak/i,\n          /cannot.*connect/i,\n          /timeout/i,\n          /out.*of.*memory/i,\n        ];\n        return criticalPatterns.some(pattern => pattern.test(error.message));\n      },\n      action: async (error, metrics) => {\n        await this.sendAlert('critical-error', {\n          title: 'Critical System Error',\n          message: `Critical error detected: ${error.message}`,\n          severity: 'critical',\n          error,\n          metrics,\n        });\n      },\n      enabled: true,\n      rateLimit: {\n        maxAlerts: 3,\n        timeWindow: 15 * 60 * 1000, // 15 minutes\n      },\n    });\n\n    // Multiple users affected alert\n    this.addAlertRule({\n      id: 'multiple-users-affected',\n      name: 'Multiple Users Affected',\n      condition: (error, metrics) => metrics.affectedUsers.size >= 5,\n      action: async (error, metrics) => {\n        await this.sendAlert('multiple-users-affected', {\n          title: 'Multiple Users Affected',\n          message: `Error affecting ${metrics.affectedUsers.size} users: ${error.message}`,\n          severity: 'high',\n          error,\n          metrics,\n        });\n      },\n      enabled: true,\n      rateLimit: {\n        maxAlerts: 2,\n        timeWindow: 20 * 60 * 1000, // 20 minutes\n      },\n    });\n  }\n\n  /**\n   * Create error fingerprint for deduplication\n   */\n  private createFingerprint(error: Error, context: Partial<ErrorContext>): ErrorFingerprint {\n    const errorType = error.constructor.name;\n    const message = error.message || 'Unknown error';\n    const stack = this.config.enableStackTrace ? error.stack : undefined;\n\n    // Create hash for deduplication\n    const hashInput = `${errorType}:${message}:${this.extractStackSignature(error.stack)}`;\n    const hash = crypto.createHash('sha256').update(hashInput).digest('hex').substring(0, 16);\n\n    const fullContext: ErrorContext = {\n      timestamp: new Date(),\n      environment: this.config.environment,\n      serviceVersion: this.config.serviceVersion,\n      ...context,\n    };\n\n    return {\n      hash,\n      type: errorType,\n      message,\n      stack,\n      context: fullContext,\n    };\n  }\n\n  /**\n   * Extract meaningful stack signature for error grouping\n   */\n  private extractStackSignature(stack?: string): string {\n    if (!stack) return '';\n    \n    // Take first few frames excluding node_modules\n    const frames = stack\n      .split('\\n')\n      .slice(1, 6) // Skip error message line, take next 5 frames\n      .filter(frame => !frame.includes('node_modules'))\n      .map(frame => {\n        // Extract file and line number\n        const match = frame.match(/at\\s+.*\\s+\\((.+):(\\d+):\\d+\\)/) || frame.match(/at\\s+(.+):(\\d+):\\d+/);\n        return match ? `${path.basename(match[1])}:${match[2]}` : frame.trim();\n      })\n      .slice(0, 3); // Keep top 3 relevant frames\n\n    return frames.join('|');\n  }\n\n  /**\n   * Record and analyze error\n   */\n  public async recordError(error: Error, context: Partial<ErrorContext> = {}): Promise<void> {\n    try {\n      const fingerprint = this.createFingerprint(error, context);\n      const existingMetrics = this.errorStore.get(fingerprint.hash);\n\n      const metrics: ErrorMetrics = existingMetrics || {\n        count: 0,\n        firstSeen: fingerprint.context.timestamp,\n        lastSeen: fingerprint.context.timestamp,\n        affectedUsers: new Set(),\n        endpoints: new Set(),\n        severity: this.calculateSeverity(error, context),\n        status: 'active',\n      };\n\n      // Update metrics\n      metrics.count++;\n      metrics.lastSeen = fingerprint.context.timestamp;\n      \n      if (context.userId && this.config.enableUserTracking) {\n        metrics.affectedUsers.add(context.userId);\n      }\n      \n      if (context.endpoint) {\n        metrics.endpoints.add(context.endpoint);\n      }\n\n      this.errorStore.set(fingerprint.hash, metrics);\n\n      // Record in telemetry\n      const telemetry = getTelemetryManager();\n      if (telemetry) {\n        telemetry.recordError(fingerprint.type, context.endpoint || 'unknown', fingerprint.message);\n      }\n\n      // Log to file\n      await this.logErrorToFile(fingerprint, metrics);\n\n      // Check alert rules\n      if (this.config.alertingEnabled) {\n        await this.checkAlertRules(fingerprint, metrics);\n      }\n\n      // Enforce storage limits\n      await this.enforceStorageLimits();\n\n    } catch (monitoringError) {\n      console.error('\u274C Error in error monitoring system:', monitoringError);\n      // Don't let monitoring errors break the application\n    }\n  }\n\n  /**\n   * Calculate error severity based on error type and context\n   */\n  private calculateSeverity(error: Error, context: Partial<ErrorContext>): 'low' | 'medium' | 'high' | 'critical' {\n    const errorMessage = error.message.toLowerCase();\n    const errorType = error.constructor.name;\n\n    // Critical patterns\n    if (\n      errorMessage.includes('database') ||\n      errorMessage.includes('connection') ||\n      errorMessage.includes('memory') ||\n      errorType === 'ReferenceError' ||\n      errorType === 'TypeError' && errorMessage.includes('cannot read')\n    ) {\n      return 'critical';\n    }\n\n    // High severity patterns\n    if (\n      errorMessage.includes('timeout') ||\n      errorMessage.includes('unauthorized') ||\n      errorMessage.includes('forbidden') ||\n      errorType === 'ValidationError'\n    ) {\n      return 'high';\n    }\n\n    // Medium severity patterns\n    if (\n      errorMessage.includes('not found') ||\n      errorMessage.includes('invalid') ||\n      errorType === 'SyntaxError'\n    ) {\n      return 'medium';\n    }\n\n    return 'low';\n  }\n\n  /**\n   * Log error to file for persistence\n   */\n  private async logErrorToFile(fingerprint: ErrorFingerprint, metrics: ErrorMetrics): Promise<void> {\n    try {\n      await fs.mkdir(this.errorLogPath, { recursive: true });\n      \n      const logEntry = {\n        timestamp: fingerprint.context.timestamp.toISOString(),\n        hash: fingerprint.hash,\n        type: fingerprint.type,\n        message: fingerprint.message,\n        severity: metrics.severity,\n        count: metrics.count,\n        context: fingerprint.context,\n        stack: fingerprint.stack,\n      };\n\n      const logFile = path.join(\n        this.errorLogPath,\n        `errors-${fingerprint.context.timestamp.toISOString().split('T')[0]}.jsonl`\n      );\n\n      await fs.appendFile(logFile, JSON.stringify(logEntry) + '\\n');\n    } catch (error) {\n      console.error('\u274C Failed to log error to file:', error);\n    }\n  }\n\n  /**\n   * Check and trigger alert rules\n   */\n  private async checkAlertRules(fingerprint: ErrorFingerprint, metrics: ErrorMetrics): Promise<void> {\n    for (const [ruleId, rule] of this.alertRules) {\n      if (!rule.enabled) continue;\n\n      try {\n        if (rule.condition(fingerprint, metrics)) {\n          // Check rate limiting\n          if (rule.rateLimit && !this.canSendAlert(ruleId, rule.rateLimit)) {\n            continue;\n          }\n\n          await rule.action(fingerprint, metrics);\n          this.recordAlert(ruleId);\n        }\n      } catch (error) {\n        console.error(`\u274C Error in alert rule ${ruleId}:`, error);\n      }\n    }\n  }\n\n  /**\n   * Check if alert can be sent based on rate limiting\n   */\n  private canSendAlert(ruleId: string, rateLimit: { maxAlerts: number; timeWindow: number }): boolean {\n    const now = Date.now();\n    const recentAlerts = this.recentAlerts.get(ruleId) || [];\n    \n    // Remove old alerts outside time window\n    const validAlerts = recentAlerts.filter(alertTime => now - alertTime < rateLimit.timeWindow);\n    \n    return validAlerts.length < rateLimit.maxAlerts;\n  }\n\n  /**\n   * Record alert sending\n   */\n  private recordAlert(ruleId: string): void {\n    const now = Date.now();\n    const recentAlerts = this.recentAlerts.get(ruleId) || [];\n    recentAlerts.push(now);\n    this.recentAlerts.set(ruleId, recentAlerts);\n  }\n\n  /**\n   * Get recent error count for a specific error\n   */\n  private getRecentErrorCount(errorHash: string, timeWindow: number): number {\n    // This is a simplified implementation\n    // In production, you'd want to track timestamps for each occurrence\n    const metrics = this.errorStore.get(errorHash);\n    if (!metrics) return 0;\n    \n    const timeSinceLastSeen = Date.now() - metrics.lastSeen.getTime();\n    return timeSinceLastSeen < timeWindow ? metrics.count : 0;\n  }\n\n  /**\n   * Send alert notification\n   */\n  private async sendAlert(type: string, alertData: any): Promise<void> {\n    try {\n      // Log alert\n      console.warn(`\uD83D\uDEA8 ALERT [${type}]: ${alertData.title} - ${alertData.message}`);\n\n      // In production, integrate with external services like:\n      // - Slack\n      // - PagerDuty\n      // - Email\n      // - SMS\n      // - Discord\n      // - Microsoft Teams\n\n      // Example webhook integration\n      if (process.env.ALERT_WEBHOOK_URL) {\n        const webhook = {\n          text: `\uD83D\uDEA8 ${alertData.title}`,\n          attachments: [{\n            color: alertData.severity === 'critical' ? 'danger' : 'warning',\n            fields: [\n              { title: 'Message', value: alertData.message, short: false },\n              { title: 'Environment', value: this.config.environment, short: true },\n              { title: 'Service', value: 'prompt-card-backend', short: true },\n              { title: 'Time', value: new Date().toISOString(), short: true },\n            ],\n          }],\n        };\n\n        // Send webhook (implementation would go here)\n        console.log('\uD83D\uDCE4 Sending webhook alert:', webhook);\n      }\n\n    } catch (error) {\n      console.error('\u274C Failed to send alert:', error);\n    }\n  }\n\n  /**\n   * Add custom alert rule\n   */\n  public addAlertRule(rule: AlertRule): void {\n    this.alertRules.set(rule.id, rule);\n  }\n\n  /**\n   * Remove alert rule\n   */\n  public removeAlertRule(ruleId: string): boolean {\n    return this.alertRules.delete(ruleId);\n  }\n\n  /**\n   * Get error statistics\n   */\n  public getErrorStatistics(): {\n    totalErrors: number;\n    uniqueErrors: number;\n    errorsByType: Record<string, number>;\n    errorsBySeverity: Record<string, number>;\n    topErrors: Array<{ hash: string; count: number; message: string; severity: string }>;\n  } {\n    const totalErrors = Array.from(this.errorStore.values()).reduce((sum, metrics) => sum + metrics.count, 0);\n    const uniqueErrors = this.errorStore.size;\n    \n    const errorsByType: Record<string, number> = {};\n    const errorsBySeverity: Record<string, number> = {};\n    \n    // This is simplified - in production you'd store error types\n    for (const [hash, metrics] of this.errorStore) {\n      errorsBySeverity[metrics.severity] = (errorsBySeverity[metrics.severity] || 0) + metrics.count;\n    }\n\n    const topErrors = Array.from(this.errorStore.entries())\n      .sort(([, a], [, b]) => b.count - a.count)\n      .slice(0, 10)\n      .map(([hash, metrics]) => ({\n        hash,\n        count: metrics.count,\n        message: 'Error message would be stored separately', // Simplified\n        severity: metrics.severity,\n      }));\n\n    return {\n      totalErrors,\n      uniqueErrors,\n      errorsByType,\n      errorsBySeverity,\n      topErrors,\n    };\n  }\n\n  /**\n   * Enforce storage limits to prevent memory issues\n   */\n  private async enforceStorageLimits(): Promise<void> {\n    if (this.errorStore.size <= this.config.maxStoredErrors) return;\n\n    // Remove oldest errors\n    const sortedErrors = Array.from(this.errorStore.entries())\n      .sort(([, a], [, b]) => a.lastSeen.getTime() - b.lastSeen.getTime());\n\n    const toRemove = sortedErrors.slice(0, sortedErrors.length - this.config.maxStoredErrors);\n    \n    for (const [hash] of toRemove) {\n      this.errorStore.delete(hash);\n    }\n  }\n\n  /**\n   * Start maintenance tasks\n   */\n  private startMaintenanceTasks(): void {\n    // Clean up old errors every hour\n    setInterval(() => {\n      this.cleanupOldErrors();\n    }, 60 * 60 * 1000);\n\n    // Clean up old alerts every 30 minutes\n    setInterval(() => {\n      this.cleanupOldAlerts();\n    }, 30 * 60 * 1000);\n  }\n\n  /**\n   * Clean up old errors based on retention policy\n   */\n  private cleanupOldErrors(): void {\n    const cutoffTime = new Date(Date.now() - this.config.errorRetentionDays * 24 * 60 * 60 * 1000);\n    \n    for (const [hash, metrics] of this.errorStore) {\n      if (metrics.lastSeen < cutoffTime) {\n        this.errorStore.delete(hash);\n      }\n    }\n  }\n\n  /**\n   * Clean up old alert records\n   */\n  private cleanupOldAlerts(): void {\n    const now = Date.now();\n    \n    for (const [ruleId, alerts] of this.recentAlerts) {\n      const validAlerts = alerts.filter(alertTime => now - alertTime < 24 * 60 * 60 * 1000); // Keep 24 hours\n      \n      if (validAlerts.length === 0) {\n        this.recentAlerts.delete(ruleId);\n      } else {\n        this.recentAlerts.set(ruleId, validAlerts);\n      }\n    }\n  }\n\n  /**\n   * Express middleware for automatic error monitoring\n   */\n  public middleware() {\n    return (error: Error, req: Request, res: Response, next: NextFunction) => {\n      // Extract context from request\n      const context: Partial<ErrorContext> = {\n        userId: (req as any).user?.id,\n        sessionId: req.session?.id || req.sessionID,\n        requestId: req.headers['x-request-id'] as string,\n        userAgent: req.headers['user-agent'],\n        ip: req.ip || req.connection.remoteAddress,\n        endpoint: req.originalUrl || req.url,\n        method: req.method,\n      };\n\n      // Record error asynchronously\n      this.recordError(error, context).catch(err => {\n        console.error('\u274C Failed to record error in monitoring system:', err);\n      });\n\n      // Continue with normal error handling\n      next(error);\n    };\n  }\n}\n\n// Singleton instance\nlet errorMonitoringSystem: ErrorMonitoringSystem | null = null;\n\n/**\n * Initialize error monitoring system\n */\nexport function initializeErrorMonitoring(config: any = {}): ErrorMonitoringSystem {\n  if (!errorMonitoringSystem) {\n    errorMonitoringSystem = new ErrorMonitoringSystem(config);\n    console.log('\uD83D\uDD0D Error Monitoring System initialized');\n  }\n  return errorMonitoringSystem;\n}\n\n/**\n * Get error monitoring system instance\n */\nexport function getErrorMonitoringSystem(): ErrorMonitoringSystem | null {\n  return errorMonitoringSystem;\n}\n\nexport default ErrorMonitoringSystem;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "86adaa564f065e90399341f0e1c6a809b618f1fa"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2a07z5mqrf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2a07z5mqrf();
var __createBinding =
/* istanbul ignore next */
(cov_2a07z5mqrf().s[0]++,
/* istanbul ignore next */
(cov_2a07z5mqrf().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2a07z5mqrf().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_2a07z5mqrf().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_2a07z5mqrf().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2a07z5mqrf().f[0]++;
  cov_2a07z5mqrf().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2a07z5mqrf().b[2][0]++;
    cov_2a07z5mqrf().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2a07z5mqrf().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_2a07z5mqrf().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_2a07z5mqrf().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_2a07z5mqrf().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_2a07z5mqrf().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_2a07z5mqrf().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_2a07z5mqrf().b[5][1]++,
  /* istanbul ignore next */
  (cov_2a07z5mqrf().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_2a07z5mqrf().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_2a07z5mqrf().b[3][0]++;
    cov_2a07z5mqrf().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_2a07z5mqrf().f[1]++;
        cov_2a07z5mqrf().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_2a07z5mqrf().b[3][1]++;
  }
  cov_2a07z5mqrf().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_2a07z5mqrf().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2a07z5mqrf().f[2]++;
  cov_2a07z5mqrf().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2a07z5mqrf().b[7][0]++;
    cov_2a07z5mqrf().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2a07z5mqrf().b[7][1]++;
  }
  cov_2a07z5mqrf().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_2a07z5mqrf().s[11]++,
/* istanbul ignore next */
(cov_2a07z5mqrf().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_2a07z5mqrf().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_2a07z5mqrf().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_2a07z5mqrf().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_2a07z5mqrf().f[3]++;
  cov_2a07z5mqrf().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_2a07z5mqrf().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_2a07z5mqrf().f[4]++;
  cov_2a07z5mqrf().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_2a07z5mqrf().s[14]++,
/* istanbul ignore next */
(cov_2a07z5mqrf().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_2a07z5mqrf().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_2a07z5mqrf().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_2a07z5mqrf().f[5]++;
  cov_2a07z5mqrf().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_2a07z5mqrf().f[6]++;
    cov_2a07z5mqrf().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_2a07z5mqrf().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_2a07z5mqrf().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_2a07z5mqrf().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_2a07z5mqrf().s[17]++, []);
      /* istanbul ignore next */
      cov_2a07z5mqrf().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_2a07z5mqrf().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_2a07z5mqrf().b[12][0]++;
          cov_2a07z5mqrf().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_2a07z5mqrf().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_2a07z5mqrf().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_2a07z5mqrf().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_2a07z5mqrf().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_2a07z5mqrf().f[8]++;
    cov_2a07z5mqrf().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_2a07z5mqrf().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_2a07z5mqrf().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_2a07z5mqrf().b[13][0]++;
      cov_2a07z5mqrf().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_2a07z5mqrf().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_2a07z5mqrf().s[26]++, {});
    /* istanbul ignore next */
    cov_2a07z5mqrf().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_2a07z5mqrf().b[15][0]++;
      cov_2a07z5mqrf().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_2a07z5mqrf().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_2a07z5mqrf().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_2a07z5mqrf().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_2a07z5mqrf().b[16][0]++;
          cov_2a07z5mqrf().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_2a07z5mqrf().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_2a07z5mqrf().b[15][1]++;
    }
    cov_2a07z5mqrf().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_2a07z5mqrf().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_2a07z5mqrf().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2a07z5mqrf().s[36]++;
exports.ErrorMonitoringSystem = void 0;
/* istanbul ignore next */
cov_2a07z5mqrf().s[37]++;
exports.initializeErrorMonitoring = initializeErrorMonitoring;
/* istanbul ignore next */
cov_2a07z5mqrf().s[38]++;
exports.getErrorMonitoringSystem = getErrorMonitoringSystem;
const tracer_1 =
/* istanbul ignore next */
(cov_2a07z5mqrf().s[39]++, require("../telemetry/tracer"));
const crypto =
/* istanbul ignore next */
(cov_2a07z5mqrf().s[40]++, __importStar(require("crypto")));
const fs =
/* istanbul ignore next */
(cov_2a07z5mqrf().s[41]++, __importStar(require("fs/promises")));
const path =
/* istanbul ignore next */
(cov_2a07z5mqrf().s[42]++, __importStar(require("path")));
class ErrorMonitoringSystem {
  constructor(options =
  /* istanbul ignore next */
  (cov_2a07z5mqrf().b[17][0]++, {})) {
    /* istanbul ignore next */
    cov_2a07z5mqrf().f[9]++;
    cov_2a07z5mqrf().s[43]++;
    this.errorStore = new Map();
    /* istanbul ignore next */
    cov_2a07z5mqrf().s[44]++;
    this.alertRules = new Map();
    /* istanbul ignore next */
    cov_2a07z5mqrf().s[45]++;
    this.recentAlerts = new Map();
    /* istanbul ignore next */
    cov_2a07z5mqrf().s[46]++;
    this.config = {
      maxStoredErrors: parseInt(
      /* istanbul ignore next */
      (cov_2a07z5mqrf().b[18][0]++, process.env.ERROR_MONITORING_MAX_ERRORS) ||
      /* istanbul ignore next */
      (cov_2a07z5mqrf().b[18][1]++, '10000')),
      errorRetentionDays: parseInt(
      /* istanbul ignore next */
      (cov_2a07z5mqrf().b[19][0]++, process.env.ERROR_MONITORING_RETENTION_DAYS) ||
      /* istanbul ignore next */
      (cov_2a07z5mqrf().b[19][1]++, '30')),
      enableStackTrace: process.env.ERROR_MONITORING_STACK_TRACE !== 'false',
      enableUserTracking: process.env.ERROR_MONITORING_USER_TRACKING !== 'false',
      enablePerformanceImpact: process.env.ERROR_MONITORING_PERFORMANCE !== 'false',
      alertingEnabled: process.env.ERROR_MONITORING_ALERTS !== 'false',
      environment:
      /* istanbul ignore next */
      (cov_2a07z5mqrf().b[20][0]++, process.env.NODE_ENV) ||
      /* istanbul ignore next */
      (cov_2a07z5mqrf().b[20][1]++, 'development'),
      serviceVersion:
      /* istanbul ignore next */
      (cov_2a07z5mqrf().b[21][0]++, process.env.npm_package_version) ||
      /* istanbul ignore next */
      (cov_2a07z5mqrf().b[21][1]++, '1.0.0'),
      ...options
    };
    /* istanbul ignore next */
    cov_2a07z5mqrf().s[47]++;
    this.errorLogPath = path.join(process.cwd(), 'logs', 'errors');
    /* istanbul ignore next */
    cov_2a07z5mqrf().s[48]++;
    this.initializeAlertRules();
    /* istanbul ignore next */
    cov_2a07z5mqrf().s[49]++;
    this.startMaintenanceTasks();
  }
  /**
   * Initialize default alert rules
   */
  initializeAlertRules() {
    /* istanbul ignore next */
    cov_2a07z5mqrf().f[10]++;
    cov_2a07z5mqrf().s[50]++;
    // High error rate alert
    this.addAlertRule({
      id: 'high-error-rate',
      name: 'High Error Rate',
      condition: (error, metrics) => {
        /* istanbul ignore next */
        cov_2a07z5mqrf().f[11]++;
        const recentCount =
        /* istanbul ignore next */
        (cov_2a07z5mqrf().s[51]++, this.getRecentErrorCount(error.hash, 5 * 60 * 1000)); // 5 minutes
        /* istanbul ignore next */
        cov_2a07z5mqrf().s[52]++;
        return recentCount >= 10;
      },
      action: async (error, metrics) => {
        /* istanbul ignore next */
        cov_2a07z5mqrf().f[12]++;
        cov_2a07z5mqrf().s[53]++;
        await this.sendAlert('high-error-rate', {
          title: 'High Error Rate Detected',
          message: `Error "${error.message}" occurred ${metrics.count} times in the last 5 minutes`,
          severity: 'critical',
          error,
          metrics
        });
      },
      enabled: true,
      rateLimit: {
        maxAlerts: 1,
        timeWindow: 30 * 60 * 1000 // 30 minutes
      }
    });
    // New error type alert
    /* istanbul ignore next */
    cov_2a07z5mqrf().s[54]++;
    this.addAlertRule({
      id: 'new-error-type',
      name: 'New Error Type',
      condition: (error, metrics) => {
        /* istanbul ignore next */
        cov_2a07z5mqrf().f[13]++;
        cov_2a07z5mqrf().s[55]++;
        return metrics.count === 1;
      },
      action: async (error, metrics) => {
        /* istanbul ignore next */
        cov_2a07z5mqrf().f[14]++;
        cov_2a07z5mqrf().s[56]++;
        await this.sendAlert('new-error-type', {
          title: 'New Error Type Detected',
          message: `New error type: ${error.type} - ${error.message}`,
          severity: 'medium',
          error,
          metrics
        });
      },
      enabled: true,
      rateLimit: {
        maxAlerts: 5,
        timeWindow: 60 * 60 * 1000 // 1 hour
      }
    });
    // Critical error alert
    /* istanbul ignore next */
    cov_2a07z5mqrf().s[57]++;
    this.addAlertRule({
      id: 'critical-error',
      name: 'Critical Error',
      condition: (error, metrics) => {
        /* istanbul ignore next */
        cov_2a07z5mqrf().f[15]++;
        const criticalPatterns =
        /* istanbul ignore next */
        (cov_2a07z5mqrf().s[58]++, [/database.*connection/i, /memory.*leak/i, /cannot.*connect/i, /timeout/i, /out.*of.*memory/i]);
        /* istanbul ignore next */
        cov_2a07z5mqrf().s[59]++;
        return criticalPatterns.some(pattern => {
          /* istanbul ignore next */
          cov_2a07z5mqrf().f[16]++;
          cov_2a07z5mqrf().s[60]++;
          return pattern.test(error.message);
        });
      },
      action: async (error, metrics) => {
        /* istanbul ignore next */
        cov_2a07z5mqrf().f[17]++;
        cov_2a07z5mqrf().s[61]++;
        await this.sendAlert('critical-error', {
          title: 'Critical System Error',
          message: `Critical error detected: ${error.message}`,
          severity: 'critical',
          error,
          metrics
        });
      },
      enabled: true,
      rateLimit: {
        maxAlerts: 3,
        timeWindow: 15 * 60 * 1000 // 15 minutes
      }
    });
    // Multiple users affected alert
    /* istanbul ignore next */
    cov_2a07z5mqrf().s[62]++;
    this.addAlertRule({
      id: 'multiple-users-affected',
      name: 'Multiple Users Affected',
      condition: (error, metrics) => {
        /* istanbul ignore next */
        cov_2a07z5mqrf().f[18]++;
        cov_2a07z5mqrf().s[63]++;
        return metrics.affectedUsers.size >= 5;
      },
      action: async (error, metrics) => {
        /* istanbul ignore next */
        cov_2a07z5mqrf().f[19]++;
        cov_2a07z5mqrf().s[64]++;
        await this.sendAlert('multiple-users-affected', {
          title: 'Multiple Users Affected',
          message: `Error affecting ${metrics.affectedUsers.size} users: ${error.message}`,
          severity: 'high',
          error,
          metrics
        });
      },
      enabled: true,
      rateLimit: {
        maxAlerts: 2,
        timeWindow: 20 * 60 * 1000 // 20 minutes
      }
    });
  }
  /**
   * Create error fingerprint for deduplication
   */
  createFingerprint(error, context) {
    /* istanbul ignore next */
    cov_2a07z5mqrf().f[20]++;
    const errorType =
    /* istanbul ignore next */
    (cov_2a07z5mqrf().s[65]++, error.constructor.name);
    const message =
    /* istanbul ignore next */
    (cov_2a07z5mqrf().s[66]++,
    /* istanbul ignore next */
    (cov_2a07z5mqrf().b[22][0]++, error.message) ||
    /* istanbul ignore next */
    (cov_2a07z5mqrf().b[22][1]++, 'Unknown error'));
    const stack =
    /* istanbul ignore next */
    (cov_2a07z5mqrf().s[67]++, this.config.enableStackTrace ?
    /* istanbul ignore next */
    (cov_2a07z5mqrf().b[23][0]++, error.stack) :
    /* istanbul ignore next */
    (cov_2a07z5mqrf().b[23][1]++, undefined));
    // Create hash for deduplication
    const hashInput =
    /* istanbul ignore next */
    (cov_2a07z5mqrf().s[68]++, `${errorType}:${message}:${this.extractStackSignature(error.stack)}`);
    const hash =
    /* istanbul ignore next */
    (cov_2a07z5mqrf().s[69]++, crypto.createHash('sha256').update(hashInput).digest('hex').substring(0, 16));
    const fullContext =
    /* istanbul ignore next */
    (cov_2a07z5mqrf().s[70]++, {
      timestamp: new Date(),
      environment: this.config.environment,
      serviceVersion: this.config.serviceVersion,
      ...context
    });
    /* istanbul ignore next */
    cov_2a07z5mqrf().s[71]++;
    return {
      hash,
      type: errorType,
      message,
      stack,
      context: fullContext
    };
  }
  /**
   * Extract meaningful stack signature for error grouping
   */
  extractStackSignature(stack) {
    /* istanbul ignore next */
    cov_2a07z5mqrf().f[21]++;
    cov_2a07z5mqrf().s[72]++;
    if (!stack) {
      /* istanbul ignore next */
      cov_2a07z5mqrf().b[24][0]++;
      cov_2a07z5mqrf().s[73]++;
      return '';
    } else
    /* istanbul ignore next */
    {
      cov_2a07z5mqrf().b[24][1]++;
    }
    // Take first few frames excluding node_modules
    const frames =
    /* istanbul ignore next */
    (cov_2a07z5mqrf().s[74]++, stack.split('\n').slice(1, 6) // Skip error message line, take next 5 frames
    .filter(frame => {
      /* istanbul ignore next */
      cov_2a07z5mqrf().f[22]++;
      cov_2a07z5mqrf().s[75]++;
      return !frame.includes('node_modules');
    }).map(frame => {
      /* istanbul ignore next */
      cov_2a07z5mqrf().f[23]++;
      // Extract file and line number
      const match =
      /* istanbul ignore next */
      (cov_2a07z5mqrf().s[76]++,
      /* istanbul ignore next */
      (cov_2a07z5mqrf().b[25][0]++, frame.match(/at\s+.*\s+\((.+):(\d+):\d+\)/)) ||
      /* istanbul ignore next */
      (cov_2a07z5mqrf().b[25][1]++, frame.match(/at\s+(.+):(\d+):\d+/)));
      /* istanbul ignore next */
      cov_2a07z5mqrf().s[77]++;
      return match ?
      /* istanbul ignore next */
      (cov_2a07z5mqrf().b[26][0]++, `${path.basename(match[1])}:${match[2]}`) :
      /* istanbul ignore next */
      (cov_2a07z5mqrf().b[26][1]++, frame.trim());
    }).slice(0, 3)); // Keep top 3 relevant frames
    /* istanbul ignore next */
    cov_2a07z5mqrf().s[78]++;
    return frames.join('|');
  }
  /**
   * Record and analyze error
   */
  async recordError(error, context =
  /* istanbul ignore next */
  (cov_2a07z5mqrf().b[27][0]++, {})) {
    /* istanbul ignore next */
    cov_2a07z5mqrf().f[24]++;
    cov_2a07z5mqrf().s[79]++;
    try {
      const fingerprint =
      /* istanbul ignore next */
      (cov_2a07z5mqrf().s[80]++, this.createFingerprint(error, context));
      const existingMetrics =
      /* istanbul ignore next */
      (cov_2a07z5mqrf().s[81]++, this.errorStore.get(fingerprint.hash));
      const metrics =
      /* istanbul ignore next */
      (cov_2a07z5mqrf().s[82]++,
      /* istanbul ignore next */
      (cov_2a07z5mqrf().b[28][0]++, existingMetrics) ||
      /* istanbul ignore next */
      (cov_2a07z5mqrf().b[28][1]++, {
        count: 0,
        firstSeen: fingerprint.context.timestamp,
        lastSeen: fingerprint.context.timestamp,
        affectedUsers: new Set(),
        endpoints: new Set(),
        severity: this.calculateSeverity(error, context),
        status: 'active'
      }));
      // Update metrics
      /* istanbul ignore next */
      cov_2a07z5mqrf().s[83]++;
      metrics.count++;
      /* istanbul ignore next */
      cov_2a07z5mqrf().s[84]++;
      metrics.lastSeen = fingerprint.context.timestamp;
      /* istanbul ignore next */
      cov_2a07z5mqrf().s[85]++;
      if (
      /* istanbul ignore next */
      (cov_2a07z5mqrf().b[30][0]++, context.userId) &&
      /* istanbul ignore next */
      (cov_2a07z5mqrf().b[30][1]++, this.config.enableUserTracking)) {
        /* istanbul ignore next */
        cov_2a07z5mqrf().b[29][0]++;
        cov_2a07z5mqrf().s[86]++;
        metrics.affectedUsers.add(context.userId);
      } else
      /* istanbul ignore next */
      {
        cov_2a07z5mqrf().b[29][1]++;
      }
      cov_2a07z5mqrf().s[87]++;
      if (context.endpoint) {
        /* istanbul ignore next */
        cov_2a07z5mqrf().b[31][0]++;
        cov_2a07z5mqrf().s[88]++;
        metrics.endpoints.add(context.endpoint);
      } else
      /* istanbul ignore next */
      {
        cov_2a07z5mqrf().b[31][1]++;
      }
      cov_2a07z5mqrf().s[89]++;
      this.errorStore.set(fingerprint.hash, metrics);
      // Record in telemetry
      const telemetry =
      /* istanbul ignore next */
      (cov_2a07z5mqrf().s[90]++, (0, tracer_1.getTelemetryManager)());
      /* istanbul ignore next */
      cov_2a07z5mqrf().s[91]++;
      if (telemetry) {
        /* istanbul ignore next */
        cov_2a07z5mqrf().b[32][0]++;
        cov_2a07z5mqrf().s[92]++;
        telemetry.recordError(fingerprint.type,
        /* istanbul ignore next */
        (cov_2a07z5mqrf().b[33][0]++, context.endpoint) ||
        /* istanbul ignore next */
        (cov_2a07z5mqrf().b[33][1]++, 'unknown'), fingerprint.message);
      } else
      /* istanbul ignore next */
      {
        cov_2a07z5mqrf().b[32][1]++;
      }
      // Log to file
      cov_2a07z5mqrf().s[93]++;
      await this.logErrorToFile(fingerprint, metrics);
      // Check alert rules
      /* istanbul ignore next */
      cov_2a07z5mqrf().s[94]++;
      if (this.config.alertingEnabled) {
        /* istanbul ignore next */
        cov_2a07z5mqrf().b[34][0]++;
        cov_2a07z5mqrf().s[95]++;
        await this.checkAlertRules(fingerprint, metrics);
      } else
      /* istanbul ignore next */
      {
        cov_2a07z5mqrf().b[34][1]++;
      }
      // Enforce storage limits
      cov_2a07z5mqrf().s[96]++;
      await this.enforceStorageLimits();
    } catch (monitoringError) {
      /* istanbul ignore next */
      cov_2a07z5mqrf().s[97]++;
      console.error('❌ Error in error monitoring system:', monitoringError);
      // Don't let monitoring errors break the application
    }
  }
  /**
   * Calculate error severity based on error type and context
   */
  calculateSeverity(error, context) {
    /* istanbul ignore next */
    cov_2a07z5mqrf().f[25]++;
    const errorMessage =
    /* istanbul ignore next */
    (cov_2a07z5mqrf().s[98]++, error.message.toLowerCase());
    const errorType =
    /* istanbul ignore next */
    (cov_2a07z5mqrf().s[99]++, error.constructor.name);
    // Critical patterns
    /* istanbul ignore next */
    cov_2a07z5mqrf().s[100]++;
    if (
    /* istanbul ignore next */
    (cov_2a07z5mqrf().b[36][0]++, errorMessage.includes('database')) ||
    /* istanbul ignore next */
    (cov_2a07z5mqrf().b[36][1]++, errorMessage.includes('connection')) ||
    /* istanbul ignore next */
    (cov_2a07z5mqrf().b[36][2]++, errorMessage.includes('memory')) ||
    /* istanbul ignore next */
    (cov_2a07z5mqrf().b[36][3]++, errorType === 'ReferenceError') ||
    /* istanbul ignore next */
    (cov_2a07z5mqrf().b[36][4]++, errorType === 'TypeError') &&
    /* istanbul ignore next */
    (cov_2a07z5mqrf().b[36][5]++, errorMessage.includes('cannot read'))) {
      /* istanbul ignore next */
      cov_2a07z5mqrf().b[35][0]++;
      cov_2a07z5mqrf().s[101]++;
      return 'critical';
    } else
    /* istanbul ignore next */
    {
      cov_2a07z5mqrf().b[35][1]++;
    }
    // High severity patterns
    cov_2a07z5mqrf().s[102]++;
    if (
    /* istanbul ignore next */
    (cov_2a07z5mqrf().b[38][0]++, errorMessage.includes('timeout')) ||
    /* istanbul ignore next */
    (cov_2a07z5mqrf().b[38][1]++, errorMessage.includes('unauthorized')) ||
    /* istanbul ignore next */
    (cov_2a07z5mqrf().b[38][2]++, errorMessage.includes('forbidden')) ||
    /* istanbul ignore next */
    (cov_2a07z5mqrf().b[38][3]++, errorType === 'ValidationError')) {
      /* istanbul ignore next */
      cov_2a07z5mqrf().b[37][0]++;
      cov_2a07z5mqrf().s[103]++;
      return 'high';
    } else
    /* istanbul ignore next */
    {
      cov_2a07z5mqrf().b[37][1]++;
    }
    // Medium severity patterns
    cov_2a07z5mqrf().s[104]++;
    if (
    /* istanbul ignore next */
    (cov_2a07z5mqrf().b[40][0]++, errorMessage.includes('not found')) ||
    /* istanbul ignore next */
    (cov_2a07z5mqrf().b[40][1]++, errorMessage.includes('invalid')) ||
    /* istanbul ignore next */
    (cov_2a07z5mqrf().b[40][2]++, errorType === 'SyntaxError')) {
      /* istanbul ignore next */
      cov_2a07z5mqrf().b[39][0]++;
      cov_2a07z5mqrf().s[105]++;
      return 'medium';
    } else
    /* istanbul ignore next */
    {
      cov_2a07z5mqrf().b[39][1]++;
    }
    cov_2a07z5mqrf().s[106]++;
    return 'low';
  }
  /**
   * Log error to file for persistence
   */
  async logErrorToFile(fingerprint, metrics) {
    /* istanbul ignore next */
    cov_2a07z5mqrf().f[26]++;
    cov_2a07z5mqrf().s[107]++;
    try {
      /* istanbul ignore next */
      cov_2a07z5mqrf().s[108]++;
      await fs.mkdir(this.errorLogPath, {
        recursive: true
      });
      const logEntry =
      /* istanbul ignore next */
      (cov_2a07z5mqrf().s[109]++, {
        timestamp: fingerprint.context.timestamp.toISOString(),
        hash: fingerprint.hash,
        type: fingerprint.type,
        message: fingerprint.message,
        severity: metrics.severity,
        count: metrics.count,
        context: fingerprint.context,
        stack: fingerprint.stack
      });
      const logFile =
      /* istanbul ignore next */
      (cov_2a07z5mqrf().s[110]++, path.join(this.errorLogPath, `errors-${fingerprint.context.timestamp.toISOString().split('T')[0]}.jsonl`));
      /* istanbul ignore next */
      cov_2a07z5mqrf().s[111]++;
      await fs.appendFile(logFile, JSON.stringify(logEntry) + '\n');
    } catch (error) {
      /* istanbul ignore next */
      cov_2a07z5mqrf().s[112]++;
      console.error('❌ Failed to log error to file:', error);
    }
  }
  /**
   * Check and trigger alert rules
   */
  async checkAlertRules(fingerprint, metrics) {
    /* istanbul ignore next */
    cov_2a07z5mqrf().f[27]++;
    cov_2a07z5mqrf().s[113]++;
    for (const [ruleId, rule] of this.alertRules) {
      /* istanbul ignore next */
      cov_2a07z5mqrf().s[114]++;
      if (!rule.enabled) {
        /* istanbul ignore next */
        cov_2a07z5mqrf().b[41][0]++;
        cov_2a07z5mqrf().s[115]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_2a07z5mqrf().b[41][1]++;
      }
      cov_2a07z5mqrf().s[116]++;
      try {
        /* istanbul ignore next */
        cov_2a07z5mqrf().s[117]++;
        if (rule.condition(fingerprint, metrics)) {
          /* istanbul ignore next */
          cov_2a07z5mqrf().b[42][0]++;
          cov_2a07z5mqrf().s[118]++;
          // Check rate limiting
          if (
          /* istanbul ignore next */
          (cov_2a07z5mqrf().b[44][0]++, rule.rateLimit) &&
          /* istanbul ignore next */
          (cov_2a07z5mqrf().b[44][1]++, !this.canSendAlert(ruleId, rule.rateLimit))) {
            /* istanbul ignore next */
            cov_2a07z5mqrf().b[43][0]++;
            cov_2a07z5mqrf().s[119]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_2a07z5mqrf().b[43][1]++;
          }
          cov_2a07z5mqrf().s[120]++;
          await rule.action(fingerprint, metrics);
          /* istanbul ignore next */
          cov_2a07z5mqrf().s[121]++;
          this.recordAlert(ruleId);
        } else
        /* istanbul ignore next */
        {
          cov_2a07z5mqrf().b[42][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_2a07z5mqrf().s[122]++;
        console.error(`❌ Error in alert rule ${ruleId}:`, error);
      }
    }
  }
  /**
   * Check if alert can be sent based on rate limiting
   */
  canSendAlert(ruleId, rateLimit) {
    /* istanbul ignore next */
    cov_2a07z5mqrf().f[28]++;
    const now =
    /* istanbul ignore next */
    (cov_2a07z5mqrf().s[123]++, Date.now());
    const recentAlerts =
    /* istanbul ignore next */
    (cov_2a07z5mqrf().s[124]++,
    /* istanbul ignore next */
    (cov_2a07z5mqrf().b[45][0]++, this.recentAlerts.get(ruleId)) ||
    /* istanbul ignore next */
    (cov_2a07z5mqrf().b[45][1]++, []));
    // Remove old alerts outside time window
    const validAlerts =
    /* istanbul ignore next */
    (cov_2a07z5mqrf().s[125]++, recentAlerts.filter(alertTime => {
      /* istanbul ignore next */
      cov_2a07z5mqrf().f[29]++;
      cov_2a07z5mqrf().s[126]++;
      return now - alertTime < rateLimit.timeWindow;
    }));
    /* istanbul ignore next */
    cov_2a07z5mqrf().s[127]++;
    return validAlerts.length < rateLimit.maxAlerts;
  }
  /**
   * Record alert sending
   */
  recordAlert(ruleId) {
    /* istanbul ignore next */
    cov_2a07z5mqrf().f[30]++;
    const now =
    /* istanbul ignore next */
    (cov_2a07z5mqrf().s[128]++, Date.now());
    const recentAlerts =
    /* istanbul ignore next */
    (cov_2a07z5mqrf().s[129]++,
    /* istanbul ignore next */
    (cov_2a07z5mqrf().b[46][0]++, this.recentAlerts.get(ruleId)) ||
    /* istanbul ignore next */
    (cov_2a07z5mqrf().b[46][1]++, []));
    /* istanbul ignore next */
    cov_2a07z5mqrf().s[130]++;
    recentAlerts.push(now);
    /* istanbul ignore next */
    cov_2a07z5mqrf().s[131]++;
    this.recentAlerts.set(ruleId, recentAlerts);
  }
  /**
   * Get recent error count for a specific error
   */
  getRecentErrorCount(errorHash, timeWindow) {
    /* istanbul ignore next */
    cov_2a07z5mqrf().f[31]++;
    // This is a simplified implementation
    // In production, you'd want to track timestamps for each occurrence
    const metrics =
    /* istanbul ignore next */
    (cov_2a07z5mqrf().s[132]++, this.errorStore.get(errorHash));
    /* istanbul ignore next */
    cov_2a07z5mqrf().s[133]++;
    if (!metrics) {
      /* istanbul ignore next */
      cov_2a07z5mqrf().b[47][0]++;
      cov_2a07z5mqrf().s[134]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_2a07z5mqrf().b[47][1]++;
    }
    const timeSinceLastSeen =
    /* istanbul ignore next */
    (cov_2a07z5mqrf().s[135]++, Date.now() - metrics.lastSeen.getTime());
    /* istanbul ignore next */
    cov_2a07z5mqrf().s[136]++;
    return timeSinceLastSeen < timeWindow ?
    /* istanbul ignore next */
    (cov_2a07z5mqrf().b[48][0]++, metrics.count) :
    /* istanbul ignore next */
    (cov_2a07z5mqrf().b[48][1]++, 0);
  }
  /**
   * Send alert notification
   */
  async sendAlert(type, alertData) {
    /* istanbul ignore next */
    cov_2a07z5mqrf().f[32]++;
    cov_2a07z5mqrf().s[137]++;
    try {
      /* istanbul ignore next */
      cov_2a07z5mqrf().s[138]++;
      // Log alert
      console.warn(`🚨 ALERT [${type}]: ${alertData.title} - ${alertData.message}`);
      // In production, integrate with external services like:
      // - Slack
      // - PagerDuty
      // - Email
      // - SMS
      // - Discord
      // - Microsoft Teams
      // Example webhook integration
      /* istanbul ignore next */
      cov_2a07z5mqrf().s[139]++;
      if (process.env.ALERT_WEBHOOK_URL) {
        /* istanbul ignore next */
        cov_2a07z5mqrf().b[49][0]++;
        const webhook =
        /* istanbul ignore next */
        (cov_2a07z5mqrf().s[140]++, {
          text: `🚨 ${alertData.title}`,
          attachments: [{
            color: alertData.severity === 'critical' ?
            /* istanbul ignore next */
            (cov_2a07z5mqrf().b[50][0]++, 'danger') :
            /* istanbul ignore next */
            (cov_2a07z5mqrf().b[50][1]++, 'warning'),
            fields: [{
              title: 'Message',
              value: alertData.message,
              short: false
            }, {
              title: 'Environment',
              value: this.config.environment,
              short: true
            }, {
              title: 'Service',
              value: 'prompt-card-backend',
              short: true
            }, {
              title: 'Time',
              value: new Date().toISOString(),
              short: true
            }]
          }]
        });
        // Send webhook (implementation would go here)
        /* istanbul ignore next */
        cov_2a07z5mqrf().s[141]++;
        console.log('📤 Sending webhook alert:', webhook);
      } else
      /* istanbul ignore next */
      {
        cov_2a07z5mqrf().b[49][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2a07z5mqrf().s[142]++;
      console.error('❌ Failed to send alert:', error);
    }
  }
  /**
   * Add custom alert rule
   */
  addAlertRule(rule) {
    /* istanbul ignore next */
    cov_2a07z5mqrf().f[33]++;
    cov_2a07z5mqrf().s[143]++;
    this.alertRules.set(rule.id, rule);
  }
  /**
   * Remove alert rule
   */
  removeAlertRule(ruleId) {
    /* istanbul ignore next */
    cov_2a07z5mqrf().f[34]++;
    cov_2a07z5mqrf().s[144]++;
    return this.alertRules.delete(ruleId);
  }
  /**
   * Get error statistics
   */
  getErrorStatistics() {
    /* istanbul ignore next */
    cov_2a07z5mqrf().f[35]++;
    const totalErrors =
    /* istanbul ignore next */
    (cov_2a07z5mqrf().s[145]++, Array.from(this.errorStore.values()).reduce((sum, metrics) => {
      /* istanbul ignore next */
      cov_2a07z5mqrf().f[36]++;
      cov_2a07z5mqrf().s[146]++;
      return sum + metrics.count;
    }, 0));
    const uniqueErrors =
    /* istanbul ignore next */
    (cov_2a07z5mqrf().s[147]++, this.errorStore.size);
    const errorsByType =
    /* istanbul ignore next */
    (cov_2a07z5mqrf().s[148]++, {});
    const errorsBySeverity =
    /* istanbul ignore next */
    (cov_2a07z5mqrf().s[149]++, {});
    // This is simplified - in production you'd store error types
    /* istanbul ignore next */
    cov_2a07z5mqrf().s[150]++;
    for (const [hash, metrics] of this.errorStore) {
      /* istanbul ignore next */
      cov_2a07z5mqrf().s[151]++;
      errorsBySeverity[metrics.severity] = (
      /* istanbul ignore next */
      (cov_2a07z5mqrf().b[51][0]++, errorsBySeverity[metrics.severity]) ||
      /* istanbul ignore next */
      (cov_2a07z5mqrf().b[51][1]++, 0)) + metrics.count;
    }
    const topErrors =
    /* istanbul ignore next */
    (cov_2a07z5mqrf().s[152]++, Array.from(this.errorStore.entries()).sort(([, a], [, b]) => {
      /* istanbul ignore next */
      cov_2a07z5mqrf().f[37]++;
      cov_2a07z5mqrf().s[153]++;
      return b.count - a.count;
    }).slice(0, 10).map(([hash, metrics]) => {
      /* istanbul ignore next */
      cov_2a07z5mqrf().f[38]++;
      cov_2a07z5mqrf().s[154]++;
      return {
        hash,
        count: metrics.count,
        message: 'Error message would be stored separately',
        // Simplified
        severity: metrics.severity
      };
    }));
    /* istanbul ignore next */
    cov_2a07z5mqrf().s[155]++;
    return {
      totalErrors,
      uniqueErrors,
      errorsByType,
      errorsBySeverity,
      topErrors
    };
  }
  /**
   * Enforce storage limits to prevent memory issues
   */
  async enforceStorageLimits() {
    /* istanbul ignore next */
    cov_2a07z5mqrf().f[39]++;
    cov_2a07z5mqrf().s[156]++;
    if (this.errorStore.size <= this.config.maxStoredErrors) {
      /* istanbul ignore next */
      cov_2a07z5mqrf().b[52][0]++;
      cov_2a07z5mqrf().s[157]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2a07z5mqrf().b[52][1]++;
    }
    // Remove oldest errors
    const sortedErrors =
    /* istanbul ignore next */
    (cov_2a07z5mqrf().s[158]++, Array.from(this.errorStore.entries()).sort(([, a], [, b]) => {
      /* istanbul ignore next */
      cov_2a07z5mqrf().f[40]++;
      cov_2a07z5mqrf().s[159]++;
      return a.lastSeen.getTime() - b.lastSeen.getTime();
    }));
    const toRemove =
    /* istanbul ignore next */
    (cov_2a07z5mqrf().s[160]++, sortedErrors.slice(0, sortedErrors.length - this.config.maxStoredErrors));
    /* istanbul ignore next */
    cov_2a07z5mqrf().s[161]++;
    for (const [hash] of toRemove) {
      /* istanbul ignore next */
      cov_2a07z5mqrf().s[162]++;
      this.errorStore.delete(hash);
    }
  }
  /**
   * Start maintenance tasks
   */
  startMaintenanceTasks() {
    /* istanbul ignore next */
    cov_2a07z5mqrf().f[41]++;
    cov_2a07z5mqrf().s[163]++;
    // Clean up old errors every hour
    setInterval(() => {
      /* istanbul ignore next */
      cov_2a07z5mqrf().f[42]++;
      cov_2a07z5mqrf().s[164]++;
      this.cleanupOldErrors();
    }, 60 * 60 * 1000);
    // Clean up old alerts every 30 minutes
    /* istanbul ignore next */
    cov_2a07z5mqrf().s[165]++;
    setInterval(() => {
      /* istanbul ignore next */
      cov_2a07z5mqrf().f[43]++;
      cov_2a07z5mqrf().s[166]++;
      this.cleanupOldAlerts();
    }, 30 * 60 * 1000);
  }
  /**
   * Clean up old errors based on retention policy
   */
  cleanupOldErrors() {
    /* istanbul ignore next */
    cov_2a07z5mqrf().f[44]++;
    const cutoffTime =
    /* istanbul ignore next */
    (cov_2a07z5mqrf().s[167]++, new Date(Date.now() - this.config.errorRetentionDays * 24 * 60 * 60 * 1000));
    /* istanbul ignore next */
    cov_2a07z5mqrf().s[168]++;
    for (const [hash, metrics] of this.errorStore) {
      /* istanbul ignore next */
      cov_2a07z5mqrf().s[169]++;
      if (metrics.lastSeen < cutoffTime) {
        /* istanbul ignore next */
        cov_2a07z5mqrf().b[53][0]++;
        cov_2a07z5mqrf().s[170]++;
        this.errorStore.delete(hash);
      } else
      /* istanbul ignore next */
      {
        cov_2a07z5mqrf().b[53][1]++;
      }
    }
  }
  /**
   * Clean up old alert records
   */
  cleanupOldAlerts() {
    /* istanbul ignore next */
    cov_2a07z5mqrf().f[45]++;
    const now =
    /* istanbul ignore next */
    (cov_2a07z5mqrf().s[171]++, Date.now());
    /* istanbul ignore next */
    cov_2a07z5mqrf().s[172]++;
    for (const [ruleId, alerts] of this.recentAlerts) {
      const validAlerts =
      /* istanbul ignore next */
      (cov_2a07z5mqrf().s[173]++, alerts.filter(alertTime => {
        /* istanbul ignore next */
        cov_2a07z5mqrf().f[46]++;
        cov_2a07z5mqrf().s[174]++;
        return now - alertTime < 24 * 60 * 60 * 1000;
      })); // Keep 24 hours
      /* istanbul ignore next */
      cov_2a07z5mqrf().s[175]++;
      if (validAlerts.length === 0) {
        /* istanbul ignore next */
        cov_2a07z5mqrf().b[54][0]++;
        cov_2a07z5mqrf().s[176]++;
        this.recentAlerts.delete(ruleId);
      } else {
        /* istanbul ignore next */
        cov_2a07z5mqrf().b[54][1]++;
        cov_2a07z5mqrf().s[177]++;
        this.recentAlerts.set(ruleId, validAlerts);
      }
    }
  }
  /**
   * Express middleware for automatic error monitoring
   */
  middleware() {
    /* istanbul ignore next */
    cov_2a07z5mqrf().f[47]++;
    cov_2a07z5mqrf().s[178]++;
    return (error, req, res, next) => {
      /* istanbul ignore next */
      cov_2a07z5mqrf().f[48]++;
      // Extract context from request
      const context =
      /* istanbul ignore next */
      (cov_2a07z5mqrf().s[179]++, {
        userId: req.user?.id,
        sessionId:
        /* istanbul ignore next */
        (cov_2a07z5mqrf().b[55][0]++, req.session?.id) ||
        /* istanbul ignore next */
        (cov_2a07z5mqrf().b[55][1]++, req.sessionID),
        requestId: req.headers['x-request-id'],
        userAgent: req.headers['user-agent'],
        ip:
        /* istanbul ignore next */
        (cov_2a07z5mqrf().b[56][0]++, req.ip) ||
        /* istanbul ignore next */
        (cov_2a07z5mqrf().b[56][1]++, req.connection.remoteAddress),
        endpoint:
        /* istanbul ignore next */
        (cov_2a07z5mqrf().b[57][0]++, req.originalUrl) ||
        /* istanbul ignore next */
        (cov_2a07z5mqrf().b[57][1]++, req.url),
        method: req.method
      });
      // Record error asynchronously
      /* istanbul ignore next */
      cov_2a07z5mqrf().s[180]++;
      this.recordError(error, context).catch(err => {
        /* istanbul ignore next */
        cov_2a07z5mqrf().f[49]++;
        cov_2a07z5mqrf().s[181]++;
        console.error('❌ Failed to record error in monitoring system:', err);
      });
      // Continue with normal error handling
      /* istanbul ignore next */
      cov_2a07z5mqrf().s[182]++;
      next(error);
    };
  }
}
/* istanbul ignore next */
cov_2a07z5mqrf().s[183]++;
exports.ErrorMonitoringSystem = ErrorMonitoringSystem;
// Singleton instance
let errorMonitoringSystem =
/* istanbul ignore next */
(cov_2a07z5mqrf().s[184]++, null);
/**
 * Initialize error monitoring system
 */
function initializeErrorMonitoring(config =
/* istanbul ignore next */
(cov_2a07z5mqrf().b[58][0]++, {})) {
  /* istanbul ignore next */
  cov_2a07z5mqrf().f[50]++;
  cov_2a07z5mqrf().s[185]++;
  if (!errorMonitoringSystem) {
    /* istanbul ignore next */
    cov_2a07z5mqrf().b[59][0]++;
    cov_2a07z5mqrf().s[186]++;
    errorMonitoringSystem = new ErrorMonitoringSystem(config);
    /* istanbul ignore next */
    cov_2a07z5mqrf().s[187]++;
    console.log('🔍 Error Monitoring System initialized');
  } else
  /* istanbul ignore next */
  {
    cov_2a07z5mqrf().b[59][1]++;
  }
  cov_2a07z5mqrf().s[188]++;
  return errorMonitoringSystem;
}
/**
 * Get error monitoring system instance
 */
function getErrorMonitoringSystem() {
  /* istanbul ignore next */
  cov_2a07z5mqrf().f[51]++;
  cov_2a07z5mqrf().s[189]++;
  return errorMonitoringSystem;
}
/* istanbul ignore next */
cov_2a07z5mqrf().s[190]++;
exports.default = ErrorMonitoringSystem;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,