9f5bc7a0b9a9d844e96516b827075c70
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Test setup for backend tests
require("reflect-metadata");
// Mock environment variables for testing
process.env.NODE_ENV = 'test';
process.env.JWT_SECRET = 'test-jwt-secret';
process.env.DATABASE_PATH = ':memory:';
process.env.LOG_LEVEL = 'error';
// Mock console methods to reduce noise in tests
const originalConsole = { ...console };
beforeAll(() => {
    // Suppress console output during tests unless LOG_LEVEL is debug
    if (process.env.LOG_LEVEL !== 'debug') {
        console.log = jest.fn();
        console.info = jest.fn();
        console.warn = jest.fn();
        // Keep console.error for debugging failed tests
    }
});
afterAll(() => {
    // Restore console methods
    Object.assign(console, originalConsole);
});
// Global test timeout
jest.setTimeout(30000);
// Mock fetch for Node.js environment
global.fetch = jest.fn();
// Clean up after each test
afterEach(() => {
    jest.clearAllMocks();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL3dvcmtzcGFjZXMvcHJvbXB0LWNhcmQtc3lzdGVtL2JhY2tlbmQvc3JjL3Rlc3RzL3NldHVwLnRzIiwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQStCO0FBQy9CLDRCQUEwQjtBQUUxQix5Q0FBeUM7QUFDekMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDO0FBQzlCLE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBVSxHQUFHLGlCQUFpQixDQUFDO0FBQzNDLE9BQU8sQ0FBQyxHQUFHLENBQUMsYUFBYSxHQUFHLFVBQVUsQ0FBQztBQUN2QyxPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsR0FBRyxPQUFPLENBQUM7QUFFaEMsZ0RBQWdEO0FBQ2hELE1BQU0sZUFBZSxHQUFHLEVBQUUsR0FBRyxPQUFPLEVBQUUsQ0FBQztBQUV2QyxTQUFTLENBQUMsR0FBRyxFQUFFO0lBQ2IsaUVBQWlFO0lBQ2pFLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEtBQUssT0FBTyxFQUFFLENBQUM7UUFDdEMsT0FBTyxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsRUFBRSxFQUFFLENBQUM7UUFDeEIsT0FBTyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsRUFBRSxFQUFFLENBQUM7UUFDekIsT0FBTyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsRUFBRSxFQUFFLENBQUM7UUFDekIsZ0RBQWdEO0lBQ2xELENBQUM7QUFDSCxDQUFDLENBQUMsQ0FBQztBQUVILFFBQVEsQ0FBQyxHQUFHLEVBQUU7SUFDWiwwQkFBMEI7SUFDMUIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUUsZUFBZSxDQUFDLENBQUM7QUFDMUMsQ0FBQyxDQUFDLENBQUM7QUFFSCxzQkFBc0I7QUFDdEIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUV2QixxQ0FBcUM7QUFDckMsTUFBTSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsRUFBRSxFQUFFLENBQUM7QUFFekIsMkJBQTJCO0FBQzNCLFNBQVMsQ0FBQyxHQUFHLEVBQUU7SUFDYixJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7QUFDdkIsQ0FBQyxDQUFDLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL3dvcmtzcGFjZXMvcHJvbXB0LWNhcmQtc3lzdGVtL2JhY2tlbmQvc3JjL3Rlc3RzL3NldHVwLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRlc3Qgc2V0dXAgZm9yIGJhY2tlbmQgdGVzdHNcbmltcG9ydCAncmVmbGVjdC1tZXRhZGF0YSc7XG5cbi8vIE1vY2sgZW52aXJvbm1lbnQgdmFyaWFibGVzIGZvciB0ZXN0aW5nXG5wcm9jZXNzLmVudi5OT0RFX0VOViA9ICd0ZXN0JztcbnByb2Nlc3MuZW52LkpXVF9TRUNSRVQgPSAndGVzdC1qd3Qtc2VjcmV0JztcbnByb2Nlc3MuZW52LkRBVEFCQVNFX1BBVEggPSAnOm1lbW9yeTonO1xucHJvY2Vzcy5lbnYuTE9HX0xFVkVMID0gJ2Vycm9yJztcblxuLy8gTW9jayBjb25zb2xlIG1ldGhvZHMgdG8gcmVkdWNlIG5vaXNlIGluIHRlc3RzXG5jb25zdCBvcmlnaW5hbENvbnNvbGUgPSB7IC4uLmNvbnNvbGUgfTtcblxuYmVmb3JlQWxsKCgpID0+IHtcbiAgLy8gU3VwcHJlc3MgY29uc29sZSBvdXRwdXQgZHVyaW5nIHRlc3RzIHVubGVzcyBMT0dfTEVWRUwgaXMgZGVidWdcbiAgaWYgKHByb2Nlc3MuZW52LkxPR19MRVZFTCAhPT0gJ2RlYnVnJykge1xuICAgIGNvbnNvbGUubG9nID0gamVzdC5mbigpO1xuICAgIGNvbnNvbGUuaW5mbyA9IGplc3QuZm4oKTtcbiAgICBjb25zb2xlLndhcm4gPSBqZXN0LmZuKCk7XG4gICAgLy8gS2VlcCBjb25zb2xlLmVycm9yIGZvciBkZWJ1Z2dpbmcgZmFpbGVkIHRlc3RzXG4gIH1cbn0pO1xuXG5hZnRlckFsbCgoKSA9PiB7XG4gIC8vIFJlc3RvcmUgY29uc29sZSBtZXRob2RzXG4gIE9iamVjdC5hc3NpZ24oY29uc29sZSwgb3JpZ2luYWxDb25zb2xlKTtcbn0pO1xuXG4vLyBHbG9iYWwgdGVzdCB0aW1lb3V0XG5qZXN0LnNldFRpbWVvdXQoMzAwMDApO1xuXG4vLyBNb2NrIGZldGNoIGZvciBOb2RlLmpzIGVudmlyb25tZW50XG5nbG9iYWwuZmV0Y2ggPSBqZXN0LmZuKCk7XG5cbi8vIENsZWFuIHVwIGFmdGVyIGVhY2ggdGVzdFxuYWZ0ZXJFYWNoKCgpID0+IHtcbiAgamVzdC5jbGVhckFsbE1vY2tzKCk7XG59KTsiXSwidmVyc2lvbiI6M30=