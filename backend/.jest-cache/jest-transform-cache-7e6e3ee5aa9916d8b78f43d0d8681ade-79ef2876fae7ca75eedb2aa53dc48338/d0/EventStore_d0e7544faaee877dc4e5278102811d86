cf0081a29d8b17472df4c7b9f1621631
"use strict";

/* istanbul ignore next */
function cov_1uf5qqmc8s() {
  var path = "/workspaces/prompt-card-system/backend/src/services/analytics/EventStore.ts";
  var hash = "dd3e352608258606140a875ec79a326729e6cbd6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/prompt-card-system/backend/src/services/analytics/EventStore.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 4,
          column: 21
        },
        end: {
          line: 4,
          column: 57
        }
      },
      "3": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 7,
          column: 28
        }
      },
      "4": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 63
        }
      },
      "5": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 36
        }
      },
      "6": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 16,
          column: 9
        }
      },
      "7": {
        start: {
          line: 15,
          column: 12
        },
        end: {
          line: 15,
          column: 51
        }
      },
      "8": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 35
        }
      },
      "9": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 34,
          column: 7
        }
      },
      "10": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 41,
          column: 7
        }
      },
      "11": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 54,
          column: 7
        }
      },
      "12": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 59,
          column: 7
        }
      },
      "13": {
        start: {
          line: 62,
          column: 21
        },
        end: {
          line: 65,
          column: 6
        }
      },
      "14": {
        start: {
          line: 66,
          column: 23
        },
        end: {
          line: 66,
          column: 229
        }
      },
      "15": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 49
        }
      },
      "16": {
        start: {
          line: 70,
          column: 21
        },
        end: {
          line: 73,
          column: 6
        }
      },
      "17": {
        start: {
          line: 74,
          column: 28
        },
        end: {
          line: 81,
          column: 10
        }
      },
      "18": {
        start: {
          line: 75,
          column: 24
        },
        end: {
          line: 75,
          column: 26
        }
      },
      "19": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 79,
          column: 13
        }
      },
      "20": {
        start: {
          line: 77,
          column: 31
        },
        end: {
          line: 77,
          column: 237
        }
      },
      "21": {
        start: {
          line: 78,
          column: 16
        },
        end: {
          line: 78,
          column: 60
        }
      },
      "22": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 23
        }
      },
      "23": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 29
        }
      },
      "24": {
        start: {
          line: 85,
          column: 18
        },
        end: {
          line: 89,
          column: 5
        }
      },
      "25": {
        start: {
          line: 90,
          column: 23
        },
        end: {
          line: 90,
          column: 25
        }
      },
      "26": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "27": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 41
        }
      },
      "28": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 42
        }
      },
      "29": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 98,
          column: 9
        }
      },
      "30": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 42
        }
      },
      "31": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 43
        }
      },
      "32": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "33": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 40
        }
      },
      "34": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 41
        }
      },
      "35": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 106,
          column: 9
        }
      },
      "36": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 41
        }
      },
      "37": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 52
        }
      },
      "38": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "39": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 41
        }
      },
      "40": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 50
        }
      },
      "41": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 42
        }
      },
      "42": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 115,
          column: 9
        }
      },
      "43": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 30
        }
      },
      "44": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 37
        }
      },
      "45": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "46": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 31
        }
      },
      "47": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 38
        }
      },
      "48": {
        start: {
          line: 120,
          column: 21
        },
        end: {
          line: 120,
          column: 41
        }
      },
      "49": {
        start: {
          line: 121,
          column: 21
        },
        end: {
          line: 121,
          column: 40
        }
      },
      "50": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 135,
          column: 11
        }
      },
      "51": {
        start: {
          line: 123,
          column: 29
        },
        end: {
          line: 123,
          column: 32
        }
      },
      "52": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 134,
          column: 14
        }
      },
      "53": {
        start: {
          line: 138,
          column: 18
        },
        end: {
          line: 142,
          column: 5
        }
      },
      "54": {
        start: {
          line: 143,
          column: 23
        },
        end: {
          line: 143,
          column: 25
        }
      },
      "55": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "56": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 41
        }
      },
      "57": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 42
        }
      },
      "58": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 151,
          column: 9
        }
      },
      "59": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 42
        }
      },
      "60": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 43
        }
      },
      "61": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "62": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 40
        }
      },
      "63": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 41
        }
      },
      "64": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "65": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 41
        }
      },
      "66": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 52
        }
      },
      "67": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "68": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 41
        }
      },
      "69": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 50
        }
      },
      "70": {
        start: {
          line: 164,
          column: 21
        },
        end: {
          line: 164,
          column: 41
        }
      },
      "71": {
        start: {
          line: 165,
          column: 23
        },
        end: {
          line: 165,
          column: 42
        }
      },
      "72": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 28
        }
      },
      "73": {
        start: {
          line: 169,
          column: 21
        },
        end: {
          line: 172,
          column: 6
        }
      },
      "74": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 116
        }
      },
      "75": {
        start: {
          line: 176,
          column: 18
        },
        end: {
          line: 180,
          column: 5
        }
      },
      "76": {
        start: {
          line: 181,
          column: 23
        },
        end: {
          line: 181,
          column: 47
        }
      },
      "77": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "78": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 41
        }
      },
      "79": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 45
        }
      },
      "80": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "81": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 41
        }
      },
      "82": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 43
        }
      },
      "83": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 193,
          column: 9
        }
      },
      "84": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 37
        }
      },
      "85": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 32
        }
      },
      "86": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 42
        }
      },
      "87": {
        start: {
          line: 195,
          column: 21
        },
        end: {
          line: 195,
          column: 41
        }
      },
      "88": {
        start: {
          line: 196,
          column: 21
        },
        end: {
          line: 196,
          column: 40
        }
      },
      "89": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 206,
          column: 11
        }
      },
      "90": {
        start: {
          line: 198,
          column: 29
        },
        end: {
          line: 198,
          column: 32
        }
      },
      "91": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 205,
          column: 14
        }
      },
      "92": {
        start: {
          line: 209,
          column: 27
        },
        end: {
          line: 209,
          column: 37
        }
      },
      "93": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 65
        }
      },
      "94": {
        start: {
          line: 211,
          column: 21
        },
        end: {
          line: 214,
          column: 6
        }
      },
      "95": {
        start: {
          line: 215,
          column: 23
        },
        end: {
          line: 215,
          column: 53
        }
      },
      "96": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 30
        }
      },
      "97": {
        start: {
          line: 219,
          column: 0
        },
        end: {
          line: 219,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 5
          }
        },
        loc: {
          start: {
            line: 6,
            column: 18
          },
          end: {
            line: 8,
            column: 5
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 25
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 13
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 27
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        loc: {
          start: {
            line: 61,
            column: 29
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 61
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        loc: {
          start: {
            line: 69,
            column: 30
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 69
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 74,
            column: 48
          },
          end: {
            line: 74,
            column: 49
          }
        },
        loc: {
          start: {
            line: 74,
            column: 54
          },
          end: {
            line: 81,
            column: 9
          }
        },
        line: 74
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 27
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 84
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 122,
            column: 24
          },
          end: {
            line: 122,
            column: 25
          }
        },
        loc: {
          start: {
            line: 122,
            column: 31
          },
          end: {
            line: 135,
            column: 9
          }
        },
        line: 122
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        },
        loc: {
          start: {
            line: 137,
            column: 31
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 137
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 168,
            column: 5
          }
        },
        loc: {
          start: {
            line: 168,
            column: 82
          },
          end: {
            line: 174,
            column: 5
          }
        },
        line: 168
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 175,
            column: 4
          },
          end: {
            line: 175,
            column: 5
          }
        },
        loc: {
          start: {
            line: 175,
            column: 73
          },
          end: {
            line: 207,
            column: 5
          }
        },
        line: 175
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 197,
            column: 24
          },
          end: {
            line: 197,
            column: 25
          }
        },
        loc: {
          start: {
            line: 197,
            column: 31
          },
          end: {
            line: 206,
            column: 9
          }
        },
        line: 197
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 208,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        },
        loc: {
          start: {
            line: 208,
            column: 45
          },
          end: {
            line: 217,
            column: 5
          }
        },
        line: 208
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 16,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 16,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 66,
            column: 174
          },
          end: {
            line: 66,
            column: 228
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 66,
            column: 191
          },
          end: {
            line: 66,
            column: 221
          }
        }, {
          start: {
            line: 66,
            column: 224
          },
          end: {
            line: 66,
            column: 228
          }
        }],
        line: 66
      },
      "2": {
        loc: {
          start: {
            line: 77,
            column: 182
          },
          end: {
            line: 77,
            column: 236
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 77,
            column: 199
          },
          end: {
            line: 77,
            column: 229
          }
        }, {
          start: {
            line: 77,
            column: 232
          },
          end: {
            line: 77,
            column: 236
          }
        }],
        line: 77
      },
      "3": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "4": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "5": {
        loc: {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "6": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "7": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "8": {
        loc: {
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 115,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 115,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "9": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "10": {
        loc: {
          start: {
            line: 133,
            column: 26
          },
          end: {
            line: 133,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 133,
            column: 46
          },
          end: {
            line: 133,
            column: 75
          }
        }, {
          start: {
            line: 133,
            column: 78
          },
          end: {
            line: 133,
            column: 82
          }
        }],
        line: 133
      },
      "11": {
        loc: {
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "12": {
        loc: {
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 151,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 151,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "13": {
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "14": {
        loc: {
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "15": {
        loc: {
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "16": {
        loc: {
          start: {
            line: 168,
            column: 65
          },
          end: {
            line: 168,
            column: 80
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 168,
            column: 74
          },
          end: {
            line: 168,
            column: 80
          }
        }],
        line: 168
      },
      "17": {
        loc: {
          start: {
            line: 173,
            column: 48
          },
          end: {
            line: 173,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 173,
            column: 61
          },
          end: {
            line: 173,
            column: 87
          }
        }, {
          start: {
            line: 173,
            column: 90
          },
          end: {
            line: 173,
            column: 94
          }
        }],
        line: 173
      },
      "18": {
        loc: {
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "19": {
        loc: {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "20": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 193,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 193,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "21": {
        loc: {
          start: {
            line: 202,
            column: 28
          },
          end: {
            line: 202,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 202,
            column: 50
          },
          end: {
            line: 202,
            column: 81
          }
        }, {
          start: {
            line: 202,
            column: 84
          },
          end: {
            line: 202,
            column: 88
          }
        }],
        line: 202
      },
      "22": {
        loc: {
          start: {
            line: 208,
            column: 25
          },
          end: {
            line: 208,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 208,
            column: 41
          },
          end: {
            line: 208,
            column: 43
          }
        }],
        line: 208
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0]
    },
    inputSourceMap: {
      file: "/workspaces/prompt-card-system/backend/src/services/analytics/EventStore.ts",
      mappings: "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",
      names: [],
      sources: ["/workspaces/prompt-card-system/backend/src/services/analytics/EventStore.ts"],
      sourcesContent: ["import { Database } from 'better-sqlite3';\nimport { initializeDatabase } from '../../database/connection';\n\nexport interface AnalyticsEvent {\n  id?: string;\n  event_type: string;\n  entity_id: string;\n  entity_type: string;\n  data: any;\n  timestamp: Date;\n  user_id?: string;\n  session_id?: string;\n  metadata?: any;\n}\n\nexport interface EventQuery {\n  event_type?: string;\n  entity_type?: string;\n  entity_id?: string;\n  start_time?: Date;\n  end_time?: Date;\n  limit?: number;\n  offset?: number;\n}\n\nexport class EventStore {\n  private db: any;\n  private static instance: EventStore;\n\n  private constructor() {\n    this.initializeDb();\n  }\n\n  private async initializeDb(): Promise<void> {\n    this.db = await initializeDatabase();\n    this.initializeEventStore();\n  }\n\n  public static getInstance(): EventStore {\n    if (!EventStore.instance) {\n      EventStore.instance = new EventStore();\n    }\n    return EventStore.instance;\n  }\n\n  private initializeEventStore(): void {\n    // Create analytics events table\n    this.db.exec(`\n      CREATE TABLE IF NOT EXISTS analytics_events (\n        id TEXT PRIMARY KEY DEFAULT (hex(randomblob(16))),\n        event_type TEXT NOT NULL,\n        entity_id TEXT NOT NULL,\n        entity_type TEXT NOT NULL,\n        data TEXT NOT NULL,\n        timestamp INTEGER NOT NULL,\n        user_id TEXT,\n        session_id TEXT,\n        metadata TEXT,\n        created_at DATETIME DEFAULT CURRENT_TIMESTAMP\n      )\n    `);\n\n    // Create indexes for performance\n    this.db.exec(`\n      CREATE INDEX IF NOT EXISTS idx_analytics_events_type ON analytics_events(event_type);\n      CREATE INDEX IF NOT EXISTS idx_analytics_events_entity ON analytics_events(entity_type, entity_id);\n      CREATE INDEX IF NOT EXISTS idx_analytics_events_timestamp ON analytics_events(timestamp);\n      CREATE INDEX IF NOT EXISTS idx_analytics_events_session ON analytics_events(session_id);\n    `);\n\n    // Create aggregated metrics table for performance\n    this.db.exec(`\n      CREATE TABLE IF NOT EXISTS analytics_metrics (\n        id TEXT PRIMARY KEY DEFAULT (hex(randomblob(16))),\n        metric_type TEXT NOT NULL,\n        metric_name TEXT NOT NULL,\n        value REAL NOT NULL,\n        dimensions TEXT,\n        timestamp INTEGER NOT NULL,\n        period TEXT NOT NULL,\n        created_at DATETIME DEFAULT CURRENT_TIMESTAMP\n      )\n    `);\n\n    // Create indexes for metrics\n    this.db.exec(`\n      CREATE INDEX IF NOT EXISTS idx_analytics_metrics_type ON analytics_metrics(metric_type, metric_name);\n      CREATE INDEX IF NOT EXISTS idx_analytics_metrics_timestamp ON analytics_metrics(timestamp, period);\n    `);\n  }\n\n  public async recordEvent(event: AnalyticsEvent): Promise<string> {\n    const stmt = this.db.prepare(`\n      INSERT INTO analytics_events (event_type, entity_id, entity_type, data, timestamp, user_id, session_id, metadata)\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?)\n    `);\n\n    const result = stmt.run(\n      event.event_type,\n      event.entity_id,\n      event.entity_type,\n      JSON.stringify(event.data),\n      event.timestamp.getTime(),\n      event.user_id,\n      event.session_id,\n      event.metadata ? JSON.stringify(event.metadata) : null\n    );\n\n    return result.lastInsertRowid.toString();\n  }\n\n  public async recordBatch(events: AnalyticsEvent[]): Promise<string[]> {\n    const stmt = this.db.prepare(`\n      INSERT INTO analytics_events (event_type, entity_id, entity_type, data, timestamp, user_id, session_id, metadata)\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?)\n    `);\n\n    const transaction = this.db.transaction(() => {\n      const ids: string[] = [];\n      for (const event of events) {\n        const result = stmt.run(\n          event.event_type,\n          event.entity_id,\n          event.entity_type,\n          JSON.stringify(event.data),\n          event.timestamp.getTime(),\n          event.user_id,\n          event.session_id,\n          event.metadata ? JSON.stringify(event.metadata) : null\n        );\n        ids.push(result.lastInsertRowid.toString());\n      }\n      return ids;\n    });\n\n    return transaction();\n  }\n\n  public async getEvents(query: EventQuery): Promise<AnalyticsEvent[]> {\n    let sql = `\n      SELECT id, event_type, entity_id, entity_type, data, timestamp, user_id, session_id, metadata\n      FROM analytics_events\n      WHERE 1=1\n    `;\n    const params: any[] = [];\n\n    if (query.event_type) {\n      sql += ` AND event_type = ?`;\n      params.push(query.event_type);\n    }\n\n    if (query.entity_type) {\n      sql += ` AND entity_type = ?`;\n      params.push(query.entity_type);\n    }\n\n    if (query.entity_id) {\n      sql += ` AND entity_id = ?`;\n      params.push(query.entity_id);\n    }\n\n    if (query.start_time) {\n      sql += ` AND timestamp >= ?`;\n      params.push(query.start_time.getTime());\n    }\n\n    if (query.end_time) {\n      sql += ` AND timestamp <= ?`;\n      params.push(query.end_time.getTime());\n    }\n\n    sql += ` ORDER BY timestamp DESC`;\n\n    if (query.limit) {\n      sql += ` LIMIT ?`;\n      params.push(query.limit);\n    }\n\n    if (query.offset) {\n      sql += ` OFFSET ?`;\n      params.push(query.offset);\n    }\n\n    const stmt = this.db.prepare(sql);\n    const rows = stmt.all(...params);\n\n    return rows.map(row => {\n      const typedRow = row as any;\n      return {\n        id: typedRow.id,\n        event_type: typedRow.event_type,\n        entity_id: typedRow.entity_id,\n        entity_type: typedRow.entity_type,\n        data: JSON.parse(typedRow.data),\n        timestamp: new Date(typedRow.timestamp),\n        user_id: typedRow.user_id,\n        session_id: typedRow.session_id,\n        metadata: typedRow.metadata ? JSON.parse(typedRow.metadata) : null\n      };\n    });\n  }\n\n  public async getEventCount(query: EventQuery): Promise<number> {\n    let sql = `\n      SELECT COUNT(*) as count\n      FROM analytics_events\n      WHERE 1=1\n    `;\n    const params: any[] = [];\n\n    if (query.event_type) {\n      sql += ` AND event_type = ?`;\n      params.push(query.event_type);\n    }\n\n    if (query.entity_type) {\n      sql += ` AND entity_type = ?`;\n      params.push(query.entity_type);\n    }\n\n    if (query.entity_id) {\n      sql += ` AND entity_id = ?`;\n      params.push(query.entity_id);\n    }\n\n    if (query.start_time) {\n      sql += ` AND timestamp >= ?`;\n      params.push(query.start_time.getTime());\n    }\n\n    if (query.end_time) {\n      sql += ` AND timestamp <= ?`;\n      params.push(query.end_time.getTime());\n    }\n\n    const stmt = this.db.prepare(sql);\n    const result = stmt.get(...params) as any;\n    return result.count;\n  }\n\n  public async storeMetric(\n    metricType: string,\n    metricName: string,\n    value: number,\n    dimensions?: Record<string, any>,\n    period: string = 'hour'\n  ): Promise<void> {\n    const stmt = this.db.prepare(`\n      INSERT INTO analytics_metrics (metric_type, metric_name, value, dimensions, timestamp, period)\n      VALUES (?, ?, ?, ?, ?, ?)\n    `);\n\n    stmt.run(\n      metricType,\n      metricName,\n      value,\n      dimensions ? JSON.stringify(dimensions) : null,\n      Date.now(),\n      period\n    );\n  }\n\n  public async getMetrics(\n    metricType: string,\n    metricName: string,\n    startTime?: Date,\n    endTime?: Date,\n    period?: string\n  ): Promise<any[]> {\n    let sql = `\n      SELECT metric_name, value, dimensions, timestamp, period\n      FROM analytics_metrics\n      WHERE metric_type = ? AND metric_name = ?\n    `;\n    const params: any[] = [metricType, metricName];\n\n    if (startTime) {\n      sql += ` AND timestamp >= ?`;\n      params.push(startTime.getTime());\n    }\n\n    if (endTime) {\n      sql += ` AND timestamp <= ?`;\n      params.push(endTime.getTime());\n    }\n\n    if (period) {\n      sql += ` AND period = ?`;\n      params.push(period);\n    }\n\n    sql += ` ORDER BY timestamp DESC`;\n\n    const stmt = this.db.prepare(sql);\n    const rows = stmt.all(...params);\n\n    return rows.map(row => {\n      const typedRow = row as any;\n      return {\n        metric_name: typedRow.metric_name,\n        value: typedRow.value,\n        dimensions: typedRow.dimensions ? JSON.parse(typedRow.dimensions) : null,\n        timestamp: new Date(typedRow.timestamp),\n        period: typedRow.period\n      };\n    });\n  }\n\n  public async clearOldEvents(olderThanDays: number = 90): Promise<number> {\n    const cutoffTime = new Date();\n    cutoffTime.setDate(cutoffTime.getDate() - olderThanDays);\n\n    const stmt = this.db.prepare(`\n      DELETE FROM analytics_events\n      WHERE timestamp < ?\n    `);\n\n    const result = stmt.run(cutoffTime.getTime());\n    return result.changes;\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dd3e352608258606140a875ec79a326729e6cbd6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1uf5qqmc8s = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1uf5qqmc8s();
cov_1uf5qqmc8s().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1uf5qqmc8s().s[1]++;
exports.EventStore = void 0;
const connection_1 =
/* istanbul ignore next */
(cov_1uf5qqmc8s().s[2]++, require("../../database/connection"));
class EventStore {
  constructor() {
    /* istanbul ignore next */
    cov_1uf5qqmc8s().f[0]++;
    cov_1uf5qqmc8s().s[3]++;
    this.initializeDb();
  }
  async initializeDb() {
    /* istanbul ignore next */
    cov_1uf5qqmc8s().f[1]++;
    cov_1uf5qqmc8s().s[4]++;
    this.db = await (0, connection_1.initializeDatabase)();
    /* istanbul ignore next */
    cov_1uf5qqmc8s().s[5]++;
    this.initializeEventStore();
  }
  static getInstance() {
    /* istanbul ignore next */
    cov_1uf5qqmc8s().f[2]++;
    cov_1uf5qqmc8s().s[6]++;
    if (!EventStore.instance) {
      /* istanbul ignore next */
      cov_1uf5qqmc8s().b[0][0]++;
      cov_1uf5qqmc8s().s[7]++;
      EventStore.instance = new EventStore();
    } else
    /* istanbul ignore next */
    {
      cov_1uf5qqmc8s().b[0][1]++;
    }
    cov_1uf5qqmc8s().s[8]++;
    return EventStore.instance;
  }
  initializeEventStore() {
    /* istanbul ignore next */
    cov_1uf5qqmc8s().f[3]++;
    cov_1uf5qqmc8s().s[9]++;
    // Create analytics events table
    this.db.exec(`
      CREATE TABLE IF NOT EXISTS analytics_events (
        id TEXT PRIMARY KEY DEFAULT (hex(randomblob(16))),
        event_type TEXT NOT NULL,
        entity_id TEXT NOT NULL,
        entity_type TEXT NOT NULL,
        data TEXT NOT NULL,
        timestamp INTEGER NOT NULL,
        user_id TEXT,
        session_id TEXT,
        metadata TEXT,
        created_at DATETIME DEFAULT CURRENT_TIMESTAMP
      )
    `);
    // Create indexes for performance
    /* istanbul ignore next */
    cov_1uf5qqmc8s().s[10]++;
    this.db.exec(`
      CREATE INDEX IF NOT EXISTS idx_analytics_events_type ON analytics_events(event_type);
      CREATE INDEX IF NOT EXISTS idx_analytics_events_entity ON analytics_events(entity_type, entity_id);
      CREATE INDEX IF NOT EXISTS idx_analytics_events_timestamp ON analytics_events(timestamp);
      CREATE INDEX IF NOT EXISTS idx_analytics_events_session ON analytics_events(session_id);
    `);
    // Create aggregated metrics table for performance
    /* istanbul ignore next */
    cov_1uf5qqmc8s().s[11]++;
    this.db.exec(`
      CREATE TABLE IF NOT EXISTS analytics_metrics (
        id TEXT PRIMARY KEY DEFAULT (hex(randomblob(16))),
        metric_type TEXT NOT NULL,
        metric_name TEXT NOT NULL,
        value REAL NOT NULL,
        dimensions TEXT,
        timestamp INTEGER NOT NULL,
        period TEXT NOT NULL,
        created_at DATETIME DEFAULT CURRENT_TIMESTAMP
      )
    `);
    // Create indexes for metrics
    /* istanbul ignore next */
    cov_1uf5qqmc8s().s[12]++;
    this.db.exec(`
      CREATE INDEX IF NOT EXISTS idx_analytics_metrics_type ON analytics_metrics(metric_type, metric_name);
      CREATE INDEX IF NOT EXISTS idx_analytics_metrics_timestamp ON analytics_metrics(timestamp, period);
    `);
  }
  async recordEvent(event) {
    /* istanbul ignore next */
    cov_1uf5qqmc8s().f[4]++;
    const stmt =
    /* istanbul ignore next */
    (cov_1uf5qqmc8s().s[13]++, this.db.prepare(`
      INSERT INTO analytics_events (event_type, entity_id, entity_type, data, timestamp, user_id, session_id, metadata)
      VALUES (?, ?, ?, ?, ?, ?, ?, ?)
    `));
    const result =
    /* istanbul ignore next */
    (cov_1uf5qqmc8s().s[14]++, stmt.run(event.event_type, event.entity_id, event.entity_type, JSON.stringify(event.data), event.timestamp.getTime(), event.user_id, event.session_id, event.metadata ?
    /* istanbul ignore next */
    (cov_1uf5qqmc8s().b[1][0]++, JSON.stringify(event.metadata)) :
    /* istanbul ignore next */
    (cov_1uf5qqmc8s().b[1][1]++, null)));
    /* istanbul ignore next */
    cov_1uf5qqmc8s().s[15]++;
    return result.lastInsertRowid.toString();
  }
  async recordBatch(events) {
    /* istanbul ignore next */
    cov_1uf5qqmc8s().f[5]++;
    const stmt =
    /* istanbul ignore next */
    (cov_1uf5qqmc8s().s[16]++, this.db.prepare(`
      INSERT INTO analytics_events (event_type, entity_id, entity_type, data, timestamp, user_id, session_id, metadata)
      VALUES (?, ?, ?, ?, ?, ?, ?, ?)
    `));
    const transaction =
    /* istanbul ignore next */
    (cov_1uf5qqmc8s().s[17]++, this.db.transaction(() => {
      /* istanbul ignore next */
      cov_1uf5qqmc8s().f[6]++;
      const ids =
      /* istanbul ignore next */
      (cov_1uf5qqmc8s().s[18]++, []);
      /* istanbul ignore next */
      cov_1uf5qqmc8s().s[19]++;
      for (const event of events) {
        const result =
        /* istanbul ignore next */
        (cov_1uf5qqmc8s().s[20]++, stmt.run(event.event_type, event.entity_id, event.entity_type, JSON.stringify(event.data), event.timestamp.getTime(), event.user_id, event.session_id, event.metadata ?
        /* istanbul ignore next */
        (cov_1uf5qqmc8s().b[2][0]++, JSON.stringify(event.metadata)) :
        /* istanbul ignore next */
        (cov_1uf5qqmc8s().b[2][1]++, null)));
        /* istanbul ignore next */
        cov_1uf5qqmc8s().s[21]++;
        ids.push(result.lastInsertRowid.toString());
      }
      /* istanbul ignore next */
      cov_1uf5qqmc8s().s[22]++;
      return ids;
    }));
    /* istanbul ignore next */
    cov_1uf5qqmc8s().s[23]++;
    return transaction();
  }
  async getEvents(query) {
    /* istanbul ignore next */
    cov_1uf5qqmc8s().f[7]++;
    let sql =
    /* istanbul ignore next */
    (cov_1uf5qqmc8s().s[24]++, `
      SELECT id, event_type, entity_id, entity_type, data, timestamp, user_id, session_id, metadata
      FROM analytics_events
      WHERE 1=1
    `);
    const params =
    /* istanbul ignore next */
    (cov_1uf5qqmc8s().s[25]++, []);
    /* istanbul ignore next */
    cov_1uf5qqmc8s().s[26]++;
    if (query.event_type) {
      /* istanbul ignore next */
      cov_1uf5qqmc8s().b[3][0]++;
      cov_1uf5qqmc8s().s[27]++;
      sql += ` AND event_type = ?`;
      /* istanbul ignore next */
      cov_1uf5qqmc8s().s[28]++;
      params.push(query.event_type);
    } else
    /* istanbul ignore next */
    {
      cov_1uf5qqmc8s().b[3][1]++;
    }
    cov_1uf5qqmc8s().s[29]++;
    if (query.entity_type) {
      /* istanbul ignore next */
      cov_1uf5qqmc8s().b[4][0]++;
      cov_1uf5qqmc8s().s[30]++;
      sql += ` AND entity_type = ?`;
      /* istanbul ignore next */
      cov_1uf5qqmc8s().s[31]++;
      params.push(query.entity_type);
    } else
    /* istanbul ignore next */
    {
      cov_1uf5qqmc8s().b[4][1]++;
    }
    cov_1uf5qqmc8s().s[32]++;
    if (query.entity_id) {
      /* istanbul ignore next */
      cov_1uf5qqmc8s().b[5][0]++;
      cov_1uf5qqmc8s().s[33]++;
      sql += ` AND entity_id = ?`;
      /* istanbul ignore next */
      cov_1uf5qqmc8s().s[34]++;
      params.push(query.entity_id);
    } else
    /* istanbul ignore next */
    {
      cov_1uf5qqmc8s().b[5][1]++;
    }
    cov_1uf5qqmc8s().s[35]++;
    if (query.start_time) {
      /* istanbul ignore next */
      cov_1uf5qqmc8s().b[6][0]++;
      cov_1uf5qqmc8s().s[36]++;
      sql += ` AND timestamp >= ?`;
      /* istanbul ignore next */
      cov_1uf5qqmc8s().s[37]++;
      params.push(query.start_time.getTime());
    } else
    /* istanbul ignore next */
    {
      cov_1uf5qqmc8s().b[6][1]++;
    }
    cov_1uf5qqmc8s().s[38]++;
    if (query.end_time) {
      /* istanbul ignore next */
      cov_1uf5qqmc8s().b[7][0]++;
      cov_1uf5qqmc8s().s[39]++;
      sql += ` AND timestamp <= ?`;
      /* istanbul ignore next */
      cov_1uf5qqmc8s().s[40]++;
      params.push(query.end_time.getTime());
    } else
    /* istanbul ignore next */
    {
      cov_1uf5qqmc8s().b[7][1]++;
    }
    cov_1uf5qqmc8s().s[41]++;
    sql += ` ORDER BY timestamp DESC`;
    /* istanbul ignore next */
    cov_1uf5qqmc8s().s[42]++;
    if (query.limit) {
      /* istanbul ignore next */
      cov_1uf5qqmc8s().b[8][0]++;
      cov_1uf5qqmc8s().s[43]++;
      sql += ` LIMIT ?`;
      /* istanbul ignore next */
      cov_1uf5qqmc8s().s[44]++;
      params.push(query.limit);
    } else
    /* istanbul ignore next */
    {
      cov_1uf5qqmc8s().b[8][1]++;
    }
    cov_1uf5qqmc8s().s[45]++;
    if (query.offset) {
      /* istanbul ignore next */
      cov_1uf5qqmc8s().b[9][0]++;
      cov_1uf5qqmc8s().s[46]++;
      sql += ` OFFSET ?`;
      /* istanbul ignore next */
      cov_1uf5qqmc8s().s[47]++;
      params.push(query.offset);
    } else
    /* istanbul ignore next */
    {
      cov_1uf5qqmc8s().b[9][1]++;
    }
    const stmt =
    /* istanbul ignore next */
    (cov_1uf5qqmc8s().s[48]++, this.db.prepare(sql));
    const rows =
    /* istanbul ignore next */
    (cov_1uf5qqmc8s().s[49]++, stmt.all(...params));
    /* istanbul ignore next */
    cov_1uf5qqmc8s().s[50]++;
    return rows.map(row => {
      /* istanbul ignore next */
      cov_1uf5qqmc8s().f[8]++;
      const typedRow =
      /* istanbul ignore next */
      (cov_1uf5qqmc8s().s[51]++, row);
      /* istanbul ignore next */
      cov_1uf5qqmc8s().s[52]++;
      return {
        id: typedRow.id,
        event_type: typedRow.event_type,
        entity_id: typedRow.entity_id,
        entity_type: typedRow.entity_type,
        data: JSON.parse(typedRow.data),
        timestamp: new Date(typedRow.timestamp),
        user_id: typedRow.user_id,
        session_id: typedRow.session_id,
        metadata: typedRow.metadata ?
        /* istanbul ignore next */
        (cov_1uf5qqmc8s().b[10][0]++, JSON.parse(typedRow.metadata)) :
        /* istanbul ignore next */
        (cov_1uf5qqmc8s().b[10][1]++, null)
      };
    });
  }
  async getEventCount(query) {
    /* istanbul ignore next */
    cov_1uf5qqmc8s().f[9]++;
    let sql =
    /* istanbul ignore next */
    (cov_1uf5qqmc8s().s[53]++, `
      SELECT COUNT(*) as count
      FROM analytics_events
      WHERE 1=1
    `);
    const params =
    /* istanbul ignore next */
    (cov_1uf5qqmc8s().s[54]++, []);
    /* istanbul ignore next */
    cov_1uf5qqmc8s().s[55]++;
    if (query.event_type) {
      /* istanbul ignore next */
      cov_1uf5qqmc8s().b[11][0]++;
      cov_1uf5qqmc8s().s[56]++;
      sql += ` AND event_type = ?`;
      /* istanbul ignore next */
      cov_1uf5qqmc8s().s[57]++;
      params.push(query.event_type);
    } else
    /* istanbul ignore next */
    {
      cov_1uf5qqmc8s().b[11][1]++;
    }
    cov_1uf5qqmc8s().s[58]++;
    if (query.entity_type) {
      /* istanbul ignore next */
      cov_1uf5qqmc8s().b[12][0]++;
      cov_1uf5qqmc8s().s[59]++;
      sql += ` AND entity_type = ?`;
      /* istanbul ignore next */
      cov_1uf5qqmc8s().s[60]++;
      params.push(query.entity_type);
    } else
    /* istanbul ignore next */
    {
      cov_1uf5qqmc8s().b[12][1]++;
    }
    cov_1uf5qqmc8s().s[61]++;
    if (query.entity_id) {
      /* istanbul ignore next */
      cov_1uf5qqmc8s().b[13][0]++;
      cov_1uf5qqmc8s().s[62]++;
      sql += ` AND entity_id = ?`;
      /* istanbul ignore next */
      cov_1uf5qqmc8s().s[63]++;
      params.push(query.entity_id);
    } else
    /* istanbul ignore next */
    {
      cov_1uf5qqmc8s().b[13][1]++;
    }
    cov_1uf5qqmc8s().s[64]++;
    if (query.start_time) {
      /* istanbul ignore next */
      cov_1uf5qqmc8s().b[14][0]++;
      cov_1uf5qqmc8s().s[65]++;
      sql += ` AND timestamp >= ?`;
      /* istanbul ignore next */
      cov_1uf5qqmc8s().s[66]++;
      params.push(query.start_time.getTime());
    } else
    /* istanbul ignore next */
    {
      cov_1uf5qqmc8s().b[14][1]++;
    }
    cov_1uf5qqmc8s().s[67]++;
    if (query.end_time) {
      /* istanbul ignore next */
      cov_1uf5qqmc8s().b[15][0]++;
      cov_1uf5qqmc8s().s[68]++;
      sql += ` AND timestamp <= ?`;
      /* istanbul ignore next */
      cov_1uf5qqmc8s().s[69]++;
      params.push(query.end_time.getTime());
    } else
    /* istanbul ignore next */
    {
      cov_1uf5qqmc8s().b[15][1]++;
    }
    const stmt =
    /* istanbul ignore next */
    (cov_1uf5qqmc8s().s[70]++, this.db.prepare(sql));
    const result =
    /* istanbul ignore next */
    (cov_1uf5qqmc8s().s[71]++, stmt.get(...params));
    /* istanbul ignore next */
    cov_1uf5qqmc8s().s[72]++;
    return result.count;
  }
  async storeMetric(metricType, metricName, value, dimensions, period =
  /* istanbul ignore next */
  (cov_1uf5qqmc8s().b[16][0]++, 'hour')) {
    /* istanbul ignore next */
    cov_1uf5qqmc8s().f[10]++;
    const stmt =
    /* istanbul ignore next */
    (cov_1uf5qqmc8s().s[73]++, this.db.prepare(`
      INSERT INTO analytics_metrics (metric_type, metric_name, value, dimensions, timestamp, period)
      VALUES (?, ?, ?, ?, ?, ?)
    `));
    /* istanbul ignore next */
    cov_1uf5qqmc8s().s[74]++;
    stmt.run(metricType, metricName, value, dimensions ?
    /* istanbul ignore next */
    (cov_1uf5qqmc8s().b[17][0]++, JSON.stringify(dimensions)) :
    /* istanbul ignore next */
    (cov_1uf5qqmc8s().b[17][1]++, null), Date.now(), period);
  }
  async getMetrics(metricType, metricName, startTime, endTime, period) {
    /* istanbul ignore next */
    cov_1uf5qqmc8s().f[11]++;
    let sql =
    /* istanbul ignore next */
    (cov_1uf5qqmc8s().s[75]++, `
      SELECT metric_name, value, dimensions, timestamp, period
      FROM analytics_metrics
      WHERE metric_type = ? AND metric_name = ?
    `);
    const params =
    /* istanbul ignore next */
    (cov_1uf5qqmc8s().s[76]++, [metricType, metricName]);
    /* istanbul ignore next */
    cov_1uf5qqmc8s().s[77]++;
    if (startTime) {
      /* istanbul ignore next */
      cov_1uf5qqmc8s().b[18][0]++;
      cov_1uf5qqmc8s().s[78]++;
      sql += ` AND timestamp >= ?`;
      /* istanbul ignore next */
      cov_1uf5qqmc8s().s[79]++;
      params.push(startTime.getTime());
    } else
    /* istanbul ignore next */
    {
      cov_1uf5qqmc8s().b[18][1]++;
    }
    cov_1uf5qqmc8s().s[80]++;
    if (endTime) {
      /* istanbul ignore next */
      cov_1uf5qqmc8s().b[19][0]++;
      cov_1uf5qqmc8s().s[81]++;
      sql += ` AND timestamp <= ?`;
      /* istanbul ignore next */
      cov_1uf5qqmc8s().s[82]++;
      params.push(endTime.getTime());
    } else
    /* istanbul ignore next */
    {
      cov_1uf5qqmc8s().b[19][1]++;
    }
    cov_1uf5qqmc8s().s[83]++;
    if (period) {
      /* istanbul ignore next */
      cov_1uf5qqmc8s().b[20][0]++;
      cov_1uf5qqmc8s().s[84]++;
      sql += ` AND period = ?`;
      /* istanbul ignore next */
      cov_1uf5qqmc8s().s[85]++;
      params.push(period);
    } else
    /* istanbul ignore next */
    {
      cov_1uf5qqmc8s().b[20][1]++;
    }
    cov_1uf5qqmc8s().s[86]++;
    sql += ` ORDER BY timestamp DESC`;
    const stmt =
    /* istanbul ignore next */
    (cov_1uf5qqmc8s().s[87]++, this.db.prepare(sql));
    const rows =
    /* istanbul ignore next */
    (cov_1uf5qqmc8s().s[88]++, stmt.all(...params));
    /* istanbul ignore next */
    cov_1uf5qqmc8s().s[89]++;
    return rows.map(row => {
      /* istanbul ignore next */
      cov_1uf5qqmc8s().f[12]++;
      const typedRow =
      /* istanbul ignore next */
      (cov_1uf5qqmc8s().s[90]++, row);
      /* istanbul ignore next */
      cov_1uf5qqmc8s().s[91]++;
      return {
        metric_name: typedRow.metric_name,
        value: typedRow.value,
        dimensions: typedRow.dimensions ?
        /* istanbul ignore next */
        (cov_1uf5qqmc8s().b[21][0]++, JSON.parse(typedRow.dimensions)) :
        /* istanbul ignore next */
        (cov_1uf5qqmc8s().b[21][1]++, null),
        timestamp: new Date(typedRow.timestamp),
        period: typedRow.period
      };
    });
  }
  async clearOldEvents(olderThanDays =
  /* istanbul ignore next */
  (cov_1uf5qqmc8s().b[22][0]++, 90)) {
    /* istanbul ignore next */
    cov_1uf5qqmc8s().f[13]++;
    const cutoffTime =
    /* istanbul ignore next */
    (cov_1uf5qqmc8s().s[92]++, new Date());
    /* istanbul ignore next */
    cov_1uf5qqmc8s().s[93]++;
    cutoffTime.setDate(cutoffTime.getDate() - olderThanDays);
    const stmt =
    /* istanbul ignore next */
    (cov_1uf5qqmc8s().s[94]++, this.db.prepare(`
      DELETE FROM analytics_events
      WHERE timestamp < ?
    `));
    const result =
    /* istanbul ignore next */
    (cov_1uf5qqmc8s().s[95]++, stmt.run(cutoffTime.getTime()));
    /* istanbul ignore next */
    cov_1uf5qqmc8s().s[96]++;
    return result.changes;
  }
}
/* istanbul ignore next */
cov_1uf5qqmc8s().s[97]++;
exports.EventStore = EventStore;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,