b09a408348ccd3a212dd8eb2b73ff2e8
"use strict";

/* istanbul ignore next */
function cov_9dxcld1y5() {
  var path = "/workspaces/prompt-card-system/backend/src/middleware/security.ts";
  var hash = "259c158f597270c49005be9da7827108b4b838b3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/prompt-card-system/backend/src/middleware/security.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 213
        }
      },
      "4": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 51
        }
      },
      "5": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 34
        }
      },
      "6": {
        start: {
          line: 9,
          column: 19
        },
        end: {
          line: 9,
          column: 21
        }
      },
      "7": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 40
        }
      },
      "8": {
        start: {
          line: 12,
          column: 26
        },
        end: {
          line: 19,
          column: 1
        }
      },
      "9": {
        start: {
          line: 13,
          column: 18
        },
        end: {
          line: 13,
          column: 63
        }
      },
      "10": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 50
        }
      },
      "11": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 47
        }
      },
      "12": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 31
        }
      },
      "13": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 17
        }
      },
      "14": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 20,
          column: 46
        }
      },
      "15": {
        start: {
          line: 22,
          column: 26
        },
        end: {
          line: 29,
          column: 1
        }
      },
      "16": {
        start: {
          line: 23,
          column: 19
        },
        end: {
          line: 23,
          column: 40
        }
      },
      "17": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 27,
          column: 5
        }
      },
      "18": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 37
        }
      },
      "19": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 21
        }
      },
      "20": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 34
        }
      },
      "21": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 30,
          column: 46
        }
      },
      "22": {
        start: {
          line: 32,
          column: 33
        },
        end: {
          line: 39,
          column: 1
        }
      },
      "23": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 26
        }
      },
      "24": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 38,
          column: 7
        }
      },
      "25": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "26": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 41
        }
      },
      "27": {
        start: {
          line: 41,
          column: 23
        },
        end: {
          line: 63,
          column: 1
        }
      },
      "28": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "29": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 15
        }
      },
      "30": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 15
        }
      },
      "31": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "32": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 15
        }
      },
      "33": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 15
        }
      },
      "34": {
        start: {
          line: 52,
          column: 22
        },
        end: {
          line: 52,
          column: 49
        }
      },
      "35": {
        start: {
          line: 53,
          column: 22
        },
        end: {
          line: 53,
          column: 49
        }
      },
      "36": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "37": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 59,
          column: 11
        }
      },
      "38": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 15
        }
      },
      "39": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 11
        }
      },
      "40": {
        start: {
          line: 64,
          column: 0
        },
        end: {
          line: 64,
          column: 40
        }
      },
      "41": {
        start: {
          line: 66,
          column: 21
        },
        end: {
          line: 76,
          column: 1
        }
      },
      "42": {
        start: {
          line: 67,
          column: 22
        },
        end: {
          line: 67,
          column: 98
        }
      },
      "43": {
        start: {
          line: 68,
          column: 18
        },
        end: {
          line: 68,
          column: 59
        }
      },
      "44": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 75,
          column: 7
        }
      },
      "45": {
        start: {
          line: 77,
          column: 0
        },
        end: {
          line: 77,
          column: 36
        }
      },
      "46": {
        start: {
          line: 79,
          column: 0
        },
        end: {
          line: 113,
          column: 3
        }
      },
      "47": {
        start: {
          line: 115,
          column: 18
        },
        end: {
          line: 120,
          column: 1
        }
      },
      "48": {
        start: {
          line: 116,
          column: 22
        },
        end: {
          line: 116,
          column: 98
        }
      },
      "49": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 117,
          column: 44
        }
      },
      "50": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 118,
          column: 45
        }
      },
      "51": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 119,
          column: 11
        }
      },
      "52": {
        start: {
          line: 121,
          column: 0
        },
        end: {
          line: 121,
          column: 30
        }
      },
      "53": {
        start: {
          line: 123,
          column: 23
        },
        end: {
          line: 135,
          column: 1
        }
      },
      "54": {
        start: {
          line: 124,
          column: 22
        },
        end: {
          line: 124,
          column: 32
        }
      },
      "55": {
        start: {
          line: 125,
          column: 20
        },
        end: {
          line: 132,
          column: 5
        }
      },
      "56": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 133,
          column: 68
        }
      },
      "57": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 134,
          column: 11
        }
      },
      "58": {
        start: {
          line: 136,
          column: 0
        },
        end: {
          line: 136,
          column: 40
        }
      },
      "59": {
        start: {
          line: 138,
          column: 24
        },
        end: {
          line: 147,
          column: 1
        }
      },
      "60": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 139,
          column: 45
        }
      },
      "61": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 140,
          column: 55
        }
      },
      "62": {
        start: {
          line: 141,
          column: 4
        },
        end: {
          line: 141,
          column: 55
        }
      },
      "63": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 142,
          column: 92
        }
      },
      "64": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 143,
          column: 40
        }
      },
      "65": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 144,
          column: 34
        }
      },
      "66": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 145,
          column: 37
        }
      },
      "67": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 146,
          column: 11
        }
      },
      "68": {
        start: {
          line: 148,
          column: 0
        },
        end: {
          line: 148,
          column: 42
        }
      },
      "69": {
        start: {
          line: 150,
          column: 0
        },
        end: {
          line: 152,
          column: 19
        }
      },
      "70": {
        start: {
          line: 151,
          column: 4
        },
        end: {
          line: 151,
          column: 31
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 26
          },
          end: {
            line: 12,
            column: 27
          }
        },
        loc: {
          start: {
            line: 12,
            column: 41
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 26
          },
          end: {
            line: 22,
            column: 27
          }
        },
        loc: {
          start: {
            line: 22,
            column: 48
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 32,
            column: 33
          },
          end: {
            line: 32,
            column: 34
          }
        },
        loc: {
          start: {
            line: 32,
            column: 39
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 32
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 34,
            column: 36
          },
          end: {
            line: 34,
            column: 37
          }
        },
        loc: {
          start: {
            line: 34,
            column: 49
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 34
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 41,
            column: 23
          },
          end: {
            line: 41,
            column: 24
          }
        },
        loc: {
          start: {
            line: 41,
            column: 43
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 41
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 66,
            column: 21
          },
          end: {
            line: 66,
            column: 22
          }
        },
        loc: {
          start: {
            line: 66,
            column: 35
          },
          end: {
            line: 76,
            column: 1
          }
        },
        line: 66
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 115,
            column: 18
          },
          end: {
            line: 115,
            column: 19
          }
        },
        loc: {
          start: {
            line: 115,
            column: 38
          },
          end: {
            line: 120,
            column: 1
          }
        },
        line: 115
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 123,
            column: 23
          },
          end: {
            line: 123,
            column: 24
          }
        },
        loc: {
          start: {
            line: 123,
            column: 43
          },
          end: {
            line: 135,
            column: 1
          }
        },
        line: 123
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 138,
            column: 24
          },
          end: {
            line: 138,
            column: 25
          }
        },
        loc: {
          start: {
            line: 138,
            column: 44
          },
          end: {
            line: 147,
            column: 1
          }
        },
        line: 138
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 150,
            column: 12
          },
          end: {
            line: 150,
            column: 13
          }
        },
        loc: {
          start: {
            line: 150,
            column: 18
          },
          end: {
            line: 152,
            column: 1
          }
        },
        line: 150
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "4": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 15
          }
        }, {
          start: {
            line: 24,
            column: 19
          },
          end: {
            line: 24,
            column: 46
          }
        }],
        line: 24
      },
      "5": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "6": {
        loc: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "7": {
        loc: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "8": {
        loc: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "9": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 54,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 54,
            column: 18
          }
        }, {
          start: {
            line: 54,
            column: 22
          },
          end: {
            line: 54,
            column: 32
          }
        }, {
          start: {
            line: 54,
            column: 36
          },
          end: {
            line: 54,
            column: 89
          }
        }],
        line: 54
      },
      "10": {
        loc: {
          start: {
            line: 67,
            column: 22
          },
          end: {
            line: 67,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 22
          },
          end: {
            line: 67,
            column: 49
          }
        }, {
          start: {
            line: 67,
            column: 53
          },
          end: {
            line: 67,
            column: 98
          }
        }],
        line: 67
      },
      "11": {
        loc: {
          start: {
            line: 116,
            column: 22
          },
          end: {
            line: 116,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 22
          },
          end: {
            line: 116,
            column: 49
          }
        }, {
          start: {
            line: 116,
            column: 53
          },
          end: {
            line: 116,
            column: 98
          }
        }],
        line: 116
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    inputSourceMap: {
      file: "/workspaces/prompt-card-system/backend/src/middleware/security.ts",
      mappings: "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",
      names: [],
      sources: ["/workspaces/prompt-card-system/backend/src/middleware/security.ts"],
      sourcesContent: ["import { Request, Response, NextFunction } from 'express';\nimport helmet from 'helmet';\nimport { randomBytes, createHash } from 'crypto';\n\n// CSRF Protection\ninterface CSRFStore {\n  [sessionId: string]: {\n    token: string;\n    expires: number;\n  };\n}\n\nconst csrfTokens: CSRFStore = {};\nconst CSRF_TOKEN_EXPIRY = 60 * 60 * 1000; // 1 hour\n\n// Generate CSRF token\nexport const generateCSRFToken = (sessionId: string): string => {\n  const token = randomBytes(32).toString('hex');\n  const expires = Date.now() + CSRF_TOKEN_EXPIRY;\n  \n  csrfTokens[sessionId] = { token, expires };\n  \n  // Clean up expired tokens\n  cleanupExpiredCSRFTokens();\n  \n  return token;\n};\n\n// Validate CSRF token\nexport const validateCSRFToken = (sessionId: string, token: string): boolean => {\n  const stored = csrfTokens[sessionId];\n  \n  if (!stored || stored.expires < Date.now()) {\n    delete csrfTokens[sessionId];\n    return false;\n  }\n  \n  return stored.token === token;\n};\n\n// Clean up expired CSRF tokens\nconst cleanupExpiredCSRFTokens = (): void => {\n  const now = Date.now();\n  Object.keys(csrfTokens).forEach(sessionId => {\n    if (csrfTokens[sessionId].expires < now) {\n      delete csrfTokens[sessionId];\n    }\n  });\n};\n\n// CSRF middleware\nexport const csrfProtection = (req: Request, res: Response, next: NextFunction): void => {\n  // Skip CSRF for GET, HEAD, OPTIONS requests\n  if (['GET', 'HEAD', 'OPTIONS'].includes(req.method)) {\n    next();\n    return;\n  }\n  \n  // Skip CSRF for API endpoints that use Bearer token authentication\n  if (req.headers.authorization?.startsWith('Bearer ')) {\n    next();\n    return;\n  }\n  \n  const sessionId = req.headers['x-session-id'] as string;\n  const csrfToken = req.headers['x-csrf-token'] as string;\n  \n  if (!sessionId || !csrfToken || !validateCSRFToken(sessionId, csrfToken)) {\n    res.status(403).json({\n      success: false,\n      error: 'Invalid or missing CSRF token',\n      code: 'CSRF_TOKEN_INVALID'\n    });\n    return;\n  }\n  \n  next();\n};\n\n// Generate CSRF token endpoint\nexport const getCSRFToken = (req: Request, res: Response): void => {\n  const sessionId = req.headers['x-session-id'] as string || randomBytes(16).toString('hex');\n  const token = generateCSRFToken(sessionId);\n  \n  res.json({\n    success: true,\n    data: {\n      csrfToken: token,\n      sessionId: sessionId\n    }\n  });\n};\n\n// Enhanced Helmet configuration\nexport const enhancedHelmetConfig = helmet({\n  contentSecurityPolicy: {\n    directives: {\n      defaultSrc: [\"'self'\"],\n      scriptSrc: [\"'self'\", \"'unsafe-inline'\", \"https://cdnjs.cloudflare.com\"],\n      styleSrc: [\"'self'\", \"'unsafe-inline'\", \"https://fonts.googleapis.com\"],\n      fontSrc: [\"'self'\", \"https://fonts.gstatic.com\", \"data:\"],\n      imgSrc: [\"'self'\", \"data:\", \"https:\", \"blob:\"],\n      connectSrc: [\"'self'\", \"ws:\", \"wss:\", \"http://localhost:*\"],\n      mediaSrc: [\"'self'\"],\n      objectSrc: [\"'none'\"],\n      frameSrc: [\"'none'\"],\n      baseUri: [\"'self'\"],\n      formAction: [\"'self'\"],\n      frameAncestors: [\"'none'\"]\n    }\n  },\n  crossOriginEmbedderPolicy: { policy: 'credentialless' },\n  crossOriginOpenerPolicy: { policy: 'same-origin' },\n  crossOriginResourcePolicy: { policy: 'cross-origin' },\n  dnsPrefetchControl: { allow: false },\n  frameguard: { action: 'deny' },\n  hidePoweredBy: true,\n  hsts: {\n    maxAge: 31536000,\n    includeSubDomains: true,\n    preload: true\n  },\n  ieNoOpen: true,\n  noSniff: true,\n  originAgentCluster: true,\n  permittedCrossDomainPolicies: false,\n  referrerPolicy: { policy: 'no-referrer' },\n  xssFilter: true\n});\n\n// Request ID middleware for tracing\nexport const requestId = (req: Request, res: Response, next: NextFunction): void => {\n  const requestId = req.headers['x-request-id'] as string || randomBytes(16).toString('hex');\n  req.headers['x-request-id'] = requestId;\n  res.setHeader('x-request-id', requestId);\n  next();\n};\n\n// Request logging middleware with security context\nexport const securityLogger = (req: Request, res: Response, next: NextFunction): void => {\n  const startTime = Date.now();\n  \n  const logData = {\n    timestamp: new Date().toISOString(),\n    method: req.method,\n    url: req.url,\n    ip: req.ip,\n    userAgent: req.headers['user-agent'],\n    requestId: req.headers['x-request-id']\n  };\n  \n  console.log('Security Log - Request:', JSON.stringify(logData));\n  \n  next();\n};\n\n// Security headers middleware\nexport const securityHeaders = (req: Request, res: Response, next: NextFunction): void => {\n  res.setHeader('X-Frame-Options', 'DENY');\n  res.setHeader('X-Content-Type-Options', 'nosniff');\n  res.setHeader('X-XSS-Protection', '1; mode=block');\n  res.setHeader('Cache-Control', 'no-store, no-cache, must-revalidate, proxy-revalidate');\n  res.setHeader('Pragma', 'no-cache');\n  res.setHeader('Expires', '0');\n  res.removeHeader('X-Powered-By');\n  \n  next();\n};\n\n// Clean up security resources periodically\nsetInterval(() => {\n  cleanupExpiredCSRFTokens();\n}, 60 * 60 * 1000); // Clean up every hour"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "259c158f597270c49005be9da7827108b4b838b3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_9dxcld1y5 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_9dxcld1y5();
var __importDefault =
/* istanbul ignore next */
(cov_9dxcld1y5().s[0]++,
/* istanbul ignore next */
(cov_9dxcld1y5().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_9dxcld1y5().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_9dxcld1y5().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_9dxcld1y5().f[0]++;
  cov_9dxcld1y5().s[1]++;
  return /* istanbul ignore next */(cov_9dxcld1y5().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_9dxcld1y5().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_9dxcld1y5().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_9dxcld1y5().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_9dxcld1y5().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_9dxcld1y5().s[3]++;
exports.securityHeaders = exports.securityLogger = exports.requestId = exports.enhancedHelmetConfig = exports.getCSRFToken = exports.csrfProtection = exports.validateCSRFToken = exports.generateCSRFToken = void 0;
const helmet_1 =
/* istanbul ignore next */
(cov_9dxcld1y5().s[4]++, __importDefault(require("helmet")));
const crypto_1 =
/* istanbul ignore next */
(cov_9dxcld1y5().s[5]++, require("crypto"));
const csrfTokens =
/* istanbul ignore next */
(cov_9dxcld1y5().s[6]++, {});
const CSRF_TOKEN_EXPIRY =
/* istanbul ignore next */
(cov_9dxcld1y5().s[7]++, 60 * 60 * 1000); // 1 hour
// Generate CSRF token
/* istanbul ignore next */
cov_9dxcld1y5().s[8]++;
const generateCSRFToken = sessionId => {
  /* istanbul ignore next */
  cov_9dxcld1y5().f[1]++;
  const token =
  /* istanbul ignore next */
  (cov_9dxcld1y5().s[9]++, (0, crypto_1.randomBytes)(32).toString('hex'));
  const expires =
  /* istanbul ignore next */
  (cov_9dxcld1y5().s[10]++, Date.now() + CSRF_TOKEN_EXPIRY);
  /* istanbul ignore next */
  cov_9dxcld1y5().s[11]++;
  csrfTokens[sessionId] = {
    token,
    expires
  };
  // Clean up expired tokens
  /* istanbul ignore next */
  cov_9dxcld1y5().s[12]++;
  cleanupExpiredCSRFTokens();
  /* istanbul ignore next */
  cov_9dxcld1y5().s[13]++;
  return token;
};
/* istanbul ignore next */
cov_9dxcld1y5().s[14]++;
exports.generateCSRFToken = generateCSRFToken;
// Validate CSRF token
/* istanbul ignore next */
cov_9dxcld1y5().s[15]++;
const validateCSRFToken = (sessionId, token) => {
  /* istanbul ignore next */
  cov_9dxcld1y5().f[2]++;
  const stored =
  /* istanbul ignore next */
  (cov_9dxcld1y5().s[16]++, csrfTokens[sessionId]);
  /* istanbul ignore next */
  cov_9dxcld1y5().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_9dxcld1y5().b[4][0]++, !stored) ||
  /* istanbul ignore next */
  (cov_9dxcld1y5().b[4][1]++, stored.expires < Date.now())) {
    /* istanbul ignore next */
    cov_9dxcld1y5().b[3][0]++;
    cov_9dxcld1y5().s[18]++;
    delete csrfTokens[sessionId];
    /* istanbul ignore next */
    cov_9dxcld1y5().s[19]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_9dxcld1y5().b[3][1]++;
  }
  cov_9dxcld1y5().s[20]++;
  return stored.token === token;
};
/* istanbul ignore next */
cov_9dxcld1y5().s[21]++;
exports.validateCSRFToken = validateCSRFToken;
// Clean up expired CSRF tokens
/* istanbul ignore next */
cov_9dxcld1y5().s[22]++;
const cleanupExpiredCSRFTokens = () => {
  /* istanbul ignore next */
  cov_9dxcld1y5().f[3]++;
  const now =
  /* istanbul ignore next */
  (cov_9dxcld1y5().s[23]++, Date.now());
  /* istanbul ignore next */
  cov_9dxcld1y5().s[24]++;
  Object.keys(csrfTokens).forEach(sessionId => {
    /* istanbul ignore next */
    cov_9dxcld1y5().f[4]++;
    cov_9dxcld1y5().s[25]++;
    if (csrfTokens[sessionId].expires < now) {
      /* istanbul ignore next */
      cov_9dxcld1y5().b[5][0]++;
      cov_9dxcld1y5().s[26]++;
      delete csrfTokens[sessionId];
    } else
    /* istanbul ignore next */
    {
      cov_9dxcld1y5().b[5][1]++;
    }
  });
};
// CSRF middleware
/* istanbul ignore next */
cov_9dxcld1y5().s[27]++;
const csrfProtection = (req, res, next) => {
  /* istanbul ignore next */
  cov_9dxcld1y5().f[5]++;
  cov_9dxcld1y5().s[28]++;
  // Skip CSRF for GET, HEAD, OPTIONS requests
  if (['GET', 'HEAD', 'OPTIONS'].includes(req.method)) {
    /* istanbul ignore next */
    cov_9dxcld1y5().b[6][0]++;
    cov_9dxcld1y5().s[29]++;
    next();
    /* istanbul ignore next */
    cov_9dxcld1y5().s[30]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_9dxcld1y5().b[6][1]++;
  }
  // Skip CSRF for API endpoints that use Bearer token authentication
  cov_9dxcld1y5().s[31]++;
  if (req.headers.authorization?.startsWith('Bearer ')) {
    /* istanbul ignore next */
    cov_9dxcld1y5().b[7][0]++;
    cov_9dxcld1y5().s[32]++;
    next();
    /* istanbul ignore next */
    cov_9dxcld1y5().s[33]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_9dxcld1y5().b[7][1]++;
  }
  const sessionId =
  /* istanbul ignore next */
  (cov_9dxcld1y5().s[34]++, req.headers['x-session-id']);
  const csrfToken =
  /* istanbul ignore next */
  (cov_9dxcld1y5().s[35]++, req.headers['x-csrf-token']);
  /* istanbul ignore next */
  cov_9dxcld1y5().s[36]++;
  if (
  /* istanbul ignore next */
  (cov_9dxcld1y5().b[9][0]++, !sessionId) ||
  /* istanbul ignore next */
  (cov_9dxcld1y5().b[9][1]++, !csrfToken) ||
  /* istanbul ignore next */
  (cov_9dxcld1y5().b[9][2]++, !(0, exports.validateCSRFToken)(sessionId, csrfToken))) {
    /* istanbul ignore next */
    cov_9dxcld1y5().b[8][0]++;
    cov_9dxcld1y5().s[37]++;
    res.status(403).json({
      success: false,
      error: 'Invalid or missing CSRF token',
      code: 'CSRF_TOKEN_INVALID'
    });
    /* istanbul ignore next */
    cov_9dxcld1y5().s[38]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_9dxcld1y5().b[8][1]++;
  }
  cov_9dxcld1y5().s[39]++;
  next();
};
/* istanbul ignore next */
cov_9dxcld1y5().s[40]++;
exports.csrfProtection = csrfProtection;
// Generate CSRF token endpoint
/* istanbul ignore next */
cov_9dxcld1y5().s[41]++;
const getCSRFToken = (req, res) => {
  /* istanbul ignore next */
  cov_9dxcld1y5().f[6]++;
  const sessionId =
  /* istanbul ignore next */
  (cov_9dxcld1y5().s[42]++,
  /* istanbul ignore next */
  (cov_9dxcld1y5().b[10][0]++, req.headers['x-session-id']) ||
  /* istanbul ignore next */
  (cov_9dxcld1y5().b[10][1]++, (0, crypto_1.randomBytes)(16).toString('hex')));
  const token =
  /* istanbul ignore next */
  (cov_9dxcld1y5().s[43]++, (0, exports.generateCSRFToken)(sessionId));
  /* istanbul ignore next */
  cov_9dxcld1y5().s[44]++;
  res.json({
    success: true,
    data: {
      csrfToken: token,
      sessionId: sessionId
    }
  });
};
/* istanbul ignore next */
cov_9dxcld1y5().s[45]++;
exports.getCSRFToken = getCSRFToken;
// Enhanced Helmet configuration
/* istanbul ignore next */
cov_9dxcld1y5().s[46]++;
exports.enhancedHelmetConfig = (0, helmet_1.default)({
  contentSecurityPolicy: {
    directives: {
      defaultSrc: ["'self'"],
      scriptSrc: ["'self'", "'unsafe-inline'", "https://cdnjs.cloudflare.com"],
      styleSrc: ["'self'", "'unsafe-inline'", "https://fonts.googleapis.com"],
      fontSrc: ["'self'", "https://fonts.gstatic.com", "data:"],
      imgSrc: ["'self'", "data:", "https:", "blob:"],
      connectSrc: ["'self'", "ws:", "wss:", "http://localhost:*"],
      mediaSrc: ["'self'"],
      objectSrc: ["'none'"],
      frameSrc: ["'none'"],
      baseUri: ["'self'"],
      formAction: ["'self'"],
      frameAncestors: ["'none'"]
    }
  },
  crossOriginEmbedderPolicy: {
    policy: 'credentialless'
  },
  crossOriginOpenerPolicy: {
    policy: 'same-origin'
  },
  crossOriginResourcePolicy: {
    policy: 'cross-origin'
  },
  dnsPrefetchControl: {
    allow: false
  },
  frameguard: {
    action: 'deny'
  },
  hidePoweredBy: true,
  hsts: {
    maxAge: 31536000,
    includeSubDomains: true,
    preload: true
  },
  ieNoOpen: true,
  noSniff: true,
  originAgentCluster: true,
  permittedCrossDomainPolicies: false,
  referrerPolicy: {
    policy: 'no-referrer'
  },
  xssFilter: true
});
// Request ID middleware for tracing
/* istanbul ignore next */
cov_9dxcld1y5().s[47]++;
const requestId = (req, res, next) => {
  /* istanbul ignore next */
  cov_9dxcld1y5().f[7]++;
  const requestId =
  /* istanbul ignore next */
  (cov_9dxcld1y5().s[48]++,
  /* istanbul ignore next */
  (cov_9dxcld1y5().b[11][0]++, req.headers['x-request-id']) ||
  /* istanbul ignore next */
  (cov_9dxcld1y5().b[11][1]++, (0, crypto_1.randomBytes)(16).toString('hex')));
  /* istanbul ignore next */
  cov_9dxcld1y5().s[49]++;
  req.headers['x-request-id'] = requestId;
  /* istanbul ignore next */
  cov_9dxcld1y5().s[50]++;
  res.setHeader('x-request-id', requestId);
  /* istanbul ignore next */
  cov_9dxcld1y5().s[51]++;
  next();
};
/* istanbul ignore next */
cov_9dxcld1y5().s[52]++;
exports.requestId = requestId;
// Request logging middleware with security context
/* istanbul ignore next */
cov_9dxcld1y5().s[53]++;
const securityLogger = (req, res, next) => {
  /* istanbul ignore next */
  cov_9dxcld1y5().f[8]++;
  const startTime =
  /* istanbul ignore next */
  (cov_9dxcld1y5().s[54]++, Date.now());
  const logData =
  /* istanbul ignore next */
  (cov_9dxcld1y5().s[55]++, {
    timestamp: new Date().toISOString(),
    method: req.method,
    url: req.url,
    ip: req.ip,
    userAgent: req.headers['user-agent'],
    requestId: req.headers['x-request-id']
  });
  /* istanbul ignore next */
  cov_9dxcld1y5().s[56]++;
  console.log('Security Log - Request:', JSON.stringify(logData));
  /* istanbul ignore next */
  cov_9dxcld1y5().s[57]++;
  next();
};
/* istanbul ignore next */
cov_9dxcld1y5().s[58]++;
exports.securityLogger = securityLogger;
// Security headers middleware
/* istanbul ignore next */
cov_9dxcld1y5().s[59]++;
const securityHeaders = (req, res, next) => {
  /* istanbul ignore next */
  cov_9dxcld1y5().f[9]++;
  cov_9dxcld1y5().s[60]++;
  res.setHeader('X-Frame-Options', 'DENY');
  /* istanbul ignore next */
  cov_9dxcld1y5().s[61]++;
  res.setHeader('X-Content-Type-Options', 'nosniff');
  /* istanbul ignore next */
  cov_9dxcld1y5().s[62]++;
  res.setHeader('X-XSS-Protection', '1; mode=block');
  /* istanbul ignore next */
  cov_9dxcld1y5().s[63]++;
  res.setHeader('Cache-Control', 'no-store, no-cache, must-revalidate, proxy-revalidate');
  /* istanbul ignore next */
  cov_9dxcld1y5().s[64]++;
  res.setHeader('Pragma', 'no-cache');
  /* istanbul ignore next */
  cov_9dxcld1y5().s[65]++;
  res.setHeader('Expires', '0');
  /* istanbul ignore next */
  cov_9dxcld1y5().s[66]++;
  res.removeHeader('X-Powered-By');
  /* istanbul ignore next */
  cov_9dxcld1y5().s[67]++;
  next();
};
/* istanbul ignore next */
cov_9dxcld1y5().s[68]++;
exports.securityHeaders = securityHeaders;
// Clean up security resources periodically
/* istanbul ignore next */
cov_9dxcld1y5().s[69]++;
setInterval(() => {
  /* istanbul ignore next */
  cov_9dxcld1y5().f[10]++;
  cov_9dxcld1y5().s[70]++;
  cleanupExpiredCSRFTokens();
}, 60 * 60 * 1000); // Clean up every hour
//# sourceMappingURL=data:application/json;charset=utf-8;base64,