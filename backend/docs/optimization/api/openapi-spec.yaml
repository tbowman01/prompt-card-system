openapi: 3.0.0
info:
  title: Prompt Card System Optimization API
  version: 1.0.0
  description: |
    Comprehensive API for the Prompt Card System optimization strategies including:
    - AdvancedKVCache with MorphKV adaptive optimization
    - RealTimeOptimizer with ML-driven feedback loops  
    - EdgeOptimizer with distributed computing architecture
    
    This API provides endpoints for optimization management, performance monitoring,
    and real-time analytics for production deployment.
    
  contact:
    name: Prompt Card System Team
    email: support@promptcard.dev
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.promptcard.dev/v1
    description: Production server
  - url: https://staging-api.promptcard.dev/v1
    description: Staging server
  - url: http://localhost:3000/api
    description: Development server

security:
  - bearerAuth: []

paths:
  /optimization/analyze:
    post:
      summary: Analyze prompt effectiveness
      description: Analyze prompt effectiveness and generate comprehensive insights
      tags:
        - Prompt Analysis
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - promptId
                - promptText
              properties:
                promptId:
                  type: string
                  description: Unique identifier for the prompt
                  example: "prompt_123"
                promptText:
                  type: string
                  description: The prompt text to analyze
                  example: "Analyze the sentiment of this customer review"
                timeRange:
                  type: object
                  description: Time range for analysis
                  properties:
                    start:
                      type: string
                      format: date-time
                    end:
                      type: string
                      format: date-time
            examples:
              basic_analysis:
                summary: Basic prompt analysis
                value:
                  promptId: "prompt_123"
                  promptText: "Analyze the sentiment of this customer review"
                  timeRange:
                    start: "2024-01-01T00:00:00Z"
                    end: "2024-01-31T23:59:59Z"
      responses:
        '200':
          description: Analysis completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/PromptAnalysisResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /optimization/suggestions:
    post:
      summary: Generate optimization suggestions
      description: Generate AI-powered optimization suggestions for prompts
      tags:
        - Optimization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - originalPrompt
              properties:
                originalPrompt:
                  type: string
                  description: Original prompt to optimize
                  example: "Write a summary of this text"
                targetMetrics:
                  type: object
                  description: Target performance metrics
                  properties:
                    successRate:
                      type: number
                      minimum: 0
                      maximum: 100
                      example: 95
                    responseTime:
                      type: number
                      minimum: 0
                      example: 500
                    qualityScore:
                      type: number
                      minimum: 0
                      maximum: 100
                      example: 90
                constraints:
                  type: object
                  description: Optimization constraints
                  properties:
                    maxLength:
                      type: integer
                      minimum: 1
                      example: 500
                    maintainStyle:
                      type: boolean
                      example: true
                    securityLevel:
                      type: string
                      enum: [basic, enhanced, strict]
                      example: "enhanced"
            examples:
              optimization_request:
                summary: Optimization request with constraints
                value:
                  originalPrompt: "Write a summary of this text"
                  targetMetrics:
                    successRate: 95
                    responseTime: 300
                    qualityScore: 90
                  constraints:
                    maxLength: 400
                    maintainStyle: true
                    securityLevel: "enhanced"
      responses:
        '200':
          description: Optimization suggestions generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/OptimizationSuggestion'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /optimization/ab-test:
    post:
      summary: Create A/B test
      description: Create and configure A/B test for prompt variants
      tags:
        - A/B Testing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ABTestConfiguration'
            examples:
              ab_test_config:
                summary: A/B test configuration
                value:
                  name: "Prompt Clarity Test"
                  variants:
                    - id: "control"
                      name: "Original Prompt"
                      prompt: "Summarize this text"
                      weight: 50
                    - id: "variant_a"
                      name: "Enhanced Clarity"
                      prompt: "Please provide a concise summary of the following text"
                      weight: 50
                  metrics:
                    primaryMetric: "success_rate"
                    secondaryMetrics: ["response_time", "quality_score"]
                  duration:
                    startDate: "2024-02-01T00:00:00Z"
                    endDate: "2024-02-15T23:59:59Z"
                    minSamples: 1000
      responses:
        '201':
          description: A/B test created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ABTestConfiguration'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /optimization/ab-test/{testId}/start:
    post:
      summary: Start A/B test
      description: Start an existing A/B test
      tags:
        - A/B Testing
      parameters:
        - name: testId
          in: path
          required: true
          schema:
            type: string
          description: A/B test identifier
          example: "ab_test_12345"
      responses:
        '200':
          description: A/B test started successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "A/B test ab_test_12345 started successfully"
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /optimization/ab-test/{testId}/result:
    post:
      summary: Record A/B test result
      description: Record execution result for A/B test variant
      tags:
        - A/B Testing
      parameters:
        - name: testId
          in: path
          required: true
          schema:
            type: string
          description: A/B test identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - variantId
                - result
              properties:
                variantId:
                  type: string
                  description: Variant identifier
                  example: "variant_a"
                result:
                  type: object
                  required:
                    - responseTime
                    - success
                    - qualityScore
                  properties:
                    responseTime:
                      type: number
                      minimum: 0
                      description: Response time in milliseconds
                      example: 245
                    success:
                      type: boolean
                      description: Whether the execution was successful
                      example: true
                    qualityScore:
                      type: number
                      minimum: 0
                      maximum: 100
                      description: Quality score of the response
                      example: 88
                    metadata:
                      type: object
                      description: Additional metadata
                      additionalProperties: true
      responses:
        '200':
          description: Result recorded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'

  /optimization/cache/stats:
    get:
      summary: Get cache statistics
      description: Retrieve comprehensive cache statistics and performance metrics
      tags:
        - Cache Management
      responses:
        '200':
          description: Cache statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      optimizationEngine:
                        $ref: '#/components/schemas/CacheStats'
                      advancedMetrics:
                        $ref: '#/components/schemas/AdvancedCacheStats'
                      standaloneCacheMetrics:
                        $ref: '#/components/schemas/CacheMetrics'
                      timestamp:
                        type: string
                        format: date-time

  /optimization/cache/memory-pressure:
    get:
      summary: Get memory pressure status
      description: Get current memory pressure status and recommendations
      tags:
        - Cache Management
      responses:
        '200':
          description: Memory pressure status retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      optimizationEngine:
                        $ref: '#/components/schemas/MemoryPressureInfo'
                      standalone:
                        $ref: '#/components/schemas/MemoryPressureMetrics'
                      timestamp:
                        type: string
                        format: date-time

  /optimization/cache/optimize:
    post:
      summary: Force cache optimization
      description: Trigger immediate cache memory optimization
      tags:
        - Cache Management
      responses:
        '200':
          description: Cache optimization completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      optimizationEngine:
                        $ref: '#/components/schemas/OptimizationResult'
                      standalone:
                        $ref: '#/components/schemas/OptimizationResult'
                      message:
                        type: string
                        example: "Cache memory optimization completed successfully"
                      timestamp:
                        type: string
                        format: date-time

  /optimization/cache/config:
    post:
      summary: Update cache configuration
      description: Update cache configuration parameters
      tags:
        - Cache Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - cacheType
                - configuration
              properties:
                cacheType:
                  type: string
                  enum: [standalone]
                  description: Type of cache to configure
                  example: "standalone"
                configuration:
                  $ref: '#/components/schemas/CacheConfiguration'
      responses:
        '200':
          description: Configuration updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "standalone cache configuration updated successfully"
                  newConfiguration:
                    $ref: '#/components/schemas/CacheConfiguration'
                  timestamp:
                    type: string
                    format: date-time

  /optimization/edge/nodes:
    get:
      summary: List edge nodes
      description: Get list of all registered edge nodes
      tags:
        - Edge Computing
      parameters:
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: [all, online, offline]
          description: Filter nodes by status
          example: "online"
        - name: region
          in: query
          required: false
          schema:
            type: string
          description: Filter nodes by region
          example: "us-west"
      responses:
        '200':
          description: Edge nodes list retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/EdgeNode'

    post:
      summary: Register edge node
      description: Register a new edge node in the distributed system
      tags:
        - Edge Computing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EdgeNodeRegistration'
      responses:
        '201':
          description: Edge node registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/EdgeNodeRegistrationResult'

  /optimization/edge/nodes/{nodeId}:
    get:
      summary: Get edge node details
      description: Get detailed information about a specific edge node
      tags:
        - Edge Computing
      parameters:
        - name: nodeId
          in: path
          required: true
          schema:
            type: string
          description: Edge node identifier
      responses:
        '200':
          description: Edge node details retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/EdgeNode'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      summary: Remove edge node
      description: Remove an edge node from the distributed system
      tags:
        - Edge Computing
      parameters:
        - name: nodeId
          in: path
          required: true
          schema:
            type: string
          description: Edge node identifier
      responses:
        '200':
          description: Edge node removed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '404':
          $ref: '#/components/responses/NotFound'

  /optimization/edge/request:
    post:
      summary: Process edge optimization request
      description: Process optimization request using edge computing infrastructure
      tags:
        - Edge Computing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EdgeRequest'
      responses:
        '200':
          description: Request processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/EdgeResponse'

  /optimization/real-time/feedback:
    post:
      summary: Submit real-time feedback
      description: Submit feedback for real-time optimization learning
      tags:
        - Real-Time Optimization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RealTimeFeedback'
      responses:
        '200':
          description: Feedback processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'

  /optimization/health:
    get:
      summary: Health check
      description: Health check for optimization services
      tags:
        - Monitoring
      responses:
        '200':
          description: Services are healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "AI-powered prompt optimization services are running"
                  services:
                    type: object
                    properties:
                      promptAnalyzer:
                        type: string
                        example: "active"
                      optimizationEngine:
                        type: string
                        example: "active"
                      securityAnalyzer:
                        type: string
                        example: "active"
                      advancedKVCache:
                        type: string
                        example: "active"
                  cacheHealth:
                    type: object
                    properties:
                      hitRate:
                        type: number
                        example: 0.87
                      memoryPressure:
                        type: string
                        example: "low"
                      compressionRatio:
                        type: number
                        example: 2.3
                      alertsActive:
                        type: integer
                        example: 0
                  timestamp:
                    type: string
                    format: date-time

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    PromptAnalysisResult:
      type: object
      properties:
        promptId:
          type: string
          example: "prompt_123"
        analysis:
          type: object
          properties:
            effectiveness:
              type: object
              properties:
                score:
                  type: number
                  minimum: 0
                  maximum: 100
                  example: 85
                factors:
                  type: array
                  items:
                    type: string
                  example: ["clarity", "specificity", "context"]
            patterns:
              type: object
              properties:
                successPatterns:
                  type: array
                  items:
                    type: string
                failurePatterns:
                  type: array
                  items:
                    type: string
            metrics:
              type: object
              properties:
                consistencyScore:
                  type: number
                  example: 78
                averageResponseTime:
                  type: number
                  example: 234
        timestamp:
          type: string
          format: date-time

    OptimizationSuggestion:
      type: object
      properties:
        id:
          type: string
          example: "opt_12345_structure"
        originalPrompt:
          type: string
          example: "Write a summary"
        optimizedPrompt:
          type: string
          example: "Please write a concise summary of the following text"
        changes:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum: [structure, clarity, specificity, context, security]
                example: "clarity"
              description:
                type: string
                example: "Enhanced prompt clarity and reduced ambiguity"
              reasoning:
                type: string
                example: "More specific instructions improve response quality"
        expectedImprovement:
          type: object
          properties:
            successRate:
              type: number
              example: 15
            responseTime:
              type: number
              example: 5
            qualityScore:
              type: number
              example: 20
        confidence:
          type: number
          minimum: 0
          maximum: 1
          example: 0.85
        securityValidation:
          type: object
          properties:
            passed:
              type: boolean
              example: true
            issues:
              type: array
              items:
                type: string
            recommendations:
              type: array
              items:
                type: string
        timestamp:
          type: string
          format: date-time

    ABTestConfiguration:
      type: object
      required:
        - name
        - variants
        - metrics
        - duration
      properties:
        id:
          type: string
          example: "ab_test_12345"
        name:
          type: string
          example: "Prompt Clarity Test"
        variants:
          type: array
          minItems: 2
          items:
            type: object
            required:
              - id
              - name
              - prompt
              - weight
            properties:
              id:
                type: string
                example: "control"
              name:
                type: string
                example: "Original Prompt"
              prompt:
                type: string
                example: "Summarize this text"
              weight:
                type: number
                minimum: 0
                maximum: 100
                example: 50
        metrics:
          type: object
          required:
            - primaryMetric
          properties:
            primaryMetric:
              type: string
              enum: [success_rate, response_time, quality_score]
              example: "success_rate"
            secondaryMetrics:
              type: array
              items:
                type: string
              example: ["response_time", "quality_score"]
        duration:
          type: object
          required:
            - startDate
            - endDate
            - minSamples
          properties:
            startDate:
              type: string
              format: date-time
            endDate:
              type: string
              format: date-time
            minSamples:
              type: integer
              minimum: 100
              example: 1000
        status:
          type: string
          enum: [draft, running, completed, paused]
          example: "draft"

    EdgeNode:
      type: object
      properties:
        id:
          type: string
          example: "edge-us-west-1"
        location:
          type: object
          properties:
            region:
              type: string
              example: "us-west"
            city:
              type: string
              example: "San Francisco"
            country:
              type: string
              example: "US"
            latitude:
              type: number
              example: 37.7749
            longitude:
              type: number
              example: -122.4194
            timezone:
              type: string
              example: "America/Los_Angeles"
        capabilities:
          type: object
          properties:
            prompt_optimization:
              type: boolean
              example: true
            semantic_analysis:
              type: boolean
              example: true
            model_inference:
              type: boolean
              example: true
            vector_search:
              type: boolean
              example: true
            caching:
              type: boolean
              example: true
            compression:
              type: boolean
              example: true
            load_balancing:
              type: boolean
              example: true
        resources:
          type: object
          properties:
            cpu_cores:
              type: integer
              example: 8
            memory_gb:
              type: integer
              example: 32
            storage_gb:
              type: integer
              example: 500
            network_mbps:
              type: integer
              example: 1000
            gpu_count:
              type: integer
              example: 2
            gpu_memory_gb:
              type: integer
              example: 16
        status:
          type: object
          properties:
            online:
              type: boolean
              example: true
            last_heartbeat:
              type: string
              format: date-time
            current_load:
              type: number
              minimum: 0
              maximum: 1
              example: 0.35
            health_score:
              type: number
              minimum: 0
              maximum: 100
              example: 92

    EdgeNodeRegistration:
      type: object
      required:
        - id
        - location
        - capabilities
        - resources
      properties:
        id:
          type: string
          example: "edge-us-west-1"
        location:
          type: object
          required:
            - region
            - city
            - country
            - latitude
            - longitude
            - timezone
          properties:
            region:
              type: string
              example: "us-west"
            city:
              type: string
              example: "San Francisco"
            country:
              type: string
              example: "US"
            latitude:
              type: number
              example: 37.7749
            longitude:
              type: number
              example: -122.4194
            timezone:
              type: string
              example: "America/Los_Angeles"
        capabilities:
          type: object
          properties:
            prompt_optimization:
              type: boolean
              example: true
            semantic_analysis:
              type: boolean
              example: true
            model_inference:
              type: boolean
              example: false
            vector_search:
              type: boolean
              example: true
            caching:
              type: boolean
              example: true
            compression:
              type: boolean
              example: true
            load_balancing:
              type: boolean
              example: true
        resources:
          type: object
          required:
            - cpu_cores
            - memory_gb
            - storage_gb
            - network_mbps
          properties:
            cpu_cores:
              type: integer
              minimum: 2
              example: 8
            memory_gb:
              type: integer
              minimum: 4
              example: 32
            storage_gb:
              type: integer
              minimum: 50
              example: 500
            network_mbps:
              type: integer
              minimum: 100
              example: 1000
            gpu_count:
              type: integer
              minimum: 0
              example: 2
            gpu_memory_gb:
              type: integer
              minimum: 0
              example: 16

    EdgeNodeRegistrationResult:
      type: object
      properties:
        success:
          type: boolean
          example: true
        node_id:
          type: string
          example: "edge-us-west-1"
        deployment_time_ms:
          type: number
          example: 342.5
        initial_health_score:
          type: number
          example: 95
        assigned_workloads:
          type: array
          items:
            type: string
          example: []

    EdgeRequest:
      type: object
      required:
        - id
        - type
        - payload
        - priority
        - timeout_ms
        - cache_policy
      properties:
        id:
          type: string
          example: "req_12345"
        user_id:
          type: string
          example: "user_789"
        session_id:
          type: string
          example: "session_456"
        type:
          type: string
          enum: [optimize, analyze, search, generate, validate, cache_warm]
          example: "optimize"
        payload:
          type: object
          properties:
            prompt:
              type: string
              example: "Analyze this text for sentiment"
            query:
              type: string
              example: "search query"
            context:
              type: object
              additionalProperties: true
            parameters:
              type: object
              additionalProperties: true
            target_metrics:
              type: object
              properties:
                max_latency_ms:
                  type: integer
                  example: 500
                min_quality_score:
                  type: number
                  example: 85
                max_cost:
                  type: number
                  example: 0.01
        client_location:
          type: object
          properties:
            latitude:
              type: number
              example: 37.7749
            longitude:
              type: number
              example: -122.4194
            ip:
              type: string
              example: "192.168.1.1"
            user_agent:
              type: string
              example: "Mozilla/5.0..."
            isp:
              type: string
              example: "Comcast"
            connection_type:
              type: string
              example: "broadband"
        priority:
          type: string
          enum: [low, normal, high, critical, realtime]
          example: "high"
        timeout_ms:
          type: integer
          minimum: 100
          maximum: 30000
          example: 5000
        retry_count:
          type: integer
          minimum: 0
          maximum: 5
          example: 0
        cache_policy:
          type: object
          required:
            - enabled
          properties:
            enabled:
              type: boolean
              example: true
            ttl_minutes:
              type: integer
              example: 15
            key_prefix:
              type: string
              example: "opt_"
            invalidate_on_update:
              type: boolean
              example: false
        routing_preferences:
          type: object
          properties:
            preferred_regions:
              type: array
              items:
                type: string
              example: ["us-west", "us-east"]
            avoid_regions:
              type: array
              items:
                type: string
              example: ["ap-southeast"]
            max_hops:
              type: integer
              example: 2
            require_capabilities:
              type: array
              items:
                type: string
              example: ["prompt_optimization", "caching"]

    EdgeResponse:
      type: object
      properties:
        request_id:
          type: string
          example: "req_12345"
        result:
          type: object
          additionalProperties: true
        metadata:
          type: object
          properties:
            node_id:
              type: string
              example: "edge-us-west-1"
            model_id:
              type: string
              example: "prompt-optimizer-v2"
            model_version:
              type: string
              example: "2.1.0"
            processing_time_ms:
              type: number
              example: 234
            queue_time_ms:
              type: number
              example: 12
            cache_hit:
              type: boolean
              example: false
            confidence_score:
              type: number
              example: 0.88
            quality_metrics:
              type: object
              additionalProperties:
                type: number
            resource_usage:
              type: object
              properties:
                cpu_time_ms:
                  type: number
                  example: 234
                memory_peak_mb:
                  type: number
                  example: 75
                network_bytes:
                  type: integer
                  example: 1024
        performance:
          type: object
          properties:
            network_latency_ms:
              type: number
              example: 8
            processing_latency_ms:
              type: number
              example: 234
            total_latency_ms:
              type: number
              example: 242
            bytes_transferred:
              type: integer
              example: 2048
            compression_ratio:
              type: number
              example: 0.7
            cache_efficiency:
              type: number
              example: 0.85
        routing_info:
          type: object
          properties:
            hops_taken:
              type: integer
              example: 1
            alternative_nodes:
              type: array
              items:
                type: string
              example: []
            failover_used:
              type: boolean
              example: false
            geographic_distance_km:
              type: number
              example: 45.2
        cost_metrics:
          type: object
          properties:
            compute_cost:
              type: number
              example: 0.001
            network_cost:
              type: number
              example: 0.0001
            storage_cost:
              type: number
              example: 0.00001
            total_cost:
              type: number
              example: 0.00111

    RealTimeFeedback:
      type: object
      required:
        - id
        - promptId
        - metrics
        - context
      properties:
        id:
          type: string
          example: "feedback_12345"
        promptId:
          type: string
          example: "prompt_789"
        variantId:
          type: string
          example: "variant_a"
        metrics:
          type: object
          required:
            - responseTime
            - successRate
            - qualityScore
            - errorRate
          properties:
            responseTime:
              type: number
              minimum: 0
              example: 245
            successRate:
              type: number
              minimum: 0
              maximum: 100
              example: 94
            qualityScore:
              type: number
              minimum: 0
              maximum: 100
              example: 87
            userSatisfaction:
              type: number
              minimum: 0
              maximum: 100
              example: 92
            errorRate:
              type: number
              minimum: 0
              maximum: 1
              example: 0.02
        context:
          type: object
          required:
            - timestamp
            - environment
          properties:
            userId:
              type: string
              example: "user_456"
            sessionId:
              type: string
              example: "session_789"
            environment:
              type: string
              example: "production"
            timestamp:
              type: string
              format: date-time
            metadata:
              type: object
              additionalProperties: true
        optimizationActions:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
                enum: [parameter_adjustment, strategy_change, ab_test_start, ab_test_stop, cache_update]
              description:
                type: string
              parameters:
                type: object
                additionalProperties: true
              expectedImpact:
                type: object
                properties:
                  successRate:
                    type: number
                  responseTime:
                    type: number
                  qualityScore:
                    type: number
              confidence:
                type: number
              timestamp:
                type: string
                format: date-time

    CacheConfiguration:
      type: object
      properties:
        maxSize:
          type: integer
          example: 10000
        maxMemoryMB:
          type: integer
          example: 512
        defaultTTL:
          type: integer
          example: 3600000
        quantization:
          type: object
          properties:
            enabled:
              type: boolean
              example: true
            type:
              type: string
              enum: [none, int8, fp8, int4]
              example: "int8"
            threshold:
              type: integer
              example: 1024
            aggressive:
              type: boolean
              example: false
        adaptiveResize:
          type: object
          properties:
            enabled:
              type: boolean
              example: true
            minSize:
              type: integer
              example: 1000
            maxSize:
              type: integer
              example: 50000
            resizeThreshold:
              type: number
              example: 0.8
            shrinkFactor:
              type: number
              example: 0.7
            growthFactor:
              type: number
              example: 1.3
        policy:
          type: string
          enum: [lru, lfu, adaptive, temporal, ml_predictive]
          example: "adaptive"
        mlPrediction:
          type: object
          properties:
            enabled:
              type: boolean
              example: true
            predictionWindow:
              type: integer
              example: 3600000
            confidenceThreshold:
              type: number
              example: 0.7
        monitoring:
          type: object
          properties:
            enabled:
              type: boolean
              example: true
            metricsInterval:
              type: integer
              example: 60000
            alertThresholds:
              type: object
              properties:
                hitRate:
                  type: number
                  example: 0.8
                memoryUsage:
                  type: number
                  example: 0.9
                evictionRate:
                  type: number
                  example: 0.1

    CacheMetrics:
      type: object
      properties:
        hits:
          type: integer
          example: 8752
        misses:
          type: integer
          example: 1248
        evictions:
          type: integer
          example: 45
        quantizations:
          type: integer
          example: 234
        totalRequests:
          type: integer
          example: 10000
        memoryUsage:
          type: integer
          example: 268435456
        entryCount:
          type: integer
          example: 5432
        averageEntrySize:
          type: number
          example: 49384
        hitRate:
          type: number
          example: 0.8752
        memoryEfficiency:
          type: number
          example: 2.3
        compressionRatio:
          type: number
          example: 2.3
        averageAccessTime:
          type: number
          example: 0.8
        predictedHits:
          type: integer
          example: 234
        mlAccuracy:
          type: number
          example: 0.87

    CacheStats:
      type: object
      properties:
        analysis:
          type: object
          properties:
            size:
              type: integer
              example: 1000
            entryCount:
              type: integer
              example: 856
            hitRate:
              type: number
              example: 0.89
            memoryUsage:
              type: integer
              example: 134217728
            compressionRatio:
              type: number
              example: 2.1
            averageAccessTime:
              type: number
              example: 0.6
            evictions:
              type: integer
              example: 23
            quantizations:
              type: integer
              example: 145
            memoryEfficiency:
              type: number
              example: 2.1
            mlAccuracy:
              type: number
              example: 0.84
        suggestions:
          type: object
          properties:
            size:
              type: integer
              example: 500
            entryCount:
              type: integer
              example: 432
            hitRate:
              type: number
              example: 0.76
            memoryUsage:
              type: integer
              example: 67108864
            compressionRatio:
              type: number
              example: 2.8
            averageAccessTime:
              type: number
              example: 0.4
            evictions:
              type: integer
              example: 12
            quantizations:
              type: integer
              example: 89
            memoryEfficiency:
              type: number
              example: 2.8
            mlAccuracy:
              type: number
              example: 0.91

    AdvancedCacheStats:
      type: object
      properties:
        analysis:
          type: object
          properties:
            metrics:
              $ref: '#/components/schemas/CacheMetrics'
            memoryPressure:
              $ref: '#/components/schemas/MemoryPressureMetrics'
            alerts:
              type: array
              items:
                $ref: '#/components/schemas/CacheAlert'
        suggestions:
          type: object
          properties:
            metrics:
              $ref: '#/components/schemas/CacheMetrics'
            memoryPressure:
              $ref: '#/components/schemas/MemoryPressureMetrics'
            alerts:
              type: array
              items:
                $ref: '#/components/schemas/CacheAlert'

    MemoryPressureMetrics:
      type: object
      properties:
        level:
          type: string
          enum: [low, medium, high, critical]
          example: "medium"
        usagePercentage:
          type: number
          example: 0.72
        availableMemory:
          type: integer
          example: 150994944
        criticalThreshold:
          type: integer
          example: 511705088
        recommendedAction:
          type: string
          enum: [none, shrink, evict, quantize, emergency_cleanup]
          example: "quantize"

    MemoryPressureInfo:
      type: object
      properties:
        analysis:
          $ref: '#/components/schemas/MemoryPressureMetrics'
        suggestions:
          $ref: '#/components/schemas/MemoryPressureMetrics'

    CacheAlert:
      type: object
      properties:
        type:
          type: string
          enum: [memory_pressure, low_hit_rate, high_eviction, quantization_failure, ml_prediction_error]
          example: "low_hit_rate"
        severity:
          type: string
          enum: [info, warning, error, critical]
          example: "warning"
        message:
          type: string
          example: "Cache hit rate 74.2% below threshold 80.0%"
        metrics:
          $ref: '#/components/schemas/CacheMetrics'
        timestamp:
          type: integer
          example: 1704067200000
        resolved:
          type: boolean
          example: false

    OptimizationResult:
      type: object
      properties:
        entriesEvicted:
          type: integer
          example: 45
        memoryFreed:
          type: integer
          example: 23068672
        quantizationsApplied:
          type: integer
          example: 123

    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Operation completed successfully"

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Invalid request"
        details:
          type: string
          example: "Missing required field: promptId"
        timestamp:
          type: string
          format: date-time

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: "Invalid request"
            details: "Missing required field: promptId"
            timestamp: "2024-01-01T12:00:00Z"

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: "Unauthorized"
            details: "Invalid or missing authentication token"
            timestamp: "2024-01-01T12:00:00Z"

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: "Resource not found"
            details: "The requested resource could not be found"
            timestamp: "2024-01-01T12:00:00Z"

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: "Internal server error"
            details: "An unexpected error occurred while processing the request"
            timestamp: "2024-01-01T12:00:00Z"

tags:
  - name: Prompt Analysis
    description: Prompt effectiveness analysis and insights
  - name: Optimization
    description: AI-powered prompt optimization and suggestions
  - name: A/B Testing
    description: A/B testing framework for prompt variants
  - name: Cache Management
    description: Advanced cache management and optimization
  - name: Edge Computing
    description: Distributed edge computing infrastructure
  - name: Real-Time Optimization
    description: Real-time optimization and feedback processing
  - name: Monitoring
    description: System monitoring and health checks

externalDocs:
  description: Find out more about Prompt Card System
  url: https://docs.promptcard.dev