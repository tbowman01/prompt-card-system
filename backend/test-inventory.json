{
  "timestamp": "2025-07-23T03:10:00Z",
  "summary": {
    "totalTestFiles": 13,
    "failingTestSuites": 6,
    "passingTestSuites": 0,
    "skippedTestSuites": 7,
    "criticalIssues": 4,
    "sourcesWithoutTests": 87
  },
  "failingTests": {
    "unit": [
      {
        "file": "src/tests/unit/mock-ollama.test.ts",
        "error": "String case mismatch: expects 'simulated failure' but gets 'Simulated failure'",
        "line": 160,
        "priority": "HIGH",
        "fix": "Change expectation to match actual error message case"
      },
      {
        "file": "src/tests/unit/database-connection.test.ts",
        "error": "Connection pool not initialized: stats.total is 0",
        "line": 15,
        "priority": "CRITICAL",
        "fix": "Ensure database is properly initialized in test setup"
      },
      {
        "file": "src/tests/unit/database-connection.test.ts",
        "error": "Invalid SQL doesn't throw error as expected",
        "line": 81,
        "priority": "HIGH",
        "fix": "Fix database error handling or update test expectations"
      }
    ],
    "integration": [
      {
        "file": "src/tests/integration/websocket-integration.test.ts",
        "error": "TypeError: Cannot read properties of undefined (reading 'prepare')",
        "line": 543,
        "priority": "CRITICAL",
        "fix": "Initialize database before AnalyticsEngine instantiation"
      },
      {
        "file": "src/tests/integration/reporting-integration.test.ts",
        "error": "Same AnalyticsEngine initialization error",
        "priority": "CRITICAL",
        "fix": "Same as websocket-integration fix"
      },
      {
        "file": "src/tests/integration/parallel-execution.test.ts",
        "error": "Same AnalyticsEngine initialization error",
        "priority": "CRITICAL",
        "fix": "Same as websocket-integration fix"
      },
      {
        "file": "src/tests/integration/optimization-integration.test.ts",
        "error": "Same AnalyticsEngine initialization error",
        "priority": "CRITICAL",
        "fix": "Same as websocket-integration fix"
      }
    ],
    "database": [
      {
        "error": "Missing 'assertion_types' table",
        "priority": "CRITICAL",
        "fix": "Add assertion_types table to database migrations"
      }
    ]
  },
  "testCoverage": {
    "routesWithoutTests": [
      "alerts.ts",
      "analytics.ts",
      "assertions.ts",
      "auth.ts",
      "health-comprehensive.ts",
      "health-enhanced.ts",
      "health-orchestrator.ts",
      "loadTesting.ts",
      "performance.ts",
      "promptCards.ts",
      "security.ts",
      "testCases.ts",
      "testExecution.ts",
      "training.ts",
      "yaml.ts"
    ],
    "servicesWithoutTests": [
      "AnalyticsEngine.ts",
      "AnomalyDetector.ts",
      "BlockchainAuditTrail.ts",
      "CapacityPlanner.ts",
      "EventStore.ts",
      "MLAnalyticsCoordinator.ts",
      "PredictiveAnalytics.ts",
      "VoiceInterface.ts",
      "AssertionEngine.ts",
      "AssertionTypeRegistry.ts",
      "CustomAssertionValidator.ts",
      "SemanticSimilarityValidator.ts",
      "CollaborationService.ts",
      "CRDTService.ts",
      "OperationalTransform.ts",
      "PresenceService.ts",
      "CostTracker.ts",
      "AlertingSystem.ts",
      "CircuitBreaker.ts",
      "HealthOrchestrator.ts",
      "FederatedLearningEngine.ts",
      "PerformanceBenchmark.ts",
      "LoadTestingFramework.ts",
      "LoadTestScheduler.ts",
      "OptimizationEngine.ts",
      "SecurityAnalyzer.ts",
      "PromptAnalyzer.ts",
      "PerformanceMonitor.ts",
      "ReportIntegration.ts",
      "ReportTemplates.ts",
      "PDFExporter.ts",
      "SecurityMonitor.ts",
      "LogAggregator.ts",
      "ComplianceChecker.ts",
      "Semaphore.ts",
      "ProgressService.ts",
      "ModelRegistry.ts",
      "ModelTrainingEngine.ts"
    ],
    "middlewareWithoutTests": [
      "auth.ts",
      "errorHandler.ts",
      "rateLimiting.ts",
      "security.ts",
      "structuredLogging.ts",
      "validation.ts"
    ]
  },
  "priorityFixOrder": [
    {
      "priority": 1,
      "task": "Fix database initialization in test setup",
      "files": ["src/tests/globalSetup.ts", "src/tests/setup.ts"],
      "reason": "Blocks 4+ integration tests"
    },
    {
      "priority": 2,
      "task": "Add missing assertion_types table to migrations",
      "files": ["src/database/migrations"],
      "reason": "Required for assertion tests"
    },
    {
      "priority": 3,
      "task": "Fix MockOllamaService error message case",
      "files": ["src/tests/unit/mock-ollama.test.ts"],
      "reason": "Simple fix, high impact"
    },
    {
      "priority": 4,
      "task": "Fix database connection pool initialization",
      "files": ["src/tests/unit/database-connection.test.ts"],
      "reason": "Critical for database testing"
    },
    {
      "priority": 5,
      "task": "Create tests for critical services",
      "files": ["AnalyticsEngine", "HealthOrchestrator", "AssertionEngine"],
      "reason": "Core functionality lacks coverage"
    }
  ],
  "testQualityIssues": [
    {
      "issue": "No integration tests for API routes",
      "impact": "HIGH",
      "recommendation": "Add supertest-based integration tests for all routes"
    },
    {
      "issue": "Limited mocking in unit tests",
      "impact": "MEDIUM",
      "recommendation": "Improve isolation with proper mocks"
    },
    {
      "issue": "No E2E tests found",
      "impact": "HIGH",
      "recommendation": "Add Playwright or Cypress E2E tests"
    },
    {
      "issue": "Inconsistent test timeouts",
      "impact": "LOW",
      "recommendation": "Standardize timeouts based on test type"
    }
  ]
}