{
  "cache_strategy": {
    "version": "2.0.0",
    "optimization_level": "maximum",
    "layers": {
      "shared_dependencies": {
        "priority": 1,
        "scope": "global",
        "retention": "30d",
        "sources": [
          "type=gha,scope=shared-deps-${{ runner.arch }}",
          "type=registry,ref=ghcr.io/${{ github.repository }}/cache:shared-deps",
          "type=local,src=/tmp/.buildx-cache-shared"
        ],
        "targets": [
          "type=gha,mode=max,scope=shared-deps-${{ runner.arch }}",
          "type=registry,ref=ghcr.io/${{ github.repository }}/cache:shared-deps,mode=max"
        ]
      },
      "service_specific": {
        "priority": 2,
        "scope": "service",
        "retention": "14d",
        "sources": [
          "type=gha,scope=${{ matrix.service }}-${{ runner.arch }}",
          "type=registry,ref=ghcr.io/${{ github.repository }}/cache:${{ matrix.service }}",
          "type=local,src=/tmp/.buildx-cache-${{ matrix.service }}"
        ],
        "targets": [
          "type=gha,mode=max,scope=${{ matrix.service }}-${{ runner.arch }}",
          "type=registry,ref=ghcr.io/${{ github.repository }}/cache:${{ matrix.service }},mode=max"
        ]
      },
      "build_context": {
        "priority": 3,
        "scope": "branch",
        "retention": "7d",
        "sources": [
          "type=gha,scope=context-${{ github.ref_name }}-${{ runner.arch }}",
          "type=registry,ref=ghcr.io/${{ github.repository }}/cache:context-${{ github.ref_name }}"
        ],
        "targets": [
          "type=gha,mode=max,scope=context-${{ github.ref_name }}-${{ runner.arch }}",
          "type=registry,ref=ghcr.io/${{ github.repository }}/cache:context-${{ github.ref_name }},mode=max"
        ]
      },
      "base_images": {
        "priority": 4,
        "scope": "global",
        "retention": "60d",
        "sources": [
          "type=registry,ref=ghcr.io/${{ github.repository }}/cache:base-node20",
          "type=registry,ref=ghcr.io/${{ github.repository }}/cache:base-alpine"
        ],
        "targets": [
          "type=registry,ref=ghcr.io/${{ github.repository }}/cache:base-node20,mode=max",
          "type=registry,ref=ghcr.io/${{ github.repository }}/cache:base-alpine,mode=max"
        ]
      }
    },
    "optimization_rules": {
      "cache_hit_optimization": {
        "description": "Optimize for maximum cache hit ratio",
        "strategies": [
          "layer_ordering_by_change_frequency",
          "dependency_isolation",
          "build_context_minimization",
          "multi_stage_optimization"
        ]
      },
      "build_time_optimization": {
        "description": "Minimize total build time",
        "strategies": [
          "parallel_layer_building",
          "shared_base_layers",
          "incremental_builds",
          "cross_service_caching"
        ]
      },
      "storage_optimization": {
        "description": "Optimize cache storage efficiency",
        "strategies": [
          "automatic_cache_pruning",
          "compression_optimization",
          "duplicate_layer_elimination",
          "smart_retention_policies"
        ]
      }
    },
    "performance_targets": {
      "cache_hit_ratio": "85-95%",
      "build_time_reduction": "45-70%",
      "storage_efficiency": "60% reduction",
      "cache_warming_time": "<5 minutes"
    }
  },
  "cache_warming": {
    "enabled": true,
    "triggers": [
      "package.json changes",
      "Dockerfile modifications",
      "base image updates",
      "scheduled maintenance"
    ],
    "schedule": "0 2 * * 1",
    "services": ["backend", "frontend", "auth"],
    "platforms": ["linux/amd64", "linux/arm64"]
  },
  "cache_monitoring": {
    "metrics": {
      "hit_ratio": "percentage of cache hits vs misses",
      "build_duration": "time saved through caching",
      "storage_usage": "cache storage consumption",
      "warming_efficiency": "success rate of cache warming"
    },
    "alerts": {
      "low_hit_ratio": {
        "threshold": "75%",
        "action": "investigate cache configuration"
      },
      "high_storage_usage": {
        "threshold": "80%",
        "action": "trigger cache cleanup"
      },
      "warming_failures": {
        "threshold": "3 consecutive failures",
        "action": "review cache warming strategy"
      }
    }
  }
}