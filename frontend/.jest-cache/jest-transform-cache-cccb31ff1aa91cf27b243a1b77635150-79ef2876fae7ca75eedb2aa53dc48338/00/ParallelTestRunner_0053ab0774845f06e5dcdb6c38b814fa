6979fef4a0ca9da0e6217e652151047f
"use strict";

/* istanbul ignore next */
function cov_2r7ykhimvl() {
  var path = "/workspaces/prompt-card-system/frontend/src/components/TestExecution/ParallelTestRunner.tsx";
  var hash = "1752e38bdca8105616d1edb568466192e4bfb4ec";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/prompt-card-system/frontend/src/components/TestExecution/ParallelTestRunner.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "4": {
        start: {
          line: 12,
          column: 29
        },
        end: {
          line: 12,
          column: 72
        }
      },
      "5": {
        start: {
          line: 13,
          column: 39
        },
        end: {
          line: 13,
          column: 93
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 17,
          column: 6
        }
      },
      "7": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 51
        }
      },
      "8": {
        start: {
          line: 20,
          column: 39
        },
        end: {
          line: 20,
          column: 51
        }
      },
      "9": {
        start: {
          line: 21,
          column: 28
        },
        end: {
          line: 21,
          column: 41
        }
      },
      "10": {
        start: {
          line: 22,
          column: 27
        },
        end: {
          line: 22,
          column: 40
        }
      },
      "11": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 25,
          column: 20
        }
      },
      "12": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 66
        }
      },
      "13": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "14": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 19
        }
      },
      "15": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "16": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 34,
          column: 10
        }
      },
      "17": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 53
        }
      },
      "18": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "19": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 30
        }
      },
      "20": {
        start: {
          line: 40,
          column: 17
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "21": {
        start: {
          line: 43,
          column: 32
        },
        end: {
          line: 43,
          column: 88
        }
      },
      "22": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "23": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "24": {
        start: {
          line: 46,
          column: 23
        },
        end: {
          line: 46,
          column: 95
        }
      },
      "25": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 51,
          column: 13
        }
      },
      "26": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 57
        }
      },
      "27": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 39
        }
      },
      "28": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 25
        }
      },
      "29": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "30": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 31
        }
      },
      "31": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 18
        }
      },
      "32": {
        start: {
          line: 60,
          column: 27
        },
        end: {
          line: 525,
          column: 1
        }
      },
      "33": {
        start: {
          line: 61,
          column: 42
        },
        end: {
          line: 61,
          column: 68
        }
      },
      "34": {
        start: {
          line: 62,
          column: 46
        },
        end: {
          line: 62,
          column: 78
        }
      },
      "35": {
        start: {
          line: 63,
          column: 40
        },
        end: {
          line: 63,
          column: 67
        }
      },
      "36": {
        start: {
          line: 64,
          column: 30
        },
        end: {
          line: 64,
          column: 56
        }
      },
      "37": {
        start: {
          line: 66,
          column: 30
        },
        end: {
          line: 66,
          column: 62
        }
      },
      "38": {
        start: {
          line: 67,
          column: 46
        },
        end: {
          line: 76,
          column: 6
        }
      },
      "39": {
        start: {
          line: 77,
          column: 36
        },
        end: {
          line: 77,
          column: 59
        }
      },
      "40": {
        start: {
          line: 79,
          column: 28
        },
        end: {
          line: 86,
          column: 5
        }
      },
      "41": {
        start: {
          line: 87,
          column: 27
        },
        end: {
          line: 122,
          column: 5
        }
      },
      "42": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "43": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 47
        }
      },
      "44": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 19
        }
      },
      "45": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 28
        }
      },
      "46": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 23
        }
      },
      "47": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 121,
          column: 9
        }
      },
      "48": {
        start: {
          line: 95,
          column: 29
        },
        end: {
          line: 107,
          column: 14
        }
      },
      "49": {
        start: {
          line: 108,
          column: 25
        },
        end: {
          line: 108,
          column: 46
        }
      },
      "50": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 111,
          column: 13
        }
      },
      "51": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 80
        }
      },
      "52": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 51
        }
      },
      "53": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 36
        }
      },
      "54": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 33
        }
      },
      "55": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 60
        }
      },
      "56": {
        start: {
          line: 117,
          column: 33
        },
        end: {
          line: 117,
          column: 102
        }
      },
      "57": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 35
        }
      },
      "58": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 33
        }
      },
      "59": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 36
        }
      },
      "60": {
        start: {
          line: 123,
          column: 38
        },
        end: {
          line: 128,
          column: 5
        }
      },
      "61": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 127,
          column: 16
        }
      },
      "62": {
        start: {
          line: 124,
          column: 34
        },
        end: {
          line: 127,
          column: 13
        }
      },
      "63": {
        start: {
          line: 129,
          column: 38
        },
        end: {
          line: 137,
          column: 5
        }
      },
      "64": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 136,
          column: 16
        }
      },
      "65": {
        start: {
          line: 130,
          column: 34
        },
        end: {
          line: 136,
          column: 13
        }
      },
      "66": {
        start: {
          line: 138,
          column: 27
        },
        end: {
          line: 140,
          column: 5
        }
      },
      "67": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 30
        }
      },
      "68": {
        start: {
          line: 141,
          column: 24
        },
        end: {
          line: 144,
          column: 5
        }
      },
      "69": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 31
        }
      },
      "70": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 32
        }
      },
      "71": {
        start: {
          line: 145,
          column: 25
        },
        end: {
          line: 148,
          column: 5
        }
      },
      "72": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 29
        }
      },
      "73": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 31
        }
      },
      "74": {
        start: {
          line: 149,
          column: 31
        },
        end: {
          line: 162,
          column: 5
        }
      },
      "75": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 159,
          column: 11
        }
      },
      "76": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 23
        }
      },
      "77": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 29
        }
      },
      "78": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 170,
          column: 7
        }
      },
      "79": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "80": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 29
        }
      },
      "81": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 180,
          column: 5
        }
      },
      "82": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 179,
          column: 11
        }
      },
      "83": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 524,
          column: 7
        }
      },
      "84": {
        start: {
          line: 267,
          column: 47
        },
        end: {
          line: 267,
          column: 71
        }
      },
      "85": {
        start: {
          line: 269,
          column: 89
        },
        end: {
          line: 272,
          column: 49
        }
      },
      "86": {
        start: {
          line: 297,
          column: 63
        },
        end: {
          line: 297,
          column: 138
        }
      },
      "87": {
        start: {
          line: 318,
          column: 63
        },
        end: {
          line: 318,
          column: 134
        }
      },
      "88": {
        start: {
          line: 338,
          column: 63
        },
        end: {
          line: 338,
          column: 128
        }
      },
      "89": {
        start: {
          line: 359,
          column: 63
        },
        end: {
          line: 359,
          column: 129
        }
      },
      "90": {
        start: {
          line: 390,
          column: 63
        },
        end: {
          line: 390,
          column: 127
        }
      },
      "91": {
        start: {
          line: 407,
          column: 63
        },
        end: {
          line: 407,
          column: 129
        }
      },
      "92": {
        start: {
          line: 424,
          column: 47
        },
        end: {
          line: 424,
          column: 84
        }
      },
      "93": {
        start: {
          line: 526,
          column: 17
        },
        end: {
          line: 526,
          column: 35
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 33
          }
        },
        loc: {
          start: {
            line: 14,
            column: 39
          },
          end: {
            line: 18,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 19,
            column: 9
          },
          end: {
            line: 19,
            column: 33
          }
        },
        loc: {
          start: {
            line: 19,
            column: 47
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 39
          },
          end: {
            line: 23,
            column: 40
          }
        },
        loc: {
          start: {
            line: 23,
            column: 61
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "4": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 34
          }
        },
        loc: {
          start: {
            line: 27,
            column: 53
          },
          end: {
            line: 59,
            column: 1
          }
        },
        line: 27
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 60,
            column: 27
          },
          end: {
            line: 60,
            column: 28
          }
        },
        loc: {
          start: {
            line: 60,
            column: 100
          },
          end: {
            line: 525,
            column: 1
          }
        },
        line: 60
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 87,
            column: 27
          },
          end: {
            line: 87,
            column: 28
          }
        },
        loc: {
          start: {
            line: 87,
            column: 37
          },
          end: {
            line: 122,
            column: 5
          }
        },
        line: 87
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 123,
            column: 38
          },
          end: {
            line: 123,
            column: 39
          }
        },
        loc: {
          start: {
            line: 123,
            column: 54
          },
          end: {
            line: 128,
            column: 5
          }
        },
        line: 123
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 124,
            column: 25
          },
          end: {
            line: 124,
            column: 26
          }
        },
        loc: {
          start: {
            line: 124,
            column: 34
          },
          end: {
            line: 127,
            column: 13
          }
        },
        line: 124
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 129,
            column: 38
          },
          end: {
            line: 129,
            column: 39
          }
        },
        loc: {
          start: {
            line: 129,
            column: 54
          },
          end: {
            line: 137,
            column: 5
          }
        },
        line: 129
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 130,
            column: 25
          },
          end: {
            line: 130,
            column: 26
          }
        },
        loc: {
          start: {
            line: 130,
            column: 34
          },
          end: {
            line: 136,
            column: 13
          }
        },
        line: 130
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 138,
            column: 27
          },
          end: {
            line: 138,
            column: 28
          }
        },
        loc: {
          start: {
            line: 138,
            column: 38
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 138
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 141,
            column: 24
          },
          end: {
            line: 141,
            column: 25
          }
        },
        loc: {
          start: {
            line: 141,
            column: 40
          },
          end: {
            line: 144,
            column: 5
          }
        },
        line: 141
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 145,
            column: 25
          },
          end: {
            line: 145,
            column: 26
          }
        },
        loc: {
          start: {
            line: 145,
            column: 29
          },
          end: {
            line: 148,
            column: 5
          }
        },
        line: 145
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 149,
            column: 31
          },
          end: {
            line: 149,
            column: 32
          }
        },
        loc: {
          start: {
            line: 149,
            column: 35
          },
          end: {
            line: 162,
            column: 5
          }
        },
        line: 149
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 164,
            column: 29
          },
          end: {
            line: 164,
            column: 30
          }
        },
        loc: {
          start: {
            line: 164,
            column: 33
          },
          end: {
            line: 168,
            column: 5
          }
        },
        line: 164
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 267,
            column: 42
          },
          end: {
            line: 267,
            column: 43
          }
        },
        loc: {
          start: {
            line: 267,
            column: 47
          },
          end: {
            line: 267,
            column: 71
          }
        },
        line: 267
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 269,
            column: 62
          },
          end: {
            line: 269,
            column: 63
          }
        },
        loc: {
          start: {
            line: 269,
            column: 89
          },
          end: {
            line: 272,
            column: 49
          }
        },
        line: 269
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 297,
            column: 58
          },
          end: {
            line: 297,
            column: 59
          }
        },
        loc: {
          start: {
            line: 297,
            column: 63
          },
          end: {
            line: 297,
            column: 138
          }
        },
        line: 297
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 318,
            column: 58
          },
          end: {
            line: 318,
            column: 59
          }
        },
        loc: {
          start: {
            line: 318,
            column: 63
          },
          end: {
            line: 318,
            column: 134
          }
        },
        line: 318
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 338,
            column: 58
          },
          end: {
            line: 338,
            column: 59
          }
        },
        loc: {
          start: {
            line: 338,
            column: 63
          },
          end: {
            line: 338,
            column: 128
          }
        },
        line: 338
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 359,
            column: 58
          },
          end: {
            line: 359,
            column: 59
          }
        },
        loc: {
          start: {
            line: 359,
            column: 63
          },
          end: {
            line: 359,
            column: 129
          }
        },
        line: 359
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 390,
            column: 58
          },
          end: {
            line: 390,
            column: 59
          }
        },
        loc: {
          start: {
            line: 390,
            column: 63
          },
          end: {
            line: 390,
            column: 127
          }
        },
        line: 390
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 407,
            column: 58
          },
          end: {
            line: 407,
            column: 59
          }
        },
        loc: {
          start: {
            line: 407,
            column: 63
          },
          end: {
            line: 407,
            column: 129
          }
        },
        line: 407
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 424,
            column: 42
          },
          end: {
            line: 424,
            column: 43
          }
        },
        loc: {
          start: {
            line: 424,
            column: 47
          },
          end: {
            line: 424,
            column: 84
          }
        },
        line: 424
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 17,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 15,
            column: 35
          },
          end: {
            line: 15,
            column: 38
          }
        }, {
          start: {
            line: 15,
            column: 41
          },
          end: {
            line: 17,
            column: 5
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 15,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 15,
            column: 14
          }
        }, {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 32
          }
        }],
        line: 15
      },
      "2": {
        loc: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "3": {
        loc: {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 24,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 29
          },
          end: {
            line: 24,
            column: 45
          }
        }, {
          start: {
            line: 24,
            column: 48
          },
          end: {
            line: 24,
            column: 65
          }
        }],
        line: 24
      },
      "4": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "5": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 20
          }
        }, {
          start: {
            line: 28,
            column: 24
          },
          end: {
            line: 28,
            column: 27
          }
        }, {
          start: {
            line: 28,
            column: 31
          },
          end: {
            line: 28,
            column: 45
          }
        }],
        line: 28
      },
      "6": {
        loc: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "7": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 20
          }
        }, {
          start: {
            line: 31,
            column: 24
          },
          end: {
            line: 31,
            column: 47
          }
        }, {
          start: {
            line: 31,
            column: 51
          },
          end: {
            line: 31,
            column: 76
          }
        }],
        line: 31
      },
      "8": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "9": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 13
          }
        }, {
          start: {
            line: 37,
            column: 17
          },
          end: {
            line: 37,
            column: 31
          }
        }],
        line: 37
      },
      "10": {
        loc: {
          start: {
            line: 43,
            column: 32
          },
          end: {
            line: 43,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 32
          },
          end: {
            line: 43,
            column: 53
          }
        }, {
          start: {
            line: 43,
            column: 57
          },
          end: {
            line: 43,
            column: 88
          }
        }],
        line: 43
      },
      "11": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "12": {
        loc: {
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 45,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 45,
            column: 29
          }
        }, {
          start: {
            line: 45,
            column: 33
          },
          end: {
            line: 45,
            column: 79
          }
        }],
        line: 45
      },
      "13": {
        loc: {
          start: {
            line: 46,
            column: 23
          },
          end: {
            line: 46,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 46,
            column: 47
          },
          end: {
            line: 46,
            column: 88
          }
        }, {
          start: {
            line: 46,
            column: 91
          },
          end: {
            line: 46,
            column: 95
          }
        }],
        line: 46
      },
      "14": {
        loc: {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        }, {
          start: {
            line: 49,
            column: 19
          },
          end: {
            line: 51,
            column: 13
          }
        }],
        line: 47
      },
      "15": {
        loc: {
          start: {
            line: 47,
            column: 16
          },
          end: {
            line: 47,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 16
          },
          end: {
            line: 47,
            column: 20
          }
        }, {
          start: {
            line: 47,
            column: 25
          },
          end: {
            line: 47,
            column: 33
          }
        }, {
          start: {
            line: 47,
            column: 37
          },
          end: {
            line: 47,
            column: 45
          }
        }],
        line: 47
      },
      "16": {
        loc: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "17": {
        loc: {
          start: {
            line: 60,
            column: 78
          },
          end: {
            line: 60,
            column: 95
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 60,
            column: 90
          },
          end: {
            line: 60,
            column: 95
          }
        }],
        line: 60
      },
      "18": {
        loc: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "19": {
        loc: {
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "20": {
        loc: {
          start: {
            line: 110,
            column: 32
          },
          end: {
            line: 110,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 32
          },
          end: {
            line: 110,
            column: 42
          }
        }, {
          start: {
            line: 110,
            column: 46
          },
          end: {
            line: 110,
            column: 78
          }
        }],
        line: 110
      },
      "21": {
        loc: {
          start: {
            line: 117,
            column: 33
          },
          end: {
            line: 117,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 117,
            column: 56
          },
          end: {
            line: 117,
            column: 67
          }
        }, {
          start: {
            line: 117,
            column: 70
          },
          end: {
            line: 117,
            column: 102
          }
        }],
        line: 117
      },
      "22": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "23": {
        loc: {
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 165,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 165,
            column: 21
          }
        }, {
          start: {
            line: 165,
            column: 25
          },
          end: {
            line: 165,
            column: 37
          }
        }, {
          start: {
            line: 165,
            column: 41
          },
          end: {
            line: 165,
            column: 52
          }
        }],
        line: 165
      },
      "24": {
        loc: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 180,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 180,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "25": {
        loc: {
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 210,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 198,
            column: 17
          }
        }, {
          start: {
            line: 198,
            column: 35
          },
          end: {
            line: 210,
            column: 14
          }
        }],
        line: 198
      },
      "26": {
        loc: {
          start: {
            line: 347,
            column: 36
          },
          end: {
            line: 363,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 347,
            column: 36
          },
          end: {
            line: 347,
            column: 68
          }
        }, {
          start: {
            line: 347,
            column: 86
          },
          end: {
            line: 363,
            column: 38
          }
        }],
        line: 347
      },
      "27": {
        loc: {
          start: {
            line: 508,
            column: 38
          },
          end: {
            line: 508,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 508,
            column: 38
          },
          end: {
            line: 508,
            column: 48
          }
        }, {
          start: {
            line: 508,
            column: 52
          },
          end: {
            line: 508,
            column: 76
          }
        }],
        line: 508
      },
      "28": {
        loc: {
          start: {
            line: 510,
            column: 38
          },
          end: {
            line: 518,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 510,
            column: 65
          },
          end: {
            line: 518,
            column: 30
          }
        }, {
          start: {
            line: 518,
            column: 33
          },
          end: {
            line: 518,
            column: 89
          }
        }],
        line: 510
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/workspaces/prompt-card-system/frontend/src/components/TestExecution/ParallelTestRunner.tsx"],
      sourcesContent: ["import React, { useState } from 'react';\nimport ProgressTracker from './ProgressTracker';\nimport { TestExecutionResult } from '../../hooks/useWebSocket';\n\ninterface TestConfiguration {\n  max_concurrent_tests: number;\n  timeout_per_test: number;\n  retry_failed_tests: boolean;\n  max_retries: number;\n  resource_limits: {\n    memory_mb: number;\n    cpu_percent: number;\n  };\n}\n\ninterface ParallelTestRunnerProps {\n  promptCardId: number;\n  testCaseIds: number[];\n  onComplete?: (results: TestExecutionResult[]) => void;\n  onError?: (error: string) => void;\n  autoStart?: boolean;\n}\n\nconst ParallelTestRunner: React.FC<ParallelTestRunnerProps> = ({\n  promptCardId,\n  testCaseIds,\n  onComplete,\n  onError,\n  autoStart = false\n}) => {\n  const [executionId, setExecutionId] = useState<string | null>(null);\n  const [isConfiguring, setIsConfiguring] = useState(!autoStart);\n  const [isStarting, setIsStarting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  \n  // Configuration state\n  const [model, setModel] = useState('llama3.1');\n  const [configuration, setConfiguration] = useState<TestConfiguration>({\n    max_concurrent_tests: 3,\n    timeout_per_test: 30000,\n    retry_failed_tests: false,\n    max_retries: 1,\n    resource_limits: {\n      memory_mb: 1024,\n      cpu_percent: 50\n    }\n  });\n  const [priority, setPriority] = useState(0);\n\n  // Available models (this could be fetched from an API)\n  const availableModels = [\n    'llama3.1',\n    'llama3.1:8b',\n    'llama3.1:70b',\n    'codellama',\n    'mistral',\n    'phi3'\n  ];\n\n  const startExecution = async () => {\n    if (testCaseIds.length === 0) {\n      setError('No test cases selected');\n      return;\n    }\n\n    setIsStarting(true);\n    setError(null);\n\n    try {\n      const response = await fetch('/api/test-cases/execute-parallel', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          prompt_card_id: promptCardId,\n          test_case_ids: testCaseIds,\n          model,\n          configuration,\n          priority\n        })\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to start test execution');\n      }\n\n      setExecutionId(data.data.execution_id);\n      setIsConfiguring(false);\n      setIsStarting(false);\n    } catch (err) {\n      console.error('Error starting execution:', err);\n      const errorMessage = err instanceof Error ? err.message : 'Failed to start test execution';\n      setError(errorMessage);\n      setIsStarting(false);\n      onError?.(errorMessage);\n    }\n  };\n\n  const handleConfigurationChange = (field: keyof TestConfiguration, value: any) => {\n    setConfiguration(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const handleResourceLimitChange = (field: keyof TestConfiguration['resource_limits'], value: number) => {\n    setConfiguration(prev => ({\n      ...prev,\n      resource_limits: {\n        ...prev.resource_limits,\n        [field]: value\n      }\n    }));\n  };\n\n  const handleComplete = (results: TestExecutionResult[]) => {\n    onComplete?.(results);\n  };\n\n  const handleError = (errorMessage: string) => {\n    setError(errorMessage);\n    onError?.(errorMessage);\n  };\n\n  const handleCancel = () => {\n    setExecutionId(null);\n    setIsConfiguring(true);\n  };\n\n  const resetConfiguration = () => {\n    setConfiguration({\n      max_concurrent_tests: 3,\n      timeout_per_test: 30000,\n      retry_failed_tests: false,\n      max_retries: 1,\n      resource_limits: {\n        memory_mb: 1024,\n        cpu_percent: 50\n      }\n    });\n    setPriority(0);\n    setModel('llama3.1');\n  };\n\n  // Auto-start if enabled\n  React.useEffect(() => {\n    if (autoStart && !executionId && !isStarting) {\n      startExecution();\n    }\n  }, [autoStart]);\n\n  if (executionId) {\n    return (\n      <ProgressTracker\n        executionId={executionId}\n        onComplete={handleComplete}\n        onError={handleError}\n        onCancel={handleCancel}\n        showCancelButton={true}\n        autoStart={true}\n      />\n    );\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md p-6\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h3 className=\"text-lg font-semibold\">Parallel Test Execution</h3>\n        <button\n          onClick={resetConfiguration}\n          className=\"text-sm text-gray-500 hover:text-gray-700\"\n        >\n          Reset to Defaults\n        </button>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 rounded-md p-4 mb-6\">\n          <h4 className=\"font-medium text-red-800 mb-2\">Error</h4>\n          <p className=\"text-sm text-red-700\">{error}</p>\n        </div>\n      )}\n\n      <div className=\"space-y-6\">\n        {/* Test Summary */}\n        <div className=\"bg-gray-50 rounded-md p-4\">\n          <h4 className=\"font-medium mb-2\">Test Summary</h4>\n          <div className=\"text-sm space-y-1\">\n            <div><span className=\"font-medium\">Prompt Card ID:</span> {promptCardId}</div>\n            <div><span className=\"font-medium\">Test Cases:</span> {testCaseIds.length} selected</div>\n            <div><span className=\"font-medium\">Test Case IDs:</span> {testCaseIds.join(', ')}</div>\n          </div>\n        </div>\n\n        {/* Model Selection */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Language Model\n          </label>\n          <select\n            value={model}\n            onChange={(e) => setModel(e.target.value)}\n            className=\"w-full border border-gray-300 rounded-md px-3 py-2 text-sm\"\n          >\n            {availableModels.map(modelName => (\n              <option key={modelName} value={modelName}>\n                {modelName}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* Execution Configuration */}\n        <div className=\"space-y-4\">\n          <h4 className=\"font-medium\">Execution Configuration</h4>\n          \n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Max Concurrent Tests\n              </label>\n              <input\n                type=\"number\"\n                min=\"1\"\n                max=\"10\"\n                value={configuration.max_concurrent_tests}\n                onChange={(e) => handleConfigurationChange('max_concurrent_tests', parseInt(e.target.value))}\n                className=\"w-full border border-gray-300 rounded-md px-3 py-2 text-sm\"\n              />\n              <p className=\"text-xs text-gray-500 mt-1\">Number of tests to run simultaneously</p>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Timeout per Test (ms)\n              </label>\n              <input\n                type=\"number\"\n                min=\"1000\"\n                max=\"300000\"\n                step=\"1000\"\n                value={configuration.timeout_per_test}\n                onChange={(e) => handleConfigurationChange('timeout_per_test', parseInt(e.target.value))}\n                className=\"w-full border border-gray-300 rounded-md px-3 py-2 text-sm\"\n              />\n              <p className=\"text-xs text-gray-500 mt-1\">Maximum time per test execution</p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-4\">\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={configuration.retry_failed_tests}\n                onChange={(e) => handleConfigurationChange('retry_failed_tests', e.target.checked)}\n                className=\"mr-2\"\n              />\n              <span className=\"text-sm\">Retry failed tests</span>\n            </label>\n\n            {configuration.retry_failed_tests && (\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-sm text-gray-700\">Max retries:</span>\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"5\"\n                  value={configuration.max_retries}\n                  onChange={(e) => handleConfigurationChange('max_retries', parseInt(e.target.value))}\n                  className=\"w-16 border border-gray-300 rounded-md px-2 py-1 text-sm\"\n                />\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Resource Limits */}\n        <div className=\"space-y-4\">\n          <h4 className=\"font-medium\">Resource Limits</h4>\n          \n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Memory Limit (MB)\n              </label>\n              <input\n                type=\"number\"\n                min=\"512\"\n                max=\"8192\"\n                step=\"256\"\n                value={configuration.resource_limits.memory_mb}\n                onChange={(e) => handleResourceLimitChange('memory_mb', parseInt(e.target.value))}\n                className=\"w-full border border-gray-300 rounded-md px-3 py-2 text-sm\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                CPU Limit (%)\n              </label>\n              <input\n                type=\"number\"\n                min=\"10\"\n                max=\"100\"\n                step=\"10\"\n                value={configuration.resource_limits.cpu_percent}\n                onChange={(e) => handleResourceLimitChange('cpu_percent', parseInt(e.target.value))}\n                className=\"w-full border border-gray-300 rounded-md px-3 py-2 text-sm\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Priority */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Priority\n          </label>\n          <select\n            value={priority}\n            onChange={(e) => setPriority(parseInt(e.target.value))}\n            className=\"w-full border border-gray-300 rounded-md px-3 py-2 text-sm\"\n          >\n            <option value={-2}>Low</option>\n            <option value={0}>Normal</option>\n            <option value={1}>High</option>\n            <option value={2}>Critical</option>\n          </select>\n          <p className=\"text-xs text-gray-500 mt-1\">Higher priority executions run first</p>\n        </div>\n\n        {/* Estimated Resource Usage */}\n        <div className=\"bg-blue-50 rounded-md p-4\">\n          <h4 className=\"font-medium mb-2\">Estimated Resource Usage</h4>\n          <div className=\"text-sm space-y-1\">\n            <div>\n              <span className=\"font-medium\">Expected Duration:</span> {' '}\n              {Math.ceil((testCaseIds.length * configuration.timeout_per_test) / configuration.max_concurrent_tests / 1000)}s - {' '}\n              {Math.ceil((testCaseIds.length * configuration.timeout_per_test) / 1000)}s\n            </div>\n            <div>\n              <span className=\"font-medium\">Memory Usage:</span> {' '}\n              {configuration.resource_limits.memory_mb * configuration.max_concurrent_tests}MB\n            </div>\n            <div>\n              <span className=\"font-medium\">CPU Usage:</span> {' '}\n              {configuration.resource_limits.cpu_percent}%\n            </div>\n          </div>\n        </div>\n\n        {/* Start Button */}\n        <div className=\"flex justify-end\">\n          <button\n            onClick={startExecution}\n            disabled={isStarting || testCaseIds.length === 0}\n            className=\"bg-blue-600 hover:bg-blue-700 disabled:bg-blue-300 text-white px-6 py-2 rounded-md font-medium\"\n          >\n            {isStarting ? (\n              <span className=\"flex items-center\">\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                Starting...\n              </span>\n            ) : (\n              `Start Parallel Execution (${testCaseIds.length} tests)`\n            )}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ParallelTestRunner;"],
      names: ["ParallelTestRunner", "promptCardId", "testCaseIds", "onComplete", "onError", "autoStart", "executionId", "setExecutionId", "useState", "isConfiguring", "setIsConfiguring", "isStarting", "setIsStarting", "error", "setError", "model", "setModel", "configuration", "setConfiguration", "max_concurrent_tests", "timeout_per_test", "retry_failed_tests", "max_retries", "resource_limits", "memory_mb", "cpu_percent", "priority", "setPriority", "availableModels", "startExecution", "length", "response", "fetch", "method", "headers", "body", "JSON", "stringify", "prompt_card_id", "test_case_ids", "data", "json", "ok", "Error", "execution_id", "err", "console", "errorMessage", "message", "handleConfigurationChange", "field", "value", "prev", "handleResourceLimitChange", "handleComplete", "results", "handleError", "handleCancel", "resetConfiguration", "React", "useEffect", "ProgressTracker", "onCancel", "showCancelButton", "div", "className", "h3", "button", "onClick", "h4", "p", "span", "join", "label", "select", "onChange", "e", "target", "map", "modelName", "option", "input", "type", "min", "max", "parseInt", "step", "checked", "Math", "ceil", "disabled"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1752e38bdca8105616d1edb568466192e4bfb4ec"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2r7ykhimvl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2r7ykhimvl();
cov_2r7ykhimvl().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2r7ykhimvl().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2r7ykhimvl().f[0]++;
    cov_2r7ykhimvl().s[2]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2r7ykhimvl().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_2r7ykhimvl().s[4]++, _interop_require_wildcard(require("react")));
const _ProgressTracker =
/* istanbul ignore next */
(/*#__PURE__*/cov_2r7ykhimvl().s[5]++, _interop_require_default(require("./ProgressTracker")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_2r7ykhimvl().f[1]++;
  cov_2r7ykhimvl().s[6]++;
  return /* istanbul ignore next */(cov_2r7ykhimvl().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2r7ykhimvl().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_2r7ykhimvl().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_2r7ykhimvl().b[0][1]++, {
    default: obj
  });
}
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_2r7ykhimvl().f[2]++;
  cov_2r7ykhimvl().s[7]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_2r7ykhimvl().b[2][0]++;
    cov_2r7ykhimvl().s[8]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2r7ykhimvl().b[2][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_2r7ykhimvl().s[9]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_2r7ykhimvl().s[10]++, new WeakMap());
  /* istanbul ignore next */
  cov_2r7ykhimvl().s[11]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_2r7ykhimvl().f[3]++;
    cov_2r7ykhimvl().s[12]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_2r7ykhimvl().b[3][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_2r7ykhimvl().b[3][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_2r7ykhimvl().f[4]++;
  cov_2r7ykhimvl().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_2r7ykhimvl().b[5][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_2r7ykhimvl().b[5][1]++, obj) &&
  /* istanbul ignore next */
  (cov_2r7ykhimvl().b[5][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_2r7ykhimvl().b[4][0]++;
    cov_2r7ykhimvl().s[14]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_2r7ykhimvl().b[4][1]++;
  }
  cov_2r7ykhimvl().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_2r7ykhimvl().b[7][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_2r7ykhimvl().b[7][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_2r7ykhimvl().b[7][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_2r7ykhimvl().b[6][0]++;
    cov_2r7ykhimvl().s[16]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_2r7ykhimvl().b[6][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_2r7ykhimvl().s[17]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_2r7ykhimvl().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_2r7ykhimvl().b[9][0]++, cache) &&
  /* istanbul ignore next */
  (cov_2r7ykhimvl().b[9][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_2r7ykhimvl().b[8][0]++;
    cov_2r7ykhimvl().s[19]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_2r7ykhimvl().b[8][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_2r7ykhimvl().s[20]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_2r7ykhimvl().s[21]++,
  /* istanbul ignore next */
  (cov_2r7ykhimvl().b[10][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_2r7ykhimvl().b[10][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_2r7ykhimvl().s[22]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_2r7ykhimvl().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_2r7ykhimvl().b[12][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_2r7ykhimvl().b[12][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_2r7ykhimvl().b[11][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_2r7ykhimvl().s[24]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_2r7ykhimvl().b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_2r7ykhimvl().b[13][1]++, null));
      /* istanbul ignore next */
      cov_2r7ykhimvl().s[25]++;
      if (
      /* istanbul ignore next */
      (cov_2r7ykhimvl().b[15][0]++, desc) && (
      /* istanbul ignore next */
      (cov_2r7ykhimvl().b[15][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_2r7ykhimvl().b[15][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_2r7ykhimvl().b[14][0]++;
        cov_2r7ykhimvl().s[26]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_2r7ykhimvl().b[14][1]++;
        cov_2r7ykhimvl().s[27]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_2r7ykhimvl().b[11][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2r7ykhimvl().s[28]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_2r7ykhimvl().s[29]++;
  if (cache) {
    /* istanbul ignore next */
    cov_2r7ykhimvl().b[16][0]++;
    cov_2r7ykhimvl().s[30]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_2r7ykhimvl().b[16][1]++;
  }
  cov_2r7ykhimvl().s[31]++;
  return newObj;
}
/* istanbul ignore next */
cov_2r7ykhimvl().s[32]++;
const ParallelTestRunner = ({
  promptCardId,
  testCaseIds,
  onComplete,
  onError,
  autoStart =
  /* istanbul ignore next */
  (cov_2r7ykhimvl().b[17][0]++, false)
}) => {
  /* istanbul ignore next */
  cov_2r7ykhimvl().f[5]++;
  const [executionId, setExecutionId] =
  /* istanbul ignore next */
  (cov_2r7ykhimvl().s[33]++, (0, _react.useState)(null));
  const [isConfiguring, setIsConfiguring] =
  /* istanbul ignore next */
  (cov_2r7ykhimvl().s[34]++, (0, _react.useState)(!autoStart));
  const [isStarting, setIsStarting] =
  /* istanbul ignore next */
  (cov_2r7ykhimvl().s[35]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_2r7ykhimvl().s[36]++, (0, _react.useState)(null));
  // Configuration state
  const [model, setModel] =
  /* istanbul ignore next */
  (cov_2r7ykhimvl().s[37]++, (0, _react.useState)("llama3.1"));
  const [configuration, setConfiguration] =
  /* istanbul ignore next */
  (cov_2r7ykhimvl().s[38]++, (0, _react.useState)({
    max_concurrent_tests: 3,
    timeout_per_test: 30000,
    retry_failed_tests: false,
    max_retries: 1,
    resource_limits: {
      memory_mb: 1024,
      cpu_percent: 50
    }
  }));
  const [priority, setPriority] =
  /* istanbul ignore next */
  (cov_2r7ykhimvl().s[39]++, (0, _react.useState)(0));
  // Available models (this could be fetched from an API)
  const availableModels =
  /* istanbul ignore next */
  (cov_2r7ykhimvl().s[40]++, ["llama3.1", "llama3.1:8b", "llama3.1:70b", "codellama", "mistral", "phi3"]);
  /* istanbul ignore next */
  cov_2r7ykhimvl().s[41]++;
  const startExecution = async () => {
    /* istanbul ignore next */
    cov_2r7ykhimvl().f[6]++;
    cov_2r7ykhimvl().s[42]++;
    if (testCaseIds.length === 0) {
      /* istanbul ignore next */
      cov_2r7ykhimvl().b[18][0]++;
      cov_2r7ykhimvl().s[43]++;
      setError("No test cases selected");
      /* istanbul ignore next */
      cov_2r7ykhimvl().s[44]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2r7ykhimvl().b[18][1]++;
    }
    cov_2r7ykhimvl().s[45]++;
    setIsStarting(true);
    /* istanbul ignore next */
    cov_2r7ykhimvl().s[46]++;
    setError(null);
    /* istanbul ignore next */
    cov_2r7ykhimvl().s[47]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_2r7ykhimvl().s[48]++, await fetch("/api/test-cases/execute-parallel", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({
          prompt_card_id: promptCardId,
          test_case_ids: testCaseIds,
          model,
          configuration,
          priority
        })
      }));
      const data =
      /* istanbul ignore next */
      (cov_2r7ykhimvl().s[49]++, await response.json());
      /* istanbul ignore next */
      cov_2r7ykhimvl().s[50]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_2r7ykhimvl().b[19][0]++;
        cov_2r7ykhimvl().s[51]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_2r7ykhimvl().b[20][0]++, data.error) ||
        /* istanbul ignore next */
        (cov_2r7ykhimvl().b[20][1]++, "Failed to start test execution"));
      } else
      /* istanbul ignore next */
      {
        cov_2r7ykhimvl().b[19][1]++;
      }
      cov_2r7ykhimvl().s[52]++;
      setExecutionId(data.data.execution_id);
      /* istanbul ignore next */
      cov_2r7ykhimvl().s[53]++;
      setIsConfiguring(false);
      /* istanbul ignore next */
      cov_2r7ykhimvl().s[54]++;
      setIsStarting(false);
    } catch (err) {
      /* istanbul ignore next */
      cov_2r7ykhimvl().s[55]++;
      console.error("Error starting execution:", err);
      const errorMessage =
      /* istanbul ignore next */
      (cov_2r7ykhimvl().s[56]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_2r7ykhimvl().b[21][0]++, err.message) :
      /* istanbul ignore next */
      (cov_2r7ykhimvl().b[21][1]++, "Failed to start test execution"));
      /* istanbul ignore next */
      cov_2r7ykhimvl().s[57]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_2r7ykhimvl().s[58]++;
      setIsStarting(false);
      /* istanbul ignore next */
      cov_2r7ykhimvl().s[59]++;
      onError?.(errorMessage);
    }
  };
  /* istanbul ignore next */
  cov_2r7ykhimvl().s[60]++;
  const handleConfigurationChange = (field, value) => {
    /* istanbul ignore next */
    cov_2r7ykhimvl().f[7]++;
    cov_2r7ykhimvl().s[61]++;
    setConfiguration(prev => {
      /* istanbul ignore next */
      cov_2r7ykhimvl().f[8]++;
      cov_2r7ykhimvl().s[62]++;
      return {
        ...prev,
        [field]: value
      };
    });
  };
  /* istanbul ignore next */
  cov_2r7ykhimvl().s[63]++;
  const handleResourceLimitChange = (field, value) => {
    /* istanbul ignore next */
    cov_2r7ykhimvl().f[9]++;
    cov_2r7ykhimvl().s[64]++;
    setConfiguration(prev => {
      /* istanbul ignore next */
      cov_2r7ykhimvl().f[10]++;
      cov_2r7ykhimvl().s[65]++;
      return {
        ...prev,
        resource_limits: {
          ...prev.resource_limits,
          [field]: value
        }
      };
    });
  };
  /* istanbul ignore next */
  cov_2r7ykhimvl().s[66]++;
  const handleComplete = results => {
    /* istanbul ignore next */
    cov_2r7ykhimvl().f[11]++;
    cov_2r7ykhimvl().s[67]++;
    onComplete?.(results);
  };
  /* istanbul ignore next */
  cov_2r7ykhimvl().s[68]++;
  const handleError = errorMessage => {
    /* istanbul ignore next */
    cov_2r7ykhimvl().f[12]++;
    cov_2r7ykhimvl().s[69]++;
    setError(errorMessage);
    /* istanbul ignore next */
    cov_2r7ykhimvl().s[70]++;
    onError?.(errorMessage);
  };
  /* istanbul ignore next */
  cov_2r7ykhimvl().s[71]++;
  const handleCancel = () => {
    /* istanbul ignore next */
    cov_2r7ykhimvl().f[13]++;
    cov_2r7ykhimvl().s[72]++;
    setExecutionId(null);
    /* istanbul ignore next */
    cov_2r7ykhimvl().s[73]++;
    setIsConfiguring(true);
  };
  /* istanbul ignore next */
  cov_2r7ykhimvl().s[74]++;
  const resetConfiguration = () => {
    /* istanbul ignore next */
    cov_2r7ykhimvl().f[14]++;
    cov_2r7ykhimvl().s[75]++;
    setConfiguration({
      max_concurrent_tests: 3,
      timeout_per_test: 30000,
      retry_failed_tests: false,
      max_retries: 1,
      resource_limits: {
        memory_mb: 1024,
        cpu_percent: 50
      }
    });
    /* istanbul ignore next */
    cov_2r7ykhimvl().s[76]++;
    setPriority(0);
    /* istanbul ignore next */
    cov_2r7ykhimvl().s[77]++;
    setModel("llama3.1");
  };
  // Auto-start if enabled
  /* istanbul ignore next */
  cov_2r7ykhimvl().s[78]++;
  _react.default.useEffect(() => {
    /* istanbul ignore next */
    cov_2r7ykhimvl().f[15]++;
    cov_2r7ykhimvl().s[79]++;
    if (
    /* istanbul ignore next */
    (cov_2r7ykhimvl().b[23][0]++, autoStart) &&
    /* istanbul ignore next */
    (cov_2r7ykhimvl().b[23][1]++, !executionId) &&
    /* istanbul ignore next */
    (cov_2r7ykhimvl().b[23][2]++, !isStarting)) {
      /* istanbul ignore next */
      cov_2r7ykhimvl().b[22][0]++;
      cov_2r7ykhimvl().s[80]++;
      startExecution();
    } else
    /* istanbul ignore next */
    {
      cov_2r7ykhimvl().b[22][1]++;
    }
  }, [autoStart]);
  /* istanbul ignore next */
  cov_2r7ykhimvl().s[81]++;
  if (executionId) {
    /* istanbul ignore next */
    cov_2r7ykhimvl().b[24][0]++;
    cov_2r7ykhimvl().s[82]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(_ProgressTracker.default, {
      executionId: executionId,
      onComplete: handleComplete,
      onError: handleError,
      onCancel: handleCancel,
      showCancelButton: true,
      autoStart: true
    });
  } else
  /* istanbul ignore next */
  {
    cov_2r7ykhimvl().b[24][1]++;
  }
  cov_2r7ykhimvl().s[83]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "bg-white rounded-lg shadow-md p-6",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex justify-between items-center mb-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
        className: "text-lg font-semibold",
        children: "Parallel Test Execution"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
        onClick: resetConfiguration,
        className: "text-sm text-gray-500 hover:text-gray-700",
        children: "Reset to Defaults"
      })]
    }),
    /* istanbul ignore next */
    (cov_2r7ykhimvl().b[25][0]++, error) &&
    /* istanbul ignore next */
    (cov_2r7ykhimvl().b[25][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "bg-red-50 border border-red-200 rounded-md p-4 mb-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
        className: "font-medium text-red-800 mb-2",
        children: "Error"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-sm text-red-700",
        children: error
      })]
    })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "space-y-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-gray-50 rounded-md p-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
          className: "font-medium mb-2",
          children: "Test Summary"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "text-sm space-y-1",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "font-medium",
              children: "Prompt Card ID:"
            }), " ", promptCardId]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "font-medium",
              children: "Test Cases:"
            }), " ", testCaseIds.length, " selected"]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "font-medium",
              children: "Test Case IDs:"
            }), " ", testCaseIds.join(", ")]
          })]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
          className: "block text-sm font-medium text-gray-700 mb-2",
          children: "Language Model"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("select", {
          value: model,
          onChange: e => {
            /* istanbul ignore next */
            cov_2r7ykhimvl().f[16]++;
            cov_2r7ykhimvl().s[84]++;
            return setModel(e.target.value);
          },
          className: "w-full border border-gray-300 rounded-md px-3 py-2 text-sm",
          children: availableModels.map(modelName => {
            /* istanbul ignore next */
            cov_2r7ykhimvl().f[17]++;
            cov_2r7ykhimvl().s[85]++;
            return /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
              value: modelName,
              children: modelName
            }, modelName);
          })
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "space-y-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
          className: "font-medium",
          children: "Execution Configuration"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "grid grid-cols-2 gap-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "block text-sm font-medium text-gray-700 mb-2",
              children: "Max Concurrent Tests"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
              type: "number",
              min: "1",
              max: "10",
              value: configuration.max_concurrent_tests,
              onChange: e => {
                /* istanbul ignore next */
                cov_2r7ykhimvl().f[18]++;
                cov_2r7ykhimvl().s[86]++;
                return handleConfigurationChange("max_concurrent_tests", parseInt(e.target.value));
              },
              className: "w-full border border-gray-300 rounded-md px-3 py-2 text-sm"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-xs text-gray-500 mt-1",
              children: "Number of tests to run simultaneously"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "block text-sm font-medium text-gray-700 mb-2",
              children: "Timeout per Test (ms)"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
              type: "number",
              min: "1000",
              max: "300000",
              step: "1000",
              value: configuration.timeout_per_test,
              onChange: e => {
                /* istanbul ignore next */
                cov_2r7ykhimvl().f[19]++;
                cov_2r7ykhimvl().s[87]++;
                return handleConfigurationChange("timeout_per_test", parseInt(e.target.value));
              },
              className: "w-full border border-gray-300 rounded-md px-3 py-2 text-sm"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-xs text-gray-500 mt-1",
              children: "Maximum time per test execution"
            })]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center space-x-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
            className: "flex items-center",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
              type: "checkbox",
              checked: configuration.retry_failed_tests,
              onChange: e => {
                /* istanbul ignore next */
                cov_2r7ykhimvl().f[20]++;
                cov_2r7ykhimvl().s[88]++;
                return handleConfigurationChange("retry_failed_tests", e.target.checked);
              },
              className: "mr-2"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "text-sm",
              children: "Retry failed tests"
            })]
          }),
          /* istanbul ignore next */
          (cov_2r7ykhimvl().b[26][0]++, configuration.retry_failed_tests) &&
          /* istanbul ignore next */
          (cov_2r7ykhimvl().b[26][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center space-x-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "text-sm text-gray-700",
              children: "Max retries:"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
              type: "number",
              min: "1",
              max: "5",
              value: configuration.max_retries,
              onChange: e => {
                /* istanbul ignore next */
                cov_2r7ykhimvl().f[21]++;
                cov_2r7ykhimvl().s[89]++;
                return handleConfigurationChange("max_retries", parseInt(e.target.value));
              },
              className: "w-16 border border-gray-300 rounded-md px-2 py-1 text-sm"
            })]
          }))]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "space-y-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
          className: "font-medium",
          children: "Resource Limits"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "grid grid-cols-2 gap-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "block text-sm font-medium text-gray-700 mb-2",
              children: "Memory Limit (MB)"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
              type: "number",
              min: "512",
              max: "8192",
              step: "256",
              value: configuration.resource_limits.memory_mb,
              onChange: e => {
                /* istanbul ignore next */
                cov_2r7ykhimvl().f[22]++;
                cov_2r7ykhimvl().s[90]++;
                return handleResourceLimitChange("memory_mb", parseInt(e.target.value));
              },
              className: "w-full border border-gray-300 rounded-md px-3 py-2 text-sm"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "block text-sm font-medium text-gray-700 mb-2",
              children: "CPU Limit (%)"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
              type: "number",
              min: "10",
              max: "100",
              step: "10",
              value: configuration.resource_limits.cpu_percent,
              onChange: e => {
                /* istanbul ignore next */
                cov_2r7ykhimvl().f[23]++;
                cov_2r7ykhimvl().s[91]++;
                return handleResourceLimitChange("cpu_percent", parseInt(e.target.value));
              },
              className: "w-full border border-gray-300 rounded-md px-3 py-2 text-sm"
            })]
          })]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
          className: "block text-sm font-medium text-gray-700 mb-2",
          children: "Priority"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("select", {
          value: priority,
          onChange: e => {
            /* istanbul ignore next */
            cov_2r7ykhimvl().f[24]++;
            cov_2r7ykhimvl().s[92]++;
            return setPriority(parseInt(e.target.value));
          },
          className: "w-full border border-gray-300 rounded-md px-3 py-2 text-sm",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("option", {
            value: -2,
            children: "Low"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
            value: 0,
            children: "Normal"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
            value: 1,
            children: "High"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
            value: 2,
            children: "Critical"
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-xs text-gray-500 mt-1",
          children: "Higher priority executions run first"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-blue-50 rounded-md p-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
          className: "font-medium mb-2",
          children: "Estimated Resource Usage"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "text-sm space-y-1",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "font-medium",
              children: "Expected Duration:"
            }), " ", " ", Math.ceil(testCaseIds.length * configuration.timeout_per_test / configuration.max_concurrent_tests / 1000), "s - ", " ", Math.ceil(testCaseIds.length * configuration.timeout_per_test / 1000), "s"]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "font-medium",
              children: "Memory Usage:"
            }), " ", " ", configuration.resource_limits.memory_mb * configuration.max_concurrent_tests, "MB"]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "font-medium",
              children: "CPU Usage:"
            }), " ", " ", configuration.resource_limits.cpu_percent, "%"]
          })]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "flex justify-end",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          onClick: startExecution,
          disabled:
          /* istanbul ignore next */
          (cov_2r7ykhimvl().b[27][0]++, isStarting) ||
          /* istanbul ignore next */
          (cov_2r7ykhimvl().b[27][1]++, testCaseIds.length === 0),
          className: "bg-blue-600 hover:bg-blue-700 disabled:bg-blue-300 text-white px-6 py-2 rounded-md font-medium",
          children: isStarting ?
          /* istanbul ignore next */
          (/*#__PURE__*/cov_2r7ykhimvl().b[28][0]++, (0, _jsxruntime.jsxs)("span", {
            className: "flex items-center",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"
            }), "Starting..."]
          })) :
          /* istanbul ignore next */
          (cov_2r7ykhimvl().b[28][1]++, `Start Parallel Execution (${testCaseIds.length} tests)`)
        })
      })]
    })]
  });
};
const _default =
/* istanbul ignore next */
(cov_2r7ykhimvl().s[93]++, ParallelTestRunner);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,