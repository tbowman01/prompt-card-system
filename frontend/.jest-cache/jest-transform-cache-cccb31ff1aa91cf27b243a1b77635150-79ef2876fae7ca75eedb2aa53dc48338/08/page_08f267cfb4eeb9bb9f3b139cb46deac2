d03780a5ce159b076c8fdc72e5817f23
"use client";
"use strict";

/* istanbul ignore next */
function cov_1zjhk04vho() {
  var path = "/workspaces/prompt-card-system/frontend/src/app/demo/progress-tracking/page.tsx";
  var hash = "48672b421f329842f2aa2700d9a7a2098b4ab29c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/prompt-card-system/frontend/src/app/demo/progress-tracking/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 24
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 23
        },
        end: {
          line: 14,
          column: 67
        }
      },
      "6": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 51
        }
      },
      "7": {
        start: {
          line: 16,
          column: 39
        },
        end: {
          line: 16,
          column: 51
        }
      },
      "8": {
        start: {
          line: 17,
          column: 28
        },
        end: {
          line: 17,
          column: 41
        }
      },
      "9": {
        start: {
          line: 18,
          column: 27
        },
        end: {
          line: 18,
          column: 40
        }
      },
      "10": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 21,
          column: 20
        }
      },
      "11": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 66
        }
      },
      "12": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "13": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 19
        }
      },
      "14": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "15": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 30,
          column: 10
        }
      },
      "16": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 53
        }
      },
      "17": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "18": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 30
        }
      },
      "19": {
        start: {
          line: 36,
          column: 17
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "20": {
        start: {
          line: 39,
          column: 32
        },
        end: {
          line: 39,
          column: 88
        }
      },
      "21": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "22": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "23": {
        start: {
          line: 42,
          column: 23
        },
        end: {
          line: 42,
          column: 95
        }
      },
      "24": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 47,
          column: 13
        }
      },
      "25": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 57
        }
      },
      "26": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 39
        }
      },
      "27": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 25
        }
      },
      "28": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "29": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 31
        }
      },
      "30": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 18
        }
      },
      "31": {
        start: {
          line: 56,
          column: 29
        },
        end: {
          line: 360,
          column: 1
        }
      },
      "32": {
        start: {
          line: 57,
          column: 38
        },
        end: {
          line: 57,
          column: 69
        }
      },
      "33": {
        start: {
          line: 58,
          column: 42
        },
        end: {
          line: 58,
          column: 66
        }
      },
      "34": {
        start: {
          line: 59,
          column: 42
        },
        end: {
          line: 59,
          column: 68
        }
      },
      "35": {
        start: {
          line: 60,
          column: 36
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "36": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 32
        }
      },
      "37": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 58
        }
      },
      "38": {
        start: {
          line: 64,
          column: 33
        },
        end: {
          line: 66,
          column: 5
        }
      },
      "39": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 54
        }
      },
      "40": {
        start: {
          line: 67,
          column: 34
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "41": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 48
        }
      },
      "42": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 359,
          column: 7
        }
      },
      "43": {
        start: {
          line: 90,
          column: 49
        },
        end: {
          line: 90,
          column: 72
        }
      },
      "44": {
        start: {
          line: 95,
          column: 49
        },
        end: {
          line: 95,
          column: 70
        }
      },
      "45": {
        start: {
          line: 100,
          column: 49
        },
        end: {
          line: 100,
          column: 71
        }
      },
      "46": {
        start: {
          line: 126,
          column: 67
        },
        end: {
          line: 126,
          column: 97
        }
      },
      "47": {
        start: {
          line: 131,
          column: 65
        },
        end: {
          line: 131,
          column: 83
        }
      },
      "48": {
        start: {
          line: 361,
          column: 17
        },
        end: {
          line: 361,
          column: 37
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 33
          }
        },
        loc: {
          start: {
            line: 15,
            column: 47
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 39
          },
          end: {
            line: 19,
            column: 40
          }
        },
        loc: {
          start: {
            line: 19,
            column: 61
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 34
          }
        },
        loc: {
          start: {
            line: 23,
            column: 53
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 56,
            column: 29
          },
          end: {
            line: 56,
            column: 30
          }
        },
        loc: {
          start: {
            line: 56,
            column: 33
          },
          end: {
            line: 360,
            column: 1
          }
        },
        line: 56
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 60,
            column: 36
          },
          end: {
            line: 60,
            column: 37
          }
        },
        loc: {
          start: {
            line: 60,
            column: 47
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 60
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 64,
            column: 33
          },
          end: {
            line: 64,
            column: 34
          }
        },
        loc: {
          start: {
            line: 64,
            column: 42
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 64
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 67,
            column: 34
          },
          end: {
            line: 67,
            column: 35
          }
        },
        loc: {
          start: {
            line: 67,
            column: 38
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 67
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 90,
            column: 45
          },
          end: {
            line: 90,
            column: 46
          }
        },
        loc: {
          start: {
            line: 90,
            column: 49
          },
          end: {
            line: 90,
            column: 72
          }
        },
        line: 90
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 95,
            column: 45
          },
          end: {
            line: 95,
            column: 46
          }
        },
        loc: {
          start: {
            line: 95,
            column: 49
          },
          end: {
            line: 95,
            column: 70
          }
        },
        line: 95
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 100,
            column: 45
          },
          end: {
            line: 100,
            column: 46
          }
        },
        loc: {
          start: {
            line: 100,
            column: 49
          },
          end: {
            line: 100,
            column: 71
          }
        },
        line: 100
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 126,
            column: 62
          },
          end: {
            line: 126,
            column: 63
          }
        },
        loc: {
          start: {
            line: 126,
            column: 67
          },
          end: {
            line: 126,
            column: 97
          }
        },
        line: 126
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 131,
            column: 61
          },
          end: {
            line: 131,
            column: 62
          }
        },
        loc: {
          start: {
            line: 131,
            column: 65
          },
          end: {
            line: 131,
            column: 83
          }
        },
        line: 131
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 15
          },
          end: {
            line: 20,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 29
          },
          end: {
            line: 20,
            column: 45
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 65
          }
        }],
        line: 20
      },
      "2": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "3": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 20
          }
        }, {
          start: {
            line: 24,
            column: 24
          },
          end: {
            line: 24,
            column: 27
          }
        }, {
          start: {
            line: 24,
            column: 31
          },
          end: {
            line: 24,
            column: 45
          }
        }],
        line: 24
      },
      "4": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "5": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 20
          }
        }, {
          start: {
            line: 27,
            column: 24
          },
          end: {
            line: 27,
            column: 47
          }
        }, {
          start: {
            line: 27,
            column: 51
          },
          end: {
            line: 27,
            column: 76
          }
        }],
        line: 27
      },
      "6": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "7": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 13
          }
        }, {
          start: {
            line: 33,
            column: 17
          },
          end: {
            line: 33,
            column: 31
          }
        }],
        line: 33
      },
      "8": {
        loc: {
          start: {
            line: 39,
            column: 32
          },
          end: {
            line: 39,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 32
          },
          end: {
            line: 39,
            column: 53
          }
        }, {
          start: {
            line: 39,
            column: 57
          },
          end: {
            line: 39,
            column: 88
          }
        }],
        line: 39
      },
      "9": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "10": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 29
          }
        }, {
          start: {
            line: 41,
            column: 33
          },
          end: {
            line: 41,
            column: 79
          }
        }],
        line: 41
      },
      "11": {
        loc: {
          start: {
            line: 42,
            column: 23
          },
          end: {
            line: 42,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 42,
            column: 47
          },
          end: {
            line: 42,
            column: 88
          }
        }, {
          start: {
            line: 42,
            column: 91
          },
          end: {
            line: 42,
            column: 95
          }
        }],
        line: 42
      },
      "12": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 47,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 47,
            column: 13
          }
        }, {
          start: {
            line: 45,
            column: 19
          },
          end: {
            line: 47,
            column: 13
          }
        }],
        line: 43
      },
      "13": {
        loc: {
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 43,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 43,
            column: 20
          }
        }, {
          start: {
            line: 43,
            column: 25
          },
          end: {
            line: 43,
            column: 33
          }
        }, {
          start: {
            line: 43,
            column: 37
          },
          end: {
            line: 43,
            column: 45
          }
        }],
        line: 43
      },
      "14": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "15": {
        loc: {
          start: {
            line: 91,
            column: 83
          },
          end: {
            line: 91,
            column: 181
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 91,
            column: 109
          },
          end: {
            line: 91,
            column: 133
          }
        }, {
          start: {
            line: 91,
            column: 136
          },
          end: {
            line: 91,
            column: 181
          }
        }],
        line: 91
      },
      "16": {
        loc: {
          start: {
            line: 96,
            column: 83
          },
          end: {
            line: 96,
            column: 179
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 96,
            column: 107
          },
          end: {
            line: 96,
            column: 131
          }
        }, {
          start: {
            line: 96,
            column: 134
          },
          end: {
            line: 96,
            column: 179
          }
        }],
        line: 96
      },
      "17": {
        loc: {
          start: {
            line: 101,
            column: 83
          },
          end: {
            line: 101,
            column: 180
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 101,
            column: 108
          },
          end: {
            line: 101,
            column: 132
          }
        }, {
          start: {
            line: 101,
            column: 135
          },
          end: {
            line: 101,
            column: 180
          }
        }],
        line: 101
      },
      "18": {
        loc: {
          start: {
            line: 106,
            column: 24
          },
          end: {
            line: 175,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 24
          },
          end: {
            line: 106,
            column: 47
          }
        }, {
          start: {
            line: 106,
            column: 65
          },
          end: {
            line: 175,
            column: 26
          }
        }],
        line: 106
      },
      "19": {
        loc: {
          start: {
            line: 139,
            column: 32
          },
          end: {
            line: 173,
            column: 34
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 139,
            column: 60
          },
          end: {
            line: 146,
            column: 34
          }
        }, {
          start: {
            line: 146,
            column: 51
          },
          end: {
            line: 173,
            column: 34
          }
        }],
        line: 139
      },
      "20": {
        loc: {
          start: {
            line: 176,
            column: 24
          },
          end: {
            line: 197,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 24
          },
          end: {
            line: 176,
            column: 45
          }
        }, {
          start: {
            line: 176,
            column: 63
          },
          end: {
            line: 197,
            column: 26
          }
        }],
        line: 176
      },
      "21": {
        loc: {
          start: {
            line: 198,
            column: 24
          },
          end: {
            line: 228,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 198,
            column: 24
          },
          end: {
            line: 198,
            column: 46
          }
        }, {
          start: {
            line: 198,
            column: 64
          },
          end: {
            line: 228,
            column: 26
          }
        }],
        line: 198
      },
      "22": {
        loc: {
          start: {
            line: 231,
            column: 16
          },
          end: {
            line: 246,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 231,
            column: 16
          },
          end: {
            line: 231,
            column: 27
          }
        }, {
          start: {
            line: 231,
            column: 45
          },
          end: {
            line: 246,
            column: 18
          }
        }],
        line: 231
      },
      "23": {
        loc: {
          start: {
            line: 278,
            column: 48
          },
          end: {
            line: 278,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 278,
            column: 48
          },
          end: {
            line: 278,
            column: 85
          }
        }, {
          start: {
            line: 278,
            column: 89
          },
          end: {
            line: 278,
            column: 112
          }
        }],
        line: 278
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/workspaces/prompt-card-system/frontend/src/app/demo/progress-tracking/page.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { useState } from 'react';\nimport { ProgressTracker, QueueMonitor, ParallelTestRunner } from '@/components/TestExecution';\n\nconst ProgressTrackingDemo = () => {\n  const [activeTab, setActiveTab] = useState<'tracker' | 'queue' | 'runner'>('tracker');\n  const [executionId, setExecutionId] = useState('');\n  const [testResults, setTestResults] = useState(null);\n\n  const handleExecutionComplete = (results: any) => {\n    setTestResults(results);\n    console.log('Test execution completed:', results);\n  };\n\n  const handleExecutionError = (error: string) => {\n    console.error('Test execution error:', error);\n  };\n\n  const handleExecutionCancel = () => {\n    console.log('Test execution cancelled');\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-8\">\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"bg-white rounded-lg shadow-lg p-6 mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-4\">\n            WebSocket Progress Tracking Demo\n          </h1>\n          <p className=\"text-gray-600 mb-6\">\n            Demonstrate real-time progress tracking for parallel test execution with WebSocket integration.\n          </p>\n\n          {/* Tab Navigation */}\n          <div className=\"flex space-x-1 mb-6\">\n            <button\n              onClick={() => setActiveTab('tracker')}\n              className={`px-4 py-2 rounded-md font-medium ${\n                activeTab === 'tracker'\n                  ? 'bg-blue-600 text-white'\n                  : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n              }`}\n            >\n              Progress Tracker\n            </button>\n            <button\n              onClick={() => setActiveTab('queue')}\n              className={`px-4 py-2 rounded-md font-medium ${\n                activeTab === 'queue'\n                  ? 'bg-blue-600 text-white'\n                  : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n              }`}\n            >\n              Queue Monitor\n            </button>\n            <button\n              onClick={() => setActiveTab('runner')}\n              className={`px-4 py-2 rounded-md font-medium ${\n                activeTab === 'runner'\n                  ? 'bg-blue-600 text-white'\n                  : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n              }`}\n            >\n              Test Runner\n            </button>\n          </div>\n\n          {/* Tab Content */}\n          {activeTab === 'tracker' && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-yellow-50 border border-yellow-200 rounded-md p-4\">\n                <h3 className=\"font-semibold text-yellow-800 mb-2\">Progress Tracker Demo</h3>\n                <p className=\"text-sm text-yellow-700 mb-4\">\n                  To test the progress tracker, you need an active execution ID. Start a test execution \n                  from the Test Runner tab first, then enter the execution ID here.\n                </p>\n                <div className=\"flex space-x-4\">\n                  <input\n                    type=\"text\"\n                    value={executionId}\n                    onChange={(e) => setExecutionId(e.target.value)}\n                    placeholder=\"Enter execution ID (e.g., 12345678-1234-1234-1234-123456789012)\"\n                    className=\"flex-1 border border-gray-300 rounded-md px-3 py-2 text-sm\"\n                  />\n                  <button\n                    onClick={() => setExecutionId('')}\n                    className=\"px-4 py-2 bg-gray-500 text-white rounded-md text-sm hover:bg-gray-600\"\n                  >\n                    Clear\n                  </button>\n                </div>\n              </div>\n\n              {executionId ? (\n                <ProgressTracker\n                  executionId={executionId}\n                  onComplete={handleExecutionComplete}\n                  onError={handleExecutionError}\n                  onCancel={handleExecutionCancel}\n                  showCancelButton={true}\n                  autoStart={true}\n                />\n              ) : (\n                <div className=\"bg-gray-50 rounded-lg p-12 text-center\">\n                  <div className=\"text-gray-400 mb-4\">\n                    <svg className=\"mx-auto h-16 w-16\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                    </svg>\n                  </div>\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Execution ID</h3>\n                  <p className=\"text-gray-600\">\n                    Enter an execution ID above to track progress in real-time.\n                  </p>\n                </div>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'queue' && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-blue-50 border border-blue-200 rounded-md p-4\">\n                <h3 className=\"font-semibold text-blue-800 mb-2\">Queue Monitor</h3>\n                <p className=\"text-sm text-blue-700\">\n                  Monitor the test execution queue and view active executions in real-time.\n                  This updates automatically via WebSocket connections.\n                </p>\n              </div>\n\n              <QueueMonitor\n                autoRefresh={true}\n                refreshInterval={5000}\n              />\n            </div>\n          )}\n\n          {activeTab === 'runner' && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-green-50 border border-green-200 rounded-md p-4\">\n                <h3 className=\"font-semibold text-green-800 mb-2\">Parallel Test Runner</h3>\n                <p className=\"text-sm text-green-700\">\n                  Start a new parallel test execution. This will create a new execution ID that you can \n                  use in the Progress Tracker tab to monitor progress.\n                </p>\n              </div>\n\n              <ParallelTestRunner\n                promptCardId={1}\n                testCaseIds={[1, 2, 3, 4, 5]}\n                onComplete={handleExecutionComplete}\n                onError={handleExecutionError}\n                autoStart={false}\n              />\n            </div>\n          )}\n        </div>\n\n        {/* Results Display */}\n        {testResults && (\n          <div className=\"bg-white rounded-lg shadow-lg p-6\">\n            <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Test Results</h2>\n            <div className=\"bg-gray-50 rounded-md p-4\">\n              <pre className=\"text-sm text-gray-700 overflow-x-auto\">\n                {JSON.stringify(testResults, null, 2)}\n              </pre>\n            </div>\n          </div>\n        )}\n\n        {/* WebSocket Connection Status */}\n        <div className=\"bg-white rounded-lg shadow-lg p-6 mt-8\">\n          <h2 className=\"text-xl font-bold text-gray-900 mb-4\">WebSocket Connection Status</h2>\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-4 h-4 rounded-full bg-green-500\"></div>\n              <span className=\"text-sm text-gray-700\">Connected to WebSocket server</span>\n            </div>\n            <div className=\"text-sm text-gray-600\">\n              <p><strong>Server:</strong> {process.env.NEXT_PUBLIC_WEBSOCKET_URL || 'http://localhost:3001'}</p>\n              <p><strong>Features:</strong> Real-time progress updates, queue monitoring, execution cancellation</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Demo Instructions */}\n        <div className=\"bg-white rounded-lg shadow-lg p-6 mt-8\">\n          <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Demo Instructions</h2>\n          <div className=\"space-y-4\">\n            <div>\n              <h3 className=\"font-semibold text-gray-800\">1. Start a Test Execution</h3>\n              <p className=\"text-sm text-gray-600\">\n                Go to the \"Test Runner\" tab and configure a parallel test execution. Click \"Start Parallel Execution\" \n                to queue the tests and get an execution ID.\n              </p>\n            </div>\n            <div>\n              <h3 className=\"font-semibold text-gray-800\">2. Monitor Progress</h3>\n              <p className=\"text-sm text-gray-600\">\n                Copy the execution ID and paste it into the \"Progress Tracker\" tab. You'll see real-time updates \n                as tests are executed in parallel.\n              </p>\n            </div>\n            <div>\n              <h3 className=\"font-semibold text-gray-800\">3. View Queue Status</h3>\n              <p className=\"text-sm text-gray-600\">\n                Check the \"Queue Monitor\" tab to see overall queue statistics and all active executions.\n              </p>\n            </div>\n            <div>\n              <h3 className=\"font-semibold text-gray-800\">4. Cancel Execution</h3>\n              <p className=\"text-sm text-gray-600\">\n                From the Progress Tracker, you can cancel running executions with a reason. This demonstrates \n                the real-time cancellation capability.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressTrackingDemo;"],
      names: ["ProgressTrackingDemo", "activeTab", "setActiveTab", "useState", "executionId", "setExecutionId", "testResults", "setTestResults", "handleExecutionComplete", "results", "console", "log", "handleExecutionError", "error", "handleExecutionCancel", "div", "className", "h1", "p", "button", "onClick", "h3", "input", "type", "value", "onChange", "e", "target", "placeholder", "ProgressTracker", "onComplete", "onError", "onCancel", "showCancelButton", "autoStart", "svg", "fill", "viewBox", "stroke", "path", "strokeLinecap", "strokeLinejoin", "strokeWidth", "d", "QueueMonitor", "autoRefresh", "refreshInterval", "ParallelTestRunner", "promptCardId", "testCaseIds", "h2", "pre", "JSON", "stringify", "span", "strong", "process", "env", "NEXT_PUBLIC_WEBSOCKET_URL"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "48672b421f329842f2aa2700d9a7a2098b4ab29c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1zjhk04vho = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1zjhk04vho();
cov_1zjhk04vho().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1zjhk04vho().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1zjhk04vho().f[0]++;
    cov_1zjhk04vho().s[2]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1zjhk04vho().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1zjhk04vho().s[4]++, _interop_require_wildcard(require("react")));
const _TestExecution =
/* istanbul ignore next */
(cov_1zjhk04vho().s[5]++, require("../../../components/TestExecution"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1zjhk04vho().f[1]++;
  cov_1zjhk04vho().s[6]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1zjhk04vho().b[0][0]++;
    cov_1zjhk04vho().s[7]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1zjhk04vho().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1zjhk04vho().s[8]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1zjhk04vho().s[9]++, new WeakMap());
  /* istanbul ignore next */
  cov_1zjhk04vho().s[10]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1zjhk04vho().f[2]++;
    cov_1zjhk04vho().s[11]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1zjhk04vho().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1zjhk04vho().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1zjhk04vho().f[3]++;
  cov_1zjhk04vho().s[12]++;
  if (
  /* istanbul ignore next */
  (cov_1zjhk04vho().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1zjhk04vho().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1zjhk04vho().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1zjhk04vho().b[2][0]++;
    cov_1zjhk04vho().s[13]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1zjhk04vho().b[2][1]++;
  }
  cov_1zjhk04vho().s[14]++;
  if (
  /* istanbul ignore next */
  (cov_1zjhk04vho().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1zjhk04vho().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1zjhk04vho().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1zjhk04vho().b[4][0]++;
    cov_1zjhk04vho().s[15]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1zjhk04vho().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1zjhk04vho().s[16]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1zjhk04vho().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_1zjhk04vho().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1zjhk04vho().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1zjhk04vho().b[6][0]++;
    cov_1zjhk04vho().s[18]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1zjhk04vho().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1zjhk04vho().s[19]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1zjhk04vho().s[20]++,
  /* istanbul ignore next */
  (cov_1zjhk04vho().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1zjhk04vho().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1zjhk04vho().s[21]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1zjhk04vho().s[22]++;
    if (
    /* istanbul ignore next */
    (cov_1zjhk04vho().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1zjhk04vho().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1zjhk04vho().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1zjhk04vho().s[23]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1zjhk04vho().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1zjhk04vho().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1zjhk04vho().s[24]++;
      if (
      /* istanbul ignore next */
      (cov_1zjhk04vho().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1zjhk04vho().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1zjhk04vho().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1zjhk04vho().b[12][0]++;
        cov_1zjhk04vho().s[25]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1zjhk04vho().b[12][1]++;
        cov_1zjhk04vho().s[26]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1zjhk04vho().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1zjhk04vho().s[27]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1zjhk04vho().s[28]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1zjhk04vho().b[14][0]++;
    cov_1zjhk04vho().s[29]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1zjhk04vho().b[14][1]++;
  }
  cov_1zjhk04vho().s[30]++;
  return newObj;
}
/* istanbul ignore next */
cov_1zjhk04vho().s[31]++;
const ProgressTrackingDemo = () => {
  /* istanbul ignore next */
  cov_1zjhk04vho().f[4]++;
  const [activeTab, setActiveTab] =
  /* istanbul ignore next */
  (cov_1zjhk04vho().s[32]++, (0, _react.useState)("tracker"));
  const [executionId, setExecutionId] =
  /* istanbul ignore next */
  (cov_1zjhk04vho().s[33]++, (0, _react.useState)(""));
  const [testResults, setTestResults] =
  /* istanbul ignore next */
  (cov_1zjhk04vho().s[34]++, (0, _react.useState)(null));
  /* istanbul ignore next */
  cov_1zjhk04vho().s[35]++;
  const handleExecutionComplete = results => {
    /* istanbul ignore next */
    cov_1zjhk04vho().f[5]++;
    cov_1zjhk04vho().s[36]++;
    setTestResults(results);
    /* istanbul ignore next */
    cov_1zjhk04vho().s[37]++;
    console.log("Test execution completed:", results);
  };
  /* istanbul ignore next */
  cov_1zjhk04vho().s[38]++;
  const handleExecutionError = error => {
    /* istanbul ignore next */
    cov_1zjhk04vho().f[6]++;
    cov_1zjhk04vho().s[39]++;
    console.error("Test execution error:", error);
  };
  /* istanbul ignore next */
  cov_1zjhk04vho().s[40]++;
  const handleExecutionCancel = () => {
    /* istanbul ignore next */
    cov_1zjhk04vho().f[7]++;
    cov_1zjhk04vho().s[41]++;
    console.log("Test execution cancelled");
  };
  /* istanbul ignore next */
  cov_1zjhk04vho().s[42]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: "min-h-screen bg-gray-100 p-8",
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "max-w-6xl mx-auto",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-white rounded-lg shadow-lg p-6 mb-8",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
          className: "text-3xl font-bold text-gray-900 mb-4",
          children: "WebSocket Progress Tracking Demo"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-gray-600 mb-6",
          children: "Demonstrate real-time progress tracking for parallel test execution with WebSocket integration."
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex space-x-1 mb-6",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("button", {
            onClick: () => {
              /* istanbul ignore next */
              cov_1zjhk04vho().f[8]++;
              cov_1zjhk04vho().s[43]++;
              return setActiveTab("tracker");
            },
            className: `px-4 py-2 rounded-md font-medium ${activeTab === "tracker" ?
            /* istanbul ignore next */
            (cov_1zjhk04vho().b[15][0]++, "bg-blue-600 text-white") :
            /* istanbul ignore next */
            (cov_1zjhk04vho().b[15][1]++, "bg-gray-200 text-gray-700 hover:bg-gray-300")}`,
            children: "Progress Tracker"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
            onClick: () => {
              /* istanbul ignore next */
              cov_1zjhk04vho().f[9]++;
              cov_1zjhk04vho().s[44]++;
              return setActiveTab("queue");
            },
            className: `px-4 py-2 rounded-md font-medium ${activeTab === "queue" ?
            /* istanbul ignore next */
            (cov_1zjhk04vho().b[16][0]++, "bg-blue-600 text-white") :
            /* istanbul ignore next */
            (cov_1zjhk04vho().b[16][1]++, "bg-gray-200 text-gray-700 hover:bg-gray-300")}`,
            children: "Queue Monitor"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
            onClick: () => {
              /* istanbul ignore next */
              cov_1zjhk04vho().f[10]++;
              cov_1zjhk04vho().s[45]++;
              return setActiveTab("runner");
            },
            className: `px-4 py-2 rounded-md font-medium ${activeTab === "runner" ?
            /* istanbul ignore next */
            (cov_1zjhk04vho().b[17][0]++, "bg-blue-600 text-white") :
            /* istanbul ignore next */
            (cov_1zjhk04vho().b[17][1]++, "bg-gray-200 text-gray-700 hover:bg-gray-300")}`,
            children: "Test Runner"
          })]
        }),
        /* istanbul ignore next */
        (cov_1zjhk04vho().b[18][0]++, activeTab === "tracker") &&
        /* istanbul ignore next */
        (cov_1zjhk04vho().b[18][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "space-y-6",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "bg-yellow-50 border border-yellow-200 rounded-md p-4",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
              className: "font-semibold text-yellow-800 mb-2",
              children: "Progress Tracker Demo"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-sm text-yellow-700 mb-4",
              children: "To test the progress tracker, you need an active execution ID. Start a test execution from the Test Runner tab first, then enter the execution ID here."
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex space-x-4",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                type: "text",
                value: executionId,
                onChange: e => {
                  /* istanbul ignore next */
                  cov_1zjhk04vho().f[11]++;
                  cov_1zjhk04vho().s[46]++;
                  return setExecutionId(e.target.value);
                },
                placeholder: "Enter execution ID (e.g., 12345678-1234-1234-1234-123456789012)",
                className: "flex-1 border border-gray-300 rounded-md px-3 py-2 text-sm"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
                onClick: () => {
                  /* istanbul ignore next */
                  cov_1zjhk04vho().f[12]++;
                  cov_1zjhk04vho().s[47]++;
                  return setExecutionId("");
                },
                className: "px-4 py-2 bg-gray-500 text-white rounded-md text-sm hover:bg-gray-600",
                children: "Clear"
              })]
            })]
          }), executionId ?
          /* istanbul ignore next */
          (/*#__PURE__*/cov_1zjhk04vho().b[19][0]++, (0, _jsxruntime.jsx)(_TestExecution.ProgressTracker, {
            executionId: executionId,
            onComplete: handleExecutionComplete,
            onError: handleExecutionError,
            onCancel: handleExecutionCancel,
            showCancelButton: true,
            autoStart: true
          })) :
          /* istanbul ignore next */
          (/*#__PURE__*/cov_1zjhk04vho().b[19][1]++, (0, _jsxruntime.jsxs)("div", {
            className: "bg-gray-50 rounded-lg p-12 text-center",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-gray-400 mb-4",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
                className: "mx-auto h-16 w-16",
                fill: "none",
                viewBox: "0 0 24 24",
                stroke: "currentColor",
                children: /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
                  strokeLinecap: "round",
                  strokeLinejoin: "round",
                  strokeWidth: 1,
                  d: "M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"
                })
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
              className: "text-lg font-medium text-gray-900 mb-2",
              children: "No Execution ID"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-gray-600",
              children: "Enter an execution ID above to track progress in real-time."
            })]
          }))]
        })),
        /* istanbul ignore next */
        (cov_1zjhk04vho().b[20][0]++, activeTab === "queue") &&
        /* istanbul ignore next */
        (cov_1zjhk04vho().b[20][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "space-y-6",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "bg-blue-50 border border-blue-200 rounded-md p-4",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
              className: "font-semibold text-blue-800 mb-2",
              children: "Queue Monitor"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-sm text-blue-700",
              children: "Monitor the test execution queue and view active executions in real-time. This updates automatically via WebSocket connections."
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_TestExecution.QueueMonitor, {
            autoRefresh: true,
            refreshInterval: 5000
          })]
        })),
        /* istanbul ignore next */
        (cov_1zjhk04vho().b[21][0]++, activeTab === "runner") &&
        /* istanbul ignore next */
        (cov_1zjhk04vho().b[21][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "space-y-6",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "bg-green-50 border border-green-200 rounded-md p-4",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
              className: "font-semibold text-green-800 mb-2",
              children: "Parallel Test Runner"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-sm text-green-700",
              children: "Start a new parallel test execution. This will create a new execution ID that you can use in the Progress Tracker tab to monitor progress."
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_TestExecution.ParallelTestRunner, {
            promptCardId: 1,
            testCaseIds: [1, 2, 3, 4, 5],
            onComplete: handleExecutionComplete,
            onError: handleExecutionError,
            autoStart: false
          })]
        }))]
      }),
      /* istanbul ignore next */
      (cov_1zjhk04vho().b[22][0]++, testResults) &&
      /* istanbul ignore next */
      (cov_1zjhk04vho().b[22][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-white rounded-lg shadow-lg p-6",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "text-xl font-bold text-gray-900 mb-4",
          children: "Test Results"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "bg-gray-50 rounded-md p-4",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("pre", {
            className: "text-sm text-gray-700 overflow-x-auto",
            children: JSON.stringify(testResults, null, 2)
          })
        })]
      })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-white rounded-lg shadow-lg p-6 mt-8",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "text-xl font-bold text-gray-900 mb-4",
          children: "WebSocket Connection Status"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "space-y-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center space-x-3",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "w-4 h-4 rounded-full bg-green-500"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "text-sm text-gray-700",
              children: "Connected to WebSocket server"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "text-sm text-gray-600",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
                children: "Server:"
              }), " ",
              /* istanbul ignore next */
              (cov_1zjhk04vho().b[23][0]++, process.env.NEXT_PUBLIC_WEBSOCKET_URL) ||
              /* istanbul ignore next */
              (cov_1zjhk04vho().b[23][1]++, "http://localhost:3001")]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
                children: "Features:"
              }), " Real-time progress updates, queue monitoring, execution cancellation"]
            })]
          })]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-white rounded-lg shadow-lg p-6 mt-8",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "text-xl font-bold text-gray-900 mb-4",
          children: "Demo Instructions"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "space-y-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
              className: "font-semibold text-gray-800",
              children: "1. Start a Test Execution"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-sm text-gray-600",
              children: 'Go to the "Test Runner" tab and configure a parallel test execution. Click "Start Parallel Execution" to queue the tests and get an execution ID.'
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
              className: "font-semibold text-gray-800",
              children: "2. Monitor Progress"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-sm text-gray-600",
              children: 'Copy the execution ID and paste it into the "Progress Tracker" tab. You\'ll see real-time updates as tests are executed in parallel.'
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
              className: "font-semibold text-gray-800",
              children: "3. View Queue Status"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-sm text-gray-600",
              children: 'Check the "Queue Monitor" tab to see overall queue statistics and all active executions.'
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
              className: "font-semibold text-gray-800",
              children: "4. Cancel Execution"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-sm text-gray-600",
              children: "From the Progress Tracker, you can cancel running executions with a reason. This demonstrates the real-time cancellation capability."
            })]
          })]
        })]
      })]
    })
  });
};
const _default =
/* istanbul ignore next */
(cov_1zjhk04vho().s[48]++, ProgressTrackingDemo);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZGVmYXVsdCIsIlByb2dyZXNzVHJhY2tpbmdEZW1vIiwiY292XzF6amhrMDR2aG8iLCJmIiwiYWN0aXZlVGFiIiwic2V0QWN0aXZlVGFiIiwicyIsIl9yZWFjdCIsInVzZVN0YXRlIiwiZXhlY3V0aW9uSWQiLCJzZXRFeGVjdXRpb25JZCIsInRlc3RSZXN1bHRzIiwic2V0VGVzdFJlc3VsdHMiLCJoYW5kbGVFeGVjdXRpb25Db21wbGV0ZSIsInJlc3VsdHMiLCJjb25zb2xlIiwibG9nIiwiaGFuZGxlRXhlY3V0aW9uRXJyb3IiLCJlcnJvciIsImhhbmRsZUV4ZWN1dGlvbkNhbmNlbCIsIl9qc3hydW50aW1lIiwianN4IiwiY2xhc3NOYW1lIiwianN4cyIsIm9uQ2xpY2siLCJiIiwidHlwZSIsInZhbHVlIiwib25DaGFuZ2UiLCJlIiwidGFyZ2V0IiwicGxhY2Vob2xkZXIiLCJfVGVzdEV4ZWN1dGlvbiIsIlByb2dyZXNzVHJhY2tlciIsIm9uQ29tcGxldGUiLCJvbkVycm9yIiwib25DYW5jZWwiLCJzaG93Q2FuY2VsQnV0dG9uIiwiYXV0b1N0YXJ0IiwiZmlsbCIsInZpZXdCb3giLCJzdHJva2UiLCJzdHJva2VMaW5lY2FwIiwic3Ryb2tlTGluZWpvaW4iLCJzdHJva2VXaWR0aCIsImQiLCJRdWV1ZU1vbml0b3IiLCJhdXRvUmVmcmVzaCIsInJlZnJlc2hJbnRlcnZhbCIsIlBhcmFsbGVsVGVzdFJ1bm5lciIsInByb21wdENhcmRJZCIsInRlc3RDYXNlSWRzIiwiSlNPTiIsInN0cmluZ2lmeSIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19XRUJTT0NLRVRfVVJMIl0sInNvdXJjZXMiOlsiL3dvcmtzcGFjZXMvcHJvbXB0LWNhcmQtc3lzdGVtL2Zyb250ZW5kL3NyYy9hcHAvZGVtby9wcm9ncmVzcy10cmFja2luZy9wYWdlLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFByb2dyZXNzVHJhY2tlciwgUXVldWVNb25pdG9yLCBQYXJhbGxlbFRlc3RSdW5uZXIgfSBmcm9tICdAL2NvbXBvbmVudHMvVGVzdEV4ZWN1dGlvbic7XG5cbmNvbnN0IFByb2dyZXNzVHJhY2tpbmdEZW1vID0gKCkgPT4ge1xuICBjb25zdCBbYWN0aXZlVGFiLCBzZXRBY3RpdmVUYWJdID0gdXNlU3RhdGU8J3RyYWNrZXInIHwgJ3F1ZXVlJyB8ICdydW5uZXInPigndHJhY2tlcicpO1xuICBjb25zdCBbZXhlY3V0aW9uSWQsIHNldEV4ZWN1dGlvbklkXSA9IHVzZVN0YXRlKCcnKTtcbiAgY29uc3QgW3Rlc3RSZXN1bHRzLCBzZXRUZXN0UmVzdWx0c10gPSB1c2VTdGF0ZShudWxsKTtcblxuICBjb25zdCBoYW5kbGVFeGVjdXRpb25Db21wbGV0ZSA9IChyZXN1bHRzOiBhbnkpID0+IHtcbiAgICBzZXRUZXN0UmVzdWx0cyhyZXN1bHRzKTtcbiAgICBjb25zb2xlLmxvZygnVGVzdCBleGVjdXRpb24gY29tcGxldGVkOicsIHJlc3VsdHMpO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZUV4ZWN1dGlvbkVycm9yID0gKGVycm9yOiBzdHJpbmcpID0+IHtcbiAgICBjb25zb2xlLmVycm9yKCdUZXN0IGV4ZWN1dGlvbiBlcnJvcjonLCBlcnJvcik7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlRXhlY3V0aW9uQ2FuY2VsID0gKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdUZXN0IGV4ZWN1dGlvbiBjYW5jZWxsZWQnKTtcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwibWluLWgtc2NyZWVuIGJnLWdyYXktMTAwIHAtOFwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXgtdy02eGwgbXgtYXV0b1wiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJnLXdoaXRlIHJvdW5kZWQtbGcgc2hhZG93LWxnIHAtNiBtYi04XCI+XG4gICAgICAgICAgPGgxIGNsYXNzTmFtZT1cInRleHQtM3hsIGZvbnQtYm9sZCB0ZXh0LWdyYXktOTAwIG1iLTRcIj5cbiAgICAgICAgICAgIFdlYlNvY2tldCBQcm9ncmVzcyBUcmFja2luZyBEZW1vXG4gICAgICAgICAgPC9oMT5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LWdyYXktNjAwIG1iLTZcIj5cbiAgICAgICAgICAgIERlbW9uc3RyYXRlIHJlYWwtdGltZSBwcm9ncmVzcyB0cmFja2luZyBmb3IgcGFyYWxsZWwgdGVzdCBleGVjdXRpb24gd2l0aCBXZWJTb2NrZXQgaW50ZWdyYXRpb24uXG4gICAgICAgICAgPC9wPlxuXG4gICAgICAgICAgey8qIFRhYiBOYXZpZ2F0aW9uICovfVxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBzcGFjZS14LTEgbWItNlwiPlxuICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBzZXRBY3RpdmVUYWIoJ3RyYWNrZXInKX1cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgcHgtNCBweS0yIHJvdW5kZWQtbWQgZm9udC1tZWRpdW0gJHtcbiAgICAgICAgICAgICAgICBhY3RpdmVUYWIgPT09ICd0cmFja2VyJ1xuICAgICAgICAgICAgICAgICAgPyAnYmctYmx1ZS02MDAgdGV4dC13aGl0ZSdcbiAgICAgICAgICAgICAgICAgIDogJ2JnLWdyYXktMjAwIHRleHQtZ3JheS03MDAgaG92ZXI6YmctZ3JheS0zMDAnXG4gICAgICAgICAgICAgIH1gfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICBQcm9ncmVzcyBUcmFja2VyXG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0QWN0aXZlVGFiKCdxdWV1ZScpfVxuICAgICAgICAgICAgICBjbGFzc05hbWU9e2BweC00IHB5LTIgcm91bmRlZC1tZCBmb250LW1lZGl1bSAke1xuICAgICAgICAgICAgICAgIGFjdGl2ZVRhYiA9PT0gJ3F1ZXVlJ1xuICAgICAgICAgICAgICAgICAgPyAnYmctYmx1ZS02MDAgdGV4dC13aGl0ZSdcbiAgICAgICAgICAgICAgICAgIDogJ2JnLWdyYXktMjAwIHRleHQtZ3JheS03MDAgaG92ZXI6YmctZ3JheS0zMDAnXG4gICAgICAgICAgICAgIH1gfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICBRdWV1ZSBNb25pdG9yXG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0QWN0aXZlVGFiKCdydW5uZXInKX1cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgcHgtNCBweS0yIHJvdW5kZWQtbWQgZm9udC1tZWRpdW0gJHtcbiAgICAgICAgICAgICAgICBhY3RpdmVUYWIgPT09ICdydW5uZXInXG4gICAgICAgICAgICAgICAgICA/ICdiZy1ibHVlLTYwMCB0ZXh0LXdoaXRlJ1xuICAgICAgICAgICAgICAgICAgOiAnYmctZ3JheS0yMDAgdGV4dC1ncmF5LTcwMCBob3ZlcjpiZy1ncmF5LTMwMCdcbiAgICAgICAgICAgICAgfWB9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIFRlc3QgUnVubmVyXG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIHsvKiBUYWIgQ29udGVudCAqL31cbiAgICAgICAgICB7YWN0aXZlVGFiID09PSAndHJhY2tlcicgJiYgKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzcGFjZS15LTZcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiZy15ZWxsb3ctNTAgYm9yZGVyIGJvcmRlci15ZWxsb3ctMjAwIHJvdW5kZWQtbWQgcC00XCI+XG4gICAgICAgICAgICAgICAgPGgzIGNsYXNzTmFtZT1cImZvbnQtc2VtaWJvbGQgdGV4dC15ZWxsb3ctODAwIG1iLTJcIj5Qcm9ncmVzcyBUcmFja2VyIERlbW88L2gzPlxuICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtc20gdGV4dC15ZWxsb3ctNzAwIG1iLTRcIj5cbiAgICAgICAgICAgICAgICAgIFRvIHRlc3QgdGhlIHByb2dyZXNzIHRyYWNrZXIsIHlvdSBuZWVkIGFuIGFjdGl2ZSBleGVjdXRpb24gSUQuIFN0YXJ0IGEgdGVzdCBleGVjdXRpb24gXG4gICAgICAgICAgICAgICAgICBmcm9tIHRoZSBUZXN0IFJ1bm5lciB0YWIgZmlyc3QsIHRoZW4gZW50ZXIgdGhlIGV4ZWN1dGlvbiBJRCBoZXJlLlxuICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggc3BhY2UteC00XCI+XG4gICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17ZXhlY3V0aW9uSWR9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0RXhlY3V0aW9uSWQoZS50YXJnZXQudmFsdWUpfVxuICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIkVudGVyIGV4ZWN1dGlvbiBJRCAoZS5nLiwgMTIzNDU2NzgtMTIzNC0xMjM0LTEyMzQtMTIzNDU2Nzg5MDEyKVwiXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZsZXgtMSBib3JkZXIgYm9yZGVyLWdyYXktMzAwIHJvdW5kZWQtbWQgcHgtMyBweS0yIHRleHQtc21cIlxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0RXhlY3V0aW9uSWQoJycpfVxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJweC00IHB5LTIgYmctZ3JheS01MDAgdGV4dC13aGl0ZSByb3VuZGVkLW1kIHRleHQtc20gaG92ZXI6YmctZ3JheS02MDBcIlxuICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICBDbGVhclxuICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgIHtleGVjdXRpb25JZCA/IChcbiAgICAgICAgICAgICAgICA8UHJvZ3Jlc3NUcmFja2VyXG4gICAgICAgICAgICAgICAgICBleGVjdXRpb25JZD17ZXhlY3V0aW9uSWR9XG4gICAgICAgICAgICAgICAgICBvbkNvbXBsZXRlPXtoYW5kbGVFeGVjdXRpb25Db21wbGV0ZX1cbiAgICAgICAgICAgICAgICAgIG9uRXJyb3I9e2hhbmRsZUV4ZWN1dGlvbkVycm9yfVxuICAgICAgICAgICAgICAgICAgb25DYW5jZWw9e2hhbmRsZUV4ZWN1dGlvbkNhbmNlbH1cbiAgICAgICAgICAgICAgICAgIHNob3dDYW5jZWxCdXR0b249e3RydWV9XG4gICAgICAgICAgICAgICAgICBhdXRvU3RhcnQ9e3RydWV9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJnLWdyYXktNTAgcm91bmRlZC1sZyBwLTEyIHRleHQtY2VudGVyXCI+XG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtZ3JheS00MDAgbWItNFwiPlxuICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzTmFtZT1cIm14LWF1dG8gaC0xNiB3LTE2XCIgZmlsbD1cIm5vbmVcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgc3Ryb2tlPVwiY3VycmVudENvbG9yXCI+XG4gICAgICAgICAgICAgICAgICAgICAgPHBhdGggc3Ryb2tlTGluZWNhcD1cInJvdW5kXCIgc3Ryb2tlTGluZWpvaW49XCJyb3VuZFwiIHN0cm9rZVdpZHRoPXsxfSBkPVwiTTkgMTl2LTZhMiAyIDAgMDAtMi0ySDVhMiAyIDAgMDAtMiAydjZhMiAyIDAgMDAyIDJoMmEyIDIgMCAwMDItMnptMCAwVjlhMiAyIDAgMDEyLTJoMmEyIDIgMCAwMTIgMnYxMG0tNiAwYTIgMiAwIDAwMiAyaDJhMiAyIDAgMDAyLTJtMCAwVjVhMiAyIDAgMDEyLTJoMmEyIDIgMCAwMTIgMnYxNGEyIDIgMCAwMS0yIDJoLTJhMiAyIDAgMDEtMi0yelwiIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8aDMgY2xhc3NOYW1lPVwidGV4dC1sZyBmb250LW1lZGl1bSB0ZXh0LWdyYXktOTAwIG1iLTJcIj5ObyBFeGVjdXRpb24gSUQ8L2gzPlxuICAgICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1ncmF5LTYwMFwiPlxuICAgICAgICAgICAgICAgICAgICBFbnRlciBhbiBleGVjdXRpb24gSUQgYWJvdmUgdG8gdHJhY2sgcHJvZ3Jlc3MgaW4gcmVhbC10aW1lLlxuICAgICAgICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKX1cblxuICAgICAgICAgIHthY3RpdmVUYWIgPT09ICdxdWV1ZScgJiYgKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzcGFjZS15LTZcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiZy1ibHVlLTUwIGJvcmRlciBib3JkZXItYmx1ZS0yMDAgcm91bmRlZC1tZCBwLTRcIj5cbiAgICAgICAgICAgICAgICA8aDMgY2xhc3NOYW1lPVwiZm9udC1zZW1pYm9sZCB0ZXh0LWJsdWUtODAwIG1iLTJcIj5RdWV1ZSBNb25pdG9yPC9oMz5cbiAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LXNtIHRleHQtYmx1ZS03MDBcIj5cbiAgICAgICAgICAgICAgICAgIE1vbml0b3IgdGhlIHRlc3QgZXhlY3V0aW9uIHF1ZXVlIGFuZCB2aWV3IGFjdGl2ZSBleGVjdXRpb25zIGluIHJlYWwtdGltZS5cbiAgICAgICAgICAgICAgICAgIFRoaXMgdXBkYXRlcyBhdXRvbWF0aWNhbGx5IHZpYSBXZWJTb2NrZXQgY29ubmVjdGlvbnMuXG4gICAgICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICA8UXVldWVNb25pdG9yXG4gICAgICAgICAgICAgICAgYXV0b1JlZnJlc2g9e3RydWV9XG4gICAgICAgICAgICAgICAgcmVmcmVzaEludGVydmFsPXs1MDAwfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKX1cblxuICAgICAgICAgIHthY3RpdmVUYWIgPT09ICdydW5uZXInICYmIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3BhY2UteS02XCI+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmctZ3JlZW4tNTAgYm9yZGVyIGJvcmRlci1ncmVlbi0yMDAgcm91bmRlZC1tZCBwLTRcIj5cbiAgICAgICAgICAgICAgICA8aDMgY2xhc3NOYW1lPVwiZm9udC1zZW1pYm9sZCB0ZXh0LWdyZWVuLTgwMCBtYi0yXCI+UGFyYWxsZWwgVGVzdCBSdW5uZXI8L2gzPlxuICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtc20gdGV4dC1ncmVlbi03MDBcIj5cbiAgICAgICAgICAgICAgICAgIFN0YXJ0IGEgbmV3IHBhcmFsbGVsIHRlc3QgZXhlY3V0aW9uLiBUaGlzIHdpbGwgY3JlYXRlIGEgbmV3IGV4ZWN1dGlvbiBJRCB0aGF0IHlvdSBjYW4gXG4gICAgICAgICAgICAgICAgICB1c2UgaW4gdGhlIFByb2dyZXNzIFRyYWNrZXIgdGFiIHRvIG1vbml0b3IgcHJvZ3Jlc3MuXG4gICAgICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICA8UGFyYWxsZWxUZXN0UnVubmVyXG4gICAgICAgICAgICAgICAgcHJvbXB0Q2FyZElkPXsxfVxuICAgICAgICAgICAgICAgIHRlc3RDYXNlSWRzPXtbMSwgMiwgMywgNCwgNV19XG4gICAgICAgICAgICAgICAgb25Db21wbGV0ZT17aGFuZGxlRXhlY3V0aW9uQ29tcGxldGV9XG4gICAgICAgICAgICAgICAgb25FcnJvcj17aGFuZGxlRXhlY3V0aW9uRXJyb3J9XG4gICAgICAgICAgICAgICAgYXV0b1N0YXJ0PXtmYWxzZX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICl9XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIHsvKiBSZXN1bHRzIERpc3BsYXkgKi99XG4gICAgICAgIHt0ZXN0UmVzdWx0cyAmJiAoXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiZy13aGl0ZSByb3VuZGVkLWxnIHNoYWRvdy1sZyBwLTZcIj5cbiAgICAgICAgICAgIDxoMiBjbGFzc05hbWU9XCJ0ZXh0LXhsIGZvbnQtYm9sZCB0ZXh0LWdyYXktOTAwIG1iLTRcIj5UZXN0IFJlc3VsdHM8L2gyPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiZy1ncmF5LTUwIHJvdW5kZWQtbWQgcC00XCI+XG4gICAgICAgICAgICAgIDxwcmUgY2xhc3NOYW1lPVwidGV4dC1zbSB0ZXh0LWdyYXktNzAwIG92ZXJmbG93LXgtYXV0b1wiPlxuICAgICAgICAgICAgICAgIHtKU09OLnN0cmluZ2lmeSh0ZXN0UmVzdWx0cywgbnVsbCwgMil9XG4gICAgICAgICAgICAgIDwvcHJlPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICl9XG5cbiAgICAgICAgey8qIFdlYlNvY2tldCBDb25uZWN0aW9uIFN0YXR1cyAqL31cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiZy13aGl0ZSByb3VuZGVkLWxnIHNoYWRvdy1sZyBwLTYgbXQtOFwiPlxuICAgICAgICAgIDxoMiBjbGFzc05hbWU9XCJ0ZXh0LXhsIGZvbnQtYm9sZCB0ZXh0LWdyYXktOTAwIG1iLTRcIj5XZWJTb2NrZXQgQ29ubmVjdGlvbiBTdGF0dXM8L2gyPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3BhY2UteS00XCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtM1wiPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInctNCBoLTQgcm91bmRlZC1mdWxsIGJnLWdyZWVuLTUwMFwiPjwvZGl2PlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ0ZXh0LXNtIHRleHQtZ3JheS03MDBcIj5Db25uZWN0ZWQgdG8gV2ViU29ja2V0IHNlcnZlcjwvc3Bhbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LXNtIHRleHQtZ3JheS02MDBcIj5cbiAgICAgICAgICAgICAgPHA+PHN0cm9uZz5TZXJ2ZXI6PC9zdHJvbmc+IHtwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19XRUJTT0NLRVRfVVJMIHx8ICdodHRwOi8vbG9jYWxob3N0OjMwMDEnfTwvcD5cbiAgICAgICAgICAgICAgPHA+PHN0cm9uZz5GZWF0dXJlczo8L3N0cm9uZz4gUmVhbC10aW1lIHByb2dyZXNzIHVwZGF0ZXMsIHF1ZXVlIG1vbml0b3JpbmcsIGV4ZWN1dGlvbiBjYW5jZWxsYXRpb248L3A+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgey8qIERlbW8gSW5zdHJ1Y3Rpb25zICovfVxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJnLXdoaXRlIHJvdW5kZWQtbGcgc2hhZG93LWxnIHAtNiBtdC04XCI+XG4gICAgICAgICAgPGgyIGNsYXNzTmFtZT1cInRleHQteGwgZm9udC1ib2xkIHRleHQtZ3JheS05MDAgbWItNFwiPkRlbW8gSW5zdHJ1Y3Rpb25zPC9oMj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwYWNlLXktNFwiPlxuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgPGgzIGNsYXNzTmFtZT1cImZvbnQtc2VtaWJvbGQgdGV4dC1ncmF5LTgwMFwiPjEuIFN0YXJ0IGEgVGVzdCBFeGVjdXRpb248L2gzPlxuICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LXNtIHRleHQtZ3JheS02MDBcIj5cbiAgICAgICAgICAgICAgICBHbyB0byB0aGUgXCJUZXN0IFJ1bm5lclwiIHRhYiBhbmQgY29uZmlndXJlIGEgcGFyYWxsZWwgdGVzdCBleGVjdXRpb24uIENsaWNrIFwiU3RhcnQgUGFyYWxsZWwgRXhlY3V0aW9uXCIgXG4gICAgICAgICAgICAgICAgdG8gcXVldWUgdGhlIHRlc3RzIGFuZCBnZXQgYW4gZXhlY3V0aW9uIElELlxuICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgIDxoMyBjbGFzc05hbWU9XCJmb250LXNlbWlib2xkIHRleHQtZ3JheS04MDBcIj4yLiBNb25pdG9yIFByb2dyZXNzPC9oMz5cbiAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1zbSB0ZXh0LWdyYXktNjAwXCI+XG4gICAgICAgICAgICAgICAgQ29weSB0aGUgZXhlY3V0aW9uIElEIGFuZCBwYXN0ZSBpdCBpbnRvIHRoZSBcIlByb2dyZXNzIFRyYWNrZXJcIiB0YWIuIFlvdSdsbCBzZWUgcmVhbC10aW1lIHVwZGF0ZXMgXG4gICAgICAgICAgICAgICAgYXMgdGVzdHMgYXJlIGV4ZWN1dGVkIGluIHBhcmFsbGVsLlxuICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgIDxoMyBjbGFzc05hbWU9XCJmb250LXNlbWlib2xkIHRleHQtZ3JheS04MDBcIj4zLiBWaWV3IFF1ZXVlIFN0YXR1czwvaDM+XG4gICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtc20gdGV4dC1ncmF5LTYwMFwiPlxuICAgICAgICAgICAgICAgIENoZWNrIHRoZSBcIlF1ZXVlIE1vbml0b3JcIiB0YWIgdG8gc2VlIG92ZXJhbGwgcXVldWUgc3RhdGlzdGljcyBhbmQgYWxsIGFjdGl2ZSBleGVjdXRpb25zLlxuICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgIDxoMyBjbGFzc05hbWU9XCJmb250LXNlbWlib2xkIHRleHQtZ3JheS04MDBcIj40LiBDYW5jZWwgRXhlY3V0aW9uPC9oMz5cbiAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1zbSB0ZXh0LWdyYXktNjAwXCI+XG4gICAgICAgICAgICAgICAgRnJvbSB0aGUgUHJvZ3Jlc3MgVHJhY2tlciwgeW91IGNhbiBjYW5jZWwgcnVubmluZyBleGVjdXRpb25zIHdpdGggYSByZWFzb24uIFRoaXMgZGVtb25zdHJhdGVzIFxuICAgICAgICAgICAgICAgIHRoZSByZWFsLXRpbWUgY2FuY2VsbGF0aW9uIGNhcGFiaWxpdHkuXG4gICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUHJvZ3Jlc3NUcmFja2luZ0RlbW87Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0JBOE5BOzs7Ozs7V0FBQUEsUUFBQTs7Ozs7Ozs7eUVBNU5nQzs7O2tDQUNrQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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