7b6894103d8bce05f1f710726435ae5d
"use client";
"use strict";

/* istanbul ignore next */
function cov_2e04psav9v() {
  var path = "/workspaces/prompt-card-system/frontend/src/components/PromptCard/PromptCardList.tsx";
  var hash = "31c3cf9e961ca34278c3c99938e3a09f232e3bae";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/prompt-card-system/frontend/src/components/PromptCard/PromptCardList.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 30
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 28
        },
        end: {
          line: 14,
          column: 74
        }
      },
      "6": {
        start: {
          line: 15,
          column: 21
        },
        end: {
          line: 15,
          column: 49
        }
      },
      "7": {
        start: {
          line: 16,
          column: 16
        },
        end: {
          line: 16,
          column: 39
        }
      },
      "8": {
        start: {
          line: 17,
          column: 24
        },
        end: {
          line: 17,
          column: 55
        }
      },
      "9": {
        start: {
          line: 18,
          column: 15
        },
        end: {
          line: 18,
          column: 37
        }
      },
      "10": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 22,
          column: 6
        }
      },
      "11": {
        start: {
          line: 25,
          column: 30
        },
        end: {
          line: 25,
          column: 54
        }
      },
      "12": {
        start: {
          line: 26,
          column: 34
        },
        end: {
          line: 26,
          column: 60
        }
      },
      "13": {
        start: {
          line: 27,
          column: 30
        },
        end: {
          line: 27,
          column: 56
        }
      },
      "14": {
        start: {
          line: 28,
          column: 40
        },
        end: {
          line: 28,
          column: 64
        }
      },
      "15": {
        start: {
          line: 29,
          column: 40
        },
        end: {
          line: 36,
          column: 6
        }
      },
      "16": {
        start: {
          line: 37,
          column: 23
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "17": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "18": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 29
        }
      },
      "19": {
        start: {
          line: 40,
          column: 27
        },
        end: {
          line: 43,
          column: 14
        }
      },
      "20": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 46,
          column: 13
        }
      },
      "21": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 55
        }
      },
      "22": {
        start: {
          line: 47,
          column: 29
        },
        end: {
          line: 47,
          column: 71
        }
      },
      "23": {
        start: {
          line: 48,
          column: 27
        },
        end: {
          line: 48,
          column: 48
        }
      },
      "24": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 55,
          column: 13
        }
      },
      "25": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 38
        }
      },
      "26": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 49
        }
      },
      "27": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 31
        }
      },
      "28": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 73
        }
      },
      "29": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 68
        }
      },
      "30": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 30
        }
      },
      "31": {
        start: {
          line: 62,
          column: 25
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "32": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 28
        }
      },
      "33": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 28
        }
      },
      "34": {
        start: {
          line: 66,
          column: 29
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "35": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 40
        }
      },
      "36": {
        start: {
          line: 69,
          column: 25
        },
        end: {
          line: 87,
          column: 5
        }
      },
      "37": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "38": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 19
        }
      },
      "39": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "40": {
        start: {
          line: 74,
          column: 29
        },
        end: {
          line: 76,
          column: 14
        }
      },
      "41": {
        start: {
          line: 77,
          column: 27
        },
        end: {
          line: 77,
          column: 48
        }
      },
      "42": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 83,
          column: 13
        }
      },
      "43": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 56
        }
      },
      "44": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 82,
          column: 73
        }
      },
      "45": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 68
        }
      },
      "46": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 90,
          column: 11
        }
      },
      "47": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 21
        }
      },
      "48": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "49": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 95,
          column: 11
        }
      },
      "50": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 315,
          column: 7
        }
      },
      "51": {
        start: {
          line: 183,
          column: 58
        },
        end: {
          line: 273,
          column: 31
        }
      },
      "52": {
        start: {
          line: 218,
          column: 65
        },
        end: {
          line: 218,
          column: 86
        }
      },
      "53": {
        start: {
          line: 281,
          column: 37
        },
        end: {
          line: 281,
          column: 74
        }
      },
      "54": {
        start: {
          line: 289,
          column: 41
        },
        end: {
          line: 289,
          column: 46
        }
      },
      "55": {
        start: {
          line: 290,
          column: 45
        },
        end: {
          line: 290,
          column: 69
        }
      },
      "56": {
        start: {
          line: 291,
          column: 28
        },
        end: {
          line: 297,
          column: 37
        }
      },
      "57": {
        start: {
          line: 295,
          column: 45
        },
        end: {
          line: 295,
          column: 67
        }
      },
      "58": {
        start: {
          line: 303,
          column: 37
        },
        end: {
          line: 303,
          column: 74
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 19,
            column: 9
          },
          end: {
            line: 19,
            column: 33
          }
        },
        loc: {
          start: {
            line: 19,
            column: 39
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 19
      },
      "2": {
        name: "PromptCardList",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 23
          }
        },
        loc: {
          start: {
            line: 24,
            column: 26
          },
          end: {
            line: 316,
            column: 1
          }
        },
        line: 24
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 37,
            column: 23
          },
          end: {
            line: 37,
            column: 24
          }
        },
        loc: {
          start: {
            line: 37,
            column: 54
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 37
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 62,
            column: 25
          },
          end: {
            line: 62,
            column: 26
          }
        },
        loc: {
          start: {
            line: 62,
            column: 33
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 62
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 66,
            column: 29
          },
          end: {
            line: 66,
            column: 30
          }
        },
        loc: {
          start: {
            line: 66,
            column: 40
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 66
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 69,
            column: 25
          },
          end: {
            line: 69,
            column: 26
          }
        },
        loc: {
          start: {
            line: 69,
            column: 37
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 69
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 88,
            column: 26
          },
          end: {
            line: 88,
            column: 27
          }
        },
        loc: {
          start: {
            line: 88,
            column: 30
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 88
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 183,
            column: 36
          },
          end: {
            line: 183,
            column: 37
          }
        },
        loc: {
          start: {
            line: 183,
            column: 58
          },
          end: {
            line: 273,
            column: 31
          }
        },
        line: 183
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 218,
            column: 61
          },
          end: {
            line: 218,
            column: 62
          }
        },
        loc: {
          start: {
            line: 218,
            column: 65
          },
          end: {
            line: 218,
            column: 86
          }
        },
        line: 218
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 281,
            column: 33
          },
          end: {
            line: 281,
            column: 34
          }
        },
        loc: {
          start: {
            line: 281,
            column: 37
          },
          end: {
            line: 281,
            column: 74
          }
        },
        line: 281
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 288,
            column: 27
          },
          end: {
            line: 288,
            column: 28
          }
        },
        loc: {
          start: {
            line: 288,
            column: 35
          },
          end: {
            line: 298,
            column: 25
          }
        },
        line: 288
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 295,
            column: 41
          },
          end: {
            line: 295,
            column: 42
          }
        },
        loc: {
          start: {
            line: 295,
            column: 45
          },
          end: {
            line: 295,
            column: 67
          }
        },
        line: 295
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 303,
            column: 33
          },
          end: {
            line: 303,
            column: 34
          }
        },
        loc: {
          start: {
            line: 303,
            column: 37
          },
          end: {
            line: 303,
            column: 74
          }
        },
        line: 303
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 11
          },
          end: {
            line: 22,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 35
          },
          end: {
            line: 20,
            column: 38
          }
        }, {
          start: {
            line: 20,
            column: 41
          },
          end: {
            line: 22,
            column: 5
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 11
          },
          end: {
            line: 20,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 11
          },
          end: {
            line: 20,
            column: 14
          }
        }, {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 32
          }
        }],
        line: 20
      },
      "2": {
        loc: {
          start: {
            line: 37,
            column: 30
          },
          end: {
            line: 37,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 37,
            column: 37
          },
          end: {
            line: 37,
            column: 38
          }
        }],
        line: 37
      },
      "3": {
        loc: {
          start: {
            line: 37,
            column: 40
          },
          end: {
            line: 37,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 37,
            column: 49
          },
          end: {
            line: 37,
            column: 51
          }
        }],
        line: 37
      },
      "4": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "5": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        }, {
          start: {
            line: 53,
            column: 19
          },
          end: {
            line: 55,
            column: 13
          }
        }],
        line: 49
      },
      "6": {
        loc: {
          start: {
            line: 54,
            column: 25
          },
          end: {
            line: 54,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 25
          },
          end: {
            line: 54,
            column: 37
          }
        }, {
          start: {
            line: 54,
            column: 41
          },
          end: {
            line: 54,
            column: 71
          }
        }],
        line: 54
      },
      "7": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "8": {
        loc: {
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 83,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 83,
            column: 13
          }
        }, {
          start: {
            line: 81,
            column: 19
          },
          end: {
            line: 83,
            column: 13
          }
        }],
        line: 78
      },
      "9": {
        loc: {
          start: {
            line: 82,
            column: 25
          },
          end: {
            line: 82,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 25
          },
          end: {
            line: 82,
            column: 37
          }
        }, {
          start: {
            line: 82,
            column: 41
          },
          end: {
            line: 82,
            column: 71
          }
        }],
        line: 82
      },
      "10": {
        loc: {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "11": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 91,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 91,
            column: 15
          }
        }, {
          start: {
            line: 91,
            column: 19
          },
          end: {
            line: 91,
            column: 37
          }
        }],
        line: 91
      },
      "12": {
        loc: {
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 147,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 141,
            column: 17
          }
        }, {
          start: {
            line: 141,
            column: 35
          },
          end: {
            line: 147,
            column: 14
          }
        }],
        line: 141
      },
      "13": {
        loc: {
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 274,
            column: 14
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 148,
            column: 59
          },
          end: {
            line: 181,
            column: 14
          }
        }, {
          start: {
            line: 181,
            column: 31
          },
          end: {
            line: 274,
            column: 14
          }
        }],
        line: 148
      },
      "14": {
        loc: {
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 148,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 148,
            column: 30
          }
        }, {
          start: {
            line: 148,
            column: 34
          },
          end: {
            line: 148,
            column: 42
          }
        }],
        line: 148
      },
      "15": {
        loc: {
          start: {
            line: 172,
            column: 34
          },
          end: {
            line: 172,
            column: 137
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 172,
            column: 47
          },
          end: {
            line: 172,
            column: 85
          }
        }, {
          start: {
            line: 172,
            column: 88
          },
          end: {
            line: 172,
            column: 137
          }
        }],
        line: 172
      },
      "16": {
        loc: {
          start: {
            line: 226,
            column: 32
          },
          end: {
            line: 229,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 226,
            column: 32
          },
          end: {
            line: 226,
            column: 48
          }
        }, {
          start: {
            line: 226,
            column: 66
          },
          end: {
            line: 229,
            column: 34
          }
        }],
        line: 226
      },
      "17": {
        loc: {
          start: {
            line: 252,
            column: 56
          },
          end: {
            line: 252,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 252,
            column: 56
          },
          end: {
            line: 252,
            column: 76
          }
        }, {
          start: {
            line: 252,
            column: 80
          },
          end: {
            line: 252,
            column: 81
          }
        }],
        line: 252
      },
      "18": {
        loc: {
          start: {
            line: 256,
            column: 48
          },
          end: {
            line: 262,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 256,
            column: 48
          },
          end: {
            line: 256,
            column: 73
          }
        }, {
          start: {
            line: 256,
            column: 91
          },
          end: {
            line: 262,
            column: 50
          }
        }],
        line: 256
      },
      "19": {
        loc: {
          start: {
            line: 275,
            column: 12
          },
          end: {
            line: 307,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 275,
            column: 12
          },
          end: {
            line: 275,
            column: 37
          }
        }, {
          start: {
            line: 275,
            column: 55
          },
          end: {
            line: 307,
            column: 14
          }
        }],
        line: 275
      },
      "20": {
        loc: {
          start: {
            line: 280,
            column: 34
          },
          end: {
            line: 280,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 280,
            column: 34
          },
          end: {
            line: 280,
            column: 53
          }
        }, {
          start: {
            line: 280,
            column: 57
          },
          end: {
            line: 280,
            column: 64
          }
        }],
        line: 280
      },
      "21": {
        loc: {
          start: {
            line: 292,
            column: 41
          },
          end: {
            line: 292,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 292,
            column: 52
          },
          end: {
            line: 292,
            column: 61
          }
        }, {
          start: {
            line: 292,
            column: 64
          },
          end: {
            line: 292,
            column: 73
          }
        }],
        line: 292
      },
      "22": {
        loc: {
          start: {
            line: 302,
            column: 34
          },
          end: {
            line: 302,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 302,
            column: 34
          },
          end: {
            line: 302,
            column: 53
          }
        }, {
          start: {
            line: 302,
            column: 57
          },
          end: {
            line: 302,
            column: 64
          }
        }],
        line: 302
      },
      "23": {
        loc: {
          start: {
            line: 308,
            column: 12
          },
          end: {
            line: 313,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 308,
            column: 12
          },
          end: {
            line: 308,
            column: 19
          }
        }, {
          start: {
            line: 308,
            column: 23
          },
          end: {
            line: 308,
            column: 39
          }
        }, {
          start: {
            line: 308,
            column: 57
          },
          end: {
            line: 313,
            column: 14
          }
        }],
        line: 308
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/workspaces/prompt-card-system/frontend/src/components/PromptCard/PromptCardList.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { PromptCard } from '@/types';\nimport { SearchInput } from '@/components/ui/SearchInput';\nimport { Button } from '@/components/ui/Button';\nimport { LoadingSpinner } from '@/components/ui/LoadingSpinner';\nimport { Badge } from '@/components/ui/Badge';\n\ninterface PaginationInfo {\n  page: number;\n  limit: number;\n  total: number;\n  totalPages: number;\n  hasNext: boolean;\n  hasPrev: boolean;\n}\n\ninterface PromptCardListResponse {\n  success: boolean;\n  data: PromptCard[];\n  pagination: PaginationInfo;\n  error?: string;\n}\n\nexport default function PromptCardList() {\n  const [cards, setCards] = useState<PromptCard[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [pagination, setPagination] = useState<PaginationInfo>({\n    page: 1,\n    limit: 10,\n    total: 0,\n    totalPages: 0,\n    hasNext: false,\n    hasPrev: false\n  });\n\n  const fetchCards = async (page: number = 1, search: string = '') => {\n    try {\n      setLoading(true);\n      const params = new URLSearchParams({\n        page: page.toString(),\n        limit: '10'\n      });\n      \n      if (search.trim()) {\n        params.append('search', search.trim());\n      }\n\n      const response = await fetch(`/api/prompt-cards?${params}`);\n      const result: PromptCardListResponse = await response.json();\n\n      if (result.success) {\n        setCards(result.data);\n        setPagination(result.pagination);\n        setError(null);\n      } else {\n        setError(result.error || 'Failed to fetch prompt cards');\n      }\n    } catch (err) {\n      setError('Network error: Failed to fetch prompt cards');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = (term: string) => {\n    setSearchTerm(term);\n    fetchCards(1, term);\n  };\n\n  const handlePageChange = (newPage: number) => {\n    fetchCards(newPage, searchTerm);\n  };\n\n  const handleDelete = async (id: number) => {\n    if (!confirm('Are you sure you want to delete this prompt card?')) {\n      return;\n    }\n\n    try {\n      const response = await fetch(`/api/prompt-cards/${id}`, {\n        method: 'DELETE'\n      });\n      \n      const result = await response.json();\n      \n      if (result.success) {\n        // Refresh the list\n        fetchCards(pagination.page, searchTerm);\n      } else {\n        setError(result.error || 'Failed to delete prompt card');\n      }\n    } catch (err) {\n      setError('Network error: Failed to delete prompt card');\n    }\n  };\n\n  useEffect(() => {\n    fetchCards();\n  }, []);\n\n  if (loading && cards.length === 0) {\n    return (\n      <div className=\"flex justify-center items-center min-h-64\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">Prompt Cards</h1>\n          <p className=\"text-gray-600 mt-2\">\n            Manage your prompt templates and test cases\n          </p>\n        </div>\n        <Link href=\"/prompt-cards/new\">\n          <Button>Create New Card</Button>\n        </Link>\n      </div>\n\n      {/* Search */}\n      <div className=\"flex justify-between items-center\">\n        <SearchInput\n          placeholder=\"Search prompt cards...\"\n          value={searchTerm}\n          onChange={handleSearch}\n          className=\"max-w-md\"\n        />\n        <div className=\"text-sm text-gray-500\">\n          {pagination.total} cards total\n        </div>\n      </div>\n\n      {/* Error Message */}\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n          <p className=\"text-red-800\">{error}</p>\n        </div>\n      )}\n\n      {/* Cards Grid */}\n      {cards.length === 0 && !loading ? (\n        <div className=\"text-center py-12\">\n          <div className=\"text-gray-500 mb-4\">\n            <svg className=\"mx-auto h-12 w-12\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n            </svg>\n          </div>\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No prompt cards found</h3>\n          <p className=\"text-gray-500 mb-4\">\n            {searchTerm ? 'No cards match your search criteria.' : 'Get started by creating your first prompt card.'}\n          </p>\n          <Link href=\"/prompt-cards/new\">\n            <Button>Create Your First Card</Button>\n          </Link>\n        </div>\n      ) : (\n        <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n          {cards.map((card) => (\n            <div key={card.id} className=\"bg-white rounded-lg border border-gray-200 shadow-sm hover:shadow-md transition-shadow\">\n              <div className=\"p-6\">\n                <div className=\"flex justify-between items-start mb-3\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 truncate\">\n                    {card.title}\n                  </h3>\n                  <div className=\"flex space-x-1\">\n                    <Link href={`/prompt-cards/${card.id}`}>\n                      <Button variant=\"outline\" size=\"sm\">Edit</Button>\n                    </Link>\n                    <Link href={`/prompt-cards/${card.id}/test`}>\n                      <Button variant=\"outline\" size=\"sm\" className=\"text-blue-600 border-blue-200 hover:bg-blue-50\">\n                        Run Tests\n                      </Button>\n                    </Link>\n                    <Button \n                      variant=\"outline\" \n                      size=\"sm\" \n                      onClick={() => handleDelete(card.id)}\n                      className=\"text-red-600 border-red-200 hover:bg-red-50\"\n                    >\n                      Delete\n                    </Button>\n                  </div>\n                </div>\n                \n                {card.description && (\n                  <p className=\"text-gray-600 text-sm mb-3 line-clamp-2\">\n                    {card.description}\n                  </p>\n                )}\n                \n                <div className=\"mb-3\">\n                  <p className=\"text-xs text-gray-500 mb-1\">Prompt Template:</p>\n                  <p className=\"text-sm text-gray-700 bg-gray-50 rounded p-2 font-mono line-clamp-3\">\n                    {card.prompt_template}\n                  </p>\n                </div>\n                \n                <div className=\"flex items-center justify-between text-sm text-gray-500\">\n                  <div className=\"flex items-center space-x-4\">\n                    <Badge variant=\"outline\">\n                      {card.test_case_count || 0} tests\n                    </Badge>\n                    {card.variables.length > 0 && (\n                      <Badge variant=\"outline\">\n                        {card.variables.length} variables\n                      </Badge>\n                    )}\n                  </div>\n                  <span className=\"text-xs\">\n                    {new Date(card.updated_at).toLocaleDateString()}\n                  </span>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* Pagination */}\n      {pagination.totalPages > 1 && (\n        <div className=\"flex justify-center items-center space-x-4 mt-8\">\n          <Button\n            variant=\"outline\"\n            disabled={!pagination.hasPrev || loading}\n            onClick={() => handlePageChange(pagination.page - 1)}\n          >\n            Previous\n          </Button>\n          \n          <div className=\"flex items-center space-x-2\">\n            {Array.from({ length: Math.min(5, pagination.totalPages) }, (_, i) => {\n              const page = i + 1;\n              const isActive = page === pagination.page;\n              return (\n                <Button\n                  key={page}\n                  variant={isActive ? \"default\" : \"outline\"}\n                  size=\"sm\"\n                  disabled={loading}\n                  onClick={() => handlePageChange(page)}\n                >\n                  {page}\n                </Button>\n              );\n            })}\n          </div>\n          \n          <Button\n            variant=\"outline\"\n            disabled={!pagination.hasNext || loading}\n            onClick={() => handlePageChange(pagination.page + 1)}\n          >\n            Next\n          </Button>\n        </div>\n      )}\n\n      {loading && cards.length > 0 && (\n        <div className=\"flex justify-center mt-4\">\n          <LoadingSpinner size=\"sm\" />\n        </div>\n      )}\n    </div>\n  );\n}"],
      names: ["PromptCardList", "cards", "setCards", "useState", "loading", "setLoading", "error", "setError", "searchTerm", "setSearchTerm", "pagination", "setPagination", "page", "limit", "total", "totalPages", "hasNext", "hasPrev", "fetchCards", "search", "params", "URLSearchParams", "toString", "trim", "append", "response", "fetch", "result", "json", "success", "data", "err", "handleSearch", "term", "handlePageChange", "newPage", "handleDelete", "id", "confirm", "method", "useEffect", "length", "div", "className", "LoadingSpinner", "h1", "p", "Link", "href", "Button", "SearchInput", "placeholder", "value", "onChange", "svg", "fill", "viewBox", "stroke", "path", "strokeLinecap", "strokeLinejoin", "strokeWidth", "d", "h3", "map", "card", "title", "variant", "size", "onClick", "description", "prompt_template", "Badge", "test_case_count", "variables", "span", "Date", "updated_at", "toLocaleDateString", "disabled", "Array", "from", "Math", "min", "_", "i", "isActive"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "31c3cf9e961ca34278c3c99938e3a09f232e3bae"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2e04psav9v = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2e04psav9v();
cov_2e04psav9v().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2e04psav9v().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2e04psav9v().f[0]++;
    cov_2e04psav9v().s[2]++;
    return PromptCardList;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2e04psav9v().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_2e04psav9v().s[4]++, require("react"));
const _link =
/* istanbul ignore next */
(/*#__PURE__*/cov_2e04psav9v().s[5]++, _interop_require_default(require("next/link")));
const _SearchInput =
/* istanbul ignore next */
(cov_2e04psav9v().s[6]++, require("../ui/SearchInput"));
const _Button =
/* istanbul ignore next */
(cov_2e04psav9v().s[7]++, require("../ui/Button"));
const _LoadingSpinner =
/* istanbul ignore next */
(cov_2e04psav9v().s[8]++, require("../ui/LoadingSpinner"));
const _Badge =
/* istanbul ignore next */
(cov_2e04psav9v().s[9]++, require("../ui/Badge"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_2e04psav9v().f[1]++;
  cov_2e04psav9v().s[10]++;
  return /* istanbul ignore next */(cov_2e04psav9v().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2e04psav9v().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_2e04psav9v().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_2e04psav9v().b[0][1]++, {
    default: obj
  });
}
function PromptCardList() {
  /* istanbul ignore next */
  cov_2e04psav9v().f[2]++;
  const [cards, setCards] =
  /* istanbul ignore next */
  (cov_2e04psav9v().s[11]++, (0, _react.useState)([]));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_2e04psav9v().s[12]++, (0, _react.useState)(true));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_2e04psav9v().s[13]++, (0, _react.useState)(null));
  const [searchTerm, setSearchTerm] =
  /* istanbul ignore next */
  (cov_2e04psav9v().s[14]++, (0, _react.useState)(""));
  const [pagination, setPagination] =
  /* istanbul ignore next */
  (cov_2e04psav9v().s[15]++, (0, _react.useState)({
    page: 1,
    limit: 10,
    total: 0,
    totalPages: 0,
    hasNext: false,
    hasPrev: false
  }));
  /* istanbul ignore next */
  cov_2e04psav9v().s[16]++;
  const fetchCards = async (page =
  /* istanbul ignore next */
  (cov_2e04psav9v().b[2][0]++, 1), search =
  /* istanbul ignore next */
  (cov_2e04psav9v().b[3][0]++, "")) => {
    /* istanbul ignore next */
    cov_2e04psav9v().f[3]++;
    cov_2e04psav9v().s[17]++;
    try {
      /* istanbul ignore next */
      cov_2e04psav9v().s[18]++;
      setLoading(true);
      const params =
      /* istanbul ignore next */
      (cov_2e04psav9v().s[19]++, new URLSearchParams({
        page: page.toString(),
        limit: "10"
      }));
      /* istanbul ignore next */
      cov_2e04psav9v().s[20]++;
      if (search.trim()) {
        /* istanbul ignore next */
        cov_2e04psav9v().b[4][0]++;
        cov_2e04psav9v().s[21]++;
        params.append("search", search.trim());
      } else
      /* istanbul ignore next */
      {
        cov_2e04psav9v().b[4][1]++;
      }
      const response =
      /* istanbul ignore next */
      (cov_2e04psav9v().s[22]++, await fetch(`/api/prompt-cards?${params}`));
      const result =
      /* istanbul ignore next */
      (cov_2e04psav9v().s[23]++, await response.json());
      /* istanbul ignore next */
      cov_2e04psav9v().s[24]++;
      if (result.success) {
        /* istanbul ignore next */
        cov_2e04psav9v().b[5][0]++;
        cov_2e04psav9v().s[25]++;
        setCards(result.data);
        /* istanbul ignore next */
        cov_2e04psav9v().s[26]++;
        setPagination(result.pagination);
        /* istanbul ignore next */
        cov_2e04psav9v().s[27]++;
        setError(null);
      } else {
        /* istanbul ignore next */
        cov_2e04psav9v().b[5][1]++;
        cov_2e04psav9v().s[28]++;
        setError(
        /* istanbul ignore next */
        (cov_2e04psav9v().b[6][0]++, result.error) ||
        /* istanbul ignore next */
        (cov_2e04psav9v().b[6][1]++, "Failed to fetch prompt cards"));
      }
    } catch (err) {
      /* istanbul ignore next */
      cov_2e04psav9v().s[29]++;
      setError("Network error: Failed to fetch prompt cards");
    } finally {
      /* istanbul ignore next */
      cov_2e04psav9v().s[30]++;
      setLoading(false);
    }
  };
  /* istanbul ignore next */
  cov_2e04psav9v().s[31]++;
  const handleSearch = term => {
    /* istanbul ignore next */
    cov_2e04psav9v().f[4]++;
    cov_2e04psav9v().s[32]++;
    setSearchTerm(term);
    /* istanbul ignore next */
    cov_2e04psav9v().s[33]++;
    fetchCards(1, term);
  };
  /* istanbul ignore next */
  cov_2e04psav9v().s[34]++;
  const handlePageChange = newPage => {
    /* istanbul ignore next */
    cov_2e04psav9v().f[5]++;
    cov_2e04psav9v().s[35]++;
    fetchCards(newPage, searchTerm);
  };
  /* istanbul ignore next */
  cov_2e04psav9v().s[36]++;
  const handleDelete = async id => {
    /* istanbul ignore next */
    cov_2e04psav9v().f[6]++;
    cov_2e04psav9v().s[37]++;
    if (!confirm("Are you sure you want to delete this prompt card?")) {
      /* istanbul ignore next */
      cov_2e04psav9v().b[7][0]++;
      cov_2e04psav9v().s[38]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2e04psav9v().b[7][1]++;
    }
    cov_2e04psav9v().s[39]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_2e04psav9v().s[40]++, await fetch(`/api/prompt-cards/${id}`, {
        method: "DELETE"
      }));
      const result =
      /* istanbul ignore next */
      (cov_2e04psav9v().s[41]++, await response.json());
      /* istanbul ignore next */
      cov_2e04psav9v().s[42]++;
      if (result.success) {
        /* istanbul ignore next */
        cov_2e04psav9v().b[8][0]++;
        cov_2e04psav9v().s[43]++;
        // Refresh the list
        fetchCards(pagination.page, searchTerm);
      } else {
        /* istanbul ignore next */
        cov_2e04psav9v().b[8][1]++;
        cov_2e04psav9v().s[44]++;
        setError(
        /* istanbul ignore next */
        (cov_2e04psav9v().b[9][0]++, result.error) ||
        /* istanbul ignore next */
        (cov_2e04psav9v().b[9][1]++, "Failed to delete prompt card"));
      }
    } catch (err) {
      /* istanbul ignore next */
      cov_2e04psav9v().s[45]++;
      setError("Network error: Failed to delete prompt card");
    }
  };
  /* istanbul ignore next */
  cov_2e04psav9v().s[46]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2e04psav9v().f[7]++;
    cov_2e04psav9v().s[47]++;
    fetchCards();
  }, []);
  /* istanbul ignore next */
  cov_2e04psav9v().s[48]++;
  if (
  /* istanbul ignore next */
  (cov_2e04psav9v().b[11][0]++, loading) &&
  /* istanbul ignore next */
  (cov_2e04psav9v().b[11][1]++, cards.length === 0)) {
    /* istanbul ignore next */
    cov_2e04psav9v().b[10][0]++;
    cov_2e04psav9v().s[49]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "flex justify-center items-center min-h-64",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_LoadingSpinner.LoadingSpinner, {})
    });
  } else
  /* istanbul ignore next */
  {
    cov_2e04psav9v().b[10][1]++;
  }
  cov_2e04psav9v().s[50]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "space-y-6",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex justify-between items-center",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
          className: "text-3xl font-bold text-gray-900",
          children: "Prompt Cards"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-gray-600 mt-2",
          children: "Manage your prompt templates and test cases"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_link.default, {
        href: "/prompt-cards/new",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
          children: "Create New Card"
        })
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex justify-between items-center",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_SearchInput.SearchInput, {
        placeholder: "Search prompt cards...",
        value: searchTerm,
        onChange: handleSearch,
        className: "max-w-md"
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "text-sm text-gray-500",
        children: [pagination.total, " cards total"]
      })]
    }),
    /* istanbul ignore next */
    (cov_2e04psav9v().b[12][0]++, error) &&
    /* istanbul ignore next */
    (cov_2e04psav9v().b[12][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "bg-red-50 border border-red-200 rounded-md p-4",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-red-800",
        children: error
      })
    })),
    /* istanbul ignore next */
    (cov_2e04psav9v().b[14][0]++, cards.length === 0) &&
    /* istanbul ignore next */
    (cov_2e04psav9v().b[14][1]++, !loading) ?
    /* istanbul ignore next */
    (/*#__PURE__*/cov_2e04psav9v().b[13][0]++, (0, _jsxruntime.jsxs)("div", {
      className: "text-center py-12",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "text-gray-500 mb-4",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
          className: "mx-auto h-12 w-12",
          fill: "none",
          viewBox: "0 0 24 24",
          stroke: "currentColor",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
            strokeLinecap: "round",
            strokeLinejoin: "round",
            strokeWidth: 2,
            d: "M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
          })
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
        className: "text-lg font-medium text-gray-900 mb-2",
        children: "No prompt cards found"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-gray-500 mb-4",
        children: searchTerm ?
        /* istanbul ignore next */
        (cov_2e04psav9v().b[15][0]++, "No cards match your search criteria.") :
        /* istanbul ignore next */
        (cov_2e04psav9v().b[15][1]++, "Get started by creating your first prompt card.")
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_link.default, {
        href: "/prompt-cards/new",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
          children: "Create Your First Card"
        })
      })]
    })) :
    /* istanbul ignore next */
    (/*#__PURE__*/cov_2e04psav9v().b[13][1]++, (0, _jsxruntime.jsx)("div", {
      className: "grid gap-6 md:grid-cols-2 lg:grid-cols-3",
      children: cards.map(card => {
        /* istanbul ignore next */
        cov_2e04psav9v().f[8]++;
        cov_2e04psav9v().s[51]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "bg-white rounded-lg border border-gray-200 shadow-sm hover:shadow-md transition-shadow",
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "p-6",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex justify-between items-start mb-3",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
                className: "text-lg font-semibold text-gray-900 truncate",
                children: card.title
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex space-x-1",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_link.default, {
                  href: `/prompt-cards/${card.id}`,
                  children: /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
                    variant: "outline",
                    size: "sm",
                    children: "Edit"
                  })
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_link.default, {
                  href: `/prompt-cards/${card.id}/test`,
                  children: /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
                    variant: "outline",
                    size: "sm",
                    className: "text-blue-600 border-blue-200 hover:bg-blue-50",
                    children: "Run Tests"
                  })
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
                  variant: "outline",
                  size: "sm",
                  onClick: () => {
                    /* istanbul ignore next */
                    cov_2e04psav9v().f[9]++;
                    cov_2e04psav9v().s[52]++;
                    return handleDelete(card.id);
                  },
                  className: "text-red-600 border-red-200 hover:bg-red-50",
                  children: "Delete"
                })]
              })]
            }),
            /* istanbul ignore next */
            (cov_2e04psav9v().b[16][0]++, card.description) &&
            /* istanbul ignore next */
            (cov_2e04psav9v().b[16][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-gray-600 text-sm mb-3 line-clamp-2",
              children: card.description
            })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "mb-3",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                className: "text-xs text-gray-500 mb-1",
                children: "Prompt Template:"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                className: "text-sm text-gray-700 bg-gray-50 rounded p-2 font-mono line-clamp-3",
                children: card.prompt_template
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center justify-between text-sm text-gray-500",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center space-x-4",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_Badge.Badge, {
                  variant: "outline",
                  children: [
                  /* istanbul ignore next */
                  (cov_2e04psav9v().b[17][0]++, card.test_case_count) ||
                  /* istanbul ignore next */
                  (cov_2e04psav9v().b[17][1]++, 0), " tests"]
                }),
                /* istanbul ignore next */
                (cov_2e04psav9v().b[18][0]++, card.variables.length > 0) &&
                /* istanbul ignore next */
                (cov_2e04psav9v().b[18][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_Badge.Badge, {
                  variant: "outline",
                  children: [card.variables.length, " variables"]
                }))]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                className: "text-xs",
                children: new Date(card.updated_at).toLocaleDateString()
              })]
            })]
          })
        }, card.id);
      })
    })),
    /* istanbul ignore next */
    (cov_2e04psav9v().b[19][0]++, pagination.totalPages > 1) &&
    /* istanbul ignore next */
    (cov_2e04psav9v().b[19][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex justify-center items-center space-x-4 mt-8",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
        variant: "outline",
        disabled:
        /* istanbul ignore next */
        (cov_2e04psav9v().b[20][0]++, !pagination.hasPrev) ||
        /* istanbul ignore next */
        (cov_2e04psav9v().b[20][1]++, loading),
        onClick: () => {
          /* istanbul ignore next */
          cov_2e04psav9v().f[10]++;
          cov_2e04psav9v().s[53]++;
          return handlePageChange(pagination.page - 1);
        },
        children: "Previous"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "flex items-center space-x-2",
        children: Array.from({
          length: Math.min(5, pagination.totalPages)
        }, (_, i) => {
          /* istanbul ignore next */
          cov_2e04psav9v().f[11]++;
          const page =
          /* istanbul ignore next */
          (cov_2e04psav9v().s[54]++, i + 1);
          const isActive =
          /* istanbul ignore next */
          (cov_2e04psav9v().s[55]++, page === pagination.page);
          /* istanbul ignore next */
          cov_2e04psav9v().s[56]++;
          return /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
            variant: isActive ?
            /* istanbul ignore next */
            (cov_2e04psav9v().b[21][0]++, "default") :
            /* istanbul ignore next */
            (cov_2e04psav9v().b[21][1]++, "outline"),
            size: "sm",
            disabled: loading,
            onClick: () => {
              /* istanbul ignore next */
              cov_2e04psav9v().f[12]++;
              cov_2e04psav9v().s[57]++;
              return handlePageChange(page);
            },
            children: page
          }, page);
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
        variant: "outline",
        disabled:
        /* istanbul ignore next */
        (cov_2e04psav9v().b[22][0]++, !pagination.hasNext) ||
        /* istanbul ignore next */
        (cov_2e04psav9v().b[22][1]++, loading),
        onClick: () => {
          /* istanbul ignore next */
          cov_2e04psav9v().f[13]++;
          cov_2e04psav9v().s[58]++;
          return handlePageChange(pagination.page + 1);
        },
        children: "Next"
      })]
    })),
    /* istanbul ignore next */
    (cov_2e04psav9v().b[23][0]++, loading) &&
    /* istanbul ignore next */
    (cov_2e04psav9v().b[23][1]++, cards.length > 0) &&
    /* istanbul ignore next */
    (cov_2e04psav9v().b[23][2]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "flex justify-center mt-4",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_LoadingSpinner.LoadingSpinner, {
        size: "sm"
      })
    }))]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,