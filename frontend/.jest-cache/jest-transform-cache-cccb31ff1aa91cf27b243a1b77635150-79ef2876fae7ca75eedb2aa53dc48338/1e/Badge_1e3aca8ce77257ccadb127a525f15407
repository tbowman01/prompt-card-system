e25b192650a5fe814732e668ba637119
"use strict";

/* istanbul ignore next */
function cov_cbs46ktsj() {
  var path = "/workspaces/prompt-card-system/frontend/src/components/ui/Badge.tsx";
  var hash = "c199ee335dc7e4af0919b548b89ed9c6976a03df";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/prompt-card-system/frontend/src/components/ui/Badge.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 21
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "4": {
        start: {
          line: 12,
          column: 29
        },
        end: {
          line: 12,
          column: 71
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 16,
          column: 6
        }
      },
      "6": {
        start: {
          line: 19,
          column: 24
        },
        end: {
          line: 19,
          column: 75
        }
      },
      "7": {
        start: {
          line: 20,
          column: 27
        },
        end: {
          line: 28,
          column: 5
        }
      },
      "8": {
        start: {
          line: 29,
          column: 24
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "9": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 36,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 33
          }
        },
        loc: {
          start: {
            line: 13,
            column: 39
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "Badge",
        decl: {
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 18,
            column: 14
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 18
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 16,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 14,
            column: 35
          },
          end: {
            line: 14,
            column: 38
          }
        }, {
          start: {
            line: 14,
            column: 41
          },
          end: {
            line: 16,
            column: 5
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 14
          }
        }, {
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 14,
            column: 32
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 18,
            column: 27
          },
          end: {
            line: 18,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 18,
            column: 37
          },
          end: {
            line: 18,
            column: 46
          }
        }],
        line: 18
      },
      "3": {
        loc: {
          start: {
            line: 18,
            column: 48
          },
          end: {
            line: 18,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 18,
            column: 55
          },
          end: {
            line: 18,
            column: 59
          }
        }],
        line: 18
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/workspaces/prompt-card-system/frontend/src/components/ui/Badge.tsx"],
      sourcesContent: ["import React from 'react'\n\ninterface BadgeProps {\n  children: React.ReactNode\n  variant?: 'default' | 'primary' | 'secondary' | 'success' | 'warning' | 'danger' | 'outline'\n  size?: 'sm' | 'md'\n}\n\nexport function Badge({ children, variant = 'default', size = 'md' }: BadgeProps) {\n  const baseClasses = 'inline-flex items-center font-medium rounded-full'\n  \n  const variantClasses = {\n    default: 'bg-gray-100 text-gray-800',\n    primary: 'bg-primary-100 text-primary-800',\n    secondary: 'bg-secondary-100 text-secondary-800',\n    success: 'bg-green-100 text-green-800',\n    warning: 'bg-yellow-100 text-yellow-800',\n    danger: 'bg-red-100 text-red-800',\n    outline: 'border border-gray-300 bg-white text-gray-700'\n  }\n  \n  const sizeClasses = {\n    sm: 'px-2 py-1 text-xs',\n    md: 'px-3 py-1 text-sm'\n  }\n\n  return (\n    <span className={`${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]}`}>\n      {children}\n    </span>\n  )\n}"],
      names: ["Badge", "children", "variant", "size", "baseClasses", "variantClasses", "default", "primary", "secondary", "success", "warning", "danger", "outline", "sizeClasses", "sm", "md", "span", "className"],
      mappings: ";;;;+BAQgBA;;;eAAAA;;;;8DARE;;;;;;AAQX,SAASA,MAAM,EAAEC,QAAQ,EAAEC,UAAU,SAAS,EAAEC,OAAO,IAAI,EAAc;IAC9E,MAAMC,cAAc;IAEpB,MAAMC,iBAAiB;QACrBC,SAAS;QACTC,SAAS;QACTC,WAAW;QACXC,SAAS;QACTC,SAAS;QACTC,QAAQ;QACRC,SAAS;IACX;IAEA,MAAMC,cAAc;QAClBC,IAAI;QACJC,IAAI;IACN;IAEA,qBACE,qBAACC;QAAKC,WAAW,CAAC,EAAEb,YAAY,CAAC,EAAEC,cAAc,CAACH,QAAQ,CAAC,CAAC,EAAEW,WAAW,CAACV,KAAK,CAAC,CAAC;kBAC9EF;;AAGP"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c199ee335dc7e4af0919b548b89ed9c6976a03df"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_cbs46ktsj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_cbs46ktsj();
cov_cbs46ktsj().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_cbs46ktsj().s[1]++;
Object.defineProperty(exports, "Badge", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_cbs46ktsj().f[0]++;
    cov_cbs46ktsj().s[2]++;
    return Badge;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_cbs46ktsj().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_cbs46ktsj().s[4]++, _interop_require_default(require("react")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_cbs46ktsj().f[1]++;
  cov_cbs46ktsj().s[5]++;
  return /* istanbul ignore next */(cov_cbs46ktsj().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_cbs46ktsj().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_cbs46ktsj().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_cbs46ktsj().b[0][1]++, {
    default: obj
  });
}
function Badge({
  children,
  variant =
  /* istanbul ignore next */
  (cov_cbs46ktsj().b[2][0]++, "default"),
  size =
  /* istanbul ignore next */
  (cov_cbs46ktsj().b[3][0]++, "md")
}) {
  /* istanbul ignore next */
  cov_cbs46ktsj().f[2]++;
  const baseClasses =
  /* istanbul ignore next */
  (cov_cbs46ktsj().s[6]++, "inline-flex items-center font-medium rounded-full");
  const variantClasses =
  /* istanbul ignore next */
  (cov_cbs46ktsj().s[7]++, {
    default: "bg-gray-100 text-gray-800",
    primary: "bg-primary-100 text-primary-800",
    secondary: "bg-secondary-100 text-secondary-800",
    success: "bg-green-100 text-green-800",
    warning: "bg-yellow-100 text-yellow-800",
    danger: "bg-red-100 text-red-800",
    outline: "border border-gray-300 bg-white text-gray-700"
  });
  const sizeClasses =
  /* istanbul ignore next */
  (cov_cbs46ktsj().s[8]++, {
    sm: "px-2 py-1 text-xs",
    md: "px-3 py-1 text-sm"
  });
  /* istanbul ignore next */
  cov_cbs46ktsj().s[9]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
    className: `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]}`,
    children: children
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCYWRnZSIsImNoaWxkcmVuIiwidmFyaWFudCIsImNvdl9jYnM0Nmt0c2oiLCJiIiwic2l6ZSIsImYiLCJiYXNlQ2xhc3NlcyIsInMiLCJ2YXJpYW50Q2xhc3NlcyIsImRlZmF1bHQiLCJwcmltYXJ5Iiwic2Vjb25kYXJ5Iiwic3VjY2VzcyIsIndhcm5pbmciLCJkYW5nZXIiLCJvdXRsaW5lIiwic2l6ZUNsYXNzZXMiLCJzbSIsIm1kIiwiX2pzeHJ1bnRpbWUiLCJqc3giLCJjbGFzc05hbWUiXSwic291cmNlcyI6WyIvd29ya3NwYWNlcy9wcm9tcHQtY2FyZC1zeXN0ZW0vZnJvbnRlbmQvc3JjL2NvbXBvbmVudHMvdWkvQmFkZ2UudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxuaW50ZXJmYWNlIEJhZGdlUHJvcHMge1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlXG4gIHZhcmlhbnQ/OiAnZGVmYXVsdCcgfCAncHJpbWFyeScgfCAnc2Vjb25kYXJ5JyB8ICdzdWNjZXNzJyB8ICd3YXJuaW5nJyB8ICdkYW5nZXInIHwgJ291dGxpbmUnXG4gIHNpemU/OiAnc20nIHwgJ21kJ1xufVxuXG5leHBvcnQgZnVuY3Rpb24gQmFkZ2UoeyBjaGlsZHJlbiwgdmFyaWFudCA9ICdkZWZhdWx0Jywgc2l6ZSA9ICdtZCcgfTogQmFkZ2VQcm9wcykge1xuICBjb25zdCBiYXNlQ2xhc3NlcyA9ICdpbmxpbmUtZmxleCBpdGVtcy1jZW50ZXIgZm9udC1tZWRpdW0gcm91bmRlZC1mdWxsJ1xuICBcbiAgY29uc3QgdmFyaWFudENsYXNzZXMgPSB7XG4gICAgZGVmYXVsdDogJ2JnLWdyYXktMTAwIHRleHQtZ3JheS04MDAnLFxuICAgIHByaW1hcnk6ICdiZy1wcmltYXJ5LTEwMCB0ZXh0LXByaW1hcnktODAwJyxcbiAgICBzZWNvbmRhcnk6ICdiZy1zZWNvbmRhcnktMTAwIHRleHQtc2Vjb25kYXJ5LTgwMCcsXG4gICAgc3VjY2VzczogJ2JnLWdyZWVuLTEwMCB0ZXh0LWdyZWVuLTgwMCcsXG4gICAgd2FybmluZzogJ2JnLXllbGxvdy0xMDAgdGV4dC15ZWxsb3ctODAwJyxcbiAgICBkYW5nZXI6ICdiZy1yZWQtMTAwIHRleHQtcmVkLTgwMCcsXG4gICAgb3V0bGluZTogJ2JvcmRlciBib3JkZXItZ3JheS0zMDAgYmctd2hpdGUgdGV4dC1ncmF5LTcwMCdcbiAgfVxuICBcbiAgY29uc3Qgc2l6ZUNsYXNzZXMgPSB7XG4gICAgc206ICdweC0yIHB5LTEgdGV4dC14cycsXG4gICAgbWQ6ICdweC0zIHB5LTEgdGV4dC1zbSdcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPHNwYW4gY2xhc3NOYW1lPXtgJHtiYXNlQ2xhc3Nlc30gJHt2YXJpYW50Q2xhc3Nlc1t2YXJpYW50XX0gJHtzaXplQ2xhc3Nlc1tzaXplXX1gfT5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L3NwYW4+XG4gIClcbn0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0JBUWdCOzs7Ozs7V0FBQUEsS0FBQTs7Ozs7Ozs7dUVBUkU7Ozs7Ozs7Ozs7Ozs7OztBQVFYLFNBQVNBLE1BQU07RUFBRUMsUUFBUTtFQUFFQyxPQUFBO0VBQUE7RUFBQSxDQUFBQyxhQUFBLEdBQUFDLENBQUEsVUFBVSxTQUFTO0VBQUVDLElBQUE7RUFBQTtFQUFBLENBQUFGLGFBQUEsR0FBQUMsQ0FBQSxVQUFPLElBQUk7QUFBQSxDQUFjO0VBQUE7RUFBQUQsYUFBQSxHQUFBRyxDQUFBO0VBQzlFLE1BQU1DLFdBQUE7RUFBQTtFQUFBLENBQUFKLGFBQUEsR0FBQUssQ0FBQSxPQUFjO0VBRXBCLE1BQU1DLGNBQUE7RUFBQTtFQUFBLENBQUFOLGFBQUEsR0FBQUssQ0FBQSxPQUFpQjtJQUNyQkUsT0FBQSxFQUFTO0lBQ1RDLE9BQUEsRUFBUztJQUNUQyxTQUFBLEVBQVc7SUFDWEMsT0FBQSxFQUFTO0lBQ1RDLE9BQUEsRUFBUztJQUNUQyxNQUFBLEVBQVE7SUFDUkMsT0FBQSxFQUFTO0VBQ1g7RUFFQSxNQUFNQyxXQUFBO0VBQUE7RUFBQSxDQUFBZCxhQUFBLEdBQUFLLENBQUEsT0FBYztJQUNsQlUsRUFBQSxFQUFJO0lBQ0pDLEVBQUEsRUFBSTtFQUNOO0VBQUE7RUFBQWhCLGFBQUEsR0FBQUssQ0FBQTtFQUVBLG9CQUNFLElBQUFZLFdBQUEsQ0FBQUMsR0FBQSxFQUFDO0lBQUtDLFNBQUEsRUFBVyxHQUFHZixXQUFBLElBQWVFLGNBQWMsQ0FBQ1AsT0FBQSxDQUFRLElBQUllLFdBQVcsQ0FBQ1osSUFBQSxDQUFLLEVBQUU7Y0FDOUVKOztBQUdQIiwiaWdub3JlTGlzdCI6W119