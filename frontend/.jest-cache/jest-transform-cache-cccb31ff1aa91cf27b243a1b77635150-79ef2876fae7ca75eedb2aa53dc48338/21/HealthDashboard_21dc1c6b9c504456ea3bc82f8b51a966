56e2bb55e71f62f99d9eb657038eb685
"use client";
"use strict";

/* istanbul ignore next */
function cov_1rq3b2kmox() {
  var path = "/workspaces/prompt-card-system/frontend/src/components/HealthDashboard.tsx";
  var hash = "d8d9c5e63cb18af12c5f084593d8cb9d561fa654";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/prompt-card-system/frontend/src/components/HealthDashboard.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 31
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 14
        },
        end: {
          line: 14,
          column: 34
        }
      },
      "6": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 36
        }
      },
      "7": {
        start: {
          line: 16,
          column: 16
        },
        end: {
          line: 16,
          column: 38
        }
      },
      "8": {
        start: {
          line: 17,
          column: 18
        },
        end: {
          line: 17,
          column: 42
        }
      },
      "9": {
        start: {
          line: 18,
          column: 14
        },
        end: {
          line: 18,
          column: 34
        }
      },
      "10": {
        start: {
          line: 19,
          column: 21
        },
        end: {
          line: 19,
          column: 44
        }
      },
      "11": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 51
        }
      },
      "12": {
        start: {
          line: 21,
          column: 39
        },
        end: {
          line: 21,
          column: 51
        }
      },
      "13": {
        start: {
          line: 22,
          column: 28
        },
        end: {
          line: 22,
          column: 41
        }
      },
      "14": {
        start: {
          line: 23,
          column: 27
        },
        end: {
          line: 23,
          column: 40
        }
      },
      "15": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 20
        }
      },
      "16": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 66
        }
      },
      "17": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "18": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 19
        }
      },
      "19": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "20": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 35,
          column: 10
        }
      },
      "21": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 37,
          column: 53
        }
      },
      "22": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "23": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 30
        }
      },
      "24": {
        start: {
          line: 41,
          column: 17
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "25": {
        start: {
          line: 44,
          column: 32
        },
        end: {
          line: 44,
          column: 88
        }
      },
      "26": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "27": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "28": {
        start: {
          line: 47,
          column: 23
        },
        end: {
          line: 47,
          column: 95
        }
      },
      "29": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 52,
          column: 13
        }
      },
      "30": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 57
        }
      },
      "31": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 39
        }
      },
      "32": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 25
        }
      },
      "33": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "34": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 31
        }
      },
      "35": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 18
        }
      },
      "36": {
        start: {
          line: 61,
          column: 19
        },
        end: {
          line: 80,
          column: 1
        }
      },
      "37": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "38": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 66,
          column: 15
        }
      },
      "39": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 70,
          column: 15
        }
      },
      "40": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 74,
          column: 15
        }
      },
      "41": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 78,
          column: 15
        }
      },
      "42": {
        start: {
          line: 81,
          column: 20
        },
        end: {
          line: 92,
          column: 1
        }
      },
      "43": {
        start: {
          line: 82,
          column: 19
        },
        end: {
          line: 87,
          column: 5
        }
      },
      "44": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 91,
          column: 7
        }
      },
      "45": {
        start: {
          line: 93,
          column: 20
        },
        end: {
          line: 123,
          column: 1
        }
      },
      "46": {
        start: {
          line: 94,
          column: 20
        },
        end: {
          line: 119,
          column: 5
        }
      },
      "47": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 122,
          column: 7
        }
      },
      "48": {
        start: {
          line: 125,
          column: 44
        },
        end: {
          line: 125,
          column: 70
        }
      },
      "49": {
        start: {
          line: 126,
          column: 36
        },
        end: {
          line: 126,
          column: 60
        }
      },
      "50": {
        start: {
          line: 127,
          column: 34
        },
        end: {
          line: 127,
          column: 60
        }
      },
      "51": {
        start: {
          line: 128,
          column: 30
        },
        end: {
          line: 128,
          column: 56
        }
      },
      "52": {
        start: {
          line: 129,
          column: 42
        },
        end: {
          line: 129,
          column: 68
        }
      },
      "53": {
        start: {
          line: 130,
          column: 28
        },
        end: {
          line: 152,
          column: 5
        }
      },
      "54": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 151,
          column: 9
        }
      },
      "55": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 27
        }
      },
      "56": {
        start: {
          line: 134,
          column: 36
        },
        end: {
          line: 134,
          column: 83
        }
      },
      "57": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 137,
          column: 13
        }
      },
      "58": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 136,
          column: 97
        }
      },
      "59": {
        start: {
          line: 138,
          column: 32
        },
        end: {
          line: 138,
          column: 60
        }
      },
      "60": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 41
        }
      },
      "61": {
        start: {
          line: 141,
          column: 35
        },
        end: {
          line: 141,
          column: 81
        }
      },
      "62": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 145,
          column: 13
        }
      },
      "63": {
        start: {
          line: 143,
          column: 35
        },
        end: {
          line: 143,
          column: 62
        }
      },
      "64": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 144,
          column: 55
        }
      },
      "65": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 63
        }
      },
      "66": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 89
        }
      },
      "67": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 30
        }
      },
      "68": {
        start: {
          line: 153,
          column: 4
        },
        end: {
          line: 155,
          column: 11
        }
      },
      "69": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 26
        }
      },
      "70": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 162,
          column: 7
        }
      },
      "71": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 33
        }
      },
      "72": {
        start: {
          line: 157,
          column: 26
        },
        end: {
          line: 157,
          column: 33
        }
      },
      "73": {
        start: {
          line: 158,
          column: 25
        },
        end: {
          line: 158,
          column: 60
        }
      },
      "74": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 43
        }
      },
      "75": {
        start: {
          line: 159,
          column: 19
        },
        end: {
          line: 159,
          column: 42
        }
      },
      "76": {
        start: {
          line: 163,
          column: 31
        },
        end: {
          line: 166,
          column: 5
        }
      },
      "77": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 40
        }
      },
      "78": {
        start: {
          line: 164,
          column: 23
        },
        end: {
          line: 164,
          column: 40
        }
      },
      "79": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 44
        }
      },
      "80": {
        start: {
          line: 167,
          column: 28
        },
        end: {
          line: 178,
          column: 5
        }
      },
      "81": {
        start: {
          line: 168,
          column: 21
        },
        end: {
          line: 168,
          column: 41
        }
      },
      "82": {
        start: {
          line: 169,
          column: 20
        },
        end: {
          line: 169,
          column: 30
        }
      },
      "83": {
        start: {
          line: 170,
          column: 23
        },
        end: {
          line: 170,
          column: 53
        }
      },
      "84": {
        start: {
          line: 171,
          column: 28
        },
        end: {
          line: 171,
          column: 54
        }
      },
      "85": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 47
        }
      },
      "86": {
        start: {
          line: 172,
          column: 29
        },
        end: {
          line: 172,
          column: 47
        }
      },
      "87": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 59
        }
      },
      "88": {
        start: {
          line: 173,
          column: 30
        },
        end: {
          line: 173,
          column: 59
        }
      },
      "89": {
        start: {
          line: 174,
          column: 26
        },
        end: {
          line: 174,
          column: 54
        }
      },
      "90": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 175,
          column: 55
        }
      },
      "91": {
        start: {
          line: 175,
          column: 28
        },
        end: {
          line: 175,
          column: 55
        }
      },
      "92": {
        start: {
          line: 176,
          column: 25
        },
        end: {
          line: 176,
          column: 51
        }
      },
      "93": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 34
        }
      },
      "94": {
        start: {
          line: 179,
          column: 4
        },
        end: {
          line: 192,
          column: 5
        }
      },
      "95": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 191,
          column: 11
        }
      },
      "96": {
        start: {
          line: 193,
          column: 4
        },
        end: {
          line: 228,
          column: 5
        }
      },
      "97": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 227,
          column: 11
        }
      },
      "98": {
        start: {
          line: 229,
          column: 4
        },
        end: {
          line: 239,
          column: 5
        }
      },
      "99": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 238,
          column: 11
        }
      },
      "100": {
        start: {
          line: 240,
          column: 4
        },
        end: {
          line: 638,
          column: 7
        }
      },
      "101": {
        start: {
          line: 264,
          column: 45
        },
        end: {
          line: 264,
          column: 73
        }
      },
      "102": {
        start: {
          line: 421,
          column: 100
        },
        end: {
          line: 489,
          column: 40
        }
      },
      "103": {
        start: {
          line: 496,
          column: 97
        },
        end: {
          line: 561,
          column: 48
        }
      },
      "104": {
        start: {
          line: 568,
          column: 98
        },
        end: {
          line: 615,
          column: 41
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 33
          }
        },
        loc: {
          start: {
            line: 20,
            column: 47
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 39
          },
          end: {
            line: 24,
            column: 40
          }
        },
        loc: {
          start: {
            line: 24,
            column: 61
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 28,
            column: 9
          },
          end: {
            line: 28,
            column: 34
          }
        },
        loc: {
          start: {
            line: 28,
            column: 53
          },
          end: {
            line: 60,
            column: 1
          }
        },
        line: 28
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 61,
            column: 19
          },
          end: {
            line: 61,
            column: 20
          }
        },
        loc: {
          start: {
            line: 61,
            column: 33
          },
          end: {
            line: 80,
            column: 1
          }
        },
        line: 61
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 81,
            column: 20
          },
          end: {
            line: 81,
            column: 21
          }
        },
        loc: {
          start: {
            line: 81,
            column: 34
          },
          end: {
            line: 92,
            column: 1
          }
        },
        line: 81
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 93,
            column: 20
          },
          end: {
            line: 93,
            column: 21
          }
        },
        loc: {
          start: {
            line: 93,
            column: 39
          },
          end: {
            line: 123,
            column: 1
          }
        },
        line: 93
      },
      "7": {
        name: "HealthDashboard",
        decl: {
          start: {
            line: 124,
            column: 9
          },
          end: {
            line: 124,
            column: 24
          }
        },
        loc: {
          start: {
            line: 124,
            column: 27
          },
          end: {
            line: 639,
            column: 1
          }
        },
        line: 124
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 130,
            column: 28
          },
          end: {
            line: 130,
            column: 29
          }
        },
        loc: {
          start: {
            line: 130,
            column: 38
          },
          end: {
            line: 152,
            column: 5
          }
        },
        line: 130
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 153,
            column: 26
          },
          end: {
            line: 153,
            column: 27
          }
        },
        loc: {
          start: {
            line: 153,
            column: 30
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 153
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 156,
            column: 26
          },
          end: {
            line: 156,
            column: 27
          }
        },
        loc: {
          start: {
            line: 156,
            column: 30
          },
          end: {
            line: 160,
            column: 5
          }
        },
        line: 156
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 159,
            column: 15
          },
          end: {
            line: 159,
            column: 16
          }
        },
        loc: {
          start: {
            line: 159,
            column: 19
          },
          end: {
            line: 159,
            column: 42
          }
        },
        line: 159
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 163,
            column: 31
          },
          end: {
            line: 163,
            column: 32
          }
        },
        loc: {
          start: {
            line: 163,
            column: 37
          },
          end: {
            line: 166,
            column: 5
          }
        },
        line: 163
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 167,
            column: 28
          },
          end: {
            line: 167,
            column: 29
          }
        },
        loc: {
          start: {
            line: 167,
            column: 42
          },
          end: {
            line: 178,
            column: 5
          }
        },
        line: 167
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 264,
            column: 41
          },
          end: {
            line: 264,
            column: 42
          }
        },
        loc: {
          start: {
            line: 264,
            column: 45
          },
          end: {
            line: 264,
            column: 73
          }
        },
        line: 264
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 421,
            column: 67
          },
          end: {
            line: 421,
            column: 68
          }
        },
        loc: {
          start: {
            line: 421,
            column: 100
          },
          end: {
            line: 489,
            column: 40
          }
        },
        line: 421
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 496,
            column: 72
          },
          end: {
            line: 496,
            column: 73
          }
        },
        loc: {
          start: {
            line: 496,
            column: 97
          },
          end: {
            line: 561,
            column: 48
          }
        },
        line: 496
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 568,
            column: 68
          },
          end: {
            line: 568,
            column: 69
          }
        },
        loc: {
          start: {
            line: 568,
            column: 98
          },
          end: {
            line: 615,
            column: 41
          }
        },
        line: 568
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 15
          },
          end: {
            line: 25,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 25,
            column: 29
          },
          end: {
            line: 25,
            column: 45
          }
        }, {
          start: {
            line: 25,
            column: 48
          },
          end: {
            line: 25,
            column: 65
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 20
          }
        }, {
          start: {
            line: 29,
            column: 24
          },
          end: {
            line: 29,
            column: 27
          }
        }, {
          start: {
            line: 29,
            column: 31
          },
          end: {
            line: 29,
            column: 45
          }
        }],
        line: 29
      },
      "4": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "5": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 20
          }
        }, {
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 47
          }
        }, {
          start: {
            line: 32,
            column: 51
          },
          end: {
            line: 32,
            column: 76
          }
        }],
        line: 32
      },
      "6": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "7": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 13
          }
        }, {
          start: {
            line: 38,
            column: 17
          },
          end: {
            line: 38,
            column: 31
          }
        }],
        line: 38
      },
      "8": {
        loc: {
          start: {
            line: 44,
            column: 32
          },
          end: {
            line: 44,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 32
          },
          end: {
            line: 44,
            column: 53
          }
        }, {
          start: {
            line: 44,
            column: 57
          },
          end: {
            line: 44,
            column: 88
          }
        }],
        line: 44
      },
      "9": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "10": {
        loc: {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 46,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 46,
            column: 29
          }
        }, {
          start: {
            line: 46,
            column: 33
          },
          end: {
            line: 46,
            column: 79
          }
        }],
        line: 46
      },
      "11": {
        loc: {
          start: {
            line: 47,
            column: 23
          },
          end: {
            line: 47,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 47,
            column: 47
          },
          end: {
            line: 47,
            column: 88
          }
        }, {
          start: {
            line: 47,
            column: 91
          },
          end: {
            line: 47,
            column: 95
          }
        }],
        line: 47
      },
      "12": {
        loc: {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 52,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 52,
            column: 13
          }
        }, {
          start: {
            line: 50,
            column: 19
          },
          end: {
            line: 52,
            column: 13
          }
        }],
        line: 48
      },
      "13": {
        loc: {
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 48,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 48,
            column: 20
          }
        }, {
          start: {
            line: 48,
            column: 25
          },
          end: {
            line: 48,
            column: 33
          }
        }, {
          start: {
            line: 48,
            column: 37
          },
          end: {
            line: 48,
            column: 45
          }
        }],
        line: 48
      },
      "14": {
        loc: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "15": {
        loc: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 66,
            column: 15
          }
        }, {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 70,
            column: 15
          }
        }, {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 74,
            column: 15
          }
        }, {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 78,
            column: 15
          }
        }],
        line: 62
      },
      "16": {
        loc: {
          start: {
            line: 89,
            column: 19
          },
          end: {
            line: 89,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 19
          },
          end: {
            line: 89,
            column: 33
          }
        }, {
          start: {
            line: 89,
            column: 37
          },
          end: {
            line: 89,
            column: 51
          }
        }],
        line: 89
      },
      "17": {
        loc: {
          start: {
            line: 120,
            column: 11
          },
          end: {
            line: 122,
            column: 6
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 11
          },
          end: {
            line: 120,
            column: 31
          }
        }, {
          start: {
            line: 120,
            column: 49
          },
          end: {
            line: 122,
            column: 6
          }
        }],
        line: 120
      },
      "18": {
        loc: {
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 137,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 137,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "19": {
        loc: {
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 145,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 145,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "20": {
        loc: {
          start: {
            line: 144,
            column: 28
          },
          end: {
            line: 144,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 144,
            column: 28
          },
          end: {
            line: 144,
            column: 47
          }
        }, {
          start: {
            line: 144,
            column: 51
          },
          end: {
            line: 144,
            column: 53
          }
        }],
        line: 144
      },
      "21": {
        loc: {
          start: {
            line: 148,
            column: 21
          },
          end: {
            line: 148,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 148,
            column: 44
          },
          end: {
            line: 148,
            column: 55
          }
        }, {
          start: {
            line: 148,
            column: 58
          },
          end: {
            line: 148,
            column: 87
          }
        }],
        line: 148
      },
      "22": {
        loc: {
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 157,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 157,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "23": {
        loc: {
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 164,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 164,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "24": {
        loc: {
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 172,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 172,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "25": {
        loc: {
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 173,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 173,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "26": {
        loc: {
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 175,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 175,
            column: 55
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "27": {
        loc: {
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 192,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 192,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "28": {
        loc: {
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 228,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 228,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "29": {
        loc: {
          start: {
            line: 229,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "30": {
        loc: {
          start: {
            line: 266,
            column: 36
          },
          end: {
            line: 266,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 266,
            column: 50
          },
          end: {
            line: 266,
            column: 59
          }
        }, {
          start: {
            line: 266,
            column: 62
          },
          end: {
            line: 266,
            column: 70
          }
        }],
        line: 266
      },
      "31": {
        loc: {
          start: {
            line: 446,
            column: 48
          },
          end: {
            line: 450,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 446,
            column: 48
          },
          end: {
            line: 446,
            column: 71
          }
        }, {
          start: {
            line: 446,
            column: 89
          },
          end: {
            line: 450,
            column: 50
          }
        }],
        line: 446
      },
      "32": {
        loc: {
          start: {
            line: 458,
            column: 52
          },
          end: {
            line: 461,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 458,
            column: 52
          },
          end: {
            line: 458,
            column: 67
          }
        }, {
          start: {
            line: 458,
            column: 85
          },
          end: {
            line: 461,
            column: 54
          }
        }],
        line: 458
      },
      "33": {
        loc: {
          start: {
            line: 469,
            column: 75
          },
          end: {
            line: 469,
            column: 138
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 469,
            column: 105
          },
          end: {
            line: 469,
            column: 119
          }
        }, {
          start: {
            line: 469,
            column: 122
          },
          end: {
            line: 469,
            column: 138
          }
        }],
        line: 469
      },
      "34": {
        loc: {
          start: {
            line: 525,
            column: 52
          },
          end: {
            line: 528,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 525,
            column: 52
          },
          end: {
            line: 525,
            column: 67
          }
        }, {
          start: {
            line: 525,
            column: 85
          },
          end: {
            line: 528,
            column: 54
          }
        }],
        line: 525
      },
      "35": {
        loc: {
          start: {
            line: 539,
            column: 83
          },
          end: {
            line: 539,
            column: 158
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 539,
            column: 113
          },
          end: {
            line: 539,
            column: 139
          }
        }, {
          start: {
            line: 539,
            column: 142
          },
          end: {
            line: 539,
            column: 158
          }
        }],
        line: 539
      },
      "36": {
        loc: {
          start: {
            line: 566,
            column: 34
          },
          end: {
            line: 633,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 566,
            column: 87
          },
          end: {
            line: 616,
            column: 26
          }
        }, {
          start: {
            line: 616,
            column: 43
          },
          end: {
            line: 633,
            column: 26
          }
        }],
        line: 566
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/workspaces/prompt-card-system/frontend/src/components/HealthDashboard.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { \n  Heart, \n  AlertTriangle, \n  XCircle, \n  Circle, \n  RefreshCw, \n  Activity,\n  Database,\n  Server,\n  Brain,\n  Wifi,\n  BarChart3,\n  Clock\n} from 'lucide-react';\n\ninterface ServiceHealth {\n  name: string;\n  status: 'healthy' | 'degraded' | 'unhealthy' | 'offline';\n  lastCheck: string;\n  responseTime: number;\n  message?: string;\n  details?: any;\n  criticalService: boolean;\n}\n\ninterface SystemHealth {\n  overallStatus: 'healthy' | 'degraded' | 'unhealthy' | 'offline';\n  totalServices: number;\n  healthyServices: number;\n  degradedServices: number;\n  unhealthyServices: number;\n  offlineServices: number;\n  lastCheck: string;\n  healthPercentage: number;\n  criticalServices: ServiceHealth[];\n  recentIssues: Array<{\n    service: string;\n    status: string;\n    message: string;\n    lastCheck: string;\n  }>;\n}\n\nconst StatusIcon = ({ status }: { status: string }) => {\n  switch (status) {\n    case 'healthy':\n      return <Heart className=\"h-4 w-4 text-green-500\" />;\n    case 'degraded':\n      return <AlertTriangle className=\"h-4 w-4 text-yellow-500\" />;\n    case 'unhealthy':\n      return <XCircle className=\"h-4 w-4 text-red-500\" />;\n    default:\n      return <Circle className=\"h-4 w-4 text-gray-500\" />;\n  }\n};\n\nconst StatusBadge = ({ status }: { status: string }) => {\n  const colors = {\n    healthy: 'bg-green-100 text-green-800',\n    degraded: 'bg-yellow-100 text-yellow-800',\n    unhealthy: 'bg-red-100 text-red-800',\n    offline: 'bg-gray-100 text-gray-800'\n  };\n\n  return (\n    <Badge className={colors[status as keyof typeof colors] || colors.offline}>\n      {status.toUpperCase()}\n    </Badge>\n  );\n};\n\nconst ServiceIcon = ({ serviceName }: { serviceName: string }) => {\n  const iconMap: Record<string, React.ReactNode> = {\n    database: <Database className=\"h-5 w-5\" />,\n    redis: <Database className=\"h-5 w-5\" />,\n    ollama: <Brain className=\"h-5 w-5\" />,\n    frontend: <Server className=\"h-5 w-5\" />,\n    backend: <Server className=\"h-5 w-5\" />,\n    websocket: <Wifi className=\"h-5 w-5\" />,\n    prometheus: <BarChart3 className=\"h-5 w-5\" />,\n    grafana: <BarChart3 className=\"h-5 w-5\" />\n  };\n\n  return iconMap[serviceName] || <Activity className=\"h-5 w-5\" />;\n};\n\nexport default function HealthDashboard() {\n  const [systemHealth, setSystemHealth] = useState<SystemHealth | null>(null);\n  const [services, setServices] = useState<Record<string, ServiceHealth>>({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [autoRefresh, setAutoRefresh] = useState(true);\n\n  const fetchHealthData = async () => {\n    try {\n      setError(null);\n      \n      // Fetch system health summary\n      const summaryResponse = await fetch('/api/health/orchestrator/summary');\n      if (!summaryResponse.ok) {\n        throw new Error(`HTTP ${summaryResponse.status}: ${summaryResponse.statusText}`);\n      }\n      const summaryData = await summaryResponse.json();\n      setSystemHealth(summaryData);\n\n      // Fetch detailed service health\n      const systemResponse = await fetch('/api/health/orchestrator/system');\n      if (systemResponse.ok) {\n        const systemData = await systemResponse.json();\n        setServices(systemData.services || {});\n      }\n    } catch (err) {\n      console.error('Failed to fetch health data:', err);\n      setError(err instanceof Error ? err.message : 'Failed to fetch health data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchHealthData();\n  }, []);\n\n  useEffect(() => {\n    if (!autoRefresh) return;\n\n    const interval = setInterval(fetchHealthData, 30000); // Refresh every 30 seconds\n    return () => clearInterval(interval);\n  }, [autoRefresh]);\n\n  const formatResponseTime = (ms: number) => {\n    if (ms < 1000) return `${ms}ms`;\n    return `${(ms / 1000).toFixed(1)}s`;\n  };\n\n  const formatLastCheck = (dateString: string) => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffMs = now.getTime() - date.getTime();\n    const diffMinutes = Math.floor(diffMs / 60000);\n    \n    if (diffMinutes < 1) return 'Just now';\n    if (diffMinutes < 60) return `${diffMinutes}m ago`;\n    const diffHours = Math.floor(diffMinutes / 60);\n    if (diffHours < 24) return `${diffHours}h ago`;\n    const diffDays = Math.floor(diffHours / 24);\n    return `${diffDays}d ago`;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center p-8\">\n        <RefreshCw className=\"h-8 w-8 animate-spin text-blue-500\" />\n        <span className=\"ml-2 text-lg\">Loading health data...</span>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <Card className=\"m-4\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center text-red-600\">\n            <XCircle className=\"h-5 w-5 mr-2\" />\n            Health Dashboard Error\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <p className=\"text-red-600 mb-4\">{error}</p>\n          <Button onClick={fetchHealthData} variant=\"outline\">\n            <RefreshCw className=\"h-4 w-4 mr-2\" />\n            Retry\n          </Button>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (!systemHealth) {\n    return (\n      <Card className=\"m-4\">\n        <CardContent className=\"p-8 text-center\">\n          <p>No health data available</p>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"p-4 space-y-4\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-3xl font-bold\">System Health Dashboard</h1>\n          <p className=\"text-gray-600\">Real-time monitoring of all services</p>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => setAutoRefresh(!autoRefresh)}\n          >\n            {autoRefresh ? 'Disable' : 'Enable'} Auto-refresh\n          </Button>\n          <Button onClick={fetchHealthData} size=\"sm\">\n            <RefreshCw className=\"h-4 w-4 mr-2\" />\n            Refresh\n          </Button>\n        </div>\n      </div>\n\n      {/* Overall Status Card */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center\">\n            <StatusIcon status={systemHealth.overallStatus} />\n            <span className=\"ml-2\">Overall System Status</span>\n            <StatusBadge status={systemHealth.overallStatus} />\n          </CardTitle>\n          <CardDescription>\n            Last checked: {formatLastCheck(systemHealth.lastCheck)}\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-4\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">{systemHealth.healthyServices}</div>\n              <div className=\"text-sm text-gray-600\">Healthy</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-yellow-600\">{systemHealth.degradedServices}</div>\n              <div className=\"text-sm text-gray-600\">Degraded</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-red-600\">{systemHealth.unhealthyServices}</div>\n              <div className=\"text-sm text-gray-600\">Unhealthy</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-gray-600\">{systemHealth.offlineServices}</div>\n              <div className=\"text-sm text-gray-600\">Offline</div>\n            </div>\n          </div>\n          <div className=\"space-y-2\">\n            <div className=\"flex justify-between text-sm\">\n              <span>System Health</span>\n              <span>{systemHealth.healthPercentage}%</span>\n            </div>\n            <Progress value={systemHealth.healthPercentage} className=\"h-2\" />\n          </div>\n        </CardContent>\n      </Card>\n\n      <Tabs defaultValue=\"services\" className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"services\">All Services</TabsTrigger>\n          <TabsTrigger value=\"critical\">Critical Services</TabsTrigger>\n          <TabsTrigger value=\"issues\">Recent Issues</TabsTrigger>\n        </TabsList>\n\n        {/* All Services Tab */}\n        <TabsContent value=\"services\">\n          <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n            {Object.entries(services).map(([name, service]) => (\n              <Card key={name}>\n                <CardHeader className=\"pb-3\">\n                  <CardTitle className=\"flex items-center justify-between text-base\">\n                    <div className=\"flex items-center\">\n                      <ServiceIcon serviceName={name} />\n                      <span className=\"ml-2 capitalize\">{name}</span>\n                    </div>\n                    <StatusBadge status={service.status} />\n                  </CardTitle>\n                  {service.criticalService && (\n                    <Badge variant=\"outline\" className=\"w-fit\">Critical</Badge>\n                  )}\n                </CardHeader>\n                <CardContent className=\"pt-0\">\n                  <div className=\"space-y-2 text-sm\">\n                    {service.message && (\n                      <p className=\"text-gray-600\">{service.message}</p>\n                    )}\n                    <div className=\"flex justify-between\">\n                      <span>Response Time:</span>\n                      <span className={service.responseTime > 5000 ? 'text-red-600' : 'text-green-600'}>\n                        {formatResponseTime(service.responseTime)}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Last Check:</span>\n                      <span>{formatLastCheck(service.lastCheck)}</span>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </TabsContent>\n\n        {/* Critical Services Tab */}\n        <TabsContent value=\"critical\">\n          <div className=\"grid gap-4 md:grid-cols-2\">\n            {systemHealth.criticalServices.map((service) => (\n              <Card key={service.name} className=\"border-l-4 border-l-blue-500\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center\">\n                      <ServiceIcon serviceName={service.name} />\n                      <span className=\"ml-2 capitalize\">{service.name}</span>\n                    </div>\n                    <StatusBadge status={service.status} />\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-2 text-sm\">\n                    {service.message && (\n                      <p className=\"text-gray-600\">{service.message}</p>\n                    )}\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div>\n                        <span className=\"text-gray-500\">Response Time:</span>\n                        <div className={service.responseTime > 5000 ? 'text-red-600 font-medium' : 'text-green-600'}>\n                          {formatResponseTime(service.responseTime)}\n                        </div>\n                      </div>\n                      <div>\n                        <span className=\"text-gray-500\">Last Check:</span>\n                        <div>{formatLastCheck(service.lastCheck)}</div>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </TabsContent>\n\n        {/* Recent Issues Tab */}\n        <TabsContent value=\"issues\">\n          {systemHealth.recentIssues.length > 0 ? (\n            <div className=\"space-y-4\">\n              {systemHealth.recentIssues.map((issue, index) => (\n                <Card key={index}>\n                  <CardContent className=\"pt-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center\">\n                        <StatusIcon status={issue.status} />\n                        <div className=\"ml-3\">\n                          <div className=\"font-medium capitalize\">{issue.service}</div>\n                          <div className=\"text-sm text-gray-600\">{issue.message}</div>\n                        </div>\n                      </div>\n                      <div className=\"text-right\">\n                        <StatusBadge status={issue.status} />\n                        <div className=\"text-xs text-gray-500 mt-1\">\n                          <Clock className=\"h-3 w-3 inline mr-1\" />\n                          {formatLastCheck(issue.lastCheck)}\n                        </div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          ) : (\n            <Card>\n              <CardContent className=\"pt-8 text-center\">\n                <Heart className=\"h-12 w-12 text-green-500 mx-auto mb-4\" />\n                <p className=\"text-lg font-medium\">No Recent Issues</p>\n                <p className=\"text-gray-600\">All services are running smoothly!</p>\n              </CardContent>\n            </Card>\n          )}\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}"],
      names: ["HealthDashboard", "StatusIcon", "status", "Heart", "className", "AlertTriangle", "XCircle", "Circle", "StatusBadge", "colors", "healthy", "degraded", "unhealthy", "offline", "Badge", "toUpperCase", "ServiceIcon", "serviceName", "iconMap", "database", "Database", "redis", "ollama", "Brain", "frontend", "Server", "backend", "websocket", "Wifi", "prometheus", "BarChart3", "grafana", "Activity", "systemHealth", "setSystemHealth", "useState", "services", "setServices", "loading", "setLoading", "error", "setError", "autoRefresh", "setAutoRefresh", "fetchHealthData", "summaryResponse", "fetch", "ok", "Error", "statusText", "summaryData", "json", "systemResponse", "systemData", "err", "console", "message", "useEffect", "interval", "setInterval", "clearInterval", "formatResponseTime", "ms", "toFixed", "formatLastCheck", "dateString", "date", "Date", "now", "diffMs", "getTime", "diffMinutes", "Math", "floor", "diffHours", "diffDays", "div", "RefreshCw", "span", "Card", "CardHeader", "CardTitle", "CardContent", "p", "Button", "onClick", "variant", "h1", "size", "overallStatus", "CardDescription", "lastCheck", "healthyServices", "degradedServices", "unhealthyServices", "offlineServices", "healthPercentage", "Progress", "value", "Tabs", "defaultValue", "TabsList", "TabsTrigger", "TabsContent", "Object", "entries", "map", "name", "service", "criticalService", "responseTime", "criticalServices", "recentIssues", "length", "issue", "index", "Clock"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d8d9c5e63cb18af12c5f084593d8cb9d561fa654"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1rq3b2kmox = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1rq3b2kmox();
cov_1rq3b2kmox().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1rq3b2kmox().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1rq3b2kmox().f[0]++;
    cov_1rq3b2kmox().s[2]++;
    return HealthDashboard;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1rq3b2kmox().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1rq3b2kmox().s[4]++, _interop_require_wildcard(require("react")));
const _card =
/* istanbul ignore next */
(cov_1rq3b2kmox().s[5]++, require("./ui/card"));
const _badge =
/* istanbul ignore next */
(cov_1rq3b2kmox().s[6]++, require("./ui/badge"));
const _button =
/* istanbul ignore next */
(cov_1rq3b2kmox().s[7]++, require("./ui/button"));
const _progress =
/* istanbul ignore next */
(cov_1rq3b2kmox().s[8]++, require("./ui/progress"));
const _tabs =
/* istanbul ignore next */
(cov_1rq3b2kmox().s[9]++, require("./ui/tabs"));
const _lucidereact =
/* istanbul ignore next */
(cov_1rq3b2kmox().s[10]++, require("lucide-react"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1rq3b2kmox().f[1]++;
  cov_1rq3b2kmox().s[11]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1rq3b2kmox().b[0][0]++;
    cov_1rq3b2kmox().s[12]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1rq3b2kmox().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1rq3b2kmox().s[13]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1rq3b2kmox().s[14]++, new WeakMap());
  /* istanbul ignore next */
  cov_1rq3b2kmox().s[15]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1rq3b2kmox().f[2]++;
    cov_1rq3b2kmox().s[16]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1rq3b2kmox().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1rq3b2kmox().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1rq3b2kmox().f[3]++;
  cov_1rq3b2kmox().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_1rq3b2kmox().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1rq3b2kmox().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1rq3b2kmox().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1rq3b2kmox().b[2][0]++;
    cov_1rq3b2kmox().s[18]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1rq3b2kmox().b[2][1]++;
  }
  cov_1rq3b2kmox().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_1rq3b2kmox().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1rq3b2kmox().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1rq3b2kmox().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1rq3b2kmox().b[4][0]++;
    cov_1rq3b2kmox().s[20]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1rq3b2kmox().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1rq3b2kmox().s[21]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1rq3b2kmox().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_1rq3b2kmox().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1rq3b2kmox().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1rq3b2kmox().b[6][0]++;
    cov_1rq3b2kmox().s[23]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1rq3b2kmox().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1rq3b2kmox().s[24]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1rq3b2kmox().s[25]++,
  /* istanbul ignore next */
  (cov_1rq3b2kmox().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1rq3b2kmox().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1rq3b2kmox().s[26]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1rq3b2kmox().s[27]++;
    if (
    /* istanbul ignore next */
    (cov_1rq3b2kmox().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1rq3b2kmox().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1rq3b2kmox().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1rq3b2kmox().s[28]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1rq3b2kmox().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1rq3b2kmox().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1rq3b2kmox().s[29]++;
      if (
      /* istanbul ignore next */
      (cov_1rq3b2kmox().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1rq3b2kmox().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1rq3b2kmox().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1rq3b2kmox().b[12][0]++;
        cov_1rq3b2kmox().s[30]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1rq3b2kmox().b[12][1]++;
        cov_1rq3b2kmox().s[31]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1rq3b2kmox().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1rq3b2kmox().s[32]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1rq3b2kmox().s[33]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1rq3b2kmox().b[14][0]++;
    cov_1rq3b2kmox().s[34]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1rq3b2kmox().b[14][1]++;
  }
  cov_1rq3b2kmox().s[35]++;
  return newObj;
}
/* istanbul ignore next */
cov_1rq3b2kmox().s[36]++;
const StatusIcon = ({
  status
}) => {
  /* istanbul ignore next */
  cov_1rq3b2kmox().f[4]++;
  cov_1rq3b2kmox().s[37]++;
  switch (status) {
    case "healthy":
      /* istanbul ignore next */
      cov_1rq3b2kmox().b[15][0]++;
      cov_1rq3b2kmox().s[38]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Heart, {
        className: "h-4 w-4 text-green-500"
      });
    case "degraded":
      /* istanbul ignore next */
      cov_1rq3b2kmox().b[15][1]++;
      cov_1rq3b2kmox().s[39]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
        className: "h-4 w-4 text-yellow-500"
      });
    case "unhealthy":
      /* istanbul ignore next */
      cov_1rq3b2kmox().b[15][2]++;
      cov_1rq3b2kmox().s[40]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.XCircle, {
        className: "h-4 w-4 text-red-500"
      });
    default:
      /* istanbul ignore next */
      cov_1rq3b2kmox().b[15][3]++;
      cov_1rq3b2kmox().s[41]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Circle, {
        className: "h-4 w-4 text-gray-500"
      });
  }
};
/* istanbul ignore next */
cov_1rq3b2kmox().s[42]++;
const StatusBadge = ({
  status
}) => {
  /* istanbul ignore next */
  cov_1rq3b2kmox().f[5]++;
  const colors =
  /* istanbul ignore next */
  (cov_1rq3b2kmox().s[43]++, {
    healthy: "bg-green-100 text-green-800",
    degraded: "bg-yellow-100 text-yellow-800",
    unhealthy: "bg-red-100 text-red-800",
    offline: "bg-gray-100 text-gray-800"
  });
  /* istanbul ignore next */
  cov_1rq3b2kmox().s[44]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
    className:
    /* istanbul ignore next */
    (cov_1rq3b2kmox().b[16][0]++, colors[status]) ||
    /* istanbul ignore next */
    (cov_1rq3b2kmox().b[16][1]++, colors.offline),
    children: status.toUpperCase()
  });
};
/* istanbul ignore next */
cov_1rq3b2kmox().s[45]++;
const ServiceIcon = ({
  serviceName
}) => {
  /* istanbul ignore next */
  cov_1rq3b2kmox().f[6]++;
  const iconMap =
  /* istanbul ignore next */
  (cov_1rq3b2kmox().s[46]++, {
    database: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Database, {
      className: "h-5 w-5"
    }),
    redis: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Database, {
      className: "h-5 w-5"
    }),
    ollama: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Brain, {
      className: "h-5 w-5"
    }),
    frontend: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Server, {
      className: "h-5 w-5"
    }),
    backend: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Server, {
      className: "h-5 w-5"
    }),
    websocket: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Wifi, {
      className: "h-5 w-5"
    }),
    prometheus: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.BarChart3, {
      className: "h-5 w-5"
    }),
    grafana: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.BarChart3, {
      className: "h-5 w-5"
    })
  });
  /* istanbul ignore next */
  cov_1rq3b2kmox().s[47]++;
  return /* istanbul ignore next */(cov_1rq3b2kmox().b[17][0]++, iconMap[serviceName]) ||
  /* istanbul ignore next */
  (cov_1rq3b2kmox().b[17][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Activity, {
    className: "h-5 w-5"
  }));
};
function HealthDashboard() {
  /* istanbul ignore next */
  cov_1rq3b2kmox().f[7]++;
  const [systemHealth, setSystemHealth] =
  /* istanbul ignore next */
  (cov_1rq3b2kmox().s[48]++, (0, _react.useState)(null));
  const [services, setServices] =
  /* istanbul ignore next */
  (cov_1rq3b2kmox().s[49]++, (0, _react.useState)({}));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_1rq3b2kmox().s[50]++, (0, _react.useState)(true));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_1rq3b2kmox().s[51]++, (0, _react.useState)(null));
  const [autoRefresh, setAutoRefresh] =
  /* istanbul ignore next */
  (cov_1rq3b2kmox().s[52]++, (0, _react.useState)(true));
  /* istanbul ignore next */
  cov_1rq3b2kmox().s[53]++;
  const fetchHealthData = async () => {
    /* istanbul ignore next */
    cov_1rq3b2kmox().f[8]++;
    cov_1rq3b2kmox().s[54]++;
    try {
      /* istanbul ignore next */
      cov_1rq3b2kmox().s[55]++;
      setError(null);
      // Fetch system health summary
      const summaryResponse =
      /* istanbul ignore next */
      (cov_1rq3b2kmox().s[56]++, await fetch("/api/health/orchestrator/summary"));
      /* istanbul ignore next */
      cov_1rq3b2kmox().s[57]++;
      if (!summaryResponse.ok) {
        /* istanbul ignore next */
        cov_1rq3b2kmox().b[18][0]++;
        cov_1rq3b2kmox().s[58]++;
        throw new Error(`HTTP ${summaryResponse.status}: ${summaryResponse.statusText}`);
      } else
      /* istanbul ignore next */
      {
        cov_1rq3b2kmox().b[18][1]++;
      }
      const summaryData =
      /* istanbul ignore next */
      (cov_1rq3b2kmox().s[59]++, await summaryResponse.json());
      /* istanbul ignore next */
      cov_1rq3b2kmox().s[60]++;
      setSystemHealth(summaryData);
      // Fetch detailed service health
      const systemResponse =
      /* istanbul ignore next */
      (cov_1rq3b2kmox().s[61]++, await fetch("/api/health/orchestrator/system"));
      /* istanbul ignore next */
      cov_1rq3b2kmox().s[62]++;
      if (systemResponse.ok) {
        /* istanbul ignore next */
        cov_1rq3b2kmox().b[19][0]++;
        const systemData =
        /* istanbul ignore next */
        (cov_1rq3b2kmox().s[63]++, await systemResponse.json());
        /* istanbul ignore next */
        cov_1rq3b2kmox().s[64]++;
        setServices(
        /* istanbul ignore next */
        (cov_1rq3b2kmox().b[20][0]++, systemData.services) ||
        /* istanbul ignore next */
        (cov_1rq3b2kmox().b[20][1]++, {}));
      } else
      /* istanbul ignore next */
      {
        cov_1rq3b2kmox().b[19][1]++;
      }
    } catch (err) {
      /* istanbul ignore next */
      cov_1rq3b2kmox().s[65]++;
      console.error("Failed to fetch health data:", err);
      /* istanbul ignore next */
      cov_1rq3b2kmox().s[66]++;
      setError(err instanceof Error ?
      /* istanbul ignore next */
      (cov_1rq3b2kmox().b[21][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1rq3b2kmox().b[21][1]++, "Failed to fetch health data"));
    } finally {
      /* istanbul ignore next */
      cov_1rq3b2kmox().s[67]++;
      setLoading(false);
    }
  };
  /* istanbul ignore next */
  cov_1rq3b2kmox().s[68]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1rq3b2kmox().f[9]++;
    cov_1rq3b2kmox().s[69]++;
    fetchHealthData();
  }, []);
  /* istanbul ignore next */
  cov_1rq3b2kmox().s[70]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1rq3b2kmox().f[10]++;
    cov_1rq3b2kmox().s[71]++;
    if (!autoRefresh) {
      /* istanbul ignore next */
      cov_1rq3b2kmox().b[22][0]++;
      cov_1rq3b2kmox().s[72]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1rq3b2kmox().b[22][1]++;
    }
    const interval =
    /* istanbul ignore next */
    (cov_1rq3b2kmox().s[73]++, setInterval(fetchHealthData, 30000)); // Refresh every 30 seconds
    /* istanbul ignore next */
    cov_1rq3b2kmox().s[74]++;
    return () => {
      /* istanbul ignore next */
      cov_1rq3b2kmox().f[11]++;
      cov_1rq3b2kmox().s[75]++;
      return clearInterval(interval);
    };
  }, [autoRefresh]);
  /* istanbul ignore next */
  cov_1rq3b2kmox().s[76]++;
  const formatResponseTime = ms => {
    /* istanbul ignore next */
    cov_1rq3b2kmox().f[12]++;
    cov_1rq3b2kmox().s[77]++;
    if (ms < 1000) {
      /* istanbul ignore next */
      cov_1rq3b2kmox().b[23][0]++;
      cov_1rq3b2kmox().s[78]++;
      return `${ms}ms`;
    } else
    /* istanbul ignore next */
    {
      cov_1rq3b2kmox().b[23][1]++;
    }
    cov_1rq3b2kmox().s[79]++;
    return `${(ms / 1000).toFixed(1)}s`;
  };
  /* istanbul ignore next */
  cov_1rq3b2kmox().s[80]++;
  const formatLastCheck = dateString => {
    /* istanbul ignore next */
    cov_1rq3b2kmox().f[13]++;
    const date =
    /* istanbul ignore next */
    (cov_1rq3b2kmox().s[81]++, new Date(dateString));
    const now =
    /* istanbul ignore next */
    (cov_1rq3b2kmox().s[82]++, new Date());
    const diffMs =
    /* istanbul ignore next */
    (cov_1rq3b2kmox().s[83]++, now.getTime() - date.getTime());
    const diffMinutes =
    /* istanbul ignore next */
    (cov_1rq3b2kmox().s[84]++, Math.floor(diffMs / 60000));
    /* istanbul ignore next */
    cov_1rq3b2kmox().s[85]++;
    if (diffMinutes < 1) {
      /* istanbul ignore next */
      cov_1rq3b2kmox().b[24][0]++;
      cov_1rq3b2kmox().s[86]++;
      return "Just now";
    } else
    /* istanbul ignore next */
    {
      cov_1rq3b2kmox().b[24][1]++;
    }
    cov_1rq3b2kmox().s[87]++;
    if (diffMinutes < 60) {
      /* istanbul ignore next */
      cov_1rq3b2kmox().b[25][0]++;
      cov_1rq3b2kmox().s[88]++;
      return `${diffMinutes}m ago`;
    } else
    /* istanbul ignore next */
    {
      cov_1rq3b2kmox().b[25][1]++;
    }
    const diffHours =
    /* istanbul ignore next */
    (cov_1rq3b2kmox().s[89]++, Math.floor(diffMinutes / 60));
    /* istanbul ignore next */
    cov_1rq3b2kmox().s[90]++;
    if (diffHours < 24) {
      /* istanbul ignore next */
      cov_1rq3b2kmox().b[26][0]++;
      cov_1rq3b2kmox().s[91]++;
      return `${diffHours}h ago`;
    } else
    /* istanbul ignore next */
    {
      cov_1rq3b2kmox().b[26][1]++;
    }
    const diffDays =
    /* istanbul ignore next */
    (cov_1rq3b2kmox().s[92]++, Math.floor(diffHours / 24));
    /* istanbul ignore next */
    cov_1rq3b2kmox().s[93]++;
    return `${diffDays}d ago`;
  };
  /* istanbul ignore next */
  cov_1rq3b2kmox().s[94]++;
  if (loading) {
    /* istanbul ignore next */
    cov_1rq3b2kmox().b[27][0]++;
    cov_1rq3b2kmox().s[95]++;
    return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex items-center justify-center p-8",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
        className: "h-8 w-8 animate-spin text-blue-500"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
        className: "ml-2 text-lg",
        children: "Loading health data..."
      })]
    });
  } else
  /* istanbul ignore next */
  {
    cov_1rq3b2kmox().b[27][1]++;
  }
  cov_1rq3b2kmox().s[96]++;
  if (error) {
    /* istanbul ignore next */
    cov_1rq3b2kmox().b[28][0]++;
    cov_1rq3b2kmox().s[97]++;
    return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
      className: "m-4",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardTitle, {
          className: "flex items-center text-red-600",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.XCircle, {
            className: "h-5 w-5 mr-2"
          }), "Health Dashboard Error"]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-red-600 mb-4",
          children: error
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
          onClick: fetchHealthData,
          variant: "outline",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
            className: "h-4 w-4 mr-2"
          }), "Retry"]
        })]
      })]
    });
  } else
  /* istanbul ignore next */
  {
    cov_1rq3b2kmox().b[28][1]++;
  }
  cov_1rq3b2kmox().s[98]++;
  if (!systemHealth) {
    /* istanbul ignore next */
    cov_1rq3b2kmox().b[29][0]++;
    cov_1rq3b2kmox().s[99]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(_card.Card, {
      className: "m-4",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
        className: "p-8 text-center",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          children: "No health data available"
        })
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_1rq3b2kmox().b[29][1]++;
  }
  cov_1rq3b2kmox().s[100]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "p-4 space-y-4",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex justify-between items-center",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
          className: "text-3xl font-bold",
          children: "System Health Dashboard"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-gray-600",
          children: "Real-time monitoring of all services"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center space-x-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
          variant: "outline",
          size: "sm",
          onClick: () => {
            /* istanbul ignore next */
            cov_1rq3b2kmox().f[14]++;
            cov_1rq3b2kmox().s[101]++;
            return setAutoRefresh(!autoRefresh);
          },
          children: [autoRefresh ?
          /* istanbul ignore next */
          (cov_1rq3b2kmox().b[30][0]++, "Disable") :
          /* istanbul ignore next */
          (cov_1rq3b2kmox().b[30][1]++, "Enable"), " Auto-refresh"]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
          onClick: fetchHealthData,
          size: "sm",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
            className: "h-4 w-4 mr-2"
          }), "Refresh"]
        })]
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardHeader, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardTitle, {
          className: "flex items-center",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(StatusIcon, {
            status: systemHealth.overallStatus
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: "ml-2",
            children: "Overall System Status"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(StatusBadge, {
            status: systemHealth.overallStatus
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardDescription, {
          children: ["Last checked: ", formatLastCheck(systemHealth.lastCheck)]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "grid grid-cols-2 md:grid-cols-4 gap-4 mb-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "text-center",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-2xl font-bold text-green-600",
              children: systemHealth.healthyServices
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-sm text-gray-600",
              children: "Healthy"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "text-center",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-2xl font-bold text-yellow-600",
              children: systemHealth.degradedServices
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-sm text-gray-600",
              children: "Degraded"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "text-center",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-2xl font-bold text-red-600",
              children: systemHealth.unhealthyServices
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-sm text-gray-600",
              children: "Unhealthy"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "text-center",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-2xl font-bold text-gray-600",
              children: systemHealth.offlineServices
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-sm text-gray-600",
              children: "Offline"
            })]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "space-y-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex justify-between text-sm",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              children: "System Health"
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
              children: [systemHealth.healthPercentage, "%"]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_progress.Progress, {
            value: systemHealth.healthPercentage,
            className: "h-2"
          })]
        })]
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_tabs.Tabs, {
      defaultValue: "services",
      className: "space-y-4",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_tabs.TabsList, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
          value: "services",
          children: "All Services"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
          value: "critical",
          children: "Critical Services"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
          value: "issues",
          children: "Recent Issues"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsContent, {
        value: "services",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "grid gap-4 md:grid-cols-2 lg:grid-cols-3",
          children: Object.entries(services).map(([name, service]) => {
            /* istanbul ignore next */
            cov_1rq3b2kmox().f[15]++;
            cov_1rq3b2kmox().s[102]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardHeader, {
                className: "pb-3",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardTitle, {
                  className: "flex items-center justify-between text-base",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(ServiceIcon, {
                      serviceName: name
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "ml-2 capitalize",
                      children: name
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(StatusBadge, {
                    status: service.status
                  })]
                }),
                /* istanbul ignore next */
                (cov_1rq3b2kmox().b[31][0]++, service.criticalService) &&
                /* istanbul ignore next */
                (cov_1rq3b2kmox().b[31][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
                  variant: "outline",
                  className: "w-fit",
                  children: "Critical"
                }))]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
                className: "pt-0",
                children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "space-y-2 text-sm",
                  children: [
                  /* istanbul ignore next */
                  (cov_1rq3b2kmox().b[32][0]++, service.message) &&
                  /* istanbul ignore next */
                  (cov_1rq3b2kmox().b[32][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                    className: "text-gray-600",
                    children: service.message
                  })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex justify-between",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      children: "Response Time:"
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: service.responseTime > 5000 ?
                      /* istanbul ignore next */
                      (cov_1rq3b2kmox().b[33][0]++, "text-red-600") :
                      /* istanbul ignore next */
                      (cov_1rq3b2kmox().b[33][1]++, "text-green-600"),
                      children: formatResponseTime(service.responseTime)
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex justify-between",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      children: "Last Check:"
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      children: formatLastCheck(service.lastCheck)
                    })]
                  })]
                })
              })]
            }, name);
          })
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsContent, {
        value: "critical",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "grid gap-4 md:grid-cols-2",
          children: systemHealth.criticalServices.map(service => {
            /* istanbul ignore next */
            cov_1rq3b2kmox().f[16]++;
            cov_1rq3b2kmox().s[103]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
              className: "border-l-4 border-l-blue-500",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
                children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardTitle, {
                  className: "flex items-center justify-between",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(ServiceIcon, {
                      serviceName: service.name
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "ml-2 capitalize",
                      children: service.name
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(StatusBadge, {
                    status: service.status
                  })]
                })
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
                children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "space-y-2 text-sm",
                  children: [
                  /* istanbul ignore next */
                  (cov_1rq3b2kmox().b[34][0]++, service.message) &&
                  /* istanbul ignore next */
                  (cov_1rq3b2kmox().b[34][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                    className: "text-gray-600",
                    children: service.message
                  })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "grid grid-cols-2 gap-4",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                        className: "text-gray-500",
                        children: "Response Time:"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        className: service.responseTime > 5000 ?
                        /* istanbul ignore next */
                        (cov_1rq3b2kmox().b[35][0]++, "text-red-600 font-medium") :
                        /* istanbul ignore next */
                        (cov_1rq3b2kmox().b[35][1]++, "text-green-600"),
                        children: formatResponseTime(service.responseTime)
                      })]
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                        className: "text-gray-500",
                        children: "Last Check:"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        children: formatLastCheck(service.lastCheck)
                      })]
                    })]
                  })]
                })
              })]
            }, service.name);
          })
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsContent, {
        value: "issues",
        children: systemHealth.recentIssues.length > 0 ?
        /* istanbul ignore next */
        (/*#__PURE__*/cov_1rq3b2kmox().b[36][0]++, (0, _jsxruntime.jsx)("div", {
          className: "space-y-4",
          children: systemHealth.recentIssues.map((issue, index) => {
            /* istanbul ignore next */
            cov_1rq3b2kmox().f[17]++;
            cov_1rq3b2kmox().s[104]++;
            return /*#__PURE__*/(0, _jsxruntime.jsx)(_card.Card, {
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
                className: "pt-4",
                children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center justify-between",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(StatusIcon, {
                      status: issue.status
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "ml-3",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        className: "font-medium capitalize",
                        children: issue.service
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        className: "text-sm text-gray-600",
                        children: issue.message
                      })]
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "text-right",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(StatusBadge, {
                      status: issue.status
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "text-xs text-gray-500 mt-1",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Clock, {
                        className: "h-3 w-3 inline mr-1"
                      }), formatLastCheck(issue.lastCheck)]
                    })]
                  })]
                })
              })
            }, index);
          })
        })) :
        /* istanbul ignore next */
        (/*#__PURE__*/cov_1rq3b2kmox().b[36][1]++, (0, _jsxruntime.jsx)(_card.Card, {
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
            className: "pt-8 text-center",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Heart, {
              className: "h-12 w-12 text-green-500 mx-auto mb-4"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-lg font-medium",
              children: "No Recent Issues"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-gray-600",
              children: "All services are running smoothly!"
            })]
          })
        }))
      })]
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,