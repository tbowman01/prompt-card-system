c30f97f4358636185b543c7da99a75d6
"use client";
"use strict";

/* istanbul ignore next */
function cov_1j84hnw4v6() {
  var path = "/workspaces/prompt-card-system/frontend/src/components/TestExecution/TestResults.tsx";
  var hash = "989858451fae3c966040f03630fbb1f0a56142a5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/prompt-card-system/frontend/src/components/TestExecution/TestResults.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 27
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 14,
          column: 37
        }
      },
      "6": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 39
        }
      },
      "7": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 51
        }
      },
      "8": {
        start: {
          line: 17,
          column: 39
        },
        end: {
          line: 17,
          column: 51
        }
      },
      "9": {
        start: {
          line: 18,
          column: 28
        },
        end: {
          line: 18,
          column: 41
        }
      },
      "10": {
        start: {
          line: 19,
          column: 27
        },
        end: {
          line: 19,
          column: 40
        }
      },
      "11": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 22,
          column: 20
        }
      },
      "12": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 66
        }
      },
      "13": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 27,
          column: 5
        }
      },
      "14": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 19
        }
      },
      "15": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "16": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 31,
          column: 10
        }
      },
      "17": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 53
        }
      },
      "18": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "19": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 30
        }
      },
      "20": {
        start: {
          line: 37,
          column: 17
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "21": {
        start: {
          line: 40,
          column: 32
        },
        end: {
          line: 40,
          column: 88
        }
      },
      "22": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "23": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "24": {
        start: {
          line: 43,
          column: 23
        },
        end: {
          line: 43,
          column: 95
        }
      },
      "25": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 48,
          column: 13
        }
      },
      "26": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 57
        }
      },
      "27": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 39
        }
      },
      "28": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 25
        }
      },
      "29": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "30": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 31
        }
      },
      "31": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 18
        }
      },
      "32": {
        start: {
          line: 58,
          column: 50
        },
        end: {
          line: 58,
          column: 81
        }
      },
      "33": {
        start: {
          line: 59,
          column: 27
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "34": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 68,
          column: 11
        }
      },
      "35": {
        start: {
          line: 61,
          column: 27
        },
        end: {
          line: 61,
          column: 40
        }
      },
      "36": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 66,
          column: 13
        }
      },
      "37": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 38
        }
      },
      "38": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 35
        }
      },
      "39": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 26
        }
      },
      "40": {
        start: {
          line: 70,
          column: 27
        },
        end: {
          line: 93,
          column: 5
        }
      },
      "41": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "42": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 76,
          column: 19
        }
      },
      "43": {
        start: {
          line: 78,
          column: 16
        },
        end: {
          line: 81,
          column: 19
        }
      },
      "44": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 86,
          column: 19
        }
      },
      "45": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 91,
          column: 19
        }
      },
      "46": {
        start: {
          line: 94,
          column: 30
        },
        end: {
          line: 104,
          column: 5
        }
      },
      "47": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 103,
          column: 11
        }
      },
      "48": {
        start: {
          line: 105,
          column: 32
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "49": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 40
        }
      },
      "50": {
        start: {
          line: 106,
          column: 23
        },
        end: {
          line: 106,
          column: 40
        }
      },
      "51": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 44
        }
      },
      "52": {
        start: {
          line: 109,
          column: 4
        },
        end: {
          line: 425,
          column: 7
        }
      },
      "53": {
        start: {
          line: 259,
          column: 76
        },
        end: {
          line: 421,
          column: 37
        }
      },
      "54": {
        start: {
          line: 264,
          column: 49
        },
        end: {
          line: 264,
          column: 74
        }
      },
      "55": {
        start: {
          line: 320,
          column: 125
        },
        end: {
          line: 356,
          column: 65
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 33
          }
        },
        loc: {
          start: {
            line: 16,
            column: 47
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 39
          },
          end: {
            line: 20,
            column: 40
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 34
          }
        },
        loc: {
          start: {
            line: 24,
            column: 53
          },
          end: {
            line: 56,
            column: 1
          }
        },
        line: 24
      },
      "4": {
        name: "TestResults",
        decl: {
          start: {
            line: 57,
            column: 9
          },
          end: {
            line: 57,
            column: 20
          }
        },
        loc: {
          start: {
            line: 57,
            column: 45
          },
          end: {
            line: 426,
            column: 1
          }
        },
        line: 57
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 59,
            column: 27
          },
          end: {
            line: 59,
            column: 28
          }
        },
        loc: {
          start: {
            line: 59,
            column: 37
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 59
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 60,
            column: 27
          },
          end: {
            line: 60,
            column: 28
          }
        },
        loc: {
          start: {
            line: 60,
            column: 35
          },
          end: {
            line: 68,
            column: 9
          }
        },
        line: 60
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 70,
            column: 27
          },
          end: {
            line: 70,
            column: 28
          }
        },
        loc: {
          start: {
            line: 70,
            column: 37
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 70
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 94,
            column: 30
          },
          end: {
            line: 94,
            column: 31
          }
        },
        loc: {
          start: {
            line: 94,
            column: 40
          },
          end: {
            line: 104,
            column: 5
          }
        },
        line: 94
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 105,
            column: 32
          },
          end: {
            line: 105,
            column: 33
          }
        },
        loc: {
          start: {
            line: 105,
            column: 38
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 105
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 259,
            column: 52
          },
          end: {
            line: 259,
            column: 53
          }
        },
        loc: {
          start: {
            line: 259,
            column: 76
          },
          end: {
            line: 421,
            column: 37
          }
        },
        line: 259
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 264,
            column: 45
          },
          end: {
            line: 264,
            column: 46
          }
        },
        loc: {
          start: {
            line: 264,
            column: 49
          },
          end: {
            line: 264,
            column: 74
          }
        },
        line: 264
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 320,
            column: 91
          },
          end: {
            line: 320,
            column: 92
          }
        },
        loc: {
          start: {
            line: 320,
            column: 125
          },
          end: {
            line: 356,
            column: 65
          }
        },
        line: 320
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 15
          },
          end: {
            line: 21,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 29
          },
          end: {
            line: 21,
            column: 45
          }
        }, {
          start: {
            line: 21,
            column: 48
          },
          end: {
            line: 21,
            column: 65
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 20
          }
        }, {
          start: {
            line: 25,
            column: 24
          },
          end: {
            line: 25,
            column: 27
          }
        }, {
          start: {
            line: 25,
            column: 31
          },
          end: {
            line: 25,
            column: 45
          }
        }],
        line: 25
      },
      "4": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "5": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 20
          }
        }, {
          start: {
            line: 28,
            column: 24
          },
          end: {
            line: 28,
            column: 47
          }
        }, {
          start: {
            line: 28,
            column: 51
          },
          end: {
            line: 28,
            column: 76
          }
        }],
        line: 28
      },
      "6": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "7": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 13
          }
        }, {
          start: {
            line: 34,
            column: 17
          },
          end: {
            line: 34,
            column: 31
          }
        }],
        line: 34
      },
      "8": {
        loc: {
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 40,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 40,
            column: 53
          }
        }, {
          start: {
            line: 40,
            column: 57
          },
          end: {
            line: 40,
            column: 88
          }
        }],
        line: 40
      },
      "9": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "10": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 42,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 42,
            column: 29
          }
        }, {
          start: {
            line: 42,
            column: 33
          },
          end: {
            line: 42,
            column: 79
          }
        }],
        line: 42
      },
      "11": {
        loc: {
          start: {
            line: 43,
            column: 23
          },
          end: {
            line: 43,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 47
          },
          end: {
            line: 43,
            column: 88
          }
        }, {
          start: {
            line: 43,
            column: 91
          },
          end: {
            line: 43,
            column: 95
          }
        }],
        line: 43
      },
      "12": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        }, {
          start: {
            line: 46,
            column: 19
          },
          end: {
            line: 48,
            column: 13
          }
        }],
        line: 44
      },
      "13": {
        loc: {
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 44,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 44,
            column: 20
          }
        }, {
          start: {
            line: 44,
            column: 25
          },
          end: {
            line: 44,
            column: 33
          }
        }, {
          start: {
            line: 44,
            column: 37
          },
          end: {
            line: 44,
            column: 45
          }
        }],
        line: 44
      },
      "14": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "15": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        }, {
          start: {
            line: 64,
            column: 19
          },
          end: {
            line: 66,
            column: 13
          }
        }],
        line: 62
      },
      "16": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 76,
            column: 19
          }
        }, {
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 81,
            column: 19
          }
        }, {
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 86,
            column: 19
          }
        }, {
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 91,
            column: 19
          }
        }],
        line: 71
      },
      "17": {
        loc: {
          start: {
            line: 95,
            column: 15
          },
          end: {
            line: 103,
            column: 10
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 95,
            column: 38
          },
          end: {
            line: 99,
            column: 10
          }
        }, {
          start: {
            line: 99,
            column: 27
          },
          end: {
            line: 103,
            column: 10
          }
        }],
        line: 95
      },
      "18": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 106,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 106,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "19": {
        loc: {
          start: {
            line: 130,
            column: 20
          },
          end: {
            line: 135,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 20
          },
          end: {
            line: 130,
            column: 27
          }
        }, {
          start: {
            line: 130,
            column: 45
          },
          end: {
            line: 135,
            column: 22
          }
        }],
        line: 130
      },
      "20": {
        loc: {
          start: {
            line: 236,
            column: 12
          },
          end: {
            line: 248,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 12
          },
          end: {
            line: 236,
            column: 35
          }
        }, {
          start: {
            line: 236,
            column: 53
          },
          end: {
            line: 248,
            column: 14
          }
        }],
        line: 236
      },
      "21": {
        loc: {
          start: {
            line: 256,
            column: 20
          },
          end: {
            line: 421,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 256,
            column: 72
          },
          end: {
            line: 259,
            column: 22
          }
        }, {
          start: {
            line: 259,
            column: 25
          },
          end: {
            line: 421,
            column: 38
          }
        }],
        line: 256
      },
      "22": {
        loc: {
          start: {
            line: 288,
            column: 66
          },
          end: {
            line: 288,
            column: 120
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 288,
            column: 99
          },
          end: {
            line: 288,
            column: 109
          }
        }, {
          start: {
            line: 288,
            column: 112
          },
          end: {
            line: 288,
            column: 120
          }
        }],
        line: 288
      },
      "23": {
        loc: {
          start: {
            line: 295,
            column: 32
          },
          end: {
            line: 419,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 295,
            column: 32
          },
          end: {
            line: 295,
            column: 62
          }
        }, {
          start: {
            line: 295,
            column: 80
          },
          end: {
            line: 419,
            column: 34
          }
        }],
        line: 295
      },
      "24": {
        loc: {
          start: {
            line: 298,
            column: 40
          },
          end: {
            line: 310,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 298,
            column: 40
          },
          end: {
            line: 298,
            column: 60
          }
        }, {
          start: {
            line: 298,
            column: 78
          },
          end: {
            line: 310,
            column: 42
          }
        }],
        line: 298
      },
      "25": {
        loc: {
          start: {
            line: 311,
            column: 40
          },
          end: {
            line: 359,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 311,
            column: 40
          },
          end: {
            line: 311,
            column: 75
          }
        }, {
          start: {
            line: 311,
            column: 93
          },
          end: {
            line: 359,
            column: 42
          }
        }],
        line: 311
      },
      "26": {
        loc: {
          start: {
            line: 349,
            column: 72
          },
          end: {
            line: 352,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 349,
            column: 72
          },
          end: {
            line: 349,
            column: 93
          }
        }, {
          start: {
            line: 349,
            column: 111
          },
          end: {
            line: 352,
            column: 74
          }
        }],
        line: 349
      },
      "27": {
        loc: {
          start: {
            line: 363,
            column: 48
          },
          end: {
            line: 377,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 363,
            column: 48
          },
          end: {
            line: 363,
            column: 70
          }
        }, {
          start: {
            line: 363,
            column: 88
          },
          end: {
            line: 377,
            column: 50
          }
        }],
        line: 363
      },
      "28": {
        loc: {
          start: {
            line: 385,
            column: 96
          },
          end: {
            line: 385,
            column: 184
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 385,
            column: 125
          },
          end: {
            line: 385,
            column: 155
          }
        }, {
          start: {
            line: 385,
            column: 158
          },
          end: {
            line: 385,
            column: 184
          }
        }],
        line: 385
      },
      "29": {
        loc: {
          start: {
            line: 387,
            column: 106
          },
          end: {
            line: 387,
            column: 168
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 387,
            column: 135
          },
          end: {
            line: 387,
            column: 151
          }
        }, {
          start: {
            line: 387,
            column: 154
          },
          end: {
            line: 387,
            column: 168
          }
        }],
        line: 387
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/workspaces/prompt-card-system/frontend/src/components/TestExecution/TestResults.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { useState } from 'react';\nimport { Badge } from '@/components/ui/Badge';\nimport { Button } from '@/components/ui/Button';\nimport { TestExecution, TestResult, AssertionResult } from '@/types';\n\ninterface TestResultsProps {\n  execution: TestExecution;\n  onClear?: () => void;\n}\n\nexport default function TestResults({ execution, onClear }: TestResultsProps) {\n  const [expandedResults, setExpandedResults] = useState<Set<number>>(new Set());\n\n  const toggleExpanded = (testId: number) => {\n    setExpandedResults(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(testId)) {\n        newSet.delete(testId);\n      } else {\n        newSet.add(testId);\n      }\n      return newSet;\n    });\n  };\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case 'passed':\n        return <Badge variant=\"success\">Passed</Badge>;\n      case 'failed':\n        return <Badge variant=\"danger\">Failed</Badge>;\n      case 'error':\n        return <Badge variant=\"warning\">Error</Badge>;\n      default:\n        return <Badge variant=\"default\">{status}</Badge>;\n    }\n  };\n\n  const getAssertionBadge = (passed: boolean) => {\n    return passed \n      ? <Badge variant=\"success\" size=\"sm\">\u2713</Badge>\n      : <Badge variant=\"danger\" size=\"sm\">\u2717</Badge>;\n  };\n\n  const formatExecutionTime = (ms: number) => {\n    if (ms < 1000) return `${ms}ms`;\n    return `${(ms / 1000).toFixed(2)}s`;\n  };\n\n  return (\n    <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-6\">\n        <div>\n          <h3 className=\"text-lg font-semibold text-gray-900\">Test Results</h3>\n          <p className=\"text-sm text-gray-500\">\n            Executed at {new Date(execution.created_at).toLocaleString()}\n          </p>\n        </div>\n        {onClear && (\n          <Button variant=\"outline\" size=\"sm\" onClick={onClear}>\n            Clear Results\n          </Button>\n        )}\n      </div>\n\n      {/* Summary */}\n      <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-4 mb-6 p-4 bg-gray-50 rounded-lg\">\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-gray-900\">{execution.total_tests}</div>\n          <div className=\"text-sm text-gray-500\">Total Tests</div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-green-600\">{execution.passed_tests}</div>\n          <div className=\"text-sm text-gray-500\">Passed</div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-red-600\">{execution.failed_tests}</div>\n          <div className=\"text-sm text-gray-500\">Failed</div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-gray-700\">{formatExecutionTime(execution.execution_time_ms)}</div>\n          <div className=\"text-sm text-gray-500\">Duration</div>\n        </div>\n      </div>\n\n      {/* Execution Info */}\n      <div className=\"flex flex-wrap items-center gap-4 mb-6 p-3 bg-blue-50 rounded-lg\">\n        <div className=\"flex items-center gap-2\">\n          <span className=\"text-sm font-medium text-gray-700\">Status:</span>\n          {getStatusBadge(execution.status)}\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <span className=\"text-sm font-medium text-gray-700\">Model:</span>\n          <Badge variant=\"outline\">{execution.model_used}</Badge>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <span className=\"text-sm font-medium text-gray-700\">Execution ID:</span>\n          <code className=\"text-xs bg-white px-2 py-1 rounded border\">{execution.id}</code>\n        </div>\n      </div>\n\n      {/* Error Message */}\n      {execution.error_message && (\n        <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg\">\n          <div className=\"text-sm font-medium text-red-800 mb-1\">Execution Error</div>\n          <div className=\"text-sm text-red-700\">{execution.error_message}</div>\n        </div>\n      )}\n\n      {/* Individual Test Results */}\n      <div className=\"space-y-4\">\n        <h4 className=\"text-md font-semibold text-gray-900\">Individual Results</h4>\n        \n        {execution.test_results.length === 0 ? (\n          <div className=\"text-center py-8 text-gray-500\">\n            No test results available\n          </div>\n        ) : (\n          execution.test_results.map((result) => (\n            <div key={result.id} className=\"border border-gray-200 rounded-lg overflow-hidden\">\n              {/* Test Header */}\n              <div \n                className=\"p-4 bg-gray-50 cursor-pointer hover:bg-gray-100 transition-colors\"\n                onClick={() => toggleExpanded(result.id)}\n              >\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-3\">\n                    {getStatusBadge(result.status)}\n                    <span className=\"font-medium text-gray-900\">{result.test_case_name}</span>\n                  </div>\n                  <div className=\"flex items-center gap-3\">\n                    <span className=\"text-sm text-gray-500\">\n                      {formatExecutionTime(result.execution_time_ms)}\n                    </span>\n                    <Button variant=\"outline\" size=\"sm\">\n                      {expandedResults.has(result.id) ? 'Collapse' : 'Expand'}\n                    </Button>\n                  </div>\n                </div>\n              </div>\n\n              {/* Expanded Content */}\n              {expandedResults.has(result.id) && (\n                <div className=\"p-4 border-t border-gray-200\">\n                  {/* Error Message */}\n                  {result.error_message && (\n                    <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-md\">\n                      <div className=\"text-sm font-medium text-red-800 mb-1\">Error</div>\n                      <div className=\"text-sm text-red-700\">{result.error_message}</div>\n                    </div>\n                  )}\n\n                  {/* Assertions */}\n                  {result.assertion_results.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm font-medium text-gray-700 mb-2\">Assertions</div>\n                      <div className=\"space-y-2\">\n                        {result.assertion_results.map((assertion, index) => (\n                          <div key={index} className=\"flex items-start gap-3 p-2 bg-gray-50 rounded\">\n                            {getAssertionBadge(assertion.passed)}\n                            <div className=\"flex-1 min-w-0\">\n                              <div className=\"text-sm\">\n                                <span className=\"font-medium\">{assertion.type}:</span> \n                                <span className=\"ml-1\">Expected \"{assertion.expected}\", got \"{assertion.actual}\"</span>\n                              </div>\n                              {assertion.description && (\n                                <div className=\"text-xs text-gray-500 mt-1\">{assertion.description}</div>\n                              )}\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Output Comparison */}\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n                    {/* Expected Output */}\n                    {result.expected_output && (\n                      <div>\n                        <div className=\"text-sm font-medium text-gray-700 mb-2\">Expected Output</div>\n                        <div className=\"p-3 bg-green-50 border border-green-200 rounded-md\">\n                          <pre className=\"text-sm text-green-800 whitespace-pre-wrap\">{result.expected_output}</pre>\n                        </div>\n                      </div>\n                    )}\n\n                    {/* Actual Output */}\n                    <div>\n                      <div className=\"text-sm font-medium text-gray-700 mb-2\">Actual Output</div>\n                      <div className={`p-3 border rounded-md ${\n                        result.status === 'passed' \n                          ? 'bg-green-50 border-green-200' \n                          : 'bg-red-50 border-red-200'\n                      }`}>\n                        <pre className={`text-sm whitespace-pre-wrap ${\n                          result.status === 'passed' ? 'text-green-800' : 'text-red-800'\n                        }`}>\n                          {result.actual_output}\n                        </pre>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Metadata */}\n                  <div className=\"mt-4 flex flex-wrap gap-4 text-xs text-gray-500\">\n                    <span>Test Case ID: {result.test_case_id}</span>\n                    <span>Model: {result.model_used}</span>\n                    <span>Execution Time: {formatExecutionTime(result.execution_time_ms)}</span>\n                  </div>\n                </div>\n              )}\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n}"],
      names: ["TestResults", "execution", "onClear", "expandedResults", "setExpandedResults", "useState", "Set", "toggleExpanded", "testId", "prev", "newSet", "has", "delete", "add", "getStatusBadge", "status", "Badge", "variant", "getAssertionBadge", "passed", "size", "formatExecutionTime", "ms", "toFixed", "div", "className", "h3", "p", "Date", "created_at", "toLocaleString", "Button", "onClick", "total_tests", "passed_tests", "failed_tests", "execution_time_ms", "span", "model_used", "code", "id", "error_message", "h4", "test_results", "length", "map", "result", "test_case_name", "assertion_results", "assertion", "index", "type", "expected", "actual", "description", "expected_output", "pre", "actual_output", "test_case_id"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "989858451fae3c966040f03630fbb1f0a56142a5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1j84hnw4v6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1j84hnw4v6();
cov_1j84hnw4v6().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1j84hnw4v6().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1j84hnw4v6().f[0]++;
    cov_1j84hnw4v6().s[2]++;
    return TestResults;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1j84hnw4v6().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1j84hnw4v6().s[4]++, _interop_require_wildcard(require("react")));
const _Badge =
/* istanbul ignore next */
(cov_1j84hnw4v6().s[5]++, require("../ui/Badge"));
const _Button =
/* istanbul ignore next */
(cov_1j84hnw4v6().s[6]++, require("../ui/Button"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1j84hnw4v6().f[1]++;
  cov_1j84hnw4v6().s[7]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1j84hnw4v6().b[0][0]++;
    cov_1j84hnw4v6().s[8]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1j84hnw4v6().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1j84hnw4v6().s[9]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1j84hnw4v6().s[10]++, new WeakMap());
  /* istanbul ignore next */
  cov_1j84hnw4v6().s[11]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1j84hnw4v6().f[2]++;
    cov_1j84hnw4v6().s[12]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1j84hnw4v6().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1j84hnw4v6().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1j84hnw4v6().f[3]++;
  cov_1j84hnw4v6().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_1j84hnw4v6().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1j84hnw4v6().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1j84hnw4v6().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1j84hnw4v6().b[2][0]++;
    cov_1j84hnw4v6().s[14]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1j84hnw4v6().b[2][1]++;
  }
  cov_1j84hnw4v6().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_1j84hnw4v6().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1j84hnw4v6().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1j84hnw4v6().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1j84hnw4v6().b[4][0]++;
    cov_1j84hnw4v6().s[16]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1j84hnw4v6().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1j84hnw4v6().s[17]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1j84hnw4v6().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_1j84hnw4v6().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1j84hnw4v6().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1j84hnw4v6().b[6][0]++;
    cov_1j84hnw4v6().s[19]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1j84hnw4v6().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1j84hnw4v6().s[20]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1j84hnw4v6().s[21]++,
  /* istanbul ignore next */
  (cov_1j84hnw4v6().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1j84hnw4v6().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1j84hnw4v6().s[22]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1j84hnw4v6().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_1j84hnw4v6().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1j84hnw4v6().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1j84hnw4v6().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1j84hnw4v6().s[24]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1j84hnw4v6().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1j84hnw4v6().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1j84hnw4v6().s[25]++;
      if (
      /* istanbul ignore next */
      (cov_1j84hnw4v6().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1j84hnw4v6().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1j84hnw4v6().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1j84hnw4v6().b[12][0]++;
        cov_1j84hnw4v6().s[26]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1j84hnw4v6().b[12][1]++;
        cov_1j84hnw4v6().s[27]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1j84hnw4v6().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1j84hnw4v6().s[28]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1j84hnw4v6().s[29]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1j84hnw4v6().b[14][0]++;
    cov_1j84hnw4v6().s[30]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1j84hnw4v6().b[14][1]++;
  }
  cov_1j84hnw4v6().s[31]++;
  return newObj;
}
function TestResults({
  execution,
  onClear
}) {
  /* istanbul ignore next */
  cov_1j84hnw4v6().f[4]++;
  const [expandedResults, setExpandedResults] =
  /* istanbul ignore next */
  (cov_1j84hnw4v6().s[32]++, (0, _react.useState)(new Set()));
  /* istanbul ignore next */
  cov_1j84hnw4v6().s[33]++;
  const toggleExpanded = testId => {
    /* istanbul ignore next */
    cov_1j84hnw4v6().f[5]++;
    cov_1j84hnw4v6().s[34]++;
    setExpandedResults(prev => {
      /* istanbul ignore next */
      cov_1j84hnw4v6().f[6]++;
      const newSet =
      /* istanbul ignore next */
      (cov_1j84hnw4v6().s[35]++, new Set(prev));
      /* istanbul ignore next */
      cov_1j84hnw4v6().s[36]++;
      if (newSet.has(testId)) {
        /* istanbul ignore next */
        cov_1j84hnw4v6().b[15][0]++;
        cov_1j84hnw4v6().s[37]++;
        newSet.delete(testId);
      } else {
        /* istanbul ignore next */
        cov_1j84hnw4v6().b[15][1]++;
        cov_1j84hnw4v6().s[38]++;
        newSet.add(testId);
      }
      /* istanbul ignore next */
      cov_1j84hnw4v6().s[39]++;
      return newSet;
    });
  };
  /* istanbul ignore next */
  cov_1j84hnw4v6().s[40]++;
  const getStatusBadge = status => {
    /* istanbul ignore next */
    cov_1j84hnw4v6().f[7]++;
    cov_1j84hnw4v6().s[41]++;
    switch (status) {
      case "passed":
        /* istanbul ignore next */
        cov_1j84hnw4v6().b[16][0]++;
        cov_1j84hnw4v6().s[42]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_Badge.Badge, {
          variant: "success",
          children: "Passed"
        });
      case "failed":
        /* istanbul ignore next */
        cov_1j84hnw4v6().b[16][1]++;
        cov_1j84hnw4v6().s[43]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_Badge.Badge, {
          variant: "danger",
          children: "Failed"
        });
      case "error":
        /* istanbul ignore next */
        cov_1j84hnw4v6().b[16][2]++;
        cov_1j84hnw4v6().s[44]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_Badge.Badge, {
          variant: "warning",
          children: "Error"
        });
      default:
        /* istanbul ignore next */
        cov_1j84hnw4v6().b[16][3]++;
        cov_1j84hnw4v6().s[45]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_Badge.Badge, {
          variant: "default",
          children: status
        });
    }
  };
  /* istanbul ignore next */
  cov_1j84hnw4v6().s[46]++;
  const getAssertionBadge = passed => {
    /* istanbul ignore next */
    cov_1j84hnw4v6().f[8]++;
    cov_1j84hnw4v6().s[47]++;
    return passed ?
    /* istanbul ignore next */
    (/*#__PURE__*/cov_1j84hnw4v6().b[17][0]++, (0, _jsxruntime.jsx)(_Badge.Badge, {
      variant: "success",
      size: "sm",
      children: "✓"
    })) :
    /* istanbul ignore next */
    (/*#__PURE__*/cov_1j84hnw4v6().b[17][1]++, (0, _jsxruntime.jsx)(_Badge.Badge, {
      variant: "danger",
      size: "sm",
      children: "✗"
    }));
  };
  /* istanbul ignore next */
  cov_1j84hnw4v6().s[48]++;
  const formatExecutionTime = ms => {
    /* istanbul ignore next */
    cov_1j84hnw4v6().f[9]++;
    cov_1j84hnw4v6().s[49]++;
    if (ms < 1000) {
      /* istanbul ignore next */
      cov_1j84hnw4v6().b[18][0]++;
      cov_1j84hnw4v6().s[50]++;
      return `${ms}ms`;
    } else
    /* istanbul ignore next */
    {
      cov_1j84hnw4v6().b[18][1]++;
    }
    cov_1j84hnw4v6().s[51]++;
    return `${(ms / 1000).toFixed(2)}s`;
  };
  /* istanbul ignore next */
  cov_1j84hnw4v6().s[52]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "bg-white border border-gray-200 rounded-lg p-6",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex items-center justify-between mb-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
          className: "text-lg font-semibold text-gray-900",
          children: "Test Results"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
          className: "text-sm text-gray-500",
          children: ["Executed at ", new Date(execution.created_at).toLocaleString()]
        })]
      }),
      /* istanbul ignore next */
      (cov_1j84hnw4v6().b[19][0]++, onClear) &&
      /* istanbul ignore next */
      (cov_1j84hnw4v6().b[19][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
        variant: "outline",
        size: "sm",
        onClick: onClear,
        children: "Clear Results"
      }))]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "grid grid-cols-2 lg:grid-cols-4 gap-4 mb-6 p-4 bg-gray-50 rounded-lg",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "text-center",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "text-2xl font-bold text-gray-900",
          children: execution.total_tests
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "text-sm text-gray-500",
          children: "Total Tests"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "text-center",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "text-2xl font-bold text-green-600",
          children: execution.passed_tests
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "text-sm text-gray-500",
          children: "Passed"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "text-center",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "text-2xl font-bold text-red-600",
          children: execution.failed_tests
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "text-sm text-gray-500",
          children: "Failed"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "text-center",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "text-2xl font-bold text-gray-700",
          children: formatExecutionTime(execution.execution_time_ms)
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "text-sm text-gray-500",
          children: "Duration"
        })]
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex flex-wrap items-center gap-4 mb-6 p-3 bg-blue-50 rounded-lg",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center gap-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
          className: "text-sm font-medium text-gray-700",
          children: "Status:"
        }), getStatusBadge(execution.status)]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center gap-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
          className: "text-sm font-medium text-gray-700",
          children: "Model:"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Badge.Badge, {
          variant: "outline",
          children: execution.model_used
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center gap-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
          className: "text-sm font-medium text-gray-700",
          children: "Execution ID:"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("code", {
          className: "text-xs bg-white px-2 py-1 rounded border",
          children: execution.id
        })]
      })]
    }),
    /* istanbul ignore next */
    (cov_1j84hnw4v6().b[20][0]++, execution.error_message) &&
    /* istanbul ignore next */
    (cov_1j84hnw4v6().b[20][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "mb-6 p-4 bg-red-50 border border-red-200 rounded-lg",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "text-sm font-medium text-red-800 mb-1",
        children: "Execution Error"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "text-sm text-red-700",
        children: execution.error_message
      })]
    })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "space-y-4",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
        className: "text-md font-semibold text-gray-900",
        children: "Individual Results"
      }), execution.test_results.length === 0 ?
      /* istanbul ignore next */
      (/*#__PURE__*/cov_1j84hnw4v6().b[21][0]++, (0, _jsxruntime.jsx)("div", {
        className: "text-center py-8 text-gray-500",
        children: "No test results available"
      })) :
      /* istanbul ignore next */
      (cov_1j84hnw4v6().b[21][1]++, execution.test_results.map(result => {
        /* istanbul ignore next */
        cov_1j84hnw4v6().f[10]++;
        cov_1j84hnw4v6().s[53]++;
        return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "border border-gray-200 rounded-lg overflow-hidden",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "p-4 bg-gray-50 cursor-pointer hover:bg-gray-100 transition-colors",
            onClick: () => {
              /* istanbul ignore next */
              cov_1j84hnw4v6().f[11]++;
              cov_1j84hnw4v6().s[54]++;
              return toggleExpanded(result.id);
            },
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center justify-between",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center gap-3",
                children: [getStatusBadge(result.status), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  className: "font-medium text-gray-900",
                  children: result.test_case_name
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center gap-3",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  className: "text-sm text-gray-500",
                  children: formatExecutionTime(result.execution_time_ms)
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
                  variant: "outline",
                  size: "sm",
                  children: expandedResults.has(result.id) ?
                  /* istanbul ignore next */
                  (cov_1j84hnw4v6().b[22][0]++, "Collapse") :
                  /* istanbul ignore next */
                  (cov_1j84hnw4v6().b[22][1]++, "Expand")
                })]
              })]
            })
          }),
          /* istanbul ignore next */
          (cov_1j84hnw4v6().b[23][0]++, expandedResults.has(result.id)) &&
          /* istanbul ignore next */
          (cov_1j84hnw4v6().b[23][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "p-4 border-t border-gray-200",
            children: [
            /* istanbul ignore next */
            (cov_1j84hnw4v6().b[24][0]++, result.error_message) &&
            /* istanbul ignore next */
            (cov_1j84hnw4v6().b[24][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "mb-4 p-3 bg-red-50 border border-red-200 rounded-md",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "text-sm font-medium text-red-800 mb-1",
                children: "Error"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "text-sm text-red-700",
                children: result.error_message
              })]
            })),
            /* istanbul ignore next */
            (cov_1j84hnw4v6().b[25][0]++, result.assertion_results.length > 0) &&
            /* istanbul ignore next */
            (cov_1j84hnw4v6().b[25][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "mb-4",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "text-sm font-medium text-gray-700 mb-2",
                children: "Assertions"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "space-y-2",
                children: result.assertion_results.map((assertion, index) => {
                  /* istanbul ignore next */
                  cov_1j84hnw4v6().f[12]++;
                  cov_1j84hnw4v6().s[55]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-start gap-3 p-2 bg-gray-50 rounded",
                    children: [getAssertionBadge(assertion.passed), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "flex-1 min-w-0",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "text-sm",
                        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                          className: "font-medium",
                          children: [assertion.type, ":"]
                        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                          className: "ml-1",
                          children: ['Expected "', assertion.expected, '", got "', assertion.actual, '"']
                        })]
                      }),
                      /* istanbul ignore next */
                      (cov_1j84hnw4v6().b[26][0]++, assertion.description) &&
                      /* istanbul ignore next */
                      (cov_1j84hnw4v6().b[26][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        className: "text-xs text-gray-500 mt-1",
                        children: assertion.description
                      }))]
                    })]
                  }, index);
                })
              })]
            })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "grid grid-cols-1 lg:grid-cols-2 gap-4",
              children: [
              /* istanbul ignore next */
              (cov_1j84hnw4v6().b[27][0]++, result.expected_output) &&
              /* istanbul ignore next */
              (cov_1j84hnw4v6().b[27][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "text-sm font-medium text-gray-700 mb-2",
                  children: "Expected Output"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "p-3 bg-green-50 border border-green-200 rounded-md",
                  children: /*#__PURE__*/(0, _jsxruntime.jsx)("pre", {
                    className: "text-sm text-green-800 whitespace-pre-wrap",
                    children: result.expected_output
                  })
                })]
              })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "text-sm font-medium text-gray-700 mb-2",
                  children: "Actual Output"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: `p-3 border rounded-md ${result.status === "passed" ?
                  /* istanbul ignore next */
                  (cov_1j84hnw4v6().b[28][0]++, "bg-green-50 border-green-200") :
                  /* istanbul ignore next */
                  (cov_1j84hnw4v6().b[28][1]++, "bg-red-50 border-red-200")}`,
                  children: /*#__PURE__*/(0, _jsxruntime.jsx)("pre", {
                    className: `text-sm whitespace-pre-wrap ${result.status === "passed" ?
                    /* istanbul ignore next */
                    (cov_1j84hnw4v6().b[29][0]++, "text-green-800") :
                    /* istanbul ignore next */
                    (cov_1j84hnw4v6().b[29][1]++, "text-red-800")}`,
                    children: result.actual_output
                  })
                })]
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "mt-4 flex flex-wrap gap-4 text-xs text-gray-500",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                children: ["Test Case ID: ", result.test_case_id]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                children: ["Model: ", result.model_used]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                children: ["Execution Time: ", formatExecutionTime(result.execution_time_ms)]
              })]
            })]
          }))]
        }, result.id);
      }))]
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,