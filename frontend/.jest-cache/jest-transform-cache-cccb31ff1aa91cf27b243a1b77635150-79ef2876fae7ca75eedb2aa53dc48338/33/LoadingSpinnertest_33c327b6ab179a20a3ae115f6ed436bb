c7c4103083cc7d578b5a521b33903f80
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("@testing-library/react");
const _LoadingSpinner = require("../../../components/ui/LoadingSpinner");
describe("LoadingSpinner", ()=>{
    it("renders with default props", ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_LoadingSpinner.LoadingSpinner, {}));
        const spinner = _react.screen.getByRole("generic");
        expect(spinner).toBeInTheDocument();
        expect(spinner).toHaveClass("animate-spin");
        expect(spinner).toHaveClass("h-8 w-8") // default medium size
        ;
        const srText = _react.screen.getByText("Loading...");
        expect(srText).toBeInTheDocument();
        expect(srText).toHaveClass("sr-only");
    });
    it("applies small size correctly", ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_LoadingSpinner.LoadingSpinner, {
            size: "sm"
        }));
        const spinner = _react.screen.getByRole("generic");
        expect(spinner).toHaveClass("h-4 w-4");
    });
    it("applies large size correctly", ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_LoadingSpinner.LoadingSpinner, {
            size: "lg"
        }));
        const spinner = _react.screen.getByRole("generic");
        expect(spinner).toHaveClass("h-12 w-12");
    });
    it("applies custom className", ()=>{
        const customClass = "custom-spinner-class";
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_LoadingSpinner.LoadingSpinner, {
            className: customClass
        }));
        const spinner = _react.screen.getByRole("generic");
        expect(spinner).toHaveClass(customClass);
    });
    it("maintains accessibility with screen reader text", ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_LoadingSpinner.LoadingSpinner, {}));
        const srText = _react.screen.getByText("Loading...");
        expect(srText).toHaveClass("sr-only");
    });
    it("has correct default styling classes", ()=>{
        (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_LoadingSpinner.LoadingSpinner, {}));
        const spinner = _react.screen.getByRole("generic");
        expect(spinner).toHaveClass("animate-spin");
        expect(spinner).toHaveClass("rounded-full");
        expect(spinner).toHaveClass("border-b-2");
        expect(spinner).toHaveClass("border-primary-600");
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL3Byb21wdC1jYXJkLXN5c3RlbS9mcm9udGVuZC9zcmMvX190ZXN0c19fL2NvbXBvbmVudHMvdWkvTG9hZGluZ1NwaW5uZXIudGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVuZGVyLCBzY3JlZW4gfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0J1xuaW1wb3J0IHsgTG9hZGluZ1NwaW5uZXIgfSBmcm9tICdAL2NvbXBvbmVudHMvdWkvTG9hZGluZ1NwaW5uZXInXG5cbmRlc2NyaWJlKCdMb2FkaW5nU3Bpbm5lcicsICgpID0+IHtcbiAgaXQoJ3JlbmRlcnMgd2l0aCBkZWZhdWx0IHByb3BzJywgKCkgPT4ge1xuICAgIHJlbmRlcig8TG9hZGluZ1NwaW5uZXIgLz4pXG4gICAgXG4gICAgY29uc3Qgc3Bpbm5lciA9IHNjcmVlbi5nZXRCeVJvbGUoJ2dlbmVyaWMnKVxuICAgIGV4cGVjdChzcGlubmVyKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNwaW5uZXIpLnRvSGF2ZUNsYXNzKCdhbmltYXRlLXNwaW4nKVxuICAgIGV4cGVjdChzcGlubmVyKS50b0hhdmVDbGFzcygnaC04IHctOCcpIC8vIGRlZmF1bHQgbWVkaXVtIHNpemVcbiAgICBcbiAgICBjb25zdCBzclRleHQgPSBzY3JlZW4uZ2V0QnlUZXh0KCdMb2FkaW5nLi4uJylcbiAgICBleHBlY3Qoc3JUZXh0KS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNyVGV4dCkudG9IYXZlQ2xhc3MoJ3NyLW9ubHknKVxuICB9KVxuXG4gIGl0KCdhcHBsaWVzIHNtYWxsIHNpemUgY29ycmVjdGx5JywgKCkgPT4ge1xuICAgIHJlbmRlcig8TG9hZGluZ1NwaW5uZXIgc2l6ZT1cInNtXCIgLz4pXG4gICAgXG4gICAgY29uc3Qgc3Bpbm5lciA9IHNjcmVlbi5nZXRCeVJvbGUoJ2dlbmVyaWMnKVxuICAgIGV4cGVjdChzcGlubmVyKS50b0hhdmVDbGFzcygnaC00IHctNCcpXG4gIH0pXG5cbiAgaXQoJ2FwcGxpZXMgbGFyZ2Ugc2l6ZSBjb3JyZWN0bHknLCAoKSA9PiB7XG4gICAgcmVuZGVyKDxMb2FkaW5nU3Bpbm5lciBzaXplPVwibGdcIiAvPilcbiAgICBcbiAgICBjb25zdCBzcGlubmVyID0gc2NyZWVuLmdldEJ5Um9sZSgnZ2VuZXJpYycpXG4gICAgZXhwZWN0KHNwaW5uZXIpLnRvSGF2ZUNsYXNzKCdoLTEyIHctMTInKVxuICB9KVxuXG4gIGl0KCdhcHBsaWVzIGN1c3RvbSBjbGFzc05hbWUnLCAoKSA9PiB7XG4gICAgY29uc3QgY3VzdG9tQ2xhc3MgPSAnY3VzdG9tLXNwaW5uZXItY2xhc3MnXG4gICAgcmVuZGVyKDxMb2FkaW5nU3Bpbm5lciBjbGFzc05hbWU9e2N1c3RvbUNsYXNzfSAvPilcbiAgICBcbiAgICBjb25zdCBzcGlubmVyID0gc2NyZWVuLmdldEJ5Um9sZSgnZ2VuZXJpYycpXG4gICAgZXhwZWN0KHNwaW5uZXIpLnRvSGF2ZUNsYXNzKGN1c3RvbUNsYXNzKVxuICB9KVxuXG4gIGl0KCdtYWludGFpbnMgYWNjZXNzaWJpbGl0eSB3aXRoIHNjcmVlbiByZWFkZXIgdGV4dCcsICgpID0+IHtcbiAgICByZW5kZXIoPExvYWRpbmdTcGlubmVyIC8+KVxuICAgIFxuICAgIGNvbnN0IHNyVGV4dCA9IHNjcmVlbi5nZXRCeVRleHQoJ0xvYWRpbmcuLi4nKVxuICAgIGV4cGVjdChzclRleHQpLnRvSGF2ZUNsYXNzKCdzci1vbmx5JylcbiAgfSlcblxuICBpdCgnaGFzIGNvcnJlY3QgZGVmYXVsdCBzdHlsaW5nIGNsYXNzZXMnLCAoKSA9PiB7XG4gICAgcmVuZGVyKDxMb2FkaW5nU3Bpbm5lciAvPilcbiAgICBcbiAgICBjb25zdCBzcGlubmVyID0gc2NyZWVuLmdldEJ5Um9sZSgnZ2VuZXJpYycpXG4gICAgZXhwZWN0KHNwaW5uZXIpLnRvSGF2ZUNsYXNzKCdhbmltYXRlLXNwaW4nKVxuICAgIGV4cGVjdChzcGlubmVyKS50b0hhdmVDbGFzcygncm91bmRlZC1mdWxsJylcbiAgICBleHBlY3Qoc3Bpbm5lcikudG9IYXZlQ2xhc3MoJ2JvcmRlci1iLTInKVxuICAgIGV4cGVjdChzcGlubmVyKS50b0hhdmVDbGFzcygnYm9yZGVyLXByaW1hcnktNjAwJylcbiAgfSlcbn0pIl0sIm5hbWVzIjpbImRlc2NyaWJlIiwiaXQiLCJyZW5kZXIiLCJMb2FkaW5nU3Bpbm5lciIsInNwaW5uZXIiLCJzY3JlZW4iLCJnZXRCeVJvbGUiLCJleHBlY3QiLCJ0b0JlSW5UaGVEb2N1bWVudCIsInRvSGF2ZUNsYXNzIiwic3JUZXh0IiwiZ2V0QnlUZXh0Iiwic2l6ZSIsImN1c3RvbUNsYXNzIiwiY2xhc3NOYW1lIl0sIm1hcHBpbmdzIjoiOzs7Ozt1QkFBK0I7Z0NBQ0E7QUFFL0JBLFNBQVMsa0JBQWtCO0lBQ3pCQyxHQUFHLDhCQUE4QjtRQUMvQkMsSUFBQUEsYUFBTSxnQkFBQyxxQkFBQ0MsOEJBQWM7UUFFdEIsTUFBTUMsVUFBVUMsYUFBTSxDQUFDQyxTQUFTLENBQUM7UUFDakNDLE9BQU9ILFNBQVNJLGlCQUFpQjtRQUNqQ0QsT0FBT0gsU0FBU0ssV0FBVyxDQUFDO1FBQzVCRixPQUFPSCxTQUFTSyxXQUFXLENBQUMsV0FBVyxzQkFBc0I7O1FBRTdELE1BQU1DLFNBQVNMLGFBQU0sQ0FBQ00sU0FBUyxDQUFDO1FBQ2hDSixPQUFPRyxRQUFRRixpQkFBaUI7UUFDaENELE9BQU9HLFFBQVFELFdBQVcsQ0FBQztJQUM3QjtJQUVBUixHQUFHLGdDQUFnQztRQUNqQ0MsSUFBQUEsYUFBTSxnQkFBQyxxQkFBQ0MsOEJBQWM7WUFBQ1MsTUFBSzs7UUFFNUIsTUFBTVIsVUFBVUMsYUFBTSxDQUFDQyxTQUFTLENBQUM7UUFDakNDLE9BQU9ILFNBQVNLLFdBQVcsQ0FBQztJQUM5QjtJQUVBUixHQUFHLGdDQUFnQztRQUNqQ0MsSUFBQUEsYUFBTSxnQkFBQyxxQkFBQ0MsOEJBQWM7WUFBQ1MsTUFBSzs7UUFFNUIsTUFBTVIsVUFBVUMsYUFBTSxDQUFDQyxTQUFTLENBQUM7UUFDakNDLE9BQU9ILFNBQVNLLFdBQVcsQ0FBQztJQUM5QjtJQUVBUixHQUFHLDRCQUE0QjtRQUM3QixNQUFNWSxjQUFjO1FBQ3BCWCxJQUFBQSxhQUFNLGdCQUFDLHFCQUFDQyw4QkFBYztZQUFDVyxXQUFXRDs7UUFFbEMsTUFBTVQsVUFBVUMsYUFBTSxDQUFDQyxTQUFTLENBQUM7UUFDakNDLE9BQU9ILFNBQVNLLFdBQVcsQ0FBQ0k7SUFDOUI7SUFFQVosR0FBRyxtREFBbUQ7UUFDcERDLElBQUFBLGFBQU0sZ0JBQUMscUJBQUNDLDhCQUFjO1FBRXRCLE1BQU1PLFNBQVNMLGFBQU0sQ0FBQ00sU0FBUyxDQUFDO1FBQ2hDSixPQUFPRyxRQUFRRCxXQUFXLENBQUM7SUFDN0I7SUFFQVIsR0FBRyx1Q0FBdUM7UUFDeENDLElBQUFBLGFBQU0sZ0JBQUMscUJBQUNDLDhCQUFjO1FBRXRCLE1BQU1DLFVBQVVDLGFBQU0sQ0FBQ0MsU0FBUyxDQUFDO1FBQ2pDQyxPQUFPSCxTQUFTSyxXQUFXLENBQUM7UUFDNUJGLE9BQU9ILFNBQVNLLFdBQVcsQ0FBQztRQUM1QkYsT0FBT0gsU0FBU0ssV0FBVyxDQUFDO1FBQzVCRixPQUFPSCxTQUFTSyxXQUFXLENBQUM7SUFDOUI7QUFDRiJ9