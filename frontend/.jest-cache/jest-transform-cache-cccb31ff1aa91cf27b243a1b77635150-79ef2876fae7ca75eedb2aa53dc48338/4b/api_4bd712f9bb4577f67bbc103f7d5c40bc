0cf012ada52851c0356cf732ac6ef885
// API configuration and utilities
"use strict";

/* istanbul ignore next */
function cov_c5hu19e3y() {
  var path = "/workspaces/prompt-card-system/frontend/src/lib/api.ts";
  var hash = "92769ab2aa4ba2d4f6910972b36538b0542ec6b0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/prompt-card-system/frontend/src/lib/api.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 24
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 19
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 26
        }
      },
      "7": {
        start: {
          line: 23,
          column: 21
        },
        end: {
          line: 23,
          column: 83
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 23
        }
      },
      "9": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 29
        }
      },
      "10": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 31
        }
      },
      "11": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 44
        }
      },
      "12": {
        start: {
          line: 33,
          column: 19
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "13": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "14": {
        start: {
          line: 41,
          column: 25
        },
        end: {
          line: 41,
          column: 49
        }
      },
      "15": {
        start: {
          line: 42,
          column: 21
        },
        end: {
          line: 42,
          column: 42
        }
      },
      "16": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "17": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 80
        }
      },
      "18": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "19": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 64
        }
      },
      "20": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 25
        }
      },
      "21": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "22": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 24
        }
      },
      "23": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 59
        }
      },
      "24": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 243,
          column: 1
        }
      },
      "25": {
        start: {
          line: 60,
          column: 29
        },
        end: {
          line: 60,
          column: 50
        }
      },
      "26": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 75
        }
      },
      "27": {
        start: {
          line: 61,
          column: 26
        },
        end: {
          line: 61,
          column: 75
        }
      },
      "28": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 78
        }
      },
      "29": {
        start: {
          line: 62,
          column: 27
        },
        end: {
          line: 62,
          column: 78
        }
      },
      "30": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 70
        }
      },
      "31": {
        start: {
          line: 63,
          column: 28
        },
        end: {
          line: 63,
          column: 70
        }
      },
      "32": {
        start: {
          line: 64,
          column: 22
        },
        end: {
          line: 64,
          column: 45
        }
      },
      "33": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 70
        }
      },
      "34": {
        start: {
          line: 67,
          column: 25
        },
        end: {
          line: 67,
          column: 58
        }
      },
      "35": {
        start: {
          line: 68,
          column: 30
        },
        end: {
          line: 71,
          column: 10
        }
      },
      "36": {
        start: {
          line: 72,
          column: 34
        },
        end: {
          line: 75,
          column: 10
        }
      },
      "37": {
        start: {
          line: 76,
          column: 28
        },
        end: {
          line: 78,
          column: 10
        }
      },
      "38": {
        start: {
          line: 80,
          column: 34
        },
        end: {
          line: 80,
          column: 99
        }
      },
      "39": {
        start: {
          line: 81,
          column: 28
        },
        end: {
          line: 84,
          column: 10
        }
      },
      "40": {
        start: {
          line: 85,
          column: 32
        },
        end: {
          line: 88,
          column: 10
        }
      },
      "41": {
        start: {
          line: 89,
          column: 26
        },
        end: {
          line: 91,
          column: 10
        }
      },
      "42": {
        start: {
          line: 93,
          column: 31
        },
        end: {
          line: 98,
          column: 10
        }
      },
      "43": {
        start: {
          line: 99,
          column: 33
        },
        end: {
          line: 104,
          column: 10
        }
      },
      "44": {
        start: {
          line: 106,
          column: 25
        },
        end: {
          line: 106,
          column: 67
        }
      },
      "45": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 51
        }
      },
      "46": {
        start: {
          line: 110,
          column: 19
        },
        end: {
          line: 110,
          column: 40
        }
      },
      "47": {
        start: {
          line: 112,
          column: 22
        },
        end: {
          line: 115,
          column: 10
        }
      },
      "48": {
        start: {
          line: 116,
          column: 37
        },
        end: {
          line: 116,
          column: 81
        }
      },
      "49": {
        start: {
          line: 117,
          column: 44
        },
        end: {
          line: 117,
          column: 96
        }
      },
      "50": {
        start: {
          line: 118,
          column: 39
        },
        end: {
          line: 121,
          column: 10
        }
      },
      "51": {
        start: {
          line: 123,
          column: 29
        },
        end: {
          line: 123,
          column: 63
        }
      },
      "52": {
        start: {
          line: 124,
          column: 28
        },
        end: {
          line: 124,
          column: 61
        }
      },
      "53": {
        start: {
          line: 125,
          column: 30
        },
        end: {
          line: 125,
          column: 65
        }
      },
      "54": {
        start: {
          line: 127,
          column: 23
        },
        end: {
          line: 127,
          column: 44
        }
      },
      "55": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 49
        }
      },
      "56": {
        start: {
          line: 128,
          column: 20
        },
        end: {
          line: 128,
          column: 49
        }
      },
      "57": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 57
        }
      },
      "58": {
        start: {
          line: 129,
          column: 19
        },
        end: {
          line: 129,
          column: 57
        }
      },
      "59": {
        start: {
          line: 130,
          column: 22
        },
        end: {
          line: 130,
          column: 39
        }
      },
      "60": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 74
        }
      },
      "61": {
        start: {
          line: 133,
          column: 21
        },
        end: {
          line: 133,
          column: 54
        }
      },
      "62": {
        start: {
          line: 134,
          column: 33
        },
        end: {
          line: 137,
          column: 10
        }
      },
      "63": {
        start: {
          line: 138,
          column: 34
        },
        end: {
          line: 141,
          column: 10
        }
      },
      "64": {
        start: {
          line: 142,
          column: 38
        },
        end: {
          line: 148,
          column: 10
        }
      },
      "65": {
        start: {
          line: 149,
          column: 36
        },
        end: {
          line: 154,
          column: 10
        }
      },
      "66": {
        start: {
          line: 156,
          column: 25
        },
        end: {
          line: 156,
          column: 64
        }
      },
      "67": {
        start: {
          line: 158,
          column: 29
        },
        end: {
          line: 158,
          column: 50
        }
      },
      "68": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 70
        }
      },
      "69": {
        start: {
          line: 159,
          column: 28
        },
        end: {
          line: 159,
          column: 70
        }
      },
      "70": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 76
        }
      },
      "71": {
        start: {
          line: 160,
          column: 30
        },
        end: {
          line: 160,
          column: 76
        }
      },
      "72": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 76
        }
      },
      "73": {
        start: {
          line: 161,
          column: 30
        },
        end: {
          line: 161,
          column: 76
        }
      },
      "74": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 78
        }
      },
      "75": {
        start: {
          line: 162,
          column: 27
        },
        end: {
          line: 162,
          column: 78
        }
      },
      "76": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 81
        }
      },
      "77": {
        start: {
          line: 163,
          column: 28
        },
        end: {
          line: 163,
          column: 81
        }
      },
      "78": {
        start: {
          line: 164,
          column: 22
        },
        end: {
          line: 164,
          column: 45
        }
      },
      "79": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 75
        }
      },
      "80": {
        start: {
          line: 167,
          column: 42
        },
        end: {
          line: 172,
          column: 10
        }
      },
      "81": {
        start: {
          line: 173,
          column: 49
        },
        end: {
          line: 178,
          column: 10
        }
      },
      "82": {
        start: {
          line: 179,
          column: 29
        },
        end: {
          line: 181,
          column: 10
        }
      },
      "83": {
        start: {
          line: 183,
          column: 29
        },
        end: {
          line: 183,
          column: 50
        }
      },
      "84": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 79
        }
      },
      "85": {
        start: {
          line: 184,
          column: 31
        },
        end: {
          line: 184,
          column: 79
        }
      },
      "86": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 73
        }
      },
      "87": {
        start: {
          line: 185,
          column: 29
        },
        end: {
          line: 185,
          column: 73
        }
      },
      "88": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 79
        }
      },
      "89": {
        start: {
          line: 186,
          column: 31
        },
        end: {
          line: 186,
          column: 79
        }
      },
      "90": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 96
        }
      },
      "91": {
        start: {
          line: 187,
          column: 33
        },
        end: {
          line: 187,
          column: 96
        }
      },
      "92": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 96
        }
      },
      "93": {
        start: {
          line: 188,
          column: 33
        },
        end: {
          line: 188,
          column: 96
        }
      },
      "94": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 70
        }
      },
      "95": {
        start: {
          line: 189,
          column: 28
        },
        end: {
          line: 189,
          column: 70
        }
      },
      "96": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 78
        }
      },
      "97": {
        start: {
          line: 190,
          column: 27
        },
        end: {
          line: 190,
          column: 78
        }
      },
      "98": {
        start: {
          line: 191,
          column: 22
        },
        end: {
          line: 191,
          column: 45
        }
      },
      "99": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 75
        }
      },
      "100": {
        start: {
          line: 194,
          column: 25
        },
        end: {
          line: 194,
          column: 68
        }
      },
      "101": {
        start: {
          line: 196,
          column: 29
        },
        end: {
          line: 196,
          column: 50
        }
      },
      "102": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 79
        }
      },
      "103": {
        start: {
          line: 197,
          column: 31
        },
        end: {
          line: 197,
          column: 79
        }
      },
      "104": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 198,
          column: 76
        }
      },
      "105": {
        start: {
          line: 198,
          column: 30
        },
        end: {
          line: 198,
          column: 76
        }
      },
      "106": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 199,
          column: 70
        }
      },
      "107": {
        start: {
          line: 199,
          column: 28
        },
        end: {
          line: 199,
          column: 70
        }
      },
      "108": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 200,
          column: 73
        }
      },
      "109": {
        start: {
          line: 200,
          column: 29
        },
        end: {
          line: 200,
          column: 73
        }
      },
      "110": {
        start: {
          line: 201,
          column: 22
        },
        end: {
          line: 201,
          column: 45
        }
      },
      "111": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 202,
          column: 80
        }
      },
      "112": {
        start: {
          line: 204,
          column: 26
        },
        end: {
          line: 204,
          column: 66
        }
      },
      "113": {
        start: {
          line: 205,
          column: 32
        },
        end: {
          line: 208,
          column: 10
        }
      },
      "114": {
        start: {
          line: 209,
          column: 42
        },
        end: {
          line: 212,
          column: 10
        }
      },
      "115": {
        start: {
          line: 213,
          column: 36
        },
        end: {
          line: 215,
          column: 10
        }
      },
      "116": {
        start: {
          line: 216,
          column: 37
        },
        end: {
          line: 218,
          column: 10
        }
      },
      "117": {
        start: {
          line: 220,
          column: 17
        },
        end: {
          line: 220,
          column: 47
        }
      },
      "118": {
        start: {
          line: 221,
          column: 23
        },
        end: {
          line: 224,
          column: 10
        }
      },
      "119": {
        start: {
          line: 225,
          column: 30
        },
        end: {
          line: 228,
          column: 10
        }
      },
      "120": {
        start: {
          line: 229,
          column: 24
        },
        end: {
          line: 231,
          column: 10
        }
      },
      "121": {
        start: {
          line: 233,
          column: 28
        },
        end: {
          line: 233,
          column: 70
        }
      },
      "122": {
        start: {
          line: 234,
          column: 35
        },
        end: {
          line: 237,
          column: 10
        }
      },
      "123": {
        start: {
          line: 238,
          column: 31
        },
        end: {
          line: 238,
          column: 83
        }
      },
      "124": {
        start: {
          line: 239,
          column: 37
        },
        end: {
          line: 242,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 14
          },
          end: {
            line: 13,
            column: 15
          }
        },
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 10
          }
        },
        loc: {
          start: {
            line: 16,
            column: 20
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 19,
            column: 17
          }
        },
        loc: {
          start: {
            line: 19,
            column: 27
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 32
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 25
      },
      "5": {
        name: "apiRequest",
        decl: {
          start: {
            line: 31,
            column: 15
          },
          end: {
            line: 31,
            column: 25
          }
        },
        loc: {
          start: {
            line: 31,
            column: 50
          },
          end: {
            line: 56,
            column: 1
          }
        },
        line: 31
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 59,
            column: 20
          },
          end: {
            line: 59,
            column: 21
          }
        },
        loc: {
          start: {
            line: 59,
            column: 30
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 59
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 67,
            column: 19
          },
          end: {
            line: 67,
            column: 20
          }
        },
        loc: {
          start: {
            line: 67,
            column: 25
          },
          end: {
            line: 67,
            column: 58
          }
        },
        line: 67
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 68,
            column: 22
          },
          end: {
            line: 68,
            column: 23
          }
        },
        loc: {
          start: {
            line: 68,
            column: 30
          },
          end: {
            line: 71,
            column: 10
          }
        },
        line: 68
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 72,
            column: 22
          },
          end: {
            line: 72,
            column: 23
          }
        },
        loc: {
          start: {
            line: 72,
            column: 34
          },
          end: {
            line: 75,
            column: 10
          }
        },
        line: 72
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 76,
            column: 22
          },
          end: {
            line: 76,
            column: 23
          }
        },
        loc: {
          start: {
            line: 76,
            column: 28
          },
          end: {
            line: 78,
            column: 10
          }
        },
        line: 76
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 80,
            column: 18
          },
          end: {
            line: 80,
            column: 19
          }
        },
        loc: {
          start: {
            line: 80,
            column: 34
          },
          end: {
            line: 80,
            column: 99
          }
        },
        line: 80
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 81,
            column: 20
          },
          end: {
            line: 81,
            column: 21
          }
        },
        loc: {
          start: {
            line: 81,
            column: 28
          },
          end: {
            line: 84,
            column: 10
          }
        },
        line: 81
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 85,
            column: 20
          },
          end: {
            line: 85,
            column: 21
          }
        },
        loc: {
          start: {
            line: 85,
            column: 32
          },
          end: {
            line: 88,
            column: 10
          }
        },
        line: 85
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 89,
            column: 20
          },
          end: {
            line: 89,
            column: 21
          }
        },
        loc: {
          start: {
            line: 89,
            column: 26
          },
          end: {
            line: 91,
            column: 10
          }
        },
        line: 89
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 93,
            column: 16
          },
          end: {
            line: 93,
            column: 17
          }
        },
        loc: {
          start: {
            line: 93,
            column: 31
          },
          end: {
            line: 98,
            column: 10
          }
        },
        line: 93
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 99,
            column: 18
          },
          end: {
            line: 99,
            column: 19
          }
        },
        loc: {
          start: {
            line: 99,
            column: 33
          },
          end: {
            line: 104,
            column: 10
          }
        },
        line: 99
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 105,
            column: 16
          },
          end: {
            line: 105,
            column: 17
          }
        },
        loc: {
          start: {
            line: 105,
            column: 22
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 105
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 110,
            column: 15
          },
          end: {
            line: 110,
            column: 16
          }
        },
        loc: {
          start: {
            line: 110,
            column: 19
          },
          end: {
            line: 110,
            column: 40
          }
        },
        line: 110
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 112,
            column: 14
          },
          end: {
            line: 112,
            column: 15
          }
        },
        loc: {
          start: {
            line: 112,
            column: 22
          },
          end: {
            line: 115,
            column: 10
          }
        },
        line: 112
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 116,
            column: 22
          },
          end: {
            line: 116,
            column: 23
          }
        },
        loc: {
          start: {
            line: 116,
            column: 37
          },
          end: {
            line: 116,
            column: 81
          }
        },
        line: 116
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 117,
            column: 29
          },
          end: {
            line: 117,
            column: 30
          }
        },
        loc: {
          start: {
            line: 117,
            column: 44
          },
          end: {
            line: 117,
            column: 96
          }
        },
        line: 117
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 118,
            column: 19
          },
          end: {
            line: 118,
            column: 20
          }
        },
        loc: {
          start: {
            line: 118,
            column: 39
          },
          end: {
            line: 121,
            column: 10
          }
        },
        line: 118
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 123,
            column: 25
          },
          end: {
            line: 123,
            column: 26
          }
        },
        loc: {
          start: {
            line: 123,
            column: 29
          },
          end: {
            line: 123,
            column: 63
          }
        },
        line: 123
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 124,
            column: 24
          },
          end: {
            line: 124,
            column: 25
          }
        },
        loc: {
          start: {
            line: 124,
            column: 28
          },
          end: {
            line: 124,
            column: 61
          }
        },
        line: 124
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 125,
            column: 26
          },
          end: {
            line: 125,
            column: 27
          }
        },
        loc: {
          start: {
            line: 125,
            column: 30
          },
          end: {
            line: 125,
            column: 65
          }
        },
        line: 125
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 126,
            column: 15
          },
          end: {
            line: 126,
            column: 16
          }
        },
        loc: {
          start: {
            line: 126,
            column: 32
          },
          end: {
            line: 132,
            column: 5
          }
        },
        line: 126
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 133,
            column: 17
          },
          end: {
            line: 133,
            column: 18
          }
        },
        loc: {
          start: {
            line: 133,
            column: 21
          },
          end: {
            line: 133,
            column: 54
          }
        },
        line: 133
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 134,
            column: 25
          },
          end: {
            line: 134,
            column: 26
          }
        },
        loc: {
          start: {
            line: 134,
            column: 33
          },
          end: {
            line: 137,
            column: 10
          }
        },
        line: 134
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 138,
            column: 26
          },
          end: {
            line: 138,
            column: 27
          }
        },
        loc: {
          start: {
            line: 138,
            column: 34
          },
          end: {
            line: 141,
            column: 10
          }
        },
        line: 138
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 142,
            column: 22
          },
          end: {
            line: 142,
            column: 23
          }
        },
        loc: {
          start: {
            line: 142,
            column: 38
          },
          end: {
            line: 148,
            column: 10
          }
        },
        line: 142
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 149,
            column: 25
          },
          end: {
            line: 149,
            column: 26
          }
        },
        loc: {
          start: {
            line: 149,
            column: 36
          },
          end: {
            line: 154,
            column: 10
          }
        },
        line: 149
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 156,
            column: 21
          },
          end: {
            line: 156,
            column: 22
          }
        },
        loc: {
          start: {
            line: 156,
            column: 25
          },
          end: {
            line: 156,
            column: 64
          }
        },
        line: 156
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 157,
            column: 15
          },
          end: {
            line: 157,
            column: 16
          }
        },
        loc: {
          start: {
            line: 157,
            column: 25
          },
          end: {
            line: 166,
            column: 5
          }
        },
        line: 157
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 167,
            column: 23
          },
          end: {
            line: 167,
            column: 24
          }
        },
        loc: {
          start: {
            line: 167,
            column: 42
          },
          end: {
            line: 172,
            column: 10
          }
        },
        line: 167
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 173,
            column: 22
          },
          end: {
            line: 173,
            column: 23
          }
        },
        loc: {
          start: {
            line: 173,
            column: 49
          },
          end: {
            line: 178,
            column: 10
          }
        },
        line: 173
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 179,
            column: 18
          },
          end: {
            line: 179,
            column: 19
          }
        },
        loc: {
          start: {
            line: 179,
            column: 29
          },
          end: {
            line: 181,
            column: 10
          }
        },
        line: 179
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 182,
            column: 26
          },
          end: {
            line: 182,
            column: 27
          }
        },
        loc: {
          start: {
            line: 182,
            column: 36
          },
          end: {
            line: 193,
            column: 5
          }
        },
        line: 182
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 194,
            column: 14
          },
          end: {
            line: 194,
            column: 15
          }
        },
        loc: {
          start: {
            line: 194,
            column: 25
          },
          end: {
            line: 194,
            column: 68
          }
        },
        line: 194
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 195,
            column: 24
          },
          end: {
            line: 195,
            column: 25
          }
        },
        loc: {
          start: {
            line: 195,
            column: 34
          },
          end: {
            line: 203,
            column: 5
          }
        },
        line: 195
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 204,
            column: 22
          },
          end: {
            line: 204,
            column: 23
          }
        },
        loc: {
          start: {
            line: 204,
            column: 26
          },
          end: {
            line: 204,
            column: 66
          }
        },
        line: 204
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 205,
            column: 24
          },
          end: {
            line: 205,
            column: 25
          }
        },
        loc: {
          start: {
            line: 205,
            column: 32
          },
          end: {
            line: 208,
            column: 10
          }
        },
        line: 205
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 209,
            column: 24
          },
          end: {
            line: 209,
            column: 25
          }
        },
        loc: {
          start: {
            line: 209,
            column: 42
          },
          end: {
            line: 212,
            column: 10
          }
        },
        line: 209
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 213,
            column: 24
          },
          end: {
            line: 213,
            column: 25
          }
        },
        loc: {
          start: {
            line: 213,
            column: 36
          },
          end: {
            line: 215,
            column: 10
          }
        },
        line: 213
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 216,
            column: 25
          },
          end: {
            line: 216,
            column: 26
          }
        },
        loc: {
          start: {
            line: 216,
            column: 37
          },
          end: {
            line: 218,
            column: 10
          }
        },
        line: 216
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 220,
            column: 13
          },
          end: {
            line: 220,
            column: 14
          }
        },
        loc: {
          start: {
            line: 220,
            column: 17
          },
          end: {
            line: 220,
            column: 47
          }
        },
        line: 220
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 221,
            column: 15
          },
          end: {
            line: 221,
            column: 16
          }
        },
        loc: {
          start: {
            line: 221,
            column: 23
          },
          end: {
            line: 224,
            column: 10
          }
        },
        line: 221
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 225,
            column: 15
          },
          end: {
            line: 225,
            column: 16
          }
        },
        loc: {
          start: {
            line: 225,
            column: 30
          },
          end: {
            line: 228,
            column: 10
          }
        },
        line: 225
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 229,
            column: 15
          },
          end: {
            line: 229,
            column: 16
          }
        },
        loc: {
          start: {
            line: 229,
            column: 24
          },
          end: {
            line: 231,
            column: 10
          }
        },
        line: 229
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 233,
            column: 24
          },
          end: {
            line: 233,
            column: 25
          }
        },
        loc: {
          start: {
            line: 233,
            column: 28
          },
          end: {
            line: 233,
            column: 70
          }
        },
        line: 233
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 234,
            column: 25
          },
          end: {
            line: 234,
            column: 26
          }
        },
        loc: {
          start: {
            line: 234,
            column: 35
          },
          end: {
            line: 237,
            column: 10
          }
        },
        line: 234
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 238,
            column: 27
          },
          end: {
            line: 238,
            column: 28
          }
        },
        loc: {
          start: {
            line: 238,
            column: 31
          },
          end: {
            line: 238,
            column: 83
          }
        },
        line: 238
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 239,
            column: 27
          },
          end: {
            line: 239,
            column: 28
          }
        },
        loc: {
          start: {
            line: 239,
            column: 37
          },
          end: {
            line: 242,
            column: 10
          }
        },
        line: 239
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 21
          },
          end: {
            line: 23,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 21
          },
          end: {
            line: 23,
            column: 52
          }
        }, {
          start: {
            line: 23,
            column: 56
          },
          end: {
            line: 23,
            column: 83
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 36
          },
          end: {
            line: 31,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 31,
            column: 46
          },
          end: {
            line: 31,
            column: 48
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "3": {
        loc: {
          start: {
            line: 44,
            column: 48
          },
          end: {
            line: 44,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 48
          },
          end: {
            line: 44,
            column: 58
          }
        }, {
          start: {
            line: 44,
            column: 62
          },
          end: {
            line: 44,
            column: 78
          }
        }],
        line: 44
      },
      "4": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "5": {
        loc: {
          start: {
            line: 47,
            column: 28
          },
          end: {
            line: 47,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 28
          },
          end: {
            line: 47,
            column: 38
          }
        }, {
          start: {
            line: 47,
            column: 42
          },
          end: {
            line: 47,
            column: 62
          }
        }],
        line: 47
      },
      "6": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "7": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 61,
            column: 75
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 61,
            column: 75
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "8": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 62,
            column: 78
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 62,
            column: 78
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "9": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 63,
            column: 70
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 63,
            column: 70
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "10": {
        loc: {
          start: {
            line: 65,
            column: 42
          },
          end: {
            line: 65,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 65,
            column: 50
          },
          end: {
            line: 65,
            column: 61
          }
        }, {
          start: {
            line: 65,
            column: 64
          },
          end: {
            line: 65,
            column: 66
          }
        }],
        line: 65
      },
      "11": {
        loc: {
          start: {
            line: 106,
            column: 25
          },
          end: {
            line: 106,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 106,
            column: 30
          },
          end: {
            line: 106,
            column: 50
          }
        }, {
          start: {
            line: 106,
            column: 53
          },
          end: {
            line: 106,
            column: 67
          }
        }],
        line: 106
      },
      "12": {
        loc: {
          start: {
            line: 120,
            column: 33
          },
          end: {
            line: 120,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 33
          },
          end: {
            line: 120,
            column: 37
          }
        }, {
          start: {
            line: 120,
            column: 41
          },
          end: {
            line: 120,
            column: 43
          }
        }],
        line: 120
      },
      "13": {
        loc: {
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 128,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 128,
            column: 49
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "14": {
        loc: {
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 129,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 129,
            column: 57
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "15": {
        loc: {
          start: {
            line: 131,
            column: 46
          },
          end: {
            line: 131,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 131,
            column: 54
          },
          end: {
            line: 131,
            column: 65
          }
        }, {
          start: {
            line: 131,
            column: 68
          },
          end: {
            line: 131,
            column: 70
          }
        }],
        line: 131
      },
      "16": {
        loc: {
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 159,
            column: 70
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 159,
            column: 70
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "17": {
        loc: {
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 160,
            column: 76
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 160,
            column: 76
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "18": {
        loc: {
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 161,
            column: 76
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 161,
            column: 76
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "19": {
        loc: {
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 162,
            column: 78
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 162,
            column: 78
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "20": {
        loc: {
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 163,
            column: 81
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 163,
            column: 81
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "21": {
        loc: {
          start: {
            line: 165,
            column: 47
          },
          end: {
            line: 165,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 165,
            column: 55
          },
          end: {
            line: 165,
            column: 66
          }
        }, {
          start: {
            line: 165,
            column: 69
          },
          end: {
            line: 165,
            column: 71
          }
        }],
        line: 165
      },
      "22": {
        loc: {
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 184,
            column: 79
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 184,
            column: 79
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "23": {
        loc: {
          start: {
            line: 185,
            column: 8
          },
          end: {
            line: 185,
            column: 73
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 8
          },
          end: {
            line: 185,
            column: 73
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "24": {
        loc: {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 186,
            column: 79
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 186,
            column: 79
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "25": {
        loc: {
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 187,
            column: 96
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 187,
            column: 96
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "26": {
        loc: {
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 188,
            column: 96
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 188,
            column: 96
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "27": {
        loc: {
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 189,
            column: 70
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 189,
            column: 70
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "28": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 190,
            column: 78
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 190,
            column: 78
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "29": {
        loc: {
          start: {
            line: 192,
            column: 47
          },
          end: {
            line: 192,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 192,
            column: 55
          },
          end: {
            line: 192,
            column: 66
          }
        }, {
          start: {
            line: 192,
            column: 69
          },
          end: {
            line: 192,
            column: 71
          }
        }],
        line: 192
      },
      "30": {
        loc: {
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 197,
            column: 79
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 197,
            column: 79
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "31": {
        loc: {
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 198,
            column: 76
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 198,
            column: 76
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "32": {
        loc: {
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 199,
            column: 70
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 199,
            column: 70
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "33": {
        loc: {
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 200,
            column: 73
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 200,
            column: 73
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "34": {
        loc: {
          start: {
            line: 202,
            column: 52
          },
          end: {
            line: 202,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 202,
            column: 60
          },
          end: {
            line: 202,
            column: 71
          }
        }, {
          start: {
            line: 202,
            column: 74
          },
          end: {
            line: 202,
            column: 76
          }
        }],
        line: 202
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0
    },
    b: {
      "0": [0, 0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/workspaces/prompt-card-system/frontend/src/lib/api.ts"],
      sourcesContent: ["// API configuration and utilities\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3001/api';\n\nexport interface ApiResponse<T = any> {\n  success: boolean;\n  data?: T;\n  error?: string;\n  message?: string;\n}\n\nexport class ApiError extends Error {\n  constructor(public status: number, message: string) {\n    super(message);\n    this.name = 'ApiError';\n  }\n}\n\nexport async function apiRequest<T>(\n  endpoint: string,\n  options: RequestInit = {}\n): Promise<T> {\n  const url = `${API_BASE_URL}${endpoint}`;\n  \n  const config: RequestInit = {\n    headers: {\n      'Content-Type': 'application/json',\n      ...options.headers,\n    },\n    ...options,\n  };\n\n  try {\n    const response = await fetch(url, config);\n    const data: ApiResponse<T> = await response.json();\n\n    if (!response.ok) {\n      throw new ApiError(response.status, data.error || 'Request failed');\n    }\n\n    if (!data.success) {\n      throw new Error(data.error || 'API request failed');\n    }\n\n    return data.data as T;\n  } catch (error) {\n    if (error instanceof ApiError) {\n      throw error;\n    }\n    throw new Error('Network error: ' + (error as Error).message);\n  }\n}\n\n// Specific API functions\nexport const api = {\n  // Prompt Cards\n  getPromptCards: (params?: { page?: number; limit?: number; search?: string }) => {\n    const searchParams = new URLSearchParams();\n    if (params?.page) searchParams.set('page', params.page.toString());\n    if (params?.limit) searchParams.set('limit', params.limit.toString());\n    if (params?.search) searchParams.set('search', params.search);\n    \n    const query = searchParams.toString();\n    return apiRequest(`/prompt-cards${query ? `?${query}` : ''}`);\n  },\n\n  getPromptCard: (id: number) => apiRequest(`/prompt-cards/${id}`),\n\n  createPromptCard: (data: any) => \n    apiRequest('/prompt-cards', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    }),\n\n  updatePromptCard: (id: number, data: any) =>\n    apiRequest(`/prompt-cards/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    }),\n\n  deletePromptCard: (id: number) =>\n    apiRequest(`/prompt-cards/${id}`, {\n      method: 'DELETE',\n    }),\n\n  // Test Cases\n  getTestCases: (promptCardId: number) =>\n    apiRequest(`/test-cases/prompt-cards/${promptCardId}/test-cases`),\n\n  createTestCase: (data: any) =>\n    apiRequest('/test-cases', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    }),\n\n  updateTestCase: (id: number, data: any) =>\n    apiRequest(`/test-cases/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    }),\n\n  deleteTestCase: (id: number) =>\n    apiRequest(`/test-cases/${id}`, {\n      method: 'DELETE',\n    }),\n\n  // YAML Operations\n  importYAML: (yamlContent: string) =>\n    apiRequest('/yaml/import', {\n      method: 'POST',\n      body: JSON.stringify({ yamlContent }),\n    }),\n\n  validateYAML: (yamlContent: string) =>\n    apiRequest('/yaml/validate', {\n      method: 'POST',\n      body: JSON.stringify({ yamlContent }),\n    }),\n\n  exportYAML: (id?: number) => {\n    const endpoint = id ? `/yaml/export/${id}` : '/yaml/export';\n    return fetch(`${API_BASE_URL}${endpoint}`);\n  },\n\n  // Health Check\n  getHealth: () => apiRequest('/health'),\n\n  // Test Execution\n  runTests: (data: any) =>\n    apiRequest('/test-execution/run', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    }),\n\n  getTestExecution: (executionId: string) =>\n    apiRequest(`/test-execution/${executionId}`),\n\n  getTestExecutionResults: (executionId: string) =>\n    apiRequest(`/test-execution/${executionId}/results`),\n\n  runSingleTest: (testCaseId: number, data?: any) =>\n    apiRequest(`/test-execution/test-case/${testCaseId}/run`, {\n      method: 'POST',\n      body: JSON.stringify(data || {}),\n    }),\n\n  // Analytics\n  getDashboardMetrics: () => apiRequest('/analytics/dashboard'),\n  \n  getRealtimeMetrics: () => apiRequest('/analytics/realtime'),\n  \n  getHistoricalMetrics: () => apiRequest('/analytics/historical'),\n  \n  getTrends: (period?: 'hour' | 'day' | 'week' | 'month', limit?: number) => {\n    const params = new URLSearchParams();\n    if (period) params.set('period', period);\n    if (limit) params.set('limit', limit.toString());\n    const query = params.toString();\n    return apiRequest(`/analytics/trends${query ? `?${query}` : ''}`);\n  },\n  \n  getInsights: () => apiRequest('/analytics/insights'),\n  \n  recordTestExecution: (data: any) =>\n    apiRequest('/analytics/events/test-execution', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    }),\n  \n  recordBatchExecution: (data: any) =>\n    apiRequest('/analytics/events/batch-execution', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    }),\n  \n  recordModelUsage: (model: string, usage: any) =>\n    apiRequest('/analytics/events/model-usage', {\n      method: 'POST',\n      body: JSON.stringify({ model, usage }),\n    }),\n  \n  recordSystemMetrics: (metrics: any) =>\n    apiRequest('/analytics/events/system-metrics', {\n      method: 'POST',\n      body: JSON.stringify({ metrics }),\n    }),\n\n  // Monitoring and Advanced Analytics\n  getSystemHealth: () => apiRequest('/monitoring/system-health'),\n  \n  getAlerts: (params?: { \n    status?: string; \n    severity?: string; \n    category?: string; \n    limit?: number; \n    offset?: number; \n  }) => {\n    const searchParams = new URLSearchParams();\n    if (params?.status) searchParams.set('status', params.status);\n    if (params?.severity) searchParams.set('severity', params.severity);\n    if (params?.category) searchParams.set('category', params.category);\n    if (params?.limit) searchParams.set('limit', params.limit.toString());\n    if (params?.offset) searchParams.set('offset', params.offset.toString());\n    \n    const query = searchParams.toString();\n    return apiRequest(`/monitoring/alerts${query ? `?${query}` : ''}`);\n  },\n\n  updateAlertStatus: (alertId: string, status: string) =>\n    apiRequest(`/monitoring/alerts/${alertId}/status`, {\n      method: 'PUT',\n      body: JSON.stringify({ status }),\n    }),\n\n  acknowledgeAlert: (alertId: string, acknowledgedBy?: string) =>\n    apiRequest(`/monitoring/alerts/${alertId}/acknowledge`, {\n      method: 'POST',\n      body: JSON.stringify({ acknowledgedBy }),\n    }),\n\n  resolveAlert: (alertId: string) =>\n    apiRequest(`/monitoring/alerts/${alertId}/resolve`, {\n      method: 'POST',\n    }),\n\n  getDistributedTraces: (params?: {\n    timeRange?: string;\n    service?: string;\n    operation?: string;\n    minDuration?: number;\n    maxDuration?: number;\n    status?: string;\n    limit?: number;\n  }) => {\n    const searchParams = new URLSearchParams();\n    if (params?.timeRange) searchParams.set('timeRange', params.timeRange);\n    if (params?.service) searchParams.set('service', params.service);\n    if (params?.operation) searchParams.set('operation', params.operation);\n    if (params?.minDuration) searchParams.set('minDuration', params.minDuration.toString());\n    if (params?.maxDuration) searchParams.set('maxDuration', params.maxDuration.toString());\n    if (params?.status) searchParams.set('status', params.status);\n    if (params?.limit) searchParams.set('limit', params.limit.toString());\n    \n    const query = searchParams.toString();\n    return apiRequest(`/monitoring/traces${query ? `?${query}` : ''}`);\n  },\n\n  getTrace: (traceId: string) => apiRequest(`/monitoring/traces/${traceId}`),\n\n  getPerformanceData: (params?: {\n    timeRange?: string;\n    endpoint?: string;\n    method?: string;\n    groupBy?: string;\n  }) => {\n    const searchParams = new URLSearchParams();\n    if (params?.timeRange) searchParams.set('timeRange', params.timeRange);\n    if (params?.endpoint) searchParams.set('endpoint', params.endpoint);\n    if (params?.method) searchParams.set('method', params.method);\n    if (params?.groupBy) searchParams.set('groupBy', params.groupBy);\n    \n    const query = searchParams.toString();\n    return apiRequest(`/monitoring/performance${query ? `?${query}` : ''}`);\n  },\n\n  getCustomMetrics: () => apiRequest('/monitoring/custom-metrics'),\n\n  createCustomMetric: (data: any) =>\n    apiRequest('/monitoring/custom-metrics', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    }),\n\n  updateCustomMetric: (metricId: string, data: any) =>\n    apiRequest(`/monitoring/custom-metrics/${metricId}`, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    }),\n\n  deleteCustomMetric: (metricId: string) =>\n    apiRequest(`/monitoring/custom-metrics/${metricId}`, {\n      method: 'DELETE',\n    }),\n\n  refreshCustomMetric: (metricId: string) =>\n    apiRequest(`/monitoring/custom-metrics/${metricId}/refresh`, {\n      method: 'POST',\n    }),\n\n  // KPI Management\n  getKpis: () => apiRequest('/monitoring/kpis'),\n\n  createKpi: (data: any) =>\n    apiRequest('/monitoring/kpis', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    }),\n\n  updateKpi: (kpiId: string, data: any) =>\n    apiRequest(`/monitoring/kpis/${kpiId}`, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    }),\n\n  deleteKpi: (kpiId: string) =>\n    apiRequest(`/monitoring/kpis/${kpiId}`, {\n      method: 'DELETE',\n    }),\n\n  // Dashboard Configuration\n  getDashboardConfig: () => apiRequest('/monitoring/dashboard/config'),\n\n  saveDashboardConfig: (config: any) =>\n    apiRequest('/monitoring/dashboard/config', {\n      method: 'POST',\n      body: JSON.stringify(config),\n    }),\n\n  exportDashboardConfig: () => \n    fetch(`${API_BASE_URL}/monitoring/dashboard/export`),\n\n  importDashboardConfig: (config: any) =>\n    apiRequest('/monitoring/dashboard/import', {\n      method: 'POST',\n      body: JSON.stringify(config),\n    }),\n};"],
      names: ["ApiError", "api", "apiRequest", "API_BASE_URL", "process", "env", "NEXT_PUBLIC_API_URL", "Error", "constructor", "status", "message", "name", "endpoint", "options", "url", "config", "headers", "response", "fetch", "data", "json", "ok", "error", "success", "getPromptCards", "params", "searchParams", "URLSearchParams", "page", "set", "toString", "limit", "search", "query", "getPromptCard", "id", "createPromptCard", "method", "body", "JSON", "stringify", "updatePromptCard", "deletePromptCard", "getTestCases", "promptCardId", "createTestCase", "updateTestCase", "deleteTestCase", "importYAML", "yamlContent", "validateYAML", "exportYAML", "getHealth", "runTests", "getTestExecution", "executionId", "getTestExecutionResults", "runSingleTest", "testCaseId", "getDashboardMetrics", "getRealtimeMetrics", "getHistoricalMetrics", "getTrends", "period", "getInsights", "recordTestExecution", "recordBatchExecution", "recordModelUsage", "model", "usage", "recordSystemMetrics", "metrics", "getSystemHealth", "getAlerts", "severity", "category", "offset", "updateAlertStatus", "alertId", "acknowledgeAlert", "acknowledgedBy", "resolveAlert", "getDistributedTraces", "timeRange", "service", "operation", "minDuration", "maxDuration", "getTrace", "traceId", "getPerformanceData", "groupBy", "getCustomMetrics", "createCustomMetric", "updateCustomMetric", "metricId", "deleteCustomMetric", "refreshCustomMetric", "getKpis", "createKpi", "updateKpi", "kpiId", "deleteKpi", "getDashboardConfig", "saveDashboardConfig", "exportDashboardConfig", "importDashboardConfig"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "92769ab2aa4ba2d4f6910972b36538b0542ec6b0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_c5hu19e3y = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_c5hu19e3y();
cov_c5hu19e3y().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_c5hu19e3y().f[0]++;
  cov_c5hu19e3y().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_c5hu19e3y().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_c5hu19e3y().s[3]++;
_export(exports, {
  ApiError: function () {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[1]++;
    cov_c5hu19e3y().s[4]++;
    return ApiError;
  },
  api: function () {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[2]++;
    cov_c5hu19e3y().s[5]++;
    return api;
  },
  apiRequest: function () {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[3]++;
    cov_c5hu19e3y().s[6]++;
    return apiRequest;
  }
});
const API_BASE_URL =
/* istanbul ignore next */
(cov_c5hu19e3y().s[7]++,
/* istanbul ignore next */
(cov_c5hu19e3y().b[0][0]++, process.env.NEXT_PUBLIC_API_URL) ||
/* istanbul ignore next */
(cov_c5hu19e3y().b[0][1]++, "http://localhost:3001/api"));
class ApiError extends Error {
  constructor(status, message) {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[4]++;
    cov_c5hu19e3y().s[8]++;
    super(message);
    /* istanbul ignore next */
    cov_c5hu19e3y().s[9]++;
    this.status = status;
    /* istanbul ignore next */
    cov_c5hu19e3y().s[10]++;
    this.name = "ApiError";
  }
}
async function apiRequest(endpoint, options =
/* istanbul ignore next */
(cov_c5hu19e3y().b[1][0]++, {})) {
  /* istanbul ignore next */
  cov_c5hu19e3y().f[5]++;
  const url =
  /* istanbul ignore next */
  (cov_c5hu19e3y().s[11]++, `${API_BASE_URL}${endpoint}`);
  const config =
  /* istanbul ignore next */
  (cov_c5hu19e3y().s[12]++, {
    headers: {
      "Content-Type": "application/json",
      ...options.headers
    },
    ...options
  });
  /* istanbul ignore next */
  cov_c5hu19e3y().s[13]++;
  try {
    const response =
    /* istanbul ignore next */
    (cov_c5hu19e3y().s[14]++, await fetch(url, config));
    const data =
    /* istanbul ignore next */
    (cov_c5hu19e3y().s[15]++, await response.json());
    /* istanbul ignore next */
    cov_c5hu19e3y().s[16]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_c5hu19e3y().b[2][0]++;
      cov_c5hu19e3y().s[17]++;
      throw new ApiError(response.status,
      /* istanbul ignore next */
      (cov_c5hu19e3y().b[3][0]++, data.error) ||
      /* istanbul ignore next */
      (cov_c5hu19e3y().b[3][1]++, "Request failed"));
    } else
    /* istanbul ignore next */
    {
      cov_c5hu19e3y().b[2][1]++;
    }
    cov_c5hu19e3y().s[18]++;
    if (!data.success) {
      /* istanbul ignore next */
      cov_c5hu19e3y().b[4][0]++;
      cov_c5hu19e3y().s[19]++;
      throw new Error(
      /* istanbul ignore next */
      (cov_c5hu19e3y().b[5][0]++, data.error) ||
      /* istanbul ignore next */
      (cov_c5hu19e3y().b[5][1]++, "API request failed"));
    } else
    /* istanbul ignore next */
    {
      cov_c5hu19e3y().b[4][1]++;
    }
    cov_c5hu19e3y().s[20]++;
    return data.data;
  } catch (error) {
    /* istanbul ignore next */
    cov_c5hu19e3y().s[21]++;
    if (error instanceof ApiError) {
      /* istanbul ignore next */
      cov_c5hu19e3y().b[6][0]++;
      cov_c5hu19e3y().s[22]++;
      throw error;
    } else
    /* istanbul ignore next */
    {
      cov_c5hu19e3y().b[6][1]++;
    }
    cov_c5hu19e3y().s[23]++;
    throw new Error("Network error: " + error.message);
  }
}
const api =
/* istanbul ignore next */
(cov_c5hu19e3y().s[24]++, {
  // Prompt Cards
  getPromptCards: params => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[6]++;
    const searchParams =
    /* istanbul ignore next */
    (cov_c5hu19e3y().s[25]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_c5hu19e3y().s[26]++;
    if (params?.page) {
      /* istanbul ignore next */
      cov_c5hu19e3y().b[7][0]++;
      cov_c5hu19e3y().s[27]++;
      searchParams.set("page", params.page.toString());
    } else
    /* istanbul ignore next */
    {
      cov_c5hu19e3y().b[7][1]++;
    }
    cov_c5hu19e3y().s[28]++;
    if (params?.limit) {
      /* istanbul ignore next */
      cov_c5hu19e3y().b[8][0]++;
      cov_c5hu19e3y().s[29]++;
      searchParams.set("limit", params.limit.toString());
    } else
    /* istanbul ignore next */
    {
      cov_c5hu19e3y().b[8][1]++;
    }
    cov_c5hu19e3y().s[30]++;
    if (params?.search) {
      /* istanbul ignore next */
      cov_c5hu19e3y().b[9][0]++;
      cov_c5hu19e3y().s[31]++;
      searchParams.set("search", params.search);
    } else
    /* istanbul ignore next */
    {
      cov_c5hu19e3y().b[9][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_c5hu19e3y().s[32]++, searchParams.toString());
    /* istanbul ignore next */
    cov_c5hu19e3y().s[33]++;
    return apiRequest(`/prompt-cards${query ?
    /* istanbul ignore next */
    (cov_c5hu19e3y().b[10][0]++, `?${query}`) :
    /* istanbul ignore next */
    (cov_c5hu19e3y().b[10][1]++, "")}`);
  },
  getPromptCard: id => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[7]++;
    cov_c5hu19e3y().s[34]++;
    return apiRequest(`/prompt-cards/${id}`);
  },
  createPromptCard: data => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[8]++;
    cov_c5hu19e3y().s[35]++;
    return apiRequest("/prompt-cards", {
      method: "POST",
      body: JSON.stringify(data)
    });
  },
  updatePromptCard: (id, data) => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[9]++;
    cov_c5hu19e3y().s[36]++;
    return apiRequest(`/prompt-cards/${id}`, {
      method: "PUT",
      body: JSON.stringify(data)
    });
  },
  deletePromptCard: id => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[10]++;
    cov_c5hu19e3y().s[37]++;
    return apiRequest(`/prompt-cards/${id}`, {
      method: "DELETE"
    });
  },
  // Test Cases
  getTestCases: promptCardId => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[11]++;
    cov_c5hu19e3y().s[38]++;
    return apiRequest(`/test-cases/prompt-cards/${promptCardId}/test-cases`);
  },
  createTestCase: data => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[12]++;
    cov_c5hu19e3y().s[39]++;
    return apiRequest("/test-cases", {
      method: "POST",
      body: JSON.stringify(data)
    });
  },
  updateTestCase: (id, data) => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[13]++;
    cov_c5hu19e3y().s[40]++;
    return apiRequest(`/test-cases/${id}`, {
      method: "PUT",
      body: JSON.stringify(data)
    });
  },
  deleteTestCase: id => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[14]++;
    cov_c5hu19e3y().s[41]++;
    return apiRequest(`/test-cases/${id}`, {
      method: "DELETE"
    });
  },
  // YAML Operations
  importYAML: yamlContent => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[15]++;
    cov_c5hu19e3y().s[42]++;
    return apiRequest("/yaml/import", {
      method: "POST",
      body: JSON.stringify({
        yamlContent
      })
    });
  },
  validateYAML: yamlContent => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[16]++;
    cov_c5hu19e3y().s[43]++;
    return apiRequest("/yaml/validate", {
      method: "POST",
      body: JSON.stringify({
        yamlContent
      })
    });
  },
  exportYAML: id => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[17]++;
    const endpoint =
    /* istanbul ignore next */
    (cov_c5hu19e3y().s[44]++, id ?
    /* istanbul ignore next */
    (cov_c5hu19e3y().b[11][0]++, `/yaml/export/${id}`) :
    /* istanbul ignore next */
    (cov_c5hu19e3y().b[11][1]++, "/yaml/export"));
    /* istanbul ignore next */
    cov_c5hu19e3y().s[45]++;
    return fetch(`${API_BASE_URL}${endpoint}`);
  },
  // Health Check
  getHealth: () => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[18]++;
    cov_c5hu19e3y().s[46]++;
    return apiRequest("/health");
  },
  // Test Execution
  runTests: data => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[19]++;
    cov_c5hu19e3y().s[47]++;
    return apiRequest("/test-execution/run", {
      method: "POST",
      body: JSON.stringify(data)
    });
  },
  getTestExecution: executionId => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[20]++;
    cov_c5hu19e3y().s[48]++;
    return apiRequest(`/test-execution/${executionId}`);
  },
  getTestExecutionResults: executionId => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[21]++;
    cov_c5hu19e3y().s[49]++;
    return apiRequest(`/test-execution/${executionId}/results`);
  },
  runSingleTest: (testCaseId, data) => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[22]++;
    cov_c5hu19e3y().s[50]++;
    return apiRequest(`/test-execution/test-case/${testCaseId}/run`, {
      method: "POST",
      body: JSON.stringify(
      /* istanbul ignore next */
      (cov_c5hu19e3y().b[12][0]++, data) ||
      /* istanbul ignore next */
      (cov_c5hu19e3y().b[12][1]++, {}))
    });
  },
  // Analytics
  getDashboardMetrics: () => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[23]++;
    cov_c5hu19e3y().s[51]++;
    return apiRequest("/analytics/dashboard");
  },
  getRealtimeMetrics: () => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[24]++;
    cov_c5hu19e3y().s[52]++;
    return apiRequest("/analytics/realtime");
  },
  getHistoricalMetrics: () => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[25]++;
    cov_c5hu19e3y().s[53]++;
    return apiRequest("/analytics/historical");
  },
  getTrends: (period, limit) => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[26]++;
    const params =
    /* istanbul ignore next */
    (cov_c5hu19e3y().s[54]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_c5hu19e3y().s[55]++;
    if (period) {
      /* istanbul ignore next */
      cov_c5hu19e3y().b[13][0]++;
      cov_c5hu19e3y().s[56]++;
      params.set("period", period);
    } else
    /* istanbul ignore next */
    {
      cov_c5hu19e3y().b[13][1]++;
    }
    cov_c5hu19e3y().s[57]++;
    if (limit) {
      /* istanbul ignore next */
      cov_c5hu19e3y().b[14][0]++;
      cov_c5hu19e3y().s[58]++;
      params.set("limit", limit.toString());
    } else
    /* istanbul ignore next */
    {
      cov_c5hu19e3y().b[14][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_c5hu19e3y().s[59]++, params.toString());
    /* istanbul ignore next */
    cov_c5hu19e3y().s[60]++;
    return apiRequest(`/analytics/trends${query ?
    /* istanbul ignore next */
    (cov_c5hu19e3y().b[15][0]++, `?${query}`) :
    /* istanbul ignore next */
    (cov_c5hu19e3y().b[15][1]++, "")}`);
  },
  getInsights: () => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[27]++;
    cov_c5hu19e3y().s[61]++;
    return apiRequest("/analytics/insights");
  },
  recordTestExecution: data => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[28]++;
    cov_c5hu19e3y().s[62]++;
    return apiRequest("/analytics/events/test-execution", {
      method: "POST",
      body: JSON.stringify(data)
    });
  },
  recordBatchExecution: data => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[29]++;
    cov_c5hu19e3y().s[63]++;
    return apiRequest("/analytics/events/batch-execution", {
      method: "POST",
      body: JSON.stringify(data)
    });
  },
  recordModelUsage: (model, usage) => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[30]++;
    cov_c5hu19e3y().s[64]++;
    return apiRequest("/analytics/events/model-usage", {
      method: "POST",
      body: JSON.stringify({
        model,
        usage
      })
    });
  },
  recordSystemMetrics: metrics => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[31]++;
    cov_c5hu19e3y().s[65]++;
    return apiRequest("/analytics/events/system-metrics", {
      method: "POST",
      body: JSON.stringify({
        metrics
      })
    });
  },
  // Monitoring and Advanced Analytics
  getSystemHealth: () => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[32]++;
    cov_c5hu19e3y().s[66]++;
    return apiRequest("/monitoring/system-health");
  },
  getAlerts: params => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[33]++;
    const searchParams =
    /* istanbul ignore next */
    (cov_c5hu19e3y().s[67]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_c5hu19e3y().s[68]++;
    if (params?.status) {
      /* istanbul ignore next */
      cov_c5hu19e3y().b[16][0]++;
      cov_c5hu19e3y().s[69]++;
      searchParams.set("status", params.status);
    } else
    /* istanbul ignore next */
    {
      cov_c5hu19e3y().b[16][1]++;
    }
    cov_c5hu19e3y().s[70]++;
    if (params?.severity) {
      /* istanbul ignore next */
      cov_c5hu19e3y().b[17][0]++;
      cov_c5hu19e3y().s[71]++;
      searchParams.set("severity", params.severity);
    } else
    /* istanbul ignore next */
    {
      cov_c5hu19e3y().b[17][1]++;
    }
    cov_c5hu19e3y().s[72]++;
    if (params?.category) {
      /* istanbul ignore next */
      cov_c5hu19e3y().b[18][0]++;
      cov_c5hu19e3y().s[73]++;
      searchParams.set("category", params.category);
    } else
    /* istanbul ignore next */
    {
      cov_c5hu19e3y().b[18][1]++;
    }
    cov_c5hu19e3y().s[74]++;
    if (params?.limit) {
      /* istanbul ignore next */
      cov_c5hu19e3y().b[19][0]++;
      cov_c5hu19e3y().s[75]++;
      searchParams.set("limit", params.limit.toString());
    } else
    /* istanbul ignore next */
    {
      cov_c5hu19e3y().b[19][1]++;
    }
    cov_c5hu19e3y().s[76]++;
    if (params?.offset) {
      /* istanbul ignore next */
      cov_c5hu19e3y().b[20][0]++;
      cov_c5hu19e3y().s[77]++;
      searchParams.set("offset", params.offset.toString());
    } else
    /* istanbul ignore next */
    {
      cov_c5hu19e3y().b[20][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_c5hu19e3y().s[78]++, searchParams.toString());
    /* istanbul ignore next */
    cov_c5hu19e3y().s[79]++;
    return apiRequest(`/monitoring/alerts${query ?
    /* istanbul ignore next */
    (cov_c5hu19e3y().b[21][0]++, `?${query}`) :
    /* istanbul ignore next */
    (cov_c5hu19e3y().b[21][1]++, "")}`);
  },
  updateAlertStatus: (alertId, status) => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[34]++;
    cov_c5hu19e3y().s[80]++;
    return apiRequest(`/monitoring/alerts/${alertId}/status`, {
      method: "PUT",
      body: JSON.stringify({
        status
      })
    });
  },
  acknowledgeAlert: (alertId, acknowledgedBy) => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[35]++;
    cov_c5hu19e3y().s[81]++;
    return apiRequest(`/monitoring/alerts/${alertId}/acknowledge`, {
      method: "POST",
      body: JSON.stringify({
        acknowledgedBy
      })
    });
  },
  resolveAlert: alertId => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[36]++;
    cov_c5hu19e3y().s[82]++;
    return apiRequest(`/monitoring/alerts/${alertId}/resolve`, {
      method: "POST"
    });
  },
  getDistributedTraces: params => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[37]++;
    const searchParams =
    /* istanbul ignore next */
    (cov_c5hu19e3y().s[83]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_c5hu19e3y().s[84]++;
    if (params?.timeRange) {
      /* istanbul ignore next */
      cov_c5hu19e3y().b[22][0]++;
      cov_c5hu19e3y().s[85]++;
      searchParams.set("timeRange", params.timeRange);
    } else
    /* istanbul ignore next */
    {
      cov_c5hu19e3y().b[22][1]++;
    }
    cov_c5hu19e3y().s[86]++;
    if (params?.service) {
      /* istanbul ignore next */
      cov_c5hu19e3y().b[23][0]++;
      cov_c5hu19e3y().s[87]++;
      searchParams.set("service", params.service);
    } else
    /* istanbul ignore next */
    {
      cov_c5hu19e3y().b[23][1]++;
    }
    cov_c5hu19e3y().s[88]++;
    if (params?.operation) {
      /* istanbul ignore next */
      cov_c5hu19e3y().b[24][0]++;
      cov_c5hu19e3y().s[89]++;
      searchParams.set("operation", params.operation);
    } else
    /* istanbul ignore next */
    {
      cov_c5hu19e3y().b[24][1]++;
    }
    cov_c5hu19e3y().s[90]++;
    if (params?.minDuration) {
      /* istanbul ignore next */
      cov_c5hu19e3y().b[25][0]++;
      cov_c5hu19e3y().s[91]++;
      searchParams.set("minDuration", params.minDuration.toString());
    } else
    /* istanbul ignore next */
    {
      cov_c5hu19e3y().b[25][1]++;
    }
    cov_c5hu19e3y().s[92]++;
    if (params?.maxDuration) {
      /* istanbul ignore next */
      cov_c5hu19e3y().b[26][0]++;
      cov_c5hu19e3y().s[93]++;
      searchParams.set("maxDuration", params.maxDuration.toString());
    } else
    /* istanbul ignore next */
    {
      cov_c5hu19e3y().b[26][1]++;
    }
    cov_c5hu19e3y().s[94]++;
    if (params?.status) {
      /* istanbul ignore next */
      cov_c5hu19e3y().b[27][0]++;
      cov_c5hu19e3y().s[95]++;
      searchParams.set("status", params.status);
    } else
    /* istanbul ignore next */
    {
      cov_c5hu19e3y().b[27][1]++;
    }
    cov_c5hu19e3y().s[96]++;
    if (params?.limit) {
      /* istanbul ignore next */
      cov_c5hu19e3y().b[28][0]++;
      cov_c5hu19e3y().s[97]++;
      searchParams.set("limit", params.limit.toString());
    } else
    /* istanbul ignore next */
    {
      cov_c5hu19e3y().b[28][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_c5hu19e3y().s[98]++, searchParams.toString());
    /* istanbul ignore next */
    cov_c5hu19e3y().s[99]++;
    return apiRequest(`/monitoring/traces${query ?
    /* istanbul ignore next */
    (cov_c5hu19e3y().b[29][0]++, `?${query}`) :
    /* istanbul ignore next */
    (cov_c5hu19e3y().b[29][1]++, "")}`);
  },
  getTrace: traceId => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[38]++;
    cov_c5hu19e3y().s[100]++;
    return apiRequest(`/monitoring/traces/${traceId}`);
  },
  getPerformanceData: params => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[39]++;
    const searchParams =
    /* istanbul ignore next */
    (cov_c5hu19e3y().s[101]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_c5hu19e3y().s[102]++;
    if (params?.timeRange) {
      /* istanbul ignore next */
      cov_c5hu19e3y().b[30][0]++;
      cov_c5hu19e3y().s[103]++;
      searchParams.set("timeRange", params.timeRange);
    } else
    /* istanbul ignore next */
    {
      cov_c5hu19e3y().b[30][1]++;
    }
    cov_c5hu19e3y().s[104]++;
    if (params?.endpoint) {
      /* istanbul ignore next */
      cov_c5hu19e3y().b[31][0]++;
      cov_c5hu19e3y().s[105]++;
      searchParams.set("endpoint", params.endpoint);
    } else
    /* istanbul ignore next */
    {
      cov_c5hu19e3y().b[31][1]++;
    }
    cov_c5hu19e3y().s[106]++;
    if (params?.method) {
      /* istanbul ignore next */
      cov_c5hu19e3y().b[32][0]++;
      cov_c5hu19e3y().s[107]++;
      searchParams.set("method", params.method);
    } else
    /* istanbul ignore next */
    {
      cov_c5hu19e3y().b[32][1]++;
    }
    cov_c5hu19e3y().s[108]++;
    if (params?.groupBy) {
      /* istanbul ignore next */
      cov_c5hu19e3y().b[33][0]++;
      cov_c5hu19e3y().s[109]++;
      searchParams.set("groupBy", params.groupBy);
    } else
    /* istanbul ignore next */
    {
      cov_c5hu19e3y().b[33][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_c5hu19e3y().s[110]++, searchParams.toString());
    /* istanbul ignore next */
    cov_c5hu19e3y().s[111]++;
    return apiRequest(`/monitoring/performance${query ?
    /* istanbul ignore next */
    (cov_c5hu19e3y().b[34][0]++, `?${query}`) :
    /* istanbul ignore next */
    (cov_c5hu19e3y().b[34][1]++, "")}`);
  },
  getCustomMetrics: () => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[40]++;
    cov_c5hu19e3y().s[112]++;
    return apiRequest("/monitoring/custom-metrics");
  },
  createCustomMetric: data => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[41]++;
    cov_c5hu19e3y().s[113]++;
    return apiRequest("/monitoring/custom-metrics", {
      method: "POST",
      body: JSON.stringify(data)
    });
  },
  updateCustomMetric: (metricId, data) => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[42]++;
    cov_c5hu19e3y().s[114]++;
    return apiRequest(`/monitoring/custom-metrics/${metricId}`, {
      method: "PUT",
      body: JSON.stringify(data)
    });
  },
  deleteCustomMetric: metricId => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[43]++;
    cov_c5hu19e3y().s[115]++;
    return apiRequest(`/monitoring/custom-metrics/${metricId}`, {
      method: "DELETE"
    });
  },
  refreshCustomMetric: metricId => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[44]++;
    cov_c5hu19e3y().s[116]++;
    return apiRequest(`/monitoring/custom-metrics/${metricId}/refresh`, {
      method: "POST"
    });
  },
  // KPI Management
  getKpis: () => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[45]++;
    cov_c5hu19e3y().s[117]++;
    return apiRequest("/monitoring/kpis");
  },
  createKpi: data => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[46]++;
    cov_c5hu19e3y().s[118]++;
    return apiRequest("/monitoring/kpis", {
      method: "POST",
      body: JSON.stringify(data)
    });
  },
  updateKpi: (kpiId, data) => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[47]++;
    cov_c5hu19e3y().s[119]++;
    return apiRequest(`/monitoring/kpis/${kpiId}`, {
      method: "PUT",
      body: JSON.stringify(data)
    });
  },
  deleteKpi: kpiId => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[48]++;
    cov_c5hu19e3y().s[120]++;
    return apiRequest(`/monitoring/kpis/${kpiId}`, {
      method: "DELETE"
    });
  },
  // Dashboard Configuration
  getDashboardConfig: () => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[49]++;
    cov_c5hu19e3y().s[121]++;
    return apiRequest("/monitoring/dashboard/config");
  },
  saveDashboardConfig: config => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[50]++;
    cov_c5hu19e3y().s[122]++;
    return apiRequest("/monitoring/dashboard/config", {
      method: "POST",
      body: JSON.stringify(config)
    });
  },
  exportDashboardConfig: () => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[51]++;
    cov_c5hu19e3y().s[123]++;
    return fetch(`${API_BASE_URL}/monitoring/dashboard/export`);
  },
  importDashboardConfig: config => {
    /* istanbul ignore next */
    cov_c5hu19e3y().f[52]++;
    cov_c5hu19e3y().s[124]++;
    return apiRequest("/monitoring/dashboard/import", {
      method: "POST",
      body: JSON.stringify(config)
    });
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,