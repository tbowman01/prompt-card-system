ef181d81f96bcd54f466de10189a14c7
"use client";
"use strict";

/* istanbul ignore next */
function cov_11t33iclz() {
  var path = "/workspaces/prompt-card-system/frontend/src/components/Analytics/MetricsOverview.tsx";
  var hash = "fbb8dd72b8e236c4c1c9eb2e2488ae74bae89511";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/prompt-card-system/frontend/src/components/Analytics/MetricsOverview.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 31
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 24
        }
      },
      "6": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 21,
          column: 15
        },
        end: {
          line: 21,
          column: 31
        }
      },
      "8": {
        start: {
          line: 22,
          column: 13
        },
        end: {
          line: 22,
          column: 37
        }
      },
      "9": {
        start: {
          line: 23,
          column: 15
        },
        end: {
          line: 23,
          column: 37
        }
      },
      "10": {
        start: {
          line: 24,
          column: 24
        },
        end: {
          line: 24,
          column: 55
        }
      },
      "11": {
        start: {
          line: 25,
          column: 19
        },
        end: {
          line: 78,
          column: 1
        }
      },
      "12": {
        start: {
          line: 26,
          column: 25
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "13": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "14": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 27
        }
      },
      "15": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 27
        }
      },
      "16": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 27
        }
      },
      "17": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 35,
          column: 26
        }
      },
      "18": {
        start: {
          line: 38,
          column: 29
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "19": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "20": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 54
        }
      },
      "21": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 56
        }
      },
      "22": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 50
        }
      },
      "23": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 52
        }
      },
      "24": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 77,
          column: 7
        }
      },
      "25": {
        start: {
          line: 79,
          column: 24
        },
        end: {
          line: 330,
          column: 1
        }
      },
      "26": {
        start: {
          line: 80,
          column: 34
        },
        end: {
          line: 80,
          column: 60
        }
      },
      "27": {
        start: {
          line: 81,
          column: 34
        },
        end: {
          line: 81,
          column: 60
        }
      },
      "28": {
        start: {
          line: 82,
          column: 30
        },
        end: {
          line: 82,
          column: 56
        }
      },
      "29": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 101,
          column: 11
        }
      },
      "30": {
        start: {
          line: 84,
          column: 29
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "31": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 95,
          column: 13
        }
      },
      "32": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 33
        }
      },
      "33": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 87,
          column: 31
        }
      },
      "34": {
        start: {
          line: 88,
          column: 29
        },
        end: {
          line: 88,
          column: 65
        }
      },
      "35": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 89,
          column: 33
        }
      },
      "36": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 62
        }
      },
      "37": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 92,
          column: 51
        }
      },
      "38": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 34
        }
      },
      "39": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 23
        }
      },
      "40": {
        start: {
          line: 99,
          column: 25
        },
        end: {
          line: 99,
          column: 57
        }
      },
      "41": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 43
        }
      },
      "42": {
        start: {
          line: 100,
          column: 19
        },
        end: {
          line: 100,
          column: 42
        }
      },
      "43": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 109,
          column: 5
        }
      },
      "44": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 108,
          column: 11
        }
      },
      "45": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 118,
          column: 5
        }
      },
      "46": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 117,
          column: 11
        }
      },
      "47": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 127,
          column: 5
        }
      },
      "48": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 126,
          column: 11
        }
      },
      "49": {
        start: {
          line: 128,
          column: 25
        },
        end: {
          line: 135,
          column: 5
        }
      },
      "50": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "51": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 52
        }
      },
      "52": {
        start: {
          line: 131,
          column: 15
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "53": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 49
        }
      },
      "54": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 30
        }
      },
      "55": {
        start: {
          line: 136,
          column: 29
        },
        end: {
          line: 138,
          column: 5
        }
      },
      "56": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 44
        }
      },
      "57": {
        start: {
          line: 139,
          column: 23
        },
        end: {
          line: 144,
          column: 5
        }
      },
      "58": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "59": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 48
        }
      },
      "60": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 36
        }
      },
      "61": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 329,
          column: 7
        }
      },
      "62": {
        start: {
          line: 230,
          column: 118
        },
        end: {
          line: 257,
          column: 47
        }
      },
      "63": {
        start: {
          line: 270,
          column: 80
        },
        end: {
          line: 324,
          column: 42
        }
      },
      "64": {
        start: {
          line: 304,
          column: 126
        },
        end: {
          line: 312,
          column: 73
        }
      },
      "65": {
        start: {
          line: 331,
          column: 17
        },
        end: {
          line: 331,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 21
          },
          end: {
            line: 13,
            column: 22
          }
        },
        loc: {
          start: {
            line: 13,
            column: 32
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 13
          },
          end: {
            line: 16,
            column: 14
          }
        },
        loc: {
          start: {
            line: 16,
            column: 24
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 25,
            column: 19
          },
          end: {
            line: 25,
            column: 20
          }
        },
        loc: {
          start: {
            line: 25,
            column: 74
          },
          end: {
            line: 78,
            column: 1
          }
        },
        line: 25
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 25
          },
          end: {
            line: 26,
            column: 26
          }
        },
        loc: {
          start: {
            line: 26,
            column: 29
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 38,
            column: 29
          },
          end: {
            line: 38,
            column: 30
          }
        },
        loc: {
          start: {
            line: 38,
            column: 33
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 38
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 79,
            column: 24
          },
          end: {
            line: 79,
            column: 25
          }
        },
        loc: {
          start: {
            line: 79,
            column: 28
          },
          end: {
            line: 330,
            column: 1
          }
        },
        line: 79
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 83,
            column: 26
          },
          end: {
            line: 83,
            column: 27
          }
        },
        loc: {
          start: {
            line: 83,
            column: 30
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 83
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 84,
            column: 29
          },
          end: {
            line: 84,
            column: 30
          }
        },
        loc: {
          start: {
            line: 84,
            column: 39
          },
          end: {
            line: 96,
            column: 9
          }
        },
        line: 84
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 100,
            column: 15
          },
          end: {
            line: 100,
            column: 16
          }
        },
        loc: {
          start: {
            line: 100,
            column: 19
          },
          end: {
            line: 100,
            column: 42
          }
        },
        line: 100
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 128,
            column: 25
          },
          end: {
            line: 128,
            column: 26
          }
        },
        loc: {
          start: {
            line: 128,
            column: 32
          },
          end: {
            line: 135,
            column: 5
          }
        },
        line: 128
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 136,
            column: 29
          },
          end: {
            line: 136,
            column: 30
          }
        },
        loc: {
          start: {
            line: 136,
            column: 36
          },
          end: {
            line: 138,
            column: 5
          }
        },
        line: 136
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 139,
            column: 23
          },
          end: {
            line: 139,
            column: 24
          }
        },
        loc: {
          start: {
            line: 139,
            column: 29
          },
          end: {
            line: 144,
            column: 5
          }
        },
        line: 139
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 230,
            column: 88
          },
          end: {
            line: 230,
            column: 89
          }
        },
        loc: {
          start: {
            line: 230,
            column: 118
          },
          end: {
            line: 257,
            column: 47
          }
        },
        line: 230
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 270,
            column: 55
          },
          end: {
            line: 270,
            column: 56
          }
        },
        loc: {
          start: {
            line: 270,
            column: 80
          },
          end: {
            line: 324,
            column: 42
          }
        },
        line: 270
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 304,
            column: 98
          },
          end: {
            line: 304,
            column: 99
          }
        },
        loc: {
          start: {
            line: 304,
            column: 126
          },
          end: {
            line: 312,
            column: 73
          }
        },
        line: 304
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 52
          },
          end: {
            line: 25,
            column: 69
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 63
          },
          end: {
            line: 25,
            column: 69
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 29,
            column: 27
          }
        }, {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 31,
            column: 27
          }
        }, {
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 33,
            column: 27
          }
        }, {
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 35,
            column: 26
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 41,
            column: 54
          }
        }, {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 43,
            column: 56
          }
        }, {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 45,
            column: 50
          }
        }, {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 47,
            column: 52
          }
        }],
        line: 39
      },
      "3": {
        loc: {
          start: {
            line: 65,
            column: 24
          },
          end: {
            line: 68,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 24
          },
          end: {
            line: 65,
            column: 31
          }
        }, {
          start: {
            line: 65,
            column: 49
          },
          end: {
            line: 68,
            column: 26
          }
        }],
        line: 65
      },
      "4": {
        loc: {
          start: {
            line: 71,
            column: 16
          },
          end: {
            line: 74,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 16
          },
          end: {
            line: 71,
            column: 21
          }
        }, {
          start: {
            line: 71,
            column: 39
          },
          end: {
            line: 74,
            column: 18
          }
        }],
        line: 71
      },
      "5": {
        loc: {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 109,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 109,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "6": {
        loc: {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 118,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 118,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "7": {
        loc: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "8": {
        loc: {
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        }, {
          start: {
            line: 131,
            column: 15
          },
          end: {
            line: 133,
            column: 9
          }
        }],
        line: 129
      },
      "9": {
        loc: {
          start: {
            line: 131,
            column: 15
          },
          end: {
            line: 133,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 15
          },
          end: {
            line: 133,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "10": {
        loc: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "11": {
        loc: {
          start: {
            line: 160,
            column: 42
          },
          end: {
            line: 160,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 160,
            column: 77
          },
          end: {
            line: 160,
            column: 83
          }
        }, {
          start: {
            line: 160,
            column: 86
          },
          end: {
            line: 160,
            column: 95
          }
        }],
        line: 160
      },
      "12": {
        loc: {
          start: {
            line: 165,
            column: 42
          },
          end: {
            line: 165,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 165,
            column: 80
          },
          end: {
            line: 165,
            column: 89
          }
        }, {
          start: {
            line: 165,
            column: 92
          },
          end: {
            line: 165,
            column: 98
          }
        }],
        line: 165
      },
      "13": {
        loc: {
          start: {
            line: 170,
            column: 42
          },
          end: {
            line: 170,
            column: 149
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 170,
            column: 80
          },
          end: {
            line: 170,
            column: 89
          }
        }, {
          start: {
            line: 170,
            column: 92
          },
          end: {
            line: 170,
            column: 149
          }
        }],
        line: 170
      },
      "14": {
        loc: {
          start: {
            line: 170,
            column: 92
          },
          end: {
            line: 170,
            column: 149
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 170,
            column: 130
          },
          end: {
            line: 170,
            column: 139
          }
        }, {
          start: {
            line: 170,
            column: 142
          },
          end: {
            line: 170,
            column: 149
          }
        }],
        line: 170
      },
      "15": {
        loc: {
          start: {
            line: 175,
            column: 42
          },
          end: {
            line: 175,
            column: 167
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 175,
            column: 89
          },
          end: {
            line: 175,
            column: 98
          }
        }, {
          start: {
            line: 175,
            column: 101
          },
          end: {
            line: 175,
            column: 167
          }
        }],
        line: 175
      },
      "16": {
        loc: {
          start: {
            line: 175,
            column: 101
          },
          end: {
            line: 175,
            column: 167
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 175,
            column: 148
          },
          end: {
            line: 175,
            column: 157
          }
        }, {
          start: {
            line: 175,
            column: 160
          },
          end: {
            line: 175,
            column: 167
          }
        }],
        line: 175
      },
      "17": {
        loc: {
          start: {
            line: 180,
            column: 42
          },
          end: {
            line: 180,
            column: 145
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 180,
            column: 78
          },
          end: {
            line: 180,
            column: 87
          }
        }, {
          start: {
            line: 180,
            column: 90
          },
          end: {
            line: 180,
            column: 145
          }
        }],
        line: 180
      },
      "18": {
        loc: {
          start: {
            line: 180,
            column: 90
          },
          end: {
            line: 180,
            column: 145
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 180,
            column: 126
          },
          end: {
            line: 180,
            column: 135
          }
        }, {
          start: {
            line: 180,
            column: 138
          },
          end: {
            line: 180,
            column: 145
          }
        }],
        line: 180
      },
      "19": {
        loc: {
          start: {
            line: 209,
            column: 42
          },
          end: {
            line: 209,
            column: 167
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 209,
            column: 89
          },
          end: {
            line: 209,
            column: 98
          }
        }, {
          start: {
            line: 209,
            column: 101
          },
          end: {
            line: 209,
            column: 167
          }
        }],
        line: 209
      },
      "20": {
        loc: {
          start: {
            line: 209,
            column: 101
          },
          end: {
            line: 209,
            column: 167
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 209,
            column: 148
          },
          end: {
            line: 209,
            column: 157
          }
        }, {
          start: {
            line: 209,
            column: 160
          },
          end: {
            line: 209,
            column: 167
          }
        }],
        line: 209
      },
      "21": {
        loc: {
          start: {
            line: 262,
            column: 12
          },
          end: {
            line: 327,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 262,
            column: 12
          },
          end: {
            line: 262,
            column: 39
          }
        }, {
          start: {
            line: 262,
            column: 57
          },
          end: {
            line: 327,
            column: 14
          }
        }],
        line: 262
      },
      "22": {
        loc: {
          start: {
            line: 271,
            column: 72
          },
          end: {
            line: 271,
            column: 295
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 271,
            column: 106
          },
          end: {
            line: 271,
            column: 132
          }
        }, {
          start: {
            line: 271,
            column: 135
          },
          end: {
            line: 271,
            column: 295
          }
        }],
        line: 271
      },
      "23": {
        loc: {
          start: {
            line: 271,
            column: 135
          },
          end: {
            line: 271,
            column: 295
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 271,
            column: 165
          },
          end: {
            line: 271,
            column: 197
          }
        }, {
          start: {
            line: 271,
            column: 200
          },
          end: {
            line: 271,
            column: 295
          }
        }],
        line: 271
      },
      "24": {
        loc: {
          start: {
            line: 271,
            column: 200
          },
          end: {
            line: 271,
            column: 295
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 271,
            column: 232
          },
          end: {
            line: 271,
            column: 264
          }
        }, {
          start: {
            line: 271,
            column: 267
          },
          end: {
            line: 271,
            column: 295
          }
        }],
        line: 271
      },
      "25": {
        loc: {
          start: {
            line: 286,
            column: 69
          },
          end: {
            line: 286,
            column: 130
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 286,
            column: 103
          },
          end: {
            line: 286,
            column: 116
          }
        }, {
          start: {
            line: 286,
            column: 119
          },
          end: {
            line: 286,
            column: 130
          }
        }],
        line: 286
      },
      "26": {
        loc: {
          start: {
            line: 295,
            column: 48
          },
          end: {
            line: 315,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 295,
            column: 48
          },
          end: {
            line: 295,
            column: 71
          }
        }, {
          start: {
            line: 295,
            column: 75
          },
          end: {
            line: 295,
            column: 109
          }
        }, {
          start: {
            line: 295,
            column: 127
          },
          end: {
            line: 315,
            column: 50
          }
        }],
        line: 295
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0],
      "1": [0, 0, 0, 0],
      "2": [0, 0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/workspaces/prompt-card-system/frontend/src/components/Analytics/MetricsOverview.tsx"],
      sourcesContent: ["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { api } from '@/lib/api';\nimport { DashboardMetrics } from '@/types';\nimport { Badge } from '@/components/ui/Badge';\nimport { LoadingSpinner } from '@/components/ui/LoadingSpinner';\n\ninterface MetricCardProps {\n  title: string;\n  value: string | number;\n  subtext?: string;\n  trend?: 'up' | 'down' | 'stable';\n  severity?: 'success' | 'warning' | 'error' | 'info';\n}\n\nconst MetricCard: React.FC<MetricCardProps> = ({ title, value, subtext, trend, severity = 'info' }) => {\n  const getTrendIcon = () => {\n    switch (trend) {\n      case 'up':\n        return '\u2197';\n      case 'down':\n        return '\u2198';\n      case 'stable':\n        return '\u2192';\n      default:\n        return '';\n    }\n  };\n\n  const getSeverityColor = () => {\n    switch (severity) {\n      case 'success':\n        return 'bg-green-50 border-green-200';\n      case 'warning':\n        return 'bg-yellow-50 border-yellow-200';\n      case 'error':\n        return 'bg-red-50 border-red-200';\n      default:\n        return 'bg-blue-50 border-blue-200';\n    }\n  };\n\n  return (\n    <div className={`p-4 rounded-lg border-2 ${getSeverityColor()}`}>\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"text-sm font-medium text-gray-600\">{title}</h3>\n          <p className=\"text-2xl font-bold text-gray-900 mt-1\">{value}</p>\n          {subtext && (\n            <p className=\"text-sm text-gray-500 mt-1\">{subtext}</p>\n          )}\n        </div>\n        {trend && (\n          <span className=\"text-lg text-gray-400\">{getTrendIcon()}</span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport const MetricsOverview: React.FC = () => {\n  const [metrics, setMetrics] = useState<DashboardMetrics | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchMetrics = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const data = await api.getDashboardMetrics();\n        setMetrics(data as DashboardMetrics);\n      } catch (err) {\n        console.error('Error fetching metrics:', err);\n        setError('Failed to load metrics');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMetrics();\n    \n    // Refresh metrics every 30 seconds\n    const interval = setInterval(fetchMetrics, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n        <p className=\"text-red-800\">{error}</p>\n      </div>\n    );\n  }\n\n  if (!metrics) {\n    return (\n      <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-4\">\n        <p className=\"text-gray-600\">No metrics available</p>\n      </div>\n    );\n  }\n\n  const formatNumber = (num: number): string => {\n    if (num >= 1000000) {\n      return (num / 1000000).toFixed(1) + 'M';\n    } else if (num >= 1000) {\n      return (num / 1000).toFixed(1) + 'K';\n    }\n    return num.toString();\n  };\n\n  const formatPercentage = (num: number): string => {\n    return `${(num * 100).toFixed(1)}%`;\n  };\n\n  const formatTime = (ms: number): string => {\n    if (ms >= 1000) {\n      return `${(ms / 1000).toFixed(1)}s`;\n    }\n    return `${ms.toFixed(0)}ms`;\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Real-time Metrics */}\n      <div>\n        <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Real-time Metrics</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\n          <MetricCard\n            title=\"Active Tests\"\n            value={metrics.realtime.activeTests}\n            severity={metrics.realtime.activeTests > 0 ? 'info' : 'success'}\n          />\n          <MetricCard\n            title=\"Tests/Second\"\n            value={metrics.realtime.testsPerSecond.toFixed(1)}\n            severity={metrics.realtime.testsPerSecond > 0 ? 'success' : 'info'}\n          />\n          <MetricCard\n            title=\"Success Rate\"\n            value={formatPercentage(metrics.realtime.successRate)}\n            severity={\n              metrics.realtime.successRate >= 0.9 ? 'success' : \n              metrics.realtime.successRate >= 0.7 ? 'warning' : 'error'\n            }\n          />\n          <MetricCard\n            title=\"Avg Response Time\"\n            value={formatTime(metrics.realtime.averageResponseTime)}\n            severity={\n              metrics.realtime.averageResponseTime <= 1000 ? 'success' :\n              metrics.realtime.averageResponseTime <= 5000 ? 'warning' : 'error'\n            }\n          />\n          <MetricCard\n            title=\"Error Rate\"\n            value={formatPercentage(metrics.realtime.errorRate)}\n            severity={\n              metrics.realtime.errorRate <= 0.1 ? 'success' :\n              metrics.realtime.errorRate <= 0.3 ? 'warning' : 'error'\n            }\n          />\n        </div>\n      </div>\n\n      {/* Historical Metrics */}\n      <div>\n        <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Historical Overview</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          <MetricCard\n            title=\"Total Tests\"\n            value={formatNumber(metrics.historical.totalTests)}\n            subtext=\"All time\"\n          />\n          <MetricCard\n            title=\"Total Executions\"\n            value={formatNumber(metrics.historical.totalExecutions)}\n            subtext=\"Unique test runs\"\n          />\n          <MetricCard\n            title=\"Overall Success Rate\"\n            value={formatPercentage(metrics.historical.overallSuccessRate)}\n            subtext=\"Historical average\"\n            severity={\n              metrics.historical.overallSuccessRate >= 0.9 ? 'success' : \n              metrics.historical.overallSuccessRate >= 0.7 ? 'warning' : 'error'\n            }\n          />\n          <MetricCard\n            title=\"Avg Execution Time\"\n            value={formatTime(metrics.historical.averageExecutionTime)}\n            subtext=\"Per test\"\n          />\n        </div>\n      </div>\n\n      {/* Most Used Models */}\n      <div>\n        <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Most Used Models</h2>\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {metrics.historical.mostUsedModels.slice(0, 6).map((model, index) => (\n              <div key={model.model} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                <div className=\"flex items-center space-x-3\">\n                  <Badge variant=\"secondary\">#{index + 1}</Badge>\n                  <span className=\"font-medium text-gray-900\">{model.model}</span>\n                </div>\n                <span className=\"text-sm text-gray-600\">{formatNumber(model.count)} tests</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Insights */}\n      {metrics.insights.length > 0 && (\n        <div>\n          <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">System Insights</h2>\n          <div className=\"space-y-3\">\n            {metrics.insights.map((insight) => (\n              <div\n                key={insight.id}\n                className={`p-4 rounded-lg border-l-4 ${\n                  insight.severity === 'critical' \n                    ? 'bg-red-50 border-red-500' \n                    : insight.severity === 'high' \n                    ? 'bg-orange-50 border-orange-500'\n                    : insight.severity === 'medium'\n                    ? 'bg-yellow-50 border-yellow-500'\n                    : 'bg-blue-50 border-blue-500'\n                }`}\n              >\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center space-x-2\">\n                      <h3 className=\"font-medium text-gray-900\">{insight.title}</h3>\n                      <Badge \n                        variant={insight.severity === 'critical' ? 'destructive' : 'secondary'}\n                      >\n                        {insight.severity}\n                      </Badge>\n                    </div>\n                    <p className=\"text-sm text-gray-600 mt-1\">{insight.description}</p>\n                    {insight.recommendations && insight.recommendations.length > 0 && (\n                      <div className=\"mt-2\">\n                        <p className=\"text-xs font-medium text-gray-700\">Recommendations:</p>\n                        <ul className=\"text-xs text-gray-600 mt-1 space-y-1\">\n                          {insight.recommendations.map((rec, index) => (\n                            <li key={index} className=\"flex items-center\">\n                              <span className=\"w-1 h-1 bg-gray-400 rounded-full mr-2\"></span>\n                              {rec}\n                            </li>\n                          ))}\n                        </ul>\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"text-xs text-gray-500\">\n                    {new Date(insight.timestamp).toLocaleString()}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MetricsOverview;"],
      names: ["MetricsOverview", "MetricCard", "title", "value", "subtext", "trend", "severity", "getTrendIcon", "getSeverityColor", "div", "className", "h3", "p", "span", "metrics", "setMetrics", "useState", "loading", "setLoading", "error", "setError", "useEffect", "fetchMetrics", "data", "api", "getDashboardMetrics", "err", "console", "interval", "setInterval", "clearInterval", "LoadingSpinner", "size", "formatNumber", "num", "toFixed", "toString", "formatPercentage", "formatTime", "ms", "h2", "realtime", "activeTests", "testsPerSecond", "successRate", "averageResponseTime", "errorRate", "historical", "totalTests", "totalExecutions", "overallSuccessRate", "averageExecutionTime", "mostUsedModels", "slice", "map", "model", "index", "Badge", "variant", "count", "insights", "length", "insight", "description", "recommendations", "ul", "rec", "li", "Date", "timestamp", "toLocaleString", "id"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fbb8dd72b8e236c4c1c9eb2e2488ae74bae89511"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_11t33iclz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_11t33iclz();
cov_11t33iclz().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_11t33iclz().f[0]++;
  cov_11t33iclz().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_11t33iclz().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_11t33iclz().s[3]++;
_export(exports, {
  MetricsOverview: function () {
    /* istanbul ignore next */
    cov_11t33iclz().f[1]++;
    cov_11t33iclz().s[4]++;
    return MetricsOverview;
  },
  default: function () {
    /* istanbul ignore next */
    cov_11t33iclz().f[2]++;
    cov_11t33iclz().s[5]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_11t33iclz().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_11t33iclz().s[7]++, require("react"));
const _api =
/* istanbul ignore next */
(cov_11t33iclz().s[8]++, require("../../lib/api"));
const _Badge =
/* istanbul ignore next */
(cov_11t33iclz().s[9]++, require("../ui/Badge"));
const _LoadingSpinner =
/* istanbul ignore next */
(cov_11t33iclz().s[10]++, require("../ui/LoadingSpinner"));
/* istanbul ignore next */
cov_11t33iclz().s[11]++;
const MetricCard = ({
  title,
  value,
  subtext,
  trend,
  severity =
  /* istanbul ignore next */
  (cov_11t33iclz().b[0][0]++, "info")
}) => {
  /* istanbul ignore next */
  cov_11t33iclz().f[3]++;
  cov_11t33iclz().s[12]++;
  const getTrendIcon = () => {
    /* istanbul ignore next */
    cov_11t33iclz().f[4]++;
    cov_11t33iclz().s[13]++;
    switch (trend) {
      case "up":
        /* istanbul ignore next */
        cov_11t33iclz().b[1][0]++;
        cov_11t33iclz().s[14]++;
        return "↗";
      case "down":
        /* istanbul ignore next */
        cov_11t33iclz().b[1][1]++;
        cov_11t33iclz().s[15]++;
        return "↘";
      case "stable":
        /* istanbul ignore next */
        cov_11t33iclz().b[1][2]++;
        cov_11t33iclz().s[16]++;
        return "→";
      default:
        /* istanbul ignore next */
        cov_11t33iclz().b[1][3]++;
        cov_11t33iclz().s[17]++;
        return "";
    }
  };
  /* istanbul ignore next */
  cov_11t33iclz().s[18]++;
  const getSeverityColor = () => {
    /* istanbul ignore next */
    cov_11t33iclz().f[5]++;
    cov_11t33iclz().s[19]++;
    switch (severity) {
      case "success":
        /* istanbul ignore next */
        cov_11t33iclz().b[2][0]++;
        cov_11t33iclz().s[20]++;
        return "bg-green-50 border-green-200";
      case "warning":
        /* istanbul ignore next */
        cov_11t33iclz().b[2][1]++;
        cov_11t33iclz().s[21]++;
        return "bg-yellow-50 border-yellow-200";
      case "error":
        /* istanbul ignore next */
        cov_11t33iclz().b[2][2]++;
        cov_11t33iclz().s[22]++;
        return "bg-red-50 border-red-200";
      default:
        /* istanbul ignore next */
        cov_11t33iclz().b[2][3]++;
        cov_11t33iclz().s[23]++;
        return "bg-blue-50 border-blue-200";
    }
  };
  /* istanbul ignore next */
  cov_11t33iclz().s[24]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: `p-4 rounded-lg border-2 ${getSeverityColor()}`,
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex justify-between items-start",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
          className: "text-sm font-medium text-gray-600",
          children: title
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-2xl font-bold text-gray-900 mt-1",
          children: value
        }),
        /* istanbul ignore next */
        (cov_11t33iclz().b[3][0]++, subtext) &&
        /* istanbul ignore next */
        (cov_11t33iclz().b[3][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-sm text-gray-500 mt-1",
          children: subtext
        }))]
      }),
      /* istanbul ignore next */
      (cov_11t33iclz().b[4][0]++, trend) &&
      /* istanbul ignore next */
      (cov_11t33iclz().b[4][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
        className: "text-lg text-gray-400",
        children: getTrendIcon()
      }))]
    })
  });
};
/* istanbul ignore next */
cov_11t33iclz().s[25]++;
const MetricsOverview = () => {
  /* istanbul ignore next */
  cov_11t33iclz().f[6]++;
  const [metrics, setMetrics] =
  /* istanbul ignore next */
  (cov_11t33iclz().s[26]++, (0, _react.useState)(null));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_11t33iclz().s[27]++, (0, _react.useState)(true));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_11t33iclz().s[28]++, (0, _react.useState)(null));
  /* istanbul ignore next */
  cov_11t33iclz().s[29]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_11t33iclz().f[7]++;
    cov_11t33iclz().s[30]++;
    const fetchMetrics = async () => {
      /* istanbul ignore next */
      cov_11t33iclz().f[8]++;
      cov_11t33iclz().s[31]++;
      try {
        /* istanbul ignore next */
        cov_11t33iclz().s[32]++;
        setLoading(true);
        /* istanbul ignore next */
        cov_11t33iclz().s[33]++;
        setError(null);
        const data =
        /* istanbul ignore next */
        (cov_11t33iclz().s[34]++, await _api.api.getDashboardMetrics());
        /* istanbul ignore next */
        cov_11t33iclz().s[35]++;
        setMetrics(data);
      } catch (err) {
        /* istanbul ignore next */
        cov_11t33iclz().s[36]++;
        console.error("Error fetching metrics:", err);
        /* istanbul ignore next */
        cov_11t33iclz().s[37]++;
        setError("Failed to load metrics");
      } finally {
        /* istanbul ignore next */
        cov_11t33iclz().s[38]++;
        setLoading(false);
      }
    };
    /* istanbul ignore next */
    cov_11t33iclz().s[39]++;
    fetchMetrics();
    // Refresh metrics every 30 seconds
    const interval =
    /* istanbul ignore next */
    (cov_11t33iclz().s[40]++, setInterval(fetchMetrics, 30000));
    /* istanbul ignore next */
    cov_11t33iclz().s[41]++;
    return () => {
      /* istanbul ignore next */
      cov_11t33iclz().f[9]++;
      cov_11t33iclz().s[42]++;
      return clearInterval(interval);
    };
  }, []);
  /* istanbul ignore next */
  cov_11t33iclz().s[43]++;
  if (loading) {
    /* istanbul ignore next */
    cov_11t33iclz().b[5][0]++;
    cov_11t33iclz().s[44]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "flex justify-center items-center h-64",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_LoadingSpinner.LoadingSpinner, {
        size: "lg"
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_11t33iclz().b[5][1]++;
  }
  cov_11t33iclz().s[45]++;
  if (error) {
    /* istanbul ignore next */
    cov_11t33iclz().b[6][0]++;
    cov_11t33iclz().s[46]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "bg-red-50 border border-red-200 rounded-lg p-4",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-red-800",
        children: error
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_11t33iclz().b[6][1]++;
  }
  cov_11t33iclz().s[47]++;
  if (!metrics) {
    /* istanbul ignore next */
    cov_11t33iclz().b[7][0]++;
    cov_11t33iclz().s[48]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "bg-gray-50 border border-gray-200 rounded-lg p-4",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-gray-600",
        children: "No metrics available"
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_11t33iclz().b[7][1]++;
  }
  cov_11t33iclz().s[49]++;
  const formatNumber = num => {
    /* istanbul ignore next */
    cov_11t33iclz().f[10]++;
    cov_11t33iclz().s[50]++;
    if (num >= 1000000) {
      /* istanbul ignore next */
      cov_11t33iclz().b[8][0]++;
      cov_11t33iclz().s[51]++;
      return (num / 1000000).toFixed(1) + "M";
    } else {
      /* istanbul ignore next */
      cov_11t33iclz().b[8][1]++;
      cov_11t33iclz().s[52]++;
      if (num >= 1000) {
        /* istanbul ignore next */
        cov_11t33iclz().b[9][0]++;
        cov_11t33iclz().s[53]++;
        return (num / 1000).toFixed(1) + "K";
      } else
      /* istanbul ignore next */
      {
        cov_11t33iclz().b[9][1]++;
      }
    }
    /* istanbul ignore next */
    cov_11t33iclz().s[54]++;
    return num.toString();
  };
  /* istanbul ignore next */
  cov_11t33iclz().s[55]++;
  const formatPercentage = num => {
    /* istanbul ignore next */
    cov_11t33iclz().f[11]++;
    cov_11t33iclz().s[56]++;
    return `${(num * 100).toFixed(1)}%`;
  };
  /* istanbul ignore next */
  cov_11t33iclz().s[57]++;
  const formatTime = ms => {
    /* istanbul ignore next */
    cov_11t33iclz().f[12]++;
    cov_11t33iclz().s[58]++;
    if (ms >= 1000) {
      /* istanbul ignore next */
      cov_11t33iclz().b[10][0]++;
      cov_11t33iclz().s[59]++;
      return `${(ms / 1000).toFixed(1)}s`;
    } else
    /* istanbul ignore next */
    {
      cov_11t33iclz().b[10][1]++;
    }
    cov_11t33iclz().s[60]++;
    return `${ms.toFixed(0)}ms`;
  };
  /* istanbul ignore next */
  cov_11t33iclz().s[61]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "space-y-6",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
        className: "text-lg font-semibold text-gray-900 mb-4",
        children: "Real-time Metrics"
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(MetricCard, {
          title: "Active Tests",
          value: metrics.realtime.activeTests,
          severity: metrics.realtime.activeTests > 0 ?
          /* istanbul ignore next */
          (cov_11t33iclz().b[11][0]++, "info") :
          /* istanbul ignore next */
          (cov_11t33iclz().b[11][1]++, "success")
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(MetricCard, {
          title: "Tests/Second",
          value: metrics.realtime.testsPerSecond.toFixed(1),
          severity: metrics.realtime.testsPerSecond > 0 ?
          /* istanbul ignore next */
          (cov_11t33iclz().b[12][0]++, "success") :
          /* istanbul ignore next */
          (cov_11t33iclz().b[12][1]++, "info")
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(MetricCard, {
          title: "Success Rate",
          value: formatPercentage(metrics.realtime.successRate),
          severity: metrics.realtime.successRate >= 0.9 ?
          /* istanbul ignore next */
          (cov_11t33iclz().b[13][0]++, "success") :
          /* istanbul ignore next */
          (cov_11t33iclz().b[13][1]++, metrics.realtime.successRate >= 0.7 ?
          /* istanbul ignore next */
          (cov_11t33iclz().b[14][0]++, "warning") :
          /* istanbul ignore next */
          (cov_11t33iclz().b[14][1]++, "error"))
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(MetricCard, {
          title: "Avg Response Time",
          value: formatTime(metrics.realtime.averageResponseTime),
          severity: metrics.realtime.averageResponseTime <= 1000 ?
          /* istanbul ignore next */
          (cov_11t33iclz().b[15][0]++, "success") :
          /* istanbul ignore next */
          (cov_11t33iclz().b[15][1]++, metrics.realtime.averageResponseTime <= 5000 ?
          /* istanbul ignore next */
          (cov_11t33iclz().b[16][0]++, "warning") :
          /* istanbul ignore next */
          (cov_11t33iclz().b[16][1]++, "error"))
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(MetricCard, {
          title: "Error Rate",
          value: formatPercentage(metrics.realtime.errorRate),
          severity: metrics.realtime.errorRate <= 0.1 ?
          /* istanbul ignore next */
          (cov_11t33iclz().b[17][0]++, "success") :
          /* istanbul ignore next */
          (cov_11t33iclz().b[17][1]++, metrics.realtime.errorRate <= 0.3 ?
          /* istanbul ignore next */
          (cov_11t33iclz().b[18][0]++, "warning") :
          /* istanbul ignore next */
          (cov_11t33iclz().b[18][1]++, "error"))
        })]
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
        className: "text-lg font-semibold text-gray-900 mb-4",
        children: "Historical Overview"
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(MetricCard, {
          title: "Total Tests",
          value: formatNumber(metrics.historical.totalTests),
          subtext: "All time"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(MetricCard, {
          title: "Total Executions",
          value: formatNumber(metrics.historical.totalExecutions),
          subtext: "Unique test runs"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(MetricCard, {
          title: "Overall Success Rate",
          value: formatPercentage(metrics.historical.overallSuccessRate),
          subtext: "Historical average",
          severity: metrics.historical.overallSuccessRate >= 0.9 ?
          /* istanbul ignore next */
          (cov_11t33iclz().b[19][0]++, "success") :
          /* istanbul ignore next */
          (cov_11t33iclz().b[19][1]++, metrics.historical.overallSuccessRate >= 0.7 ?
          /* istanbul ignore next */
          (cov_11t33iclz().b[20][0]++, "warning") :
          /* istanbul ignore next */
          (cov_11t33iclz().b[20][1]++, "error"))
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(MetricCard, {
          title: "Avg Execution Time",
          value: formatTime(metrics.historical.averageExecutionTime),
          subtext: "Per test"
        })]
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
        className: "text-lg font-semibold text-gray-900 mb-4",
        children: "Most Used Models"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "bg-white rounded-lg border border-gray-200 p-4",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4",
          children: metrics.historical.mostUsedModels.slice(0, 6).map((model, index) => {
            /* istanbul ignore next */
            cov_11t33iclz().f[13]++;
            cov_11t33iclz().s[62]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center justify-between p-3 bg-gray-50 rounded-lg",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center space-x-3",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_Badge.Badge, {
                  variant: "secondary",
                  children: ["#", index + 1]
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  className: "font-medium text-gray-900",
                  children: model.model
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                className: "text-sm text-gray-600",
                children: [formatNumber(model.count), " tests"]
              })]
            }, model.model);
          })
        })
      })]
    }),
    /* istanbul ignore next */
    (cov_11t33iclz().b[21][0]++, metrics.insights.length > 0) &&
    /* istanbul ignore next */
    (cov_11t33iclz().b[21][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
        className: "text-lg font-semibold text-gray-900 mb-4",
        children: "System Insights"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "space-y-3",
        children: metrics.insights.map(insight => {
          /* istanbul ignore next */
          cov_11t33iclz().f[14]++;
          cov_11t33iclz().s[63]++;
          return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: `p-4 rounded-lg border-l-4 ${insight.severity === "critical" ?
            /* istanbul ignore next */
            (cov_11t33iclz().b[22][0]++, "bg-red-50 border-red-500") :
            /* istanbul ignore next */
            (cov_11t33iclz().b[22][1]++, insight.severity === "high" ?
            /* istanbul ignore next */
            (cov_11t33iclz().b[23][0]++, "bg-orange-50 border-orange-500") :
            /* istanbul ignore next */
            (cov_11t33iclz().b[23][1]++, insight.severity === "medium" ?
            /* istanbul ignore next */
            (cov_11t33iclz().b[24][0]++, "bg-yellow-50 border-yellow-500") :
            /* istanbul ignore next */
            (cov_11t33iclz().b[24][1]++, "bg-blue-50 border-blue-500")))}`,
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-start justify-between",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex-1",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center space-x-2",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
                    className: "font-medium text-gray-900",
                    children: insight.title
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Badge.Badge, {
                    variant: insight.severity === "critical" ?
                    /* istanbul ignore next */
                    (cov_11t33iclz().b[25][0]++, "destructive") :
                    /* istanbul ignore next */
                    (cov_11t33iclz().b[25][1]++, "secondary"),
                    children: insight.severity
                  })]
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                  className: "text-sm text-gray-600 mt-1",
                  children: insight.description
                }),
                /* istanbul ignore next */
                (cov_11t33iclz().b[26][0]++, insight.recommendations) &&
                /* istanbul ignore next */
                (cov_11t33iclz().b[26][1]++, insight.recommendations.length > 0) &&
                /* istanbul ignore next */
                (cov_11t33iclz().b[26][2]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "mt-2",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                    className: "text-xs font-medium text-gray-700",
                    children: "Recommendations:"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("ul", {
                    className: "text-xs text-gray-600 mt-1 space-y-1",
                    children: insight.recommendations.map((rec, index) => {
                      /* istanbul ignore next */
                      cov_11t33iclz().f[15]++;
                      cov_11t33iclz().s[64]++;
                      return /*#__PURE__*/(0, _jsxruntime.jsxs)("li", {
                        className: "flex items-center",
                        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                          className: "w-1 h-1 bg-gray-400 rounded-full mr-2"
                        }), rec]
                      }, index);
                    })
                  })]
                }))]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "text-xs text-gray-500",
                children: new Date(insight.timestamp).toLocaleString()
              })]
            })
          }, insight.id);
        })
      })]
    }))]
  });
};
const _default =
/* istanbul ignore next */
(cov_11t33iclz().s[65]++, MetricsOverview);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,