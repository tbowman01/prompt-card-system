a55e4f4f7dbabfed927083a065ac174c
"use client";
"use strict";

/* istanbul ignore next */
function cov_a4oduohte() {
  var path = "/workspaces/prompt-card-system/frontend/src/components/SamplePrompts/SamplePromptCard.tsx";
  var hash = "f58e4d76d9d091204c5ddb933fd9ebd13c10ff35";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/prompt-card-system/frontend/src/components/SamplePrompts/SamplePromptCard.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 32
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 39
        }
      },
      "6": {
        start: {
          line: 15,
          column: 24
        },
        end: {
          line: 15,
          column: 55
        }
      },
      "7": {
        start: {
          line: 17,
          column: 34
        },
        end: {
          line: 17,
          column: 61
        }
      },
      "8": {
        start: {
          line: 18,
          column: 36
        },
        end: {
          line: 18,
          column: 63
        }
      },
      "9": {
        start: {
          line: 19,
          column: 31
        },
        end: {
          line: 28,
          column: 5
        }
      },
      "10": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 27,
          column: 9
        }
      },
      "11": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 21,
          column: 29
        }
      },
      "12": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 69
        }
      },
      "13": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 73
        }
      },
      "14": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 30
        }
      },
      "15": {
        start: {
          line: 29,
          column: 29
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "16": {
        start: {
          line: 30,
          column: 23
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "17": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 79
        }
      },
      "18": {
        start: {
          line: 40,
          column: 29
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "19": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 58
        }
      },
      "20": {
        start: {
          line: 41,
          column: 42
        },
        end: {
          line: 41,
          column: 58
        }
      },
      "21": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 56
        }
      },
      "22": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 173,
          column: 7
        }
      },
      "23": {
        start: {
          line: 90,
          column: 87
        },
        end: {
          line: 93,
          column: 44
        }
      },
      "24": {
        start: {
          line: 117,
          column: 45
        },
        end: {
          line: 117,
          column: 67
        }
      },
      "25": {
        start: {
          line: 136,
          column: 67
        },
        end: {
          line: 139,
          column: 31
        }
      },
      "26": {
        start: {
          line: 150,
          column: 45
        },
        end: {
          line: 150,
          column: 69
        }
      },
      "27": {
        start: {
          line: 160,
          column: 45
        },
        end: {
          line: 160,
          column: 70
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "SamplePromptCard",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 25
          }
        },
        loc: {
          start: {
            line: 16,
            column: 58
          },
          end: {
            line: 174,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 31
          },
          end: {
            line: 19,
            column: 32
          }
        },
        loc: {
          start: {
            line: 19,
            column: 64
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 29,
            column: 29
          },
          end: {
            line: 29,
            column: 30
          }
        },
        loc: {
          start: {
            line: 29,
            column: 41
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 29
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 40,
            column: 29
          },
          end: {
            line: 40,
            column: 30
          }
        },
        loc: {
          start: {
            line: 40,
            column: 58
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 40
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 90,
            column: 61
          },
          end: {
            line: 90,
            column: 62
          }
        },
        loc: {
          start: {
            line: 90,
            column: 87
          },
          end: {
            line: 93,
            column: 44
          }
        },
        line: 90
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 117,
            column: 41
          },
          end: {
            line: 117,
            column: 42
          }
        },
        loc: {
          start: {
            line: 117,
            column: 45
          },
          end: {
            line: 117,
            column: 67
          }
        },
        line: 117
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 136,
            column: 46
          },
          end: {
            line: 136,
            column: 47
          }
        },
        loc: {
          start: {
            line: 136,
            column: 67
          },
          end: {
            line: 139,
            column: 31
          }
        },
        line: 136
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 150,
            column: 41
          },
          end: {
            line: 150,
            column: 42
          }
        },
        loc: {
          start: {
            line: 150,
            column: 45
          },
          end: {
            line: 150,
            column: 69
          }
        },
        line: 150
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 160,
            column: 41
          },
          end: {
            line: 160,
            column: 42
          }
        },
        loc: {
          start: {
            line: 160,
            column: 45
          },
          end: {
            line: 160,
            column: 70
          }
        },
        line: 160
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 38
          },
          end: {
            line: 19,
            column: 61
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 57
          },
          end: {
            line: 19,
            column: 61
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 15
          },
          end: {
            line: 38,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 15
          },
          end: {
            line: 38,
            column: 31
          }
        }, {
          start: {
            line: 38,
            column: 35
          },
          end: {
            line: 38,
            column: 78
          }
        }],
        line: 38
      },
      "2": {
        loc: {
          start: {
            line: 40,
            column: 40
          },
          end: {
            line: 40,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 40,
            column: 52
          },
          end: {
            line: 40,
            column: 55
          }
        }],
        line: 40
      },
      "3": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 58
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 58
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "4": {
        loc: {
          start: {
            line: 68,
            column: 40
          },
          end: {
            line: 68,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 68,
            column: 72
          },
          end: {
            line: 68,
            column: 75
          }
        }, {
          start: {
            line: 68,
            column: 78
          },
          end: {
            line: 68,
            column: 80
          }
        }],
        line: 68
      },
      "5": {
        loc: {
          start: {
            line: 94,
            column: 28
          },
          end: {
            line: 101,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 28
          },
          end: {
            line: 94,
            column: 55
          }
        }, {
          start: {
            line: 94,
            column: 73
          },
          end: {
            line: 101,
            column: 30
          }
        }],
        line: 94
      },
      "6": {
        loc: {
          start: {
            line: 119,
            column: 42
          },
          end: {
            line: 119,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 119,
            column: 53
          },
          end: {
            line: 119,
            column: 64
          }
        }, {
          start: {
            line: 119,
            column: 67
          },
          end: {
            line: 119,
            column: 78
          }
        }],
        line: 119
      },
      "7": {
        loc: {
          start: {
            line: 127,
            column: 38
          },
          end: {
            line: 127,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 127,
            column: 49
          },
          end: {
            line: 127,
            column: 71
          }
        }, {
          start: {
            line: 127,
            column: 74
          },
          end: {
            line: 127,
            column: 114
          }
        }],
        line: 127
      },
      "8": {
        loc: {
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 141,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 132,
            column: 23
          }
        }, {
          start: {
            line: 132,
            column: 27
          },
          end: {
            line: 132,
            column: 49
          }
        }, {
          start: {
            line: 132,
            column: 67
          },
          end: {
            line: 141,
            column: 14
          }
        }],
        line: 132
      },
      "9": {
        loc: {
          start: {
            line: 153,
            column: 42
          },
          end: {
            line: 155,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 153,
            column: 66
          },
          end: {
            line: 155,
            column: 34
          }
        }, {
          start: {
            line: 155,
            column: 37
          },
          end: {
            line: 155,
            column: 56
          }
        }],
        line: 153
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/workspaces/prompt-card-system/frontend/src/components/SamplePrompts/SamplePromptCard.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState } from 'react';\nimport { Button } from '@/components/ui/Button';\nimport { LoadingSpinner } from '@/components/ui/LoadingSpinner';\n\ninterface SamplePrompt {\n  title: string;\n  description: string;\n  prompt_template: string;\n  variables: string[];\n  category: string;\n  tags: string[];\n}\n\ninterface SamplePromptCardProps {\n  prompt: SamplePrompt;\n  onCreateFromSample: (title: string, includeTestCases: boolean) => Promise<void>;\n}\n\nexport default function SamplePromptCard({ prompt, onCreateFromSample }: SamplePromptCardProps) {\n  const [loading, setLoading] = useState(false);\n  const [expanded, setExpanded] = useState(false);\n\n  const handleCreatePrompt = async (includeTestCases: boolean = true) => {\n    try {\n      setLoading(true);\n      await onCreateFromSample(prompt.title, includeTestCases);\n    } catch (error) {\n      console.error('Failed to create prompt from sample:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getCategoryColor = (category: string) => {\n    const colors = {\n      creative: 'bg-purple-100 text-purple-800 border-purple-200',\n      technical: 'bg-blue-100 text-blue-800 border-blue-200',\n      analytics: 'bg-green-100 text-green-800 border-green-200',\n      'problem-solving': 'bg-orange-100 text-orange-800 border-orange-200',\n      development: 'bg-indigo-100 text-indigo-800 border-indigo-200',\n      business: 'bg-yellow-100 text-yellow-800 border-yellow-200'\n    };\n    return colors[category as keyof typeof colors] || 'bg-gray-100 text-gray-800 border-gray-200';\n  };\n\n  const truncateTemplate = (template: string, maxLength: number = 200) => {\n    if (template.length <= maxLength) return template;\n    return template.substring(0, maxLength) + '...';\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg border border-gray-200 p-6 hover:shadow-md transition-shadow\">\n      {/* Header */}\n      <div className=\"flex items-start justify-between mb-4\">\n        <div className=\"flex-1\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{prompt.title}</h3>\n          <div className=\"flex items-center gap-2 mb-3\">\n            <span className={`px-2 py-1 text-xs font-medium rounded-full border ${getCategoryColor(prompt.category)}`}>\n              {prompt.category}\n            </span>\n            <span className=\"text-sm text-gray-500\">\n              {prompt.variables.length} variable{prompt.variables.length !== 1 ? 's' : ''}\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* Description */}\n      <p className=\"text-gray-600 text-sm mb-4 leading-relaxed\">\n        {prompt.description}\n      </p>\n\n      {/* Variables */}\n      <div className=\"mb-4\">\n        <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Variables:</h4>\n        <div className=\"flex flex-wrap gap-1\">\n          {prompt.variables.slice(0, 6).map((variable) => (\n            <span \n              key={variable}\n              className=\"inline-flex items-center px-2 py-1 rounded text-xs font-mono bg-gray-100 text-gray-700\"\n            >\n              {`{{${variable}}}`}\n            </span>\n          ))}\n          {prompt.variables.length > 6 && (\n            <span className=\"inline-flex items-center px-2 py-1 rounded text-xs text-gray-500\">\n              +{prompt.variables.length - 6} more\n            </span>\n          )}\n        </div>\n      </div>\n\n      {/* Template Preview */}\n      <div className=\"mb-4\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <h4 className=\"text-sm font-medium text-gray-700\">Template Preview:</h4>\n          <button\n            onClick={() => setExpanded(!expanded)}\n            className=\"text-xs text-blue-600 hover:text-blue-800\"\n          >\n            {expanded ? 'Show less' : 'Show more'}\n          </button>\n        </div>\n        <div className=\"bg-gray-50 border border-gray-200 rounded p-3\">\n          <pre className=\"text-xs font-mono text-gray-700 whitespace-pre-wrap leading-relaxed\">\n            {expanded ? prompt.prompt_template : truncateTemplate(prompt.prompt_template)}\n          </pre>\n        </div>\n      </div>\n\n      {/* Tags */}\n      {prompt.tags && prompt.tags.length > 0 && (\n        <div className=\"mb-4\">\n          <div className=\"flex flex-wrap gap-1\">\n            {prompt.tags.map((tag) => (\n              <span \n                key={tag}\n                className=\"inline-flex items-center px-2 py-1 rounded-full text-xs bg-blue-50 text-blue-700 border border-blue-200\"\n              >\n                {tag}\n              </span>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Actions */}\n      <div className=\"flex items-center justify-between pt-4 border-t border-gray-100\">\n        <div className=\"flex space-x-2\">\n          <Button\n            size=\"sm\"\n            onClick={() => handleCreatePrompt(true)}\n            disabled={loading}\n            className=\"min-w-24\"\n          >\n            {loading ? <LoadingSpinner size=\"sm\" /> : 'Create with Tests'}\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"outline\"\n            onClick={() => handleCreatePrompt(false)}\n            disabled={loading}\n          >\n            Create Only\n          </Button>\n        </div>\n        <div className=\"text-xs text-gray-500\">\n          Sample prompt\n        </div>\n      </div>\n    </div>\n  );\n}"],
      names: ["SamplePromptCard", "prompt", "onCreateFromSample", "loading", "setLoading", "useState", "expanded", "setExpanded", "handleCreatePrompt", "includeTestCases", "title", "error", "console", "getCategoryColor", "category", "colors", "creative", "technical", "analytics", "development", "business", "truncateTemplate", "template", "maxLength", "length", "substring", "div", "className", "h3", "span", "variables", "p", "description", "h4", "slice", "map", "variable", "button", "onClick", "pre", "prompt_template", "tags", "tag", "Button", "size", "disabled", "LoadingSpinner", "variant"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f58e4d76d9d091204c5ddb933fd9ebd13c10ff35"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_a4oduohte = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_a4oduohte();
cov_a4oduohte().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_a4oduohte().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_a4oduohte().f[0]++;
    cov_a4oduohte().s[2]++;
    return SamplePromptCard;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_a4oduohte().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_a4oduohte().s[4]++, require("react"));
const _Button =
/* istanbul ignore next */
(cov_a4oduohte().s[5]++, require("../ui/Button"));
const _LoadingSpinner =
/* istanbul ignore next */
(cov_a4oduohte().s[6]++, require("../ui/LoadingSpinner"));
function SamplePromptCard({
  prompt,
  onCreateFromSample
}) {
  /* istanbul ignore next */
  cov_a4oduohte().f[1]++;
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_a4oduohte().s[7]++, (0, _react.useState)(false));
  const [expanded, setExpanded] =
  /* istanbul ignore next */
  (cov_a4oduohte().s[8]++, (0, _react.useState)(false));
  /* istanbul ignore next */
  cov_a4oduohte().s[9]++;
  const handleCreatePrompt = async (includeTestCases =
  /* istanbul ignore next */
  (cov_a4oduohte().b[0][0]++, true)) => {
    /* istanbul ignore next */
    cov_a4oduohte().f[2]++;
    cov_a4oduohte().s[10]++;
    try {
      /* istanbul ignore next */
      cov_a4oduohte().s[11]++;
      setLoading(true);
      /* istanbul ignore next */
      cov_a4oduohte().s[12]++;
      await onCreateFromSample(prompt.title, includeTestCases);
    } catch (error) {
      /* istanbul ignore next */
      cov_a4oduohte().s[13]++;
      console.error("Failed to create prompt from sample:", error);
    } finally {
      /* istanbul ignore next */
      cov_a4oduohte().s[14]++;
      setLoading(false);
    }
  };
  /* istanbul ignore next */
  cov_a4oduohte().s[15]++;
  const getCategoryColor = category => {
    /* istanbul ignore next */
    cov_a4oduohte().f[3]++;
    const colors =
    /* istanbul ignore next */
    (cov_a4oduohte().s[16]++, {
      creative: "bg-purple-100 text-purple-800 border-purple-200",
      technical: "bg-blue-100 text-blue-800 border-blue-200",
      analytics: "bg-green-100 text-green-800 border-green-200",
      "problem-solving": "bg-orange-100 text-orange-800 border-orange-200",
      development: "bg-indigo-100 text-indigo-800 border-indigo-200",
      business: "bg-yellow-100 text-yellow-800 border-yellow-200"
    });
    /* istanbul ignore next */
    cov_a4oduohte().s[17]++;
    return /* istanbul ignore next */(cov_a4oduohte().b[1][0]++, colors[category]) ||
    /* istanbul ignore next */
    (cov_a4oduohte().b[1][1]++, "bg-gray-100 text-gray-800 border-gray-200");
  };
  /* istanbul ignore next */
  cov_a4oduohte().s[18]++;
  const truncateTemplate = (template, maxLength =
  /* istanbul ignore next */
  (cov_a4oduohte().b[2][0]++, 200)) => {
    /* istanbul ignore next */
    cov_a4oduohte().f[4]++;
    cov_a4oduohte().s[19]++;
    if (template.length <= maxLength) {
      /* istanbul ignore next */
      cov_a4oduohte().b[3][0]++;
      cov_a4oduohte().s[20]++;
      return template;
    } else
    /* istanbul ignore next */
    {
      cov_a4oduohte().b[3][1]++;
    }
    cov_a4oduohte().s[21]++;
    return template.substring(0, maxLength) + "...";
  };
  /* istanbul ignore next */
  cov_a4oduohte().s[22]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "bg-white rounded-lg border border-gray-200 p-6 hover:shadow-md transition-shadow",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "flex items-start justify-between mb-4",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex-1",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
          className: "text-lg font-semibold text-gray-900 mb-2",
          children: prompt.title
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center gap-2 mb-3",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: `px-2 py-1 text-xs font-medium rounded-full border ${getCategoryColor(prompt.category)}`,
            children: prompt.category
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
            className: "text-sm text-gray-500",
            children: [prompt.variables.length, " variable", prompt.variables.length !== 1 ?
            /* istanbul ignore next */
            (cov_a4oduohte().b[4][0]++, "s") :
            /* istanbul ignore next */
            (cov_a4oduohte().b[4][1]++, "")]
          })]
        })]
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
      className: "text-gray-600 text-sm mb-4 leading-relaxed",
      children: prompt.description
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "mb-4",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
        className: "text-sm font-medium text-gray-700 mb-2",
        children: "Variables:"
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex flex-wrap gap-1",
        children: [prompt.variables.slice(0, 6).map(variable => {
          /* istanbul ignore next */
          cov_a4oduohte().f[5]++;
          cov_a4oduohte().s[23]++;
          return /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: "inline-flex items-center px-2 py-1 rounded text-xs font-mono bg-gray-100 text-gray-700",
            children: `{{${variable}}}`
          }, variable);
        }),
        /* istanbul ignore next */
        (cov_a4oduohte().b[5][0]++, prompt.variables.length > 6) &&
        /* istanbul ignore next */
        (cov_a4oduohte().b[5][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
          className: "inline-flex items-center px-2 py-1 rounded text-xs text-gray-500",
          children: ["+", prompt.variables.length - 6, " more"]
        }))]
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "mb-4",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center justify-between mb-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
          className: "text-sm font-medium text-gray-700",
          children: "Template Preview:"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          onClick: () => {
            /* istanbul ignore next */
            cov_a4oduohte().f[6]++;
            cov_a4oduohte().s[24]++;
            return setExpanded(!expanded);
          },
          className: "text-xs text-blue-600 hover:text-blue-800",
          children: expanded ?
          /* istanbul ignore next */
          (cov_a4oduohte().b[6][0]++, "Show less") :
          /* istanbul ignore next */
          (cov_a4oduohte().b[6][1]++, "Show more")
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "bg-gray-50 border border-gray-200 rounded p-3",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("pre", {
          className: "text-xs font-mono text-gray-700 whitespace-pre-wrap leading-relaxed",
          children: expanded ?
          /* istanbul ignore next */
          (cov_a4oduohte().b[7][0]++, prompt.prompt_template) :
          /* istanbul ignore next */
          (cov_a4oduohte().b[7][1]++, truncateTemplate(prompt.prompt_template))
        })
      })]
    }),
    /* istanbul ignore next */
    (cov_a4oduohte().b[8][0]++, prompt.tags) &&
    /* istanbul ignore next */
    (cov_a4oduohte().b[8][1]++, prompt.tags.length > 0) &&
    /* istanbul ignore next */
    (cov_a4oduohte().b[8][2]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "mb-4",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "flex flex-wrap gap-1",
        children: prompt.tags.map(tag => {
          /* istanbul ignore next */
          cov_a4oduohte().f[7]++;
          cov_a4oduohte().s[25]++;
          return /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: "inline-flex items-center px-2 py-1 rounded-full text-xs bg-blue-50 text-blue-700 border border-blue-200",
            children: tag
          }, tag);
        })
      })
    })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex items-center justify-between pt-4 border-t border-gray-100",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex space-x-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
          size: "sm",
          onClick: () => {
            /* istanbul ignore next */
            cov_a4oduohte().f[8]++;
            cov_a4oduohte().s[26]++;
            return handleCreatePrompt(true);
          },
          disabled: loading,
          className: "min-w-24",
          children: loading ?
          /* istanbul ignore next */
          (/*#__PURE__*/cov_a4oduohte().b[9][0]++, (0, _jsxruntime.jsx)(_LoadingSpinner.LoadingSpinner, {
            size: "sm"
          })) :
          /* istanbul ignore next */
          (cov_a4oduohte().b[9][1]++, "Create with Tests")
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
          size: "sm",
          variant: "outline",
          onClick: () => {
            /* istanbul ignore next */
            cov_a4oduohte().f[9]++;
            cov_a4oduohte().s[27]++;
            return handleCreatePrompt(false);
          },
          disabled: loading,
          children: "Create Only"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "text-xs text-gray-500",
        children: "Sample prompt"
      })]
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,