{"version":3,"names":["cov_a4oduohte","actualCoverage","s","SamplePromptCard","prompt","onCreateFromSample","f","loading","setLoading","_react","useState","expanded","setExpanded","handleCreatePrompt","includeTestCases","b","title","error","console","getCategoryColor","category","colors","creative","technical","analytics","development","business","truncateTemplate","template","maxLength","length","substring","_jsxruntime","jsxs","className","jsx","variables","description","slice","map","variable","onClick","prompt_template","tags","tag","_Button","Button","size","disabled","_LoadingSpinner","LoadingSpinner","variant"],"sources":["/workspaces/prompt-card-system/frontend/src/components/SamplePrompts/SamplePromptCard.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { Button } from '@/components/ui/Button';\nimport { LoadingSpinner } from '@/components/ui/LoadingSpinner';\n\ninterface SamplePrompt {\n  title: string;\n  description: string;\n  prompt_template: string;\n  variables: string[];\n  category: string;\n  tags: string[];\n}\n\ninterface SamplePromptCardProps {\n  prompt: SamplePrompt;\n  onCreateFromSample: (title: string, includeTestCases: boolean) => Promise<void>;\n}\n\nexport default function SamplePromptCard({ prompt, onCreateFromSample }: SamplePromptCardProps) {\n  const [loading, setLoading] = useState(false);\n  const [expanded, setExpanded] = useState(false);\n\n  const handleCreatePrompt = async (includeTestCases: boolean = true) => {\n    try {\n      setLoading(true);\n      await onCreateFromSample(prompt.title, includeTestCases);\n    } catch (error) {\n      console.error('Failed to create prompt from sample:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getCategoryColor = (category: string) => {\n    const colors = {\n      creative: 'bg-purple-100 text-purple-800 border-purple-200',\n      technical: 'bg-blue-100 text-blue-800 border-blue-200',\n      analytics: 'bg-green-100 text-green-800 border-green-200',\n      'problem-solving': 'bg-orange-100 text-orange-800 border-orange-200',\n      development: 'bg-indigo-100 text-indigo-800 border-indigo-200',\n      business: 'bg-yellow-100 text-yellow-800 border-yellow-200'\n    };\n    return colors[category as keyof typeof colors] || 'bg-gray-100 text-gray-800 border-gray-200';\n  };\n\n  const truncateTemplate = (template: string, maxLength: number = 200) => {\n    if (template.length <= maxLength) return template;\n    return template.substring(0, maxLength) + '...';\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg border border-gray-200 p-6 hover:shadow-md transition-shadow\">\n      {/* Header */}\n      <div className=\"flex items-start justify-between mb-4\">\n        <div className=\"flex-1\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{prompt.title}</h3>\n          <div className=\"flex items-center gap-2 mb-3\">\n            <span className={`px-2 py-1 text-xs font-medium rounded-full border ${getCategoryColor(prompt.category)}`}>\n              {prompt.category}\n            </span>\n            <span className=\"text-sm text-gray-500\">\n              {prompt.variables.length} variable{prompt.variables.length !== 1 ? 's' : ''}\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* Description */}\n      <p className=\"text-gray-600 text-sm mb-4 leading-relaxed\">\n        {prompt.description}\n      </p>\n\n      {/* Variables */}\n      <div className=\"mb-4\">\n        <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Variables:</h4>\n        <div className=\"flex flex-wrap gap-1\">\n          {prompt.variables.slice(0, 6).map((variable) => (\n            <span \n              key={variable}\n              className=\"inline-flex items-center px-2 py-1 rounded text-xs font-mono bg-gray-100 text-gray-700\"\n            >\n              {`{{${variable}}}`}\n            </span>\n          ))}\n          {prompt.variables.length > 6 && (\n            <span className=\"inline-flex items-center px-2 py-1 rounded text-xs text-gray-500\">\n              +{prompt.variables.length - 6} more\n            </span>\n          )}\n        </div>\n      </div>\n\n      {/* Template Preview */}\n      <div className=\"mb-4\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <h4 className=\"text-sm font-medium text-gray-700\">Template Preview:</h4>\n          <button\n            onClick={() => setExpanded(!expanded)}\n            className=\"text-xs text-blue-600 hover:text-blue-800\"\n          >\n            {expanded ? 'Show less' : 'Show more'}\n          </button>\n        </div>\n        <div className=\"bg-gray-50 border border-gray-200 rounded p-3\">\n          <pre className=\"text-xs font-mono text-gray-700 whitespace-pre-wrap leading-relaxed\">\n            {expanded ? prompt.prompt_template : truncateTemplate(prompt.prompt_template)}\n          </pre>\n        </div>\n      </div>\n\n      {/* Tags */}\n      {prompt.tags && prompt.tags.length > 0 && (\n        <div className=\"mb-4\">\n          <div className=\"flex flex-wrap gap-1\">\n            {prompt.tags.map((tag) => (\n              <span \n                key={tag}\n                className=\"inline-flex items-center px-2 py-1 rounded-full text-xs bg-blue-50 text-blue-700 border border-blue-200\"\n              >\n                {tag}\n              </span>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Actions */}\n      <div className=\"flex items-center justify-between pt-4 border-t border-gray-100\">\n        <div className=\"flex space-x-2\">\n          <Button\n            size=\"sm\"\n            onClick={() => handleCreatePrompt(true)}\n            disabled={loading}\n            className=\"min-w-24\"\n          >\n            {loading ? <LoadingSpinner size=\"sm\" /> : 'Create with Tests'}\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"outline\"\n            onClick={() => handleCreatePrompt(false)}\n            disabled={loading}\n          >\n            Create Only\n          </Button>\n        </div>\n        <div className=\"text-xs text-gray-500\">\n          Sample prompt\n        </div>\n      </div>\n    </div>\n  );\n}"],"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","ignoreList":[]}