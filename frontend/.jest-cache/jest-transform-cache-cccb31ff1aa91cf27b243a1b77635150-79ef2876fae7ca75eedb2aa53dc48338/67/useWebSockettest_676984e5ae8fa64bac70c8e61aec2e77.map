{"version":3,"sources":["/workspaces/prompt-card-system/frontend/src/__tests__/hooks/useWebSocket.test.ts"],"sourcesContent":["import { renderHook, act } from '@testing-library/react'\nimport { useWebSocket } from '@/hooks/useWebSocket'\n\n// Mock socket.io-client\njest.mock('socket.io-client', () => {\n  const mockSocket = {\n    connect: jest.fn(),\n    disconnect: jest.fn(),\n    on: jest.fn(),\n    off: jest.fn(),\n    emit: jest.fn(),\n    connected: false,\n  }\n  \n  return {\n    io: jest.fn(() => mockSocket),\n    __mockSocket: mockSocket,\n  }\n})\n\nimport { io } from 'socket.io-client'\n\nconst mockSocket = (io as any).__mockSocket\n\ndescribe('useWebSocket', () => {\n  beforeEach(() => {\n    jest.clearAllMocks()\n    mockSocket.connected = false\n  })\n\n  it('initializes with disconnected state', () => {\n    const { result } = renderHook(() => useWebSocket('http://localhost:3001'))\n\n    expect(result.current.connected).toBe(false)\n    expect(result.current.messages).toEqual([])\n    expect(result.current.error).toBe(null)\n  })\n\n  it('connects to WebSocket server', () => {\n    renderHook(() => useWebSocket('http://localhost:3001'))\n\n    expect(io).toHaveBeenCalledWith('http://localhost:3001', {\n      transports: ['websocket'],\n      autoConnect: true,\n    })\n  })\n\n  it('handles connection events', () => {\n    const { result } = renderHook(() => useWebSocket('http://localhost:3001'))\n\n    // Simulate connect event\n    const connectHandler = mockSocket.on.mock.calls.find(call => call[0] === 'connect')[1]\n    act(() => {\n      mockSocket.connected = true\n      connectHandler()\n    })\n\n    expect(result.current.connected).toBe(true)\n    expect(result.current.error).toBe(null)\n  })\n\n  it('handles disconnect events', () => {\n    const { result } = renderHook(() => useWebSocket('http://localhost:3001'))\n\n    // First connect\n    const connectHandler = mockSocket.on.mock.calls.find(call => call[0] === 'connect')[1]\n    act(() => {\n      mockSocket.connected = true\n      connectHandler()\n    })\n\n    // Then disconnect\n    const disconnectHandler = mockSocket.on.mock.calls.find(call => call[0] === 'disconnect')[1]\n    act(() => {\n      mockSocket.connected = false\n      disconnectHandler()\n    })\n\n    expect(result.current.connected).toBe(false)\n  })\n\n  it('handles error events', () => {\n    const { result } = renderHook(() => useWebSocket('http://localhost:3001'))\n\n    const errorHandler = mockSocket.on.mock.calls.find(call => call[0] === 'error')[1]\n    const errorMessage = 'Connection failed'\n    \n    act(() => {\n      errorHandler(errorMessage)\n    })\n\n    expect(result.current.error).toBe(errorMessage)\n  })\n\n  it('handles message events', () => {\n    const { result } = renderHook(() => useWebSocket('http://localhost:3001'))\n\n    const messageHandler = mockSocket.on.mock.calls.find(call => call[0] === 'message')[1]\n    const testMessage = { type: 'test', data: 'test data' }\n    \n    act(() => {\n      messageHandler(testMessage)\n    })\n\n    expect(result.current.messages).toEqual([testMessage])\n  })\n\n  it('accumulates multiple messages', () => {\n    const { result } = renderHook(() => useWebSocket('http://localhost:3001'))\n\n    const messageHandler = mockSocket.on.mock.calls.find(call => call[0] === 'message')[1]\n    \n    act(() => {\n      messageHandler({ type: 'message1', data: 'data1' })\n      messageHandler({ type: 'message2', data: 'data2' })\n    })\n\n    expect(result.current.messages).toHaveLength(2)\n    expect(result.current.messages[0]).toEqual({ type: 'message1', data: 'data1' })\n    expect(result.current.messages[1]).toEqual({ type: 'message2', data: 'data2' })\n  })\n\n  it('provides sendMessage function', () => {\n    const { result } = renderHook(() => useWebSocket('http://localhost:3001'))\n\n    act(() => {\n      result.current.sendMessage('test-event', { data: 'test' })\n    })\n\n    expect(mockSocket.emit).toHaveBeenCalledWith('test-event', { data: 'test' })\n  })\n\n  it('cleans up on unmount', () => {\n    const { unmount } = renderHook(() => useWebSocket('http://localhost:3001'))\n\n    unmount()\n\n    expect(mockSocket.disconnect).toHaveBeenCalled()\n  })\n\n  it('removes event listeners on unmount', () => {\n    const { unmount } = renderHook(() => useWebSocket('http://localhost:3001'))\n\n    unmount()\n\n    // Should call off for each event type\n    expect(mockSocket.off).toHaveBeenCalledWith('connect', expect.any(Function))\n    expect(mockSocket.off).toHaveBeenCalledWith('disconnect', expect.any(Function))\n    expect(mockSocket.off).toHaveBeenCalledWith('error', expect.any(Function))\n    expect(mockSocket.off).toHaveBeenCalledWith('message', expect.any(Function))\n  })\n\n  it('handles reconnection attempts', () => {\n    const { result } = renderHook(() => useWebSocket('http://localhost:3001'))\n\n    // Simulate disconnect\n    const disconnectHandler = mockSocket.on.mock.calls.find(call => call[0] === 'disconnect')[1]\n    act(() => {\n      mockSocket.connected = false\n      disconnectHandler()\n    })\n\n    expect(result.current.connected).toBe(false)\n\n    // Simulate reconnect\n    const connectHandler = mockSocket.on.mock.calls.find(call => call[0] === 'connect')[1]\n    act(() => {\n      mockSocket.connected = true\n      connectHandler()\n    })\n\n    expect(result.current.connected).toBe(true)\n    expect(result.current.error).toBe(null) // Error should be cleared on reconnect\n  })\n\n  it('handles custom options', () => {\n    const customOptions = {\n      transports: ['polling'],\n      autoConnect: false,\n    }\n\n    renderHook(() => useWebSocket('http://localhost:3001', customOptions))\n\n    expect(io).toHaveBeenCalledWith('http://localhost:3001', customOptions)\n  })\n})"],"names":["jest","mock","mockSocket","connect","fn","disconnect","on","off","emit","connected","io","__mockSocket","describe","beforeEach","clearAllMocks","it","result","renderHook","useWebSocket","expect","current","toBe","messages","toEqual","error","toHaveBeenCalledWith","transports","autoConnect","connectHandler","calls","find","call","act","disconnectHandler","errorHandler","errorMessage","messageHandler","testMessage","type","data","toHaveLength","sendMessage","unmount","toHaveBeenCalled","any","Function","customOptions"],"mappings":"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"}