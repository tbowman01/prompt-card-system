09f8c8bd173565184b104aa2c320fa59
"use strict";

/* istanbul ignore next */
function cov_273b7rsr69() {
  var path = "/workspaces/prompt-card-system/frontend/src/components/ui/badge.tsx";
  var hash = "722c6e0e1c3c3d7b7d84a433e4bfb713e891f3a7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/prompt-card-system/frontend/src/components/ui/badge.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 21
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "4": {
        start: {
          line: 12,
          column: 29
        },
        end: {
          line: 12,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 51
        }
      },
      "6": {
        start: {
          line: 14,
          column: 39
        },
        end: {
          line: 14,
          column: 51
        }
      },
      "7": {
        start: {
          line: 15,
          column: 28
        },
        end: {
          line: 15,
          column: 41
        }
      },
      "8": {
        start: {
          line: 16,
          column: 27
        },
        end: {
          line: 16,
          column: 40
        }
      },
      "9": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 20
        }
      },
      "10": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 66
        }
      },
      "11": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 24,
          column: 5
        }
      },
      "12": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 19
        }
      },
      "13": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "14": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 28,
          column: 10
        }
      },
      "15": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 53
        }
      },
      "16": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "17": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 30
        }
      },
      "18": {
        start: {
          line: 34,
          column: 17
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "19": {
        start: {
          line: 37,
          column: 32
        },
        end: {
          line: 37,
          column: 88
        }
      },
      "20": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "21": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "22": {
        start: {
          line: 40,
          column: 23
        },
        end: {
          line: 40,
          column: 95
        }
      },
      "23": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 45,
          column: 13
        }
      },
      "24": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 57
        }
      },
      "25": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 39
        }
      },
      "26": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 25
        }
      },
      "27": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "28": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 31
        }
      },
      "29": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 18
        }
      },
      "30": {
        start: {
          line: 54,
          column: 14
        },
        end: {
          line: 66,
          column: 1
        }
      },
      "31": {
        start: {
          line: 55,
          column: 24
        },
        end: {
          line: 55,
          column: 97
        }
      },
      "32": {
        start: {
          line: 56,
          column: 27
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "33": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 65,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 33
          }
        },
        loc: {
          start: {
            line: 13,
            column: 47
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 39
          },
          end: {
            line: 17,
            column: 40
          }
        },
        loc: {
          start: {
            line: 17,
            column: 61
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 34
          }
        },
        loc: {
          start: {
            line: 21,
            column: 53
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 54,
            column: 14
          },
          end: {
            line: 54,
            column: 15
          }
        },
        loc: {
          start: {
            line: 54,
            column: 67
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 54
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 18,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 18,
            column: 29
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 48
          },
          end: {
            line: 18,
            column: 65
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 22,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 22,
            column: 20
          }
        }, {
          start: {
            line: 22,
            column: 24
          },
          end: {
            line: 22,
            column: 27
          }
        }, {
          start: {
            line: 22,
            column: 31
          },
          end: {
            line: 22,
            column: 45
          }
        }],
        line: 22
      },
      "4": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "5": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 20
          }
        }, {
          start: {
            line: 25,
            column: 24
          },
          end: {
            line: 25,
            column: 47
          }
        }, {
          start: {
            line: 25,
            column: 51
          },
          end: {
            line: 25,
            column: 76
          }
        }],
        line: 25
      },
      "6": {
        loc: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "7": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 13
          }
        }, {
          start: {
            line: 31,
            column: 17
          },
          end: {
            line: 31,
            column: 31
          }
        }],
        line: 31
      },
      "8": {
        loc: {
          start: {
            line: 37,
            column: 32
          },
          end: {
            line: 37,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 32
          },
          end: {
            line: 37,
            column: 53
          }
        }, {
          start: {
            line: 37,
            column: 57
          },
          end: {
            line: 37,
            column: 88
          }
        }],
        line: 37
      },
      "9": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "10": {
        loc: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 29
          }
        }, {
          start: {
            line: 39,
            column: 33
          },
          end: {
            line: 39,
            column: 79
          }
        }],
        line: 39
      },
      "11": {
        loc: {
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 40,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 47
          },
          end: {
            line: 40,
            column: 88
          }
        }, {
          start: {
            line: 40,
            column: 91
          },
          end: {
            line: 40,
            column: 95
          }
        }],
        line: 40
      },
      "12": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        }, {
          start: {
            line: 43,
            column: 19
          },
          end: {
            line: 45,
            column: 13
          }
        }],
        line: 41
      },
      "13": {
        loc: {
          start: {
            line: 41,
            column: 16
          },
          end: {
            line: 41,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 16
          },
          end: {
            line: 41,
            column: 20
          }
        }, {
          start: {
            line: 41,
            column: 25
          },
          end: {
            line: 41,
            column: 33
          }
        }, {
          start: {
            line: 41,
            column: 37
          },
          end: {
            line: 41,
            column: 45
          }
        }],
        line: 41
      },
      "14": {
        loc: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "15": {
        loc: {
          start: {
            line: 54,
            column: 17
          },
          end: {
            line: 54,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 54,
            column: 27
          },
          end: {
            line: 54,
            column: 36
          }
        }],
        line: 54
      },
      "16": {
        loc: {
          start: {
            line: 54,
            column: 38
          },
          end: {
            line: 54,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 54,
            column: 50
          },
          end: {
            line: 54,
            column: 52
          }
        }],
        line: 54
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/workspaces/prompt-card-system/frontend/src/components/ui/badge.tsx"],
      sourcesContent: ["import * as React from \"react\";\n\ninterface BadgeProps {\n  variant?: 'default' | 'secondary' | 'destructive' | 'outline';\n  className?: string;\n  children: React.ReactNode;\n}\n\nexport const Badge: React.FC<BadgeProps> = ({ \n  variant = 'default', \n  className = \"\", \n  children \n}) => {\n  const baseClasses = \"inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium\";\n  \n  const variantClasses = {\n    default: \"bg-blue-100 text-blue-800\",\n    secondary: \"bg-yellow-100 text-yellow-800\", \n    destructive: \"bg-red-100 text-red-800\",\n    outline: \"border border-gray-200 text-gray-700\"\n  };\n\n  return (\n    <span className={`${baseClasses} ${variantClasses[variant]} ${className}`}>\n      {children}\n    </span>\n  );\n};"],
      names: ["Badge", "variant", "className", "children", "baseClasses", "variantClasses", "default", "secondary", "destructive", "outline", "span"],
      mappings: ";;;;+BAQaA;;;eAAAA;;;;+DARU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQhB,MAAMA,QAA8B,CAAC,EAC1CC,UAAU,SAAS,EACnBC,YAAY,EAAE,EACdC,QAAQ,EACT;IACC,MAAMC,cAAc;IAEpB,MAAMC,iBAAiB;QACrBC,SAAS;QACTC,WAAW;QACXC,aAAa;QACbC,SAAS;IACX;IAEA,qBACE,qBAACC;QAAKR,WAAW,CAAC,EAAEE,YAAY,CAAC,EAAEC,cAAc,CAACJ,QAAQ,CAAC,CAAC,EAAEC,UAAU,CAAC;kBACtEC;;AAGP"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "722c6e0e1c3c3d7b7d84a433e4bfb713e891f3a7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_273b7rsr69 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_273b7rsr69();
cov_273b7rsr69().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_273b7rsr69().s[1]++;
Object.defineProperty(exports, "Badge", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_273b7rsr69().f[0]++;
    cov_273b7rsr69().s[2]++;
    return Badge;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_273b7rsr69().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_273b7rsr69().s[4]++, _interop_require_wildcard(require("react")));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_273b7rsr69().f[1]++;
  cov_273b7rsr69().s[5]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_273b7rsr69().b[0][0]++;
    cov_273b7rsr69().s[6]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_273b7rsr69().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_273b7rsr69().s[7]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_273b7rsr69().s[8]++, new WeakMap());
  /* istanbul ignore next */
  cov_273b7rsr69().s[9]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_273b7rsr69().f[2]++;
    cov_273b7rsr69().s[10]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_273b7rsr69().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_273b7rsr69().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_273b7rsr69().f[3]++;
  cov_273b7rsr69().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_273b7rsr69().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_273b7rsr69().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_273b7rsr69().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_273b7rsr69().b[2][0]++;
    cov_273b7rsr69().s[12]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_273b7rsr69().b[2][1]++;
  }
  cov_273b7rsr69().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_273b7rsr69().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_273b7rsr69().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_273b7rsr69().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_273b7rsr69().b[4][0]++;
    cov_273b7rsr69().s[14]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_273b7rsr69().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_273b7rsr69().s[15]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_273b7rsr69().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_273b7rsr69().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_273b7rsr69().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_273b7rsr69().b[6][0]++;
    cov_273b7rsr69().s[17]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_273b7rsr69().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_273b7rsr69().s[18]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_273b7rsr69().s[19]++,
  /* istanbul ignore next */
  (cov_273b7rsr69().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_273b7rsr69().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_273b7rsr69().s[20]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_273b7rsr69().s[21]++;
    if (
    /* istanbul ignore next */
    (cov_273b7rsr69().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_273b7rsr69().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_273b7rsr69().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_273b7rsr69().s[22]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_273b7rsr69().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_273b7rsr69().b[11][1]++, null));
      /* istanbul ignore next */
      cov_273b7rsr69().s[23]++;
      if (
      /* istanbul ignore next */
      (cov_273b7rsr69().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_273b7rsr69().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_273b7rsr69().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_273b7rsr69().b[12][0]++;
        cov_273b7rsr69().s[24]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_273b7rsr69().b[12][1]++;
        cov_273b7rsr69().s[25]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_273b7rsr69().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_273b7rsr69().s[26]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_273b7rsr69().s[27]++;
  if (cache) {
    /* istanbul ignore next */
    cov_273b7rsr69().b[14][0]++;
    cov_273b7rsr69().s[28]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_273b7rsr69().b[14][1]++;
  }
  cov_273b7rsr69().s[29]++;
  return newObj;
}
/* istanbul ignore next */
cov_273b7rsr69().s[30]++;
const Badge = ({
  variant =
  /* istanbul ignore next */
  (cov_273b7rsr69().b[15][0]++, "default"),
  className =
  /* istanbul ignore next */
  (cov_273b7rsr69().b[16][0]++, ""),
  children
}) => {
  /* istanbul ignore next */
  cov_273b7rsr69().f[4]++;
  const baseClasses =
  /* istanbul ignore next */
  (cov_273b7rsr69().s[31]++, "inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium");
  const variantClasses =
  /* istanbul ignore next */
  (cov_273b7rsr69().s[32]++, {
    default: "bg-blue-100 text-blue-800",
    secondary: "bg-yellow-100 text-yellow-800",
    destructive: "bg-red-100 text-red-800",
    outline: "border border-gray-200 text-gray-700"
  });
  /* istanbul ignore next */
  cov_273b7rsr69().s[33]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
    className: `${baseClasses} ${variantClasses[variant]} ${className}`,
    children: children
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCYWRnZSIsInZhcmlhbnQiLCJjb3ZfMjczYjdyc3I2OSIsImIiLCJjbGFzc05hbWUiLCJjaGlsZHJlbiIsImYiLCJiYXNlQ2xhc3NlcyIsInMiLCJ2YXJpYW50Q2xhc3NlcyIsImRlZmF1bHQiLCJzZWNvbmRhcnkiLCJkZXN0cnVjdGl2ZSIsIm91dGxpbmUiLCJfanN4cnVudGltZSIsImpzeCJdLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL3Byb21wdC1jYXJkLXN5c3RlbS9mcm9udGVuZC9zcmMvY29tcG9uZW50cy91aS9iYWRnZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5cbmludGVyZmFjZSBCYWRnZVByb3BzIHtcbiAgdmFyaWFudD86ICdkZWZhdWx0JyB8ICdzZWNvbmRhcnknIHwgJ2Rlc3RydWN0aXZlJyB8ICdvdXRsaW5lJztcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xufVxuXG5leHBvcnQgY29uc3QgQmFkZ2U6IFJlYWN0LkZDPEJhZGdlUHJvcHM+ID0gKHsgXG4gIHZhcmlhbnQgPSAnZGVmYXVsdCcsIFxuICBjbGFzc05hbWUgPSBcIlwiLCBcbiAgY2hpbGRyZW4gXG59KSA9PiB7XG4gIGNvbnN0IGJhc2VDbGFzc2VzID0gXCJpbmxpbmUtZmxleCBpdGVtcy1jZW50ZXIgcm91bmRlZC1mdWxsIHB4LTIuNSBweS0wLjUgdGV4dC14cyBmb250LW1lZGl1bVwiO1xuICBcbiAgY29uc3QgdmFyaWFudENsYXNzZXMgPSB7XG4gICAgZGVmYXVsdDogXCJiZy1ibHVlLTEwMCB0ZXh0LWJsdWUtODAwXCIsXG4gICAgc2Vjb25kYXJ5OiBcImJnLXllbGxvdy0xMDAgdGV4dC15ZWxsb3ctODAwXCIsIFxuICAgIGRlc3RydWN0aXZlOiBcImJnLXJlZC0xMDAgdGV4dC1yZWQtODAwXCIsXG4gICAgb3V0bGluZTogXCJib3JkZXIgYm9yZGVyLWdyYXktMjAwIHRleHQtZ3JheS03MDBcIlxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPHNwYW4gY2xhc3NOYW1lPXtgJHtiYXNlQ2xhc3Nlc30gJHt2YXJpYW50Q2xhc3Nlc1t2YXJpYW50XX0gJHtjbGFzc05hbWV9YH0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9zcGFuPlxuICApO1xufTsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0JBUWE7Ozs7OztXQUFBQSxLQUFBOzs7Ozs7Ozt5RUFSVTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBUWhCLE1BQU1BLEtBQUEsR0FBOEJBLENBQUM7RUFDMUNDLE9BQUE7RUFBQTtFQUFBLENBQUFDLGNBQUEsR0FBQUMsQ0FBQSxXQUFVLFNBQVM7RUFDbkJDLFNBQUE7RUFBQTtFQUFBLENBQUFGLGNBQUEsR0FBQUMsQ0FBQSxXQUFZLEVBQUU7RUFDZEU7QUFBUSxDQUNUO0VBQUE7RUFBQUgsY0FBQSxHQUFBSSxDQUFBO0VBQ0MsTUFBTUMsV0FBQTtFQUFBO0VBQUEsQ0FBQUwsY0FBQSxHQUFBTSxDQUFBLFFBQWM7RUFFcEIsTUFBTUMsY0FBQTtFQUFBO0VBQUEsQ0FBQVAsY0FBQSxHQUFBTSxDQUFBLFFBQWlCO0lBQ3JCRSxPQUFBLEVBQVM7SUFDVEMsU0FBQSxFQUFXO0lBQ1hDLFdBQUEsRUFBYTtJQUNiQyxPQUFBLEVBQVM7RUFDWDtFQUFBO0VBQUFYLGNBQUEsR0FBQU0sQ0FBQTtFQUVBLG9CQUNFLElBQUFNLFdBQUEsQ0FBQUMsR0FBQSxFQUFDO0lBQUtYLFNBQUEsRUFBVyxHQUFHRyxXQUFBLElBQWVFLGNBQWMsQ0FBQ1IsT0FBQSxDQUFRLElBQUlHLFNBQUEsRUFBVztjQUN0RUM7O0FBR1AiLCJpZ25vcmVMaXN0IjpbXX0=