be20fc5df771e6eb976ae0a092fe3189
"use client";
"use strict";

/* istanbul ignore next */
function cov_f5yijtf65() {
  var path = "/workspaces/prompt-card-system/frontend/src/components/Monitoring/DistributedTracingViz.tsx";
  var hash = "42270b1051619c213b6c68183e14693dd08a6d96";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/prompt-card-system/frontend/src/components/Monitoring/DistributedTracingViz.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 24
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 26
        },
        end: {
          line: 14,
          column: 66
        }
      },
      "6": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 39
        }
      },
      "7": {
        start: {
          line: 16,
          column: 15
        },
        end: {
          line: 16,
          column: 37
        }
      },
      "8": {
        start: {
          line: 17,
          column: 15
        },
        end: {
          line: 17,
          column: 37
        }
      },
      "9": {
        start: {
          line: 18,
          column: 21
        },
        end: {
          line: 18,
          column: 44
        }
      },
      "10": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 51
        }
      },
      "11": {
        start: {
          line: 20,
          column: 39
        },
        end: {
          line: 20,
          column: 51
        }
      },
      "12": {
        start: {
          line: 21,
          column: 28
        },
        end: {
          line: 21,
          column: 41
        }
      },
      "13": {
        start: {
          line: 22,
          column: 27
        },
        end: {
          line: 22,
          column: 40
        }
      },
      "14": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 25,
          column: 20
        }
      },
      "15": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 66
        }
      },
      "16": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "17": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 19
        }
      },
      "18": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "19": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 34,
          column: 10
        }
      },
      "20": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 53
        }
      },
      "21": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "22": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 30
        }
      },
      "23": {
        start: {
          line: 40,
          column: 17
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "24": {
        start: {
          line: 43,
          column: 32
        },
        end: {
          line: 43,
          column: 88
        }
      },
      "25": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "26": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "27": {
        start: {
          line: 46,
          column: 23
        },
        end: {
          line: 46,
          column: 95
        }
      },
      "28": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 51,
          column: 13
        }
      },
      "29": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 57
        }
      },
      "30": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 39
        }
      },
      "31": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 25
        }
      },
      "32": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "33": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 31
        }
      },
      "34": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 18
        }
      },
      "35": {
        start: {
          line: 60,
          column: 30
        },
        end: {
          line: 930,
          column: 1
        }
      },
      "36": {
        start: {
          line: 61,
          column: 32
        },
        end: {
          line: 61,
          column: 56
        }
      },
      "37": {
        start: {
          line: 62,
          column: 46
        },
        end: {
          line: 62,
          column: 72
        }
      },
      "38": {
        start: {
          line: 63,
          column: 44
        },
        end: {
          line: 63,
          column: 70
        }
      },
      "39": {
        start: {
          line: 64,
          column: 32
        },
        end: {
          line: 70,
          column: 6
        }
      },
      "40": {
        start: {
          line: 71,
          column: 36
        },
        end: {
          line: 71,
          column: 68
        }
      },
      "41": {
        start: {
          line: 72,
          column: 52
        },
        end: {
          line: 72,
          column: 79
        }
      },
      "42": {
        start: {
          line: 73,
          column: 50
        },
        end: {
          line: 73,
          column: 77
        }
      },
      "43": {
        start: {
          line: 74,
          column: 24
        },
        end: {
          line: 74,
          column: 48
        }
      },
      "44": {
        start: {
          line: 75,
          column: 26
        },
        end: {
          line: 75,
          column: 50
        }
      },
      "45": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 82,
          column: 7
        }
      },
      "46": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "47": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 35
        }
      },
      "48": {
        start: {
          line: 83,
          column: 26
        },
        end: {
          line: 102,
          column: 5
        }
      },
      "49": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "50": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 88,
          column: 19
        }
      },
      "51": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 92,
          column: 19
        }
      },
      "52": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 96,
          column: 19
        }
      },
      "53": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 100,
          column: 19
        }
      },
      "54": {
        start: {
          line: 103,
          column: 27
        },
        end: {
          line: 114,
          column: 5
        }
      },
      "55": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "56": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 106,
          column: 53
        }
      },
      "57": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 49
        }
      },
      "58": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 55
        }
      },
      "59": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 112,
          column: 51
        }
      },
      "60": {
        start: {
          line: 115,
          column: 27
        },
        end: {
          line: 134,
          column: 5
        }
      },
      "61": {
        start: {
          line: 116,
          column: 24
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "62": {
        start: {
          line: 130,
          column: 28
        },
        end: {
          line: 130,
          column: 101
        }
      },
      "63": {
        start: {
          line: 130,
          column: 61
        },
        end: {
          line: 130,
          column: 100
        }
      },
      "64": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 133,
          column: 11
        }
      },
      "65": {
        start: {
          line: 135,
          column: 27
        },
        end: {
          line: 140,
          column: 5
        }
      },
      "66": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "67": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 54
        }
      },
      "68": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 42
        }
      },
      "69": {
        start: {
          line: 141,
          column: 28
        },
        end: {
          line: 149,
          column: 5
        }
      },
      "70": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 148,
          column: 11
        }
      },
      "71": {
        start: {
          line: 150,
          column: 26
        },
        end: {
          line: 170,
          column: 5
        }
      },
      "72": {
        start: {
          line: 151,
          column: 24
        },
        end: {
          line: 154,
          column: 15
        }
      },
      "73": {
        start: {
          line: 151,
          column: 50
        },
        end: {
          line: 154,
          column: 13
        }
      },
      "74": {
        start: {
          line: 155,
          column: 22
        },
        end: {
          line: 155,
          column: 24
        }
      },
      "75": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 168,
          column: 11
        }
      },
      "76": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 167,
          column: 13
        }
      },
      "77": {
        start: {
          line: 158,
          column: 16
        },
        end: {
          line: 158,
          column: 33
        }
      },
      "78": {
        start: {
          line: 160,
          column: 31
        },
        end: {
          line: 160,
          column: 57
        }
      },
      "79": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 166,
          column: 17
        }
      },
      "80": {
        start: {
          line: 162,
          column: 20
        },
        end: {
          line: 164,
          column: 21
        }
      },
      "81": {
        start: {
          line: 163,
          column: 24
        },
        end: {
          line: 163,
          column: 45
        }
      },
      "82": {
        start: {
          line: 165,
          column: 20
        },
        end: {
          line: 165,
          column: 47
        }
      },
      "83": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 21
        }
      },
      "84": {
        start: {
          line: 171,
          column: 27
        },
        end: {
          line: 224,
          column: 5
        }
      },
      "85": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 41
        }
      },
      "86": {
        start: {
          line: 172,
          column: 34
        },
        end: {
          line: 172,
          column: 41
        }
      },
      "87": {
        start: {
          line: 173,
          column: 20
        },
        end: {
          line: 173,
          column: 51
        }
      },
      "88": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 36
        }
      },
      "89": {
        start: {
          line: 175,
          column: 23
        },
        end: {
          line: 180,
          column: 9
        }
      },
      "90": {
        start: {
          line: 181,
          column: 22
        },
        end: {
          line: 181,
          column: 91
        }
      },
      "91": {
        start: {
          line: 182,
          column: 23
        },
        end: {
          line: 182,
          column: 90
        }
      },
      "92": {
        start: {
          line: 183,
          column: 18
        },
        end: {
          line: 183,
          column: 94
        }
      },
      "93": {
        start: {
          line: 185,
          column: 24
        },
        end: {
          line: 185,
          column: 70
        }
      },
      "94": {
        start: {
          line: 185,
          column: 57
        },
        end: {
          line: 185,
          column: 68
        }
      },
      "95": {
        start: {
          line: 186,
          column: 24
        },
        end: {
          line: 186,
          column: 83
        }
      },
      "96": {
        start: {
          line: 186,
          column: 57
        },
        end: {
          line: 186,
          column: 81
        }
      },
      "97": {
        start: {
          line: 187,
          column: 26
        },
        end: {
          line: 193,
          column: 10
        }
      },
      "98": {
        start: {
          line: 195,
          column: 23
        },
        end: {
          line: 198,
          column: 23
        }
      },
      "99": {
        start: {
          line: 195,
          column: 67
        },
        end: {
          line: 195,
          column: 71
        }
      },
      "100": {
        start: {
          line: 200,
          column: 22
        },
        end: {
          line: 200,
          column: 158
        }
      },
      "101": {
        start: {
          line: 200,
          column: 126
        },
        end: {
          line: 200,
          column: 157
        }
      },
      "102": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 216,
          column: 11
        }
      },
      "103": {
        start: {
          line: 202,
          column: 44
        },
        end: {
          line: 202,
          column: 66
        }
      },
      "104": {
        start: {
          line: 202,
          column: 87
        },
        end: {
          line: 202,
          column: 160
        }
      },
      "105": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 212,
          column: 13
        }
      },
      "106": {
        start: {
          line: 205,
          column: 20
        },
        end: {
          line: 205,
          column: 37
        }
      },
      "107": {
        start: {
          line: 207,
          column: 20
        },
        end: {
          line: 207,
          column: 37
        }
      },
      "108": {
        start: {
          line: 209,
          column: 20
        },
        end: {
          line: 209,
          column: 37
        }
      },
      "109": {
        start: {
          line: 211,
          column: 20
        },
        end: {
          line: 211,
          column: 37
        }
      },
      "110": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 31
        }
      },
      "111": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 37
        }
      },
      "112": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 218,
          column: 225
        }
      },
      "113": {
        start: {
          line: 218,
          column: 185
        },
        end: {
          line: 218,
          column: 223
        }
      },
      "114": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 220,
          column: 213
        }
      },
      "115": {
        start: {
          line: 220,
          column: 44
        },
        end: {
          line: 220,
          column: 70
        }
      },
      "116": {
        start: {
          line: 220,
          column: 185
        },
        end: {
          line: 220,
          column: 211
        }
      },
      "117": {
        start: {
          line: 222,
          column: 25
        },
        end: {
          line: 222,
          column: 100
        }
      },
      "118": {
        start: {
          line: 222,
          column: 67
        },
        end: {
          line: 222,
          column: 99
        }
      },
      "119": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 82
        }
      },
      "120": {
        start: {
          line: 225,
          column: 29
        },
        end: {
          line: 264,
          column: 5
        }
      },
      "121": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 43
        }
      },
      "122": {
        start: {
          line: 226,
          column: 36
        },
        end: {
          line: 226,
          column: 43
        }
      },
      "123": {
        start: {
          line: 227,
          column: 20
        },
        end: {
          line: 227,
          column: 53
        }
      },
      "124": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 228,
          column: 36
        }
      },
      "125": {
        start: {
          line: 229,
          column: 23
        },
        end: {
          line: 234,
          column: 9
        }
      },
      "126": {
        start: {
          line: 235,
          column: 22
        },
        end: {
          line: 235,
          column: 93
        }
      },
      "127": {
        start: {
          line: 236,
          column: 23
        },
        end: {
          line: 236,
          column: 55
        }
      },
      "128": {
        start: {
          line: 237,
          column: 18
        },
        end: {
          line: 237,
          column: 94
        }
      },
      "129": {
        start: {
          line: 239,
          column: 25
        },
        end: {
          line: 239,
          column: 51
        }
      },
      "130": {
        start: {
          line: 240,
          column: 26
        },
        end: {
          line: 242,
          column: 99
        }
      },
      "131": {
        start: {
          line: 242,
          column: 16
        },
        end: {
          line: 242,
          column: 26
        }
      },
      "132": {
        start: {
          line: 242,
          column: 37
        },
        end: {
          line: 242,
          column: 52
        }
      },
      "133": {
        start: {
          line: 242,
          column: 67
        },
        end: {
          line: 242,
          column: 98
        }
      },
      "134": {
        start: {
          line: 243,
          column: 26
        },
        end: {
          line: 246,
          column: 21
        }
      },
      "135": {
        start: {
          line: 247,
          column: 21
        },
        end: {
          line: 247,
          column: 41
        }
      },
      "136": {
        start: {
          line: 249,
          column: 27
        },
        end: {
          line: 249,
          column: 65
        }
      },
      "137": {
        start: {
          line: 251,
          column: 21
        },
        end: {
          line: 251,
          column: 108
        }
      },
      "138": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 257,
          column: 11
        }
      },
      "139": {
        start: {
          line: 252,
          column: 43
        },
        end: {
          line: 252,
          column: 47
        }
      },
      "140": {
        start: {
          line: 252,
          column: 64
        },
        end: {
          line: 252,
          column: 68
        }
      },
      "141": {
        start: {
          line: 252,
          column: 89
        },
        end: {
          line: 252,
          column: 100
        }
      },
      "142": {
        start: {
          line: 252,
          column: 122
        },
        end: {
          line: 252,
          column: 133
        }
      },
      "143": {
        start: {
          line: 252,
          column: 153
        },
        end: {
          line: 252,
          column: 216
        }
      },
      "144": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 256,
          column: 13
        }
      },
      "145": {
        start: {
          line: 254,
          column: 16
        },
        end: {
          line: 254,
          column: 40
        }
      },
      "146": {
        start: {
          line: 255,
          column: 16
        },
        end: {
          line: 255,
          column: 41
        }
      },
      "147": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 263,
          column: 11
        }
      },
      "148": {
        start: {
          line: 259,
          column: 43
        },
        end: {
          line: 259,
          column: 60
        }
      },
      "149": {
        start: {
          line: 259,
          column: 77
        },
        end: {
          line: 259,
          column: 94
        }
      },
      "150": {
        start: {
          line: 260,
          column: 26
        },
        end: {
          line: 260,
          column: 37
        }
      },
      "151": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 63
        }
      },
      "152": {
        start: {
          line: 261,
          column: 53
        },
        end: {
          line: 261,
          column: 63
        }
      },
      "153": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 123
        }
      },
      "154": {
        start: {
          line: 265,
          column: 4
        },
        end: {
          line: 276,
          column: 7
        }
      },
      "155": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 272,
          column: 9
        }
      },
      "156": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 271,
          column: 13
        }
      },
      "157": {
        start: {
          line: 268,
          column: 16
        },
        end: {
          line: 268,
          column: 46
        }
      },
      "158": {
        start: {
          line: 269,
          column: 19
        },
        end: {
          line: 271,
          column: 13
        }
      },
      "159": {
        start: {
          line: 270,
          column: 16
        },
        end: {
          line: 270,
          column: 48
        }
      },
      "160": {
        start: {
          line: 277,
          column: 27
        },
        end: {
          line: 294,
          column: 6
        }
      },
      "161": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 280,
          column: 9
        }
      },
      "162": {
        start: {
          line: 278,
          column: 131
        },
        end: {
          line: 278,
          column: 184
        }
      },
      "163": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 279,
          column: 25
        }
      },
      "164": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 283,
          column: 9
        }
      },
      "165": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 282,
          column: 25
        }
      },
      "166": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 286,
          column: 9
        }
      },
      "167": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 285,
          column: 25
        }
      },
      "168": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 289,
          column: 9
        }
      },
      "169": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 288,
          column: 25
        }
      },
      "170": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 292,
          column: 9
        }
      },
      "171": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 25
        }
      },
      "172": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 293,
          column: 20
        }
      },
      "173": {
        start: {
          line: 295,
          column: 24
        },
        end: {
          line: 297,
          column: 5
        }
      },
      "174": {
        start: {
          line: 296,
          column: 43
        },
        end: {
          line: 296,
          column: 57
        }
      },
      "175": {
        start: {
          line: 298,
          column: 4
        },
        end: {
          line: 929,
          column: 7
        }
      },
      "176": {
        start: {
          line: 329,
          column: 45
        },
        end: {
          line: 329,
          column: 64
        }
      },
      "177": {
        start: {
          line: 335,
          column: 45
        },
        end: {
          line: 335,
          column: 68
        }
      },
      "178": {
        start: {
          line: 341,
          column: 45
        },
        end: {
          line: 341,
          column: 70
        }
      },
      "179": {
        start: {
          line: 362,
          column: 47
        },
        end: {
          line: 365,
          column: 43
        }
      },
      "180": {
        start: {
          line: 362,
          column: 66
        },
        end: {
          line: 365,
          column: 41
        }
      },
      "181": {
        start: {
          line: 371,
          column: 39
        },
        end: {
          line: 374,
          column: 35
        }
      },
      "182": {
        start: {
          line: 371,
          column: 58
        },
        end: {
          line: 374,
          column: 33
        }
      },
      "183": {
        start: {
          line: 381,
          column: 69
        },
        end: {
          line: 384,
          column: 43
        }
      },
      "184": {
        start: {
          line: 389,
          column: 39
        },
        end: {
          line: 392,
          column: 35
        }
      },
      "185": {
        start: {
          line: 389,
          column: 58
        },
        end: {
          line: 392,
          column: 33
        }
      },
      "186": {
        start: {
          line: 418,
          column: 39
        },
        end: {
          line: 421,
          column: 35
        }
      },
      "187": {
        start: {
          line: 418,
          column: 58
        },
        end: {
          line: 421,
          column: 33
        }
      },
      "188": {
        start: {
          line: 428,
          column: 39
        },
        end: {
          line: 431,
          column: 35
        }
      },
      "189": {
        start: {
          line: 428,
          column: 58
        },
        end: {
          line: 431,
          column: 33
        }
      },
      "190": {
        start: {
          line: 450,
          column: 67
        },
        end: {
          line: 543,
          column: 36
        }
      },
      "191": {
        start: {
          line: 453,
          column: 32
        },
        end: {
          line: 453,
          column: 56
        }
      },
      "192": {
        start: {
          line: 454,
          column: 32
        },
        end: {
          line: 454,
          column: 58
        }
      },
      "193": {
        start: {
          line: 522,
          column: 107
        },
        end: {
          line: 531,
          column: 59
        }
      },
      "194": {
        start: {
          line: 560,
          column: 88
        },
        end: {
          line: 584,
          column: 52
        }
      },
      "195": {
        start: {
          line: 562,
          column: 57
        },
        end: {
          line: 562,
          column: 80
        }
      },
      "196": {
        start: {
          line: 661,
          column: 20
        },
        end: {
          line: 661,
          column: 47
        }
      },
      "197": {
        start: {
          line: 662,
          column: 20
        },
        end: {
          line: 662,
          column: 43
        }
      },
      "198": {
        start: {
          line: 753,
          column: 92
        },
        end: {
          line: 779,
          column: 51
        }
      },
      "199": {
        start: {
          line: 756,
          column: 48
        },
        end: {
          line: 756,
          column: 70
        }
      },
      "200": {
        start: {
          line: 757,
          column: 48
        },
        end: {
          line: 757,
          column: 73
        }
      },
      "201": {
        start: {
          line: 789,
          column: 20
        },
        end: {
          line: 789,
          column: 46
        }
      },
      "202": {
        start: {
          line: 790,
          column: 20
        },
        end: {
          line: 790,
          column: 42
        }
      },
      "203": {
        start: {
          line: 896,
          column: 96
        },
        end: {
          line: 921,
          column: 49
        }
      },
      "204": {
        start: {
          line: 931,
          column: 17
        },
        end: {
          line: 931,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 19,
            column: 9
          },
          end: {
            line: 19,
            column: 33
          }
        },
        loc: {
          start: {
            line: 19,
            column: 47
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 19
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 23,
            column: 39
          },
          end: {
            line: 23,
            column: 40
          }
        },
        loc: {
          start: {
            line: 23,
            column: 61
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 34
          }
        },
        loc: {
          start: {
            line: 27,
            column: 53
          },
          end: {
            line: 59,
            column: 1
          }
        },
        line: 27
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 60,
            column: 30
          },
          end: {
            line: 60,
            column: 31
          }
        },
        loc: {
          start: {
            line: 60,
            column: 77
          },
          end: {
            line: 930,
            column: 1
          }
        },
        line: 60
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 76,
            column: 26
          },
          end: {
            line: 76,
            column: 27
          }
        },
        loc: {
          start: {
            line: 76,
            column: 30
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 76
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 83,
            column: 26
          },
          end: {
            line: 83,
            column: 27
          }
        },
        loc: {
          start: {
            line: 83,
            column: 36
          },
          end: {
            line: 102,
            column: 5
          }
        },
        line: 83
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 103,
            column: 27
          },
          end: {
            line: 103,
            column: 28
          }
        },
        loc: {
          start: {
            line: 103,
            column: 37
          },
          end: {
            line: 114,
            column: 5
          }
        },
        line: 103
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 115,
            column: 27
          },
          end: {
            line: 115,
            column: 28
          }
        },
        loc: {
          start: {
            line: 115,
            column: 42
          },
          end: {
            line: 134,
            column: 5
          }
        },
        line: 115
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 130,
            column: 54
          },
          end: {
            line: 130,
            column: 55
          }
        },
        loc: {
          start: {
            line: 130,
            column: 61
          },
          end: {
            line: 130,
            column: 100
          }
        },
        line: 130
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 135,
            column: 27
          },
          end: {
            line: 135,
            column: 28
          }
        },
        loc: {
          start: {
            line: 135,
            column: 39
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 135
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 141,
            column: 28
          },
          end: {
            line: 141,
            column: 29
          }
        },
        loc: {
          start: {
            line: 141,
            column: 41
          },
          end: {
            line: 149,
            column: 5
          }
        },
        line: 141
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 150,
            column: 26
          },
          end: {
            line: 150,
            column: 27
          }
        },
        loc: {
          start: {
            line: 150,
            column: 35
          },
          end: {
            line: 170,
            column: 5
          }
        },
        line: 150
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 151,
            column: 42
          },
          end: {
            line: 151,
            column: 43
          }
        },
        loc: {
          start: {
            line: 151,
            column: 50
          },
          end: {
            line: 154,
            column: 13
          }
        },
        line: 151
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 156,
            column: 22
          },
          end: {
            line: 156,
            column: 23
          }
        },
        loc: {
          start: {
            line: 156,
            column: 30
          },
          end: {
            line: 168,
            column: 9
          }
        },
        line: 156
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 171,
            column: 27
          },
          end: {
            line: 171,
            column: 28
          }
        },
        loc: {
          start: {
            line: 171,
            column: 36
          },
          end: {
            line: 224,
            column: 5
          }
        },
        line: 171
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 185,
            column: 52
          },
          end: {
            line: 185,
            column: 53
          }
        },
        loc: {
          start: {
            line: 185,
            column: 57
          },
          end: {
            line: 185,
            column: 68
          }
        },
        line: 185
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 186,
            column: 52
          },
          end: {
            line: 186,
            column: 53
          }
        },
        loc: {
          start: {
            line: 186,
            column: 57
          },
          end: {
            line: 186,
            column: 81
          }
        },
        line: 186
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 195,
            column: 62
          },
          end: {
            line: 195,
            column: 63
          }
        },
        loc: {
          start: {
            line: 195,
            column: 67
          },
          end: {
            line: 195,
            column: 71
          }
        },
        line: 195
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 200,
            column: 121
          },
          end: {
            line: 200,
            column: 122
          }
        },
        loc: {
          start: {
            line: 200,
            column: 126
          },
          end: {
            line: 200,
            column: 157
          }
        },
        line: 200
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 202,
            column: 39
          },
          end: {
            line: 202,
            column: 40
          }
        },
        loc: {
          start: {
            line: 202,
            column: 44
          },
          end: {
            line: 202,
            column: 66
          }
        },
        line: 202
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 202,
            column: 82
          },
          end: {
            line: 202,
            column: 83
          }
        },
        loc: {
          start: {
            line: 202,
            column: 87
          },
          end: {
            line: 202,
            column: 160
          }
        },
        line: 202
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 202,
            column: 210
          },
          end: {
            line: 202,
            column: 211
          }
        },
        loc: {
          start: {
            line: 202,
            column: 215
          },
          end: {
            line: 213,
            column: 9
          }
        },
        line: 202
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 213,
            column: 85
          },
          end: {
            line: 213,
            column: 86
          }
        },
        loc: {
          start: {
            line: 213,
            column: 97
          },
          end: {
            line: 216,
            column: 9
          }
        },
        line: 213
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 218,
            column: 180
          },
          end: {
            line: 218,
            column: 181
          }
        },
        loc: {
          start: {
            line: 218,
            column: 185
          },
          end: {
            line: 218,
            column: 223
          }
        },
        line: 218
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 220,
            column: 39
          },
          end: {
            line: 220,
            column: 40
          }
        },
        loc: {
          start: {
            line: 220,
            column: 44
          },
          end: {
            line: 220,
            column: 70
          }
        },
        line: 220
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 220,
            column: 180
          },
          end: {
            line: 220,
            column: 181
          }
        },
        loc: {
          start: {
            line: 220,
            column: 185
          },
          end: {
            line: 220,
            column: 211
          }
        },
        line: 220
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 222,
            column: 62
          },
          end: {
            line: 222,
            column: 63
          }
        },
        loc: {
          start: {
            line: 222,
            column: 67
          },
          end: {
            line: 222,
            column: 99
          }
        },
        line: 222
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 225,
            column: 29
          },
          end: {
            line: 225,
            column: 30
          }
        },
        loc: {
          start: {
            line: 225,
            column: 38
          },
          end: {
            line: 264,
            column: 5
          }
        },
        line: 225
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 242,
            column: 11
          },
          end: {
            line: 242,
            column: 12
          }
        },
        loc: {
          start: {
            line: 242,
            column: 16
          },
          end: {
            line: 242,
            column: 26
          }
        },
        line: 242
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 242,
            column: 32
          },
          end: {
            line: 242,
            column: 33
          }
        },
        loc: {
          start: {
            line: 242,
            column: 37
          },
          end: {
            line: 242,
            column: 52
          }
        },
        line: 242
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 242,
            column: 59
          },
          end: {
            line: 242,
            column: 60
          }
        },
        loc: {
          start: {
            line: 242,
            column: 67
          },
          end: {
            line: 242,
            column: 98
          }
        },
        line: 242
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 252,
            column: 38
          },
          end: {
            line: 252,
            column: 39
          }
        },
        loc: {
          start: {
            line: 252,
            column: 43
          },
          end: {
            line: 252,
            column: 47
          }
        },
        line: 252
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 252,
            column: 59
          },
          end: {
            line: 252,
            column: 60
          }
        },
        loc: {
          start: {
            line: 252,
            column: 64
          },
          end: {
            line: 252,
            column: 68
          }
        },
        line: 252
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 252,
            column: 84
          },
          end: {
            line: 252,
            column: 85
          }
        },
        loc: {
          start: {
            line: 252,
            column: 89
          },
          end: {
            line: 252,
            column: 100
          }
        },
        line: 252
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 252,
            column: 117
          },
          end: {
            line: 252,
            column: 118
          }
        },
        loc: {
          start: {
            line: 252,
            column: 122
          },
          end: {
            line: 252,
            column: 133
          }
        },
        line: 252
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 252,
            column: 148
          },
          end: {
            line: 252,
            column: 149
          }
        },
        loc: {
          start: {
            line: 252,
            column: 153
          },
          end: {
            line: 252,
            column: 216
          }
        },
        line: 252
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 252,
            column: 305
          },
          end: {
            line: 252,
            column: 306
          }
        },
        loc: {
          start: {
            line: 252,
            column: 317
          },
          end: {
            line: 257,
            column: 9
          }
        },
        line: 252
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 259,
            column: 38
          },
          end: {
            line: 259,
            column: 39
          }
        },
        loc: {
          start: {
            line: 259,
            column: 43
          },
          end: {
            line: 259,
            column: 60
          }
        },
        line: 259
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 259,
            column: 72
          },
          end: {
            line: 259,
            column: 73
          }
        },
        loc: {
          start: {
            line: 259,
            column: 77
          },
          end: {
            line: 259,
            column: 94
          }
        },
        line: 259
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 259,
            column: 200
          },
          end: {
            line: 259,
            column: 201
          }
        },
        loc: {
          start: {
            line: 259,
            column: 205
          },
          end: {
            line: 263,
            column: 9
          }
        },
        line: 259
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 265,
            column: 26
          },
          end: {
            line: 265,
            column: 27
          }
        },
        loc: {
          start: {
            line: 265,
            column: 30
          },
          end: {
            line: 273,
            column: 5
          }
        },
        line: 265
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 277,
            column: 41
          },
          end: {
            line: 277,
            column: 42
          }
        },
        loc: {
          start: {
            line: 277,
            column: 50
          },
          end: {
            line: 294,
            column: 5
          }
        },
        line: 277
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 278,
            column: 126
          },
          end: {
            line: 278,
            column: 127
          }
        },
        loc: {
          start: {
            line: 278,
            column: 131
          },
          end: {
            line: 278,
            column: 184
          }
        },
        line: 278
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 296,
            column: 34
          },
          end: {
            line: 296,
            column: 35
          }
        },
        loc: {
          start: {
            line: 296,
            column: 43
          },
          end: {
            line: 296,
            column: 57
          }
        },
        line: 296
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 329,
            column: 41
          },
          end: {
            line: 329,
            column: 42
          }
        },
        loc: {
          start: {
            line: 329,
            column: 45
          },
          end: {
            line: 329,
            column: 64
          }
        },
        line: 329
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 335,
            column: 41
          },
          end: {
            line: 335,
            column: 42
          }
        },
        loc: {
          start: {
            line: 335,
            column: 45
          },
          end: {
            line: 335,
            column: 68
          }
        },
        line: 335
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 341,
            column: 41
          },
          end: {
            line: 341,
            column: 42
          }
        },
        loc: {
          start: {
            line: 341,
            column: 45
          },
          end: {
            line: 341,
            column: 70
          }
        },
        line: 341
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 362,
            column: 42
          },
          end: {
            line: 362,
            column: 43
          }
        },
        loc: {
          start: {
            line: 362,
            column: 47
          },
          end: {
            line: 365,
            column: 43
          }
        },
        line: 362
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 362,
            column: 57
          },
          end: {
            line: 362,
            column: 58
          }
        },
        loc: {
          start: {
            line: 362,
            column: 66
          },
          end: {
            line: 365,
            column: 41
          }
        },
        line: 362
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 371,
            column: 34
          },
          end: {
            line: 371,
            column: 35
          }
        },
        loc: {
          start: {
            line: 371,
            column: 39
          },
          end: {
            line: 374,
            column: 35
          }
        },
        line: 371
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 371,
            column: 49
          },
          end: {
            line: 371,
            column: 50
          }
        },
        loc: {
          start: {
            line: 371,
            column: 58
          },
          end: {
            line: 374,
            column: 33
          }
        },
        line: 371
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 381,
            column: 44
          },
          end: {
            line: 381,
            column: 45
          }
        },
        loc: {
          start: {
            line: 381,
            column: 69
          },
          end: {
            line: 384,
            column: 43
          }
        },
        line: 381
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 389,
            column: 34
          },
          end: {
            line: 389,
            column: 35
          }
        },
        loc: {
          start: {
            line: 389,
            column: 39
          },
          end: {
            line: 392,
            column: 35
          }
        },
        line: 389
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 389,
            column: 49
          },
          end: {
            line: 389,
            column: 50
          }
        },
        loc: {
          start: {
            line: 389,
            column: 58
          },
          end: {
            line: 392,
            column: 33
          }
        },
        line: 389
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 418,
            column: 34
          },
          end: {
            line: 418,
            column: 35
          }
        },
        loc: {
          start: {
            line: 418,
            column: 39
          },
          end: {
            line: 421,
            column: 35
          }
        },
        line: 418
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 418,
            column: 49
          },
          end: {
            line: 418,
            column: 50
          }
        },
        loc: {
          start: {
            line: 418,
            column: 58
          },
          end: {
            line: 421,
            column: 33
          }
        },
        line: 418
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 428,
            column: 34
          },
          end: {
            line: 428,
            column: 35
          }
        },
        loc: {
          start: {
            line: 428,
            column: 39
          },
          end: {
            line: 431,
            column: 35
          }
        },
        line: 428
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 428,
            column: 49
          },
          end: {
            line: 428,
            column: 50
          }
        },
        loc: {
          start: {
            line: 428,
            column: 58
          },
          end: {
            line: 431,
            column: 33
          }
        },
        line: 428
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 450,
            column: 44
          },
          end: {
            line: 450,
            column: 45
          }
        },
        loc: {
          start: {
            line: 450,
            column: 67
          },
          end: {
            line: 543,
            column: 36
          }
        },
        line: 450
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 452,
            column: 37
          },
          end: {
            line: 452,
            column: 38
          }
        },
        loc: {
          start: {
            line: 452,
            column: 41
          },
          end: {
            line: 455,
            column: 29
          }
        },
        line: 452
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 522,
            column: 75
          },
          end: {
            line: 522,
            column: 76
          }
        },
        loc: {
          start: {
            line: 522,
            column: 107
          },
          end: {
            line: 531,
            column: 59
          }
        },
        line: 522
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 560,
            column: 65
          },
          end: {
            line: 560,
            column: 66
          }
        },
        loc: {
          start: {
            line: 560,
            column: 88
          },
          end: {
            line: 584,
            column: 52
          }
        },
        line: 560
      },
      "63": {
        name: "(anonymous_63)",
        decl: {
          start: {
            line: 562,
            column: 53
          },
          end: {
            line: 562,
            column: 54
          }
        },
        loc: {
          start: {
            line: 562,
            column: 57
          },
          end: {
            line: 562,
            column: 80
          }
        },
        line: 562
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 660,
            column: 25
          },
          end: {
            line: 660,
            column: 26
          }
        },
        loc: {
          start: {
            line: 660,
            column: 29
          },
          end: {
            line: 663,
            column: 17
          }
        },
        line: 660
      },
      "65": {
        name: "(anonymous_65)",
        decl: {
          start: {
            line: 753,
            column: 70
          },
          end: {
            line: 753,
            column: 71
          }
        },
        loc: {
          start: {
            line: 753,
            column: 92
          },
          end: {
            line: 779,
            column: 51
          }
        },
        line: 753
      },
      "66": {
        name: "(anonymous_66)",
        decl: {
          start: {
            line: 755,
            column: 53
          },
          end: {
            line: 755,
            column: 54
          }
        },
        loc: {
          start: {
            line: 755,
            column: 57
          },
          end: {
            line: 758,
            column: 45
          }
        },
        line: 755
      },
      "67": {
        name: "(anonymous_67)",
        decl: {
          start: {
            line: 788,
            column: 25
          },
          end: {
            line: 788,
            column: 26
          }
        },
        loc: {
          start: {
            line: 788,
            column: 29
          },
          end: {
            line: 791,
            column: 17
          }
        },
        line: 788
      },
      "68": {
        name: "(anonymous_68)",
        decl: {
          start: {
            line: 896,
            column: 68
          },
          end: {
            line: 896,
            column: 69
          }
        },
        loc: {
          start: {
            line: 896,
            column: 96
          },
          end: {
            line: 921,
            column: 49
          }
        },
        line: 896
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 24,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 29
          },
          end: {
            line: 24,
            column: 45
          }
        }, {
          start: {
            line: 24,
            column: 48
          },
          end: {
            line: 24,
            column: 65
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "3": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 20
          }
        }, {
          start: {
            line: 28,
            column: 24
          },
          end: {
            line: 28,
            column: 27
          }
        }, {
          start: {
            line: 28,
            column: 31
          },
          end: {
            line: 28,
            column: 45
          }
        }],
        line: 28
      },
      "4": {
        loc: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "5": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 20
          }
        }, {
          start: {
            line: 31,
            column: 24
          },
          end: {
            line: 31,
            column: 47
          }
        }, {
          start: {
            line: 31,
            column: 51
          },
          end: {
            line: 31,
            column: 76
          }
        }],
        line: 31
      },
      "6": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "7": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 13
          }
        }, {
          start: {
            line: 37,
            column: 17
          },
          end: {
            line: 37,
            column: 31
          }
        }],
        line: 37
      },
      "8": {
        loc: {
          start: {
            line: 43,
            column: 32
          },
          end: {
            line: 43,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 32
          },
          end: {
            line: 43,
            column: 53
          }
        }, {
          start: {
            line: 43,
            column: 57
          },
          end: {
            line: 43,
            column: 88
          }
        }],
        line: 43
      },
      "9": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "10": {
        loc: {
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 45,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 45,
            column: 29
          }
        }, {
          start: {
            line: 45,
            column: 33
          },
          end: {
            line: 45,
            column: 79
          }
        }],
        line: 45
      },
      "11": {
        loc: {
          start: {
            line: 46,
            column: 23
          },
          end: {
            line: 46,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 46,
            column: 47
          },
          end: {
            line: 46,
            column: 88
          }
        }, {
          start: {
            line: 46,
            column: 91
          },
          end: {
            line: 46,
            column: 95
          }
        }],
        line: 46
      },
      "12": {
        loc: {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        }, {
          start: {
            line: 49,
            column: 19
          },
          end: {
            line: 51,
            column: 13
          }
        }],
        line: 47
      },
      "13": {
        loc: {
          start: {
            line: 47,
            column: 16
          },
          end: {
            line: 47,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 16
          },
          end: {
            line: 47,
            column: 20
          }
        }, {
          start: {
            line: 47,
            column: 25
          },
          end: {
            line: 47,
            column: 33
          }
        }, {
          start: {
            line: 47,
            column: 37
          },
          end: {
            line: 47,
            column: 45
          }
        }],
        line: 47
      },
      "14": {
        loc: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "15": {
        loc: {
          start: {
            line: 60,
            column: 39
          },
          end: {
            line: 60,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 60,
            column: 48
          },
          end: {
            line: 60,
            column: 50
          }
        }],
        line: 60
      },
      "16": {
        loc: {
          start: {
            line: 60,
            column: 52
          },
          end: {
            line: 60,
            column: 72
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 60,
            column: 67
          },
          end: {
            line: 60,
            column: 72
          }
        }],
        line: 60
      },
      "17": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "18": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 88,
            column: 19
          }
        }, {
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 92,
            column: 19
          }
        }, {
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 96,
            column: 19
          }
        }, {
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 100,
            column: 19
          }
        }],
        line: 84
      },
      "19": {
        loc: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 106,
            column: 53
          }
        }, {
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 108,
            column: 49
          }
        }, {
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 110,
            column: 55
          }
        }, {
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 112,
            column: 51
          }
        }],
        line: 104
      },
      "20": {
        loc: {
          start: {
            line: 131,
            column: 15
          },
          end: {
            line: 133,
            column: 10
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 15
          },
          end: {
            line: 131,
            column: 44
          }
        }, {
          start: {
            line: 131,
            column: 62
          },
          end: {
            line: 133,
            column: 10
          }
        }],
        line: 131
      },
      "21": {
        loc: {
          start: {
            line: 131,
            column: 23
          },
          end: {
            line: 131,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 23
          },
          end: {
            line: 131,
            column: 34
          }
        }, {
          start: {
            line: 131,
            column: 38
          },
          end: {
            line: 131,
            column: 43
          }
        }],
        line: 131
      },
      "22": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "23": {
        loc: {
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 167,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 167,
            column: 13
          }
        }, {
          start: {
            line: 159,
            column: 19
          },
          end: {
            line: 167,
            column: 13
          }
        }],
        line: 157
      },
      "24": {
        loc: {
          start: {
            line: 161,
            column: 16
          },
          end: {
            line: 166,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 16
          },
          end: {
            line: 166,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "25": {
        loc: {
          start: {
            line: 162,
            column: 20
          },
          end: {
            line: 164,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 20
          },
          end: {
            line: 164,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "26": {
        loc: {
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 172,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 172,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "27": {
        loc: {
          start: {
            line: 181,
            column: 23
          },
          end: {
            line: 181,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 181,
            column: 23
          },
          end: {
            line: 181,
            column: 54
          }
        }, {
          start: {
            line: 181,
            column: 58
          },
          end: {
            line: 181,
            column: 61
          }
        }],
        line: 181
      },
      "28": {
        loc: {
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 212,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 204,
            column: 16
          },
          end: {
            line: 205,
            column: 37
          }
        }, {
          start: {
            line: 206,
            column: 16
          },
          end: {
            line: 207,
            column: 37
          }
        }, {
          start: {
            line: 208,
            column: 16
          },
          end: {
            line: 209,
            column: 37
          }
        }, {
          start: {
            line: 210,
            column: 16
          },
          end: {
            line: 211,
            column: 37
          }
        }],
        line: 203
      },
      "29": {
        loc: {
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 226,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 226,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "30": {
        loc: {
          start: {
            line: 235,
            column: 23
          },
          end: {
            line: 235,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 235,
            column: 23
          },
          end: {
            line: 235,
            column: 56
          }
        }, {
          start: {
            line: 235,
            column: 60
          },
          end: {
            line: 235,
            column: 63
          }
        }],
        line: 235
      },
      "31": {
        loc: {
          start: {
            line: 242,
            column: 37
          },
          end: {
            line: 242,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 242,
            column: 37
          },
          end: {
            line: 242,
            column: 47
          }
        }, {
          start: {
            line: 242,
            column: 51
          },
          end: {
            line: 242,
            column: 52
          }
        }],
        line: 242
      },
      "32": {
        loc: {
          start: {
            line: 242,
            column: 68
          },
          end: {
            line: 242,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 242,
            column: 68
          },
          end: {
            line: 242,
            column: 75
          }
        }, {
          start: {
            line: 242,
            column: 79
          },
          end: {
            line: 242,
            column: 80
          }
        }],
        line: 242
      },
      "33": {
        loc: {
          start: {
            line: 242,
            column: 85
          },
          end: {
            line: 242,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 242,
            column: 85
          },
          end: {
            line: 242,
            column: 92
          }
        }, {
          start: {
            line: 242,
            column: 96
          },
          end: {
            line: 242,
            column: 97
          }
        }],
        line: 242
      },
      "34": {
        loc: {
          start: {
            line: 252,
            column: 153
          },
          end: {
            line: 252,
            column: 216
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 252,
            column: 174
          },
          end: {
            line: 252,
            column: 204
          }
        }, {
          start: {
            line: 252,
            column: 207
          },
          end: {
            line: 252,
            column: 216
          }
        }],
        line: 252
      },
      "35": {
        loc: {
          start: {
            line: 253,
            column: 12
          },
          end: {
            line: 256,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 12
          },
          end: {
            line: 256,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 253
      },
      "36": {
        loc: {
          start: {
            line: 261,
            column: 12
          },
          end: {
            line: 261,
            column: 63
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 261,
            column: 12
          },
          end: {
            line: 261,
            column: 63
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 261
      },
      "37": {
        loc: {
          start: {
            line: 261,
            column: 16
          },
          end: {
            line: 261,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 261,
            column: 16
          },
          end: {
            line: 261,
            column: 26
          }
        }, {
          start: {
            line: 261,
            column: 30
          },
          end: {
            line: 261,
            column: 51
          }
        }],
        line: 261
      },
      "38": {
        loc: {
          start: {
            line: 262,
            column: 19
          },
          end: {
            line: 262,
            column: 122
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 262,
            column: 54
          },
          end: {
            line: 262,
            column: 99
          }
        }, {
          start: {
            line: 262,
            column: 102
          },
          end: {
            line: 262,
            column: 122
          }
        }],
        line: 262
      },
      "39": {
        loc: {
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 272,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 272,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 266
      },
      "40": {
        loc: {
          start: {
            line: 267,
            column: 12
          },
          end: {
            line: 271,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 267,
            column: 12
          },
          end: {
            line: 271,
            column: 13
          }
        }, {
          start: {
            line: 269,
            column: 19
          },
          end: {
            line: 271,
            column: 13
          }
        }],
        line: 267
      },
      "41": {
        loc: {
          start: {
            line: 269,
            column: 19
          },
          end: {
            line: 271,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 269,
            column: 19
          },
          end: {
            line: 271,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 269
      },
      "42": {
        loc: {
          start: {
            line: 278,
            column: 8
          },
          end: {
            line: 280,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 278,
            column: 8
          },
          end: {
            line: 280,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 278
      },
      "43": {
        loc: {
          start: {
            line: 278,
            column: 12
          },
          end: {
            line: 278,
            column: 185
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 278,
            column: 12
          },
          end: {
            line: 278,
            column: 25
          }
        }, {
          start: {
            line: 278,
            column: 29
          },
          end: {
            line: 278,
            column: 101
          }
        }, {
          start: {
            line: 278,
            column: 105
          },
          end: {
            line: 278,
            column: 185
          }
        }],
        line: 278
      },
      "44": {
        loc: {
          start: {
            line: 281,
            column: 8
          },
          end: {
            line: 283,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 281,
            column: 8
          },
          end: {
            line: 283,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 281
      },
      "45": {
        loc: {
          start: {
            line: 281,
            column: 12
          },
          end: {
            line: 281,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 281,
            column: 12
          },
          end: {
            line: 281,
            column: 36
          }
        }, {
          start: {
            line: 281,
            column: 40
          },
          end: {
            line: 281,
            column: 80
          }
        }],
        line: 281
      },
      "46": {
        loc: {
          start: {
            line: 284,
            column: 8
          },
          end: {
            line: 286,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 284,
            column: 8
          },
          end: {
            line: 286,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 284
      },
      "47": {
        loc: {
          start: {
            line: 284,
            column: 12
          },
          end: {
            line: 284,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 284,
            column: 12
          },
          end: {
            line: 284,
            column: 35
          }
        }, {
          start: {
            line: 284,
            column: 39
          },
          end: {
            line: 284,
            column: 69
          }
        }],
        line: 284
      },
      "48": {
        loc: {
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 289,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 289,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 287
      },
      "49": {
        loc: {
          start: {
            line: 287,
            column: 12
          },
          end: {
            line: 287,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 287,
            column: 12
          },
          end: {
            line: 287,
            column: 34
          }
        }, {
          start: {
            line: 287,
            column: 38
          },
          end: {
            line: 287,
            column: 73
          }
        }],
        line: 287
      },
      "50": {
        loc: {
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 292,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 292,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 290
      },
      "51": {
        loc: {
          start: {
            line: 290,
            column: 12
          },
          end: {
            line: 290,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 290,
            column: 12
          },
          end: {
            line: 290,
            column: 34
          }
        }, {
          start: {
            line: 290,
            column: 38
          },
          end: {
            line: 290,
            column: 73
          }
        }],
        line: 290
      },
      "52": {
        loc: {
          start: {
            line: 327,
            column: 41
          },
          end: {
            line: 327,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 327,
            column: 63
          },
          end: {
            line: 327,
            column: 72
          }
        }, {
          start: {
            line: 327,
            column: 75
          },
          end: {
            line: 327,
            column: 84
          }
        }],
        line: 327
      },
      "53": {
        loc: {
          start: {
            line: 333,
            column: 41
          },
          end: {
            line: 333,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 333,
            column: 67
          },
          end: {
            line: 333,
            column: 76
          }
        }, {
          start: {
            line: 333,
            column: 79
          },
          end: {
            line: 333,
            column: 88
          }
        }],
        line: 333
      },
      "54": {
        loc: {
          start: {
            line: 339,
            column: 41
          },
          end: {
            line: 339,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 339,
            column: 69
          },
          end: {
            line: 339,
            column: 78
          }
        }, {
          start: {
            line: 339,
            column: 81
          },
          end: {
            line: 339,
            column: 90
          }
        }],
        line: 339
      },
      "55": {
        loc: {
          start: {
            line: 417,
            column: 31
          },
          end: {
            line: 417,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 417,
            column: 31
          },
          end: {
            line: 417,
            column: 49
          }
        }, {
          start: {
            line: 417,
            column: 53
          },
          end: {
            line: 417,
            column: 55
          }
        }],
        line: 417
      },
      "56": {
        loc: {
          start: {
            line: 420,
            column: 49
          },
          end: {
            line: 420,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 420,
            column: 49
          },
          end: {
            line: 420,
            column: 71
          }
        }, {
          start: {
            line: 420,
            column: 75
          },
          end: {
            line: 420,
            column: 76
          }
        }],
        line: 420
      },
      "57": {
        loc: {
          start: {
            line: 427,
            column: 31
          },
          end: {
            line: 427,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 427,
            column: 31
          },
          end: {
            line: 427,
            column: 49
          }
        }, {
          start: {
            line: 427,
            column: 53
          },
          end: {
            line: 427,
            column: 55
          }
        }],
        line: 427
      },
      "58": {
        loc: {
          start: {
            line: 430,
            column: 49
          },
          end: {
            line: 430,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 430,
            column: 49
          },
          end: {
            line: 430,
            column: 71
          }
        }, {
          start: {
            line: 430,
            column: 75
          },
          end: {
            line: 430,
            column: 76
          }
        }],
        line: 430
      },
      "59": {
        loc: {
          start: {
            line: 437,
            column: 26
          },
          end: {
            line: 656,
            column: 18
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 438,
            column: 30
          },
          end: {
            line: 544,
            column: 18
          }
        }, {
          start: {
            line: 545,
            column: 30
          },
          end: {
            line: 656,
            column: 18
          }
        }],
        line: 437
      },
      "60": {
        loc: {
          start: {
            line: 440,
            column: 30
          },
          end: {
            line: 543,
            column: 37
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 440,
            column: 74
          },
          end: {
            line: 450,
            column: 22
          }
        }, {
          start: {
            line: 450,
            column: 25
          },
          end: {
            line: 543,
            column: 37
          }
        }],
        line: 440
      },
      "61": {
        loc: {
          start: {
            line: 477,
            column: 60
          },
          end: {
            line: 483,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 477,
            column: 60
          },
          end: {
            line: 477,
            column: 80
          }
        }, {
          start: {
            line: 477,
            column: 98
          },
          end: {
            line: 483,
            column: 62
          }
        }],
        line: 477
      },
      "62": {
        loc: {
          start: {
            line: 532,
            column: 44
          },
          end: {
            line: 538,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 532,
            column: 44
          },
          end: {
            line: 532,
            column: 69
          }
        }, {
          start: {
            line: 532,
            column: 87
          },
          end: {
            line: 538,
            column: 46
          }
        }],
        line: 532
      },
      "63": {
        loc: {
          start: {
            line: 561,
            column: 103
          },
          end: {
            line: 561,
            column: 193
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 561,
            column: 136
          },
          end: {
            line: 561,
            column: 172
          }
        }, {
          start: {
            line: 561,
            column: 175
          },
          end: {
            line: 561,
            column: 193
          }
        }],
        line: 561
      },
      "64": {
        loc: {
          start: {
            line: 590,
            column: 38
          },
          end: {
            line: 653,
            column: 30
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 590,
            column: 68
          },
          end: {
            line: 640,
            column: 30
          }
        }, {
          start: {
            line: 640,
            column: 47
          },
          end: {
            line: 653,
            column: 30
          }
        }],
        line: 590
      },
      "65": {
        loc: {
          start: {
            line: 627,
            column: 50
          },
          end: {
            line: 637,
            column: 42
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 627,
            column: 90
          },
          end: {
            line: 632,
            column: 42
          }
        }, {
          start: {
            line: 632,
            column: 59
          },
          end: {
            line: 637,
            column: 42
          }
        }],
        line: 627
      },
      "66": {
        loc: {
          start: {
            line: 665,
            column: 26
          },
          end: {
            line: 784,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 665,
            column: 26
          },
          end: {
            line: 665,
            column: 39
          }
        }, {
          start: {
            line: 665,
            column: 57
          },
          end: {
            line: 784,
            column: 18
          }
        }],
        line: 665
      },
      "67": {
        loc: {
          start: {
            line: 793,
            column: 26
          },
          end: {
            line: 926,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 793,
            column: 26
          },
          end: {
            line: 793,
            column: 38
          }
        }, {
          start: {
            line: 793,
            column: 56
          },
          end: {
            line: 926,
            column: 18
          }
        }],
        line: 793
      },
      "68": {
        loc: {
          start: {
            line: 873,
            column: 24
          },
          end: {
            line: 887,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 873,
            column: 24
          },
          end: {
            line: 873,
            column: 65
          }
        }, {
          start: {
            line: 873,
            column: 83
          },
          end: {
            line: 887,
            column: 26
          }
        }],
        line: 873
      },
      "69": {
        loc: {
          start: {
            line: 888,
            column: 24
          },
          end: {
            line: 924,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 888,
            column: 24
          },
          end: {
            line: 888,
            column: 52
          }
        }, {
          start: {
            line: 888,
            column: 70
          },
          end: {
            line: 924,
            column: 26
          }
        }],
        line: 888
      },
      "70": {
        loc: {
          start: {
            line: 903,
            column: 69
          },
          end: {
            line: 903,
            column: 155
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 903,
            column: 93
          },
          end: {
            line: 903,
            column: 106
          }
        }, {
          start: {
            line: 903,
            column: 109
          },
          end: {
            line: 903,
            column: 155
          }
        }],
        line: 903
      },
      "71": {
        loc: {
          start: {
            line: 903,
            column: 109
          },
          end: {
            line: 903,
            column: 155
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 903,
            column: 132
          },
          end: {
            line: 903,
            column: 143
          }
        }, {
          start: {
            line: 903,
            column: 146
          },
          end: {
            line: 903,
            column: 155
          }
        }],
        line: 903
      },
      "72": {
        loc: {
          start: {
            line: 916,
            column: 48
          },
          end: {
            line: 919,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 916,
            column: 48
          },
          end: {
            line: 916,
            column: 58
          }
        }, {
          start: {
            line: 916,
            column: 76
          },
          end: {
            line: 919,
            column: 50
          }
        }],
        line: 916
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0],
      "17": [0, 0],
      "18": [0, 0, 0, 0],
      "19": [0, 0, 0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0, 0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/workspaces/prompt-card-system/frontend/src/components/Monitoring/DistributedTracingViz.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { Button } from '@/components/ui/Button';\nimport { Badge } from '@/components/ui/Badge';\nimport { Modal } from '@/components/ui/Modal';\nimport { \n  GitBranch, \n  Clock, \n  Activity, \n  AlertTriangle, \n  CheckCircle, \n  XCircle,\n  Search,\n  Filter,\n  Zap,\n  Database,\n  Server,\n  Globe,\n  ArrowRight\n} from 'lucide-react';\n\ninterface Span {\n  id: string;\n  traceId: string;\n  parentId?: string;\n  operationName: string;\n  serviceName: string;\n  startTime: number;\n  duration: number;\n  status: 'success' | 'error' | 'timeout';\n  tags: Record<string, any>;\n  logs: Array<{\n    timestamp: number;\n    level: 'info' | 'warn' | 'error';\n    message: string;\n    fields?: Record<string, any>;\n  }>;\n}\n\ninterface Trace {\n  id: string;\n  operationName: string;\n  startTime: number;\n  duration: number;\n  spans: Span[];\n  services: string[];\n  errorCount: number;\n  status: 'success' | 'error' | 'partial';\n}\n\ninterface DistributedTracingProps {\n  data: any;\n  config?: any;\n  isFullscreen?: boolean;\n}\n\nconst DistributedTracingViz: React.FC<DistributedTracingProps> = ({\n  data,\n  config = {},\n  isFullscreen = false\n}) => {\n  const [traces, setTraces] = useState<Trace[]>([]);\n  const [selectedTrace, setSelectedTrace] = useState<Trace | null>(null);\n  const [selectedSpan, setSelectedSpan] = useState<Span | null>(null);\n  const [filter, setFilter] = useState({\n    search: '',\n    service: 'all',\n    status: 'all',\n    minDuration: 0,\n    maxDuration: 0\n  });\n  const [viewMode, setViewMode] = useState<'list' | 'timeline' | 'flamegraph'>('timeline');\n  const [traceDetailModal, setTraceDetailModal] = useState(false);\n  const [spanDetailModal, setSpanDetailModal] = useState(false);\n  \n  const timelineRef = useRef<SVGSVGElement>(null);\n  const flamegraphRef = useRef<SVGSVGElement>(null);\n\n  useEffect(() => {\n    if (data?.traces) {\n      setTraces(data.traces);\n    }\n  }, [data]);\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'success':\n        return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n      case 'error':\n        return <XCircle className=\"h-4 w-4 text-red-500\" />;\n      case 'timeout':\n        return <Clock className=\"h-4 w-4 text-yellow-500\" />;\n      default:\n        return <Activity className=\"h-4 w-4 text-gray-500\" />;\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'success':\n        return 'bg-green-100 text-green-800';\n      case 'error':\n        return 'bg-red-100 text-red-800';\n      case 'partial':\n        return 'bg-yellow-100 text-yellow-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getServiceIcon = (serviceName: string) => {\n    const iconMap: Record<string, React.ReactNode> = {\n      database: <Database className=\"h-4 w-4\" />,\n      api: <Server className=\"h-4 w-4\" />,\n      frontend: <Globe className=\"h-4 w-4\" />,\n      cache: <Zap className=\"h-4 w-4\" />\n    };\n    \n    const serviceType = Object.keys(iconMap).find(key => \n      serviceName.toLowerCase().includes(key)\n    );\n    \n    return iconMap[serviceType || 'api'] || <Activity className=\"h-4 w-4\" />;\n  };\n\n  const formatDuration = (duration: number): string => {\n    if (duration >= 1000) {\n      return `${(duration / 1000).toFixed(2)}s`;\n    }\n    return `${duration.toFixed(1)}ms`;\n  };\n\n  const formatTimestamp = (timestamp: number): string => {\n    return new Date(timestamp).toLocaleTimeString('en-US', {\n      hour12: false,\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      fractionalSecondDigits: 3\n    });\n  };\n\n  const buildSpanTree = (spans: Span[]): Span[] => {\n    const spanMap = new Map(spans.map(span => [span.id, span]));\n    const roots: Span[] = [];\n    \n    spans.forEach(span => {\n      if (!span.parentId) {\n        roots.push(span);\n      } else {\n        const parent = spanMap.get(span.parentId);\n        if (parent) {\n          if (!(parent as any).children) {\n            (parent as any).children = [];\n          }\n          (parent as any).children.push(span);\n        }\n      }\n    });\n    \n    return roots;\n  };\n\n  const renderTimeline = (trace: Trace) => {\n    if (!timelineRef.current) return;\n\n    const svg = d3.select(timelineRef.current);\n    svg.selectAll('*').remove();\n\n    const margin = { top: 20, right: 20, bottom: 30, left: 200 };\n    const width = (timelineRef.current.clientWidth || 800) - margin.left - margin.right;\n    const height = Math.max(400, trace.spans.length * 30) - margin.top - margin.bottom;\n\n    const g = svg.append('g')\n      .attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // Time scale\n    const minTime = Math.min(...trace.spans.map(s => s.startTime));\n    const maxTime = Math.max(...trace.spans.map(s => s.startTime + s.duration));\n    const timeScale = d3.scaleLinear()\n      .domain([minTime, maxTime])\n      .range([0, width]);\n\n    // Y scale for spans\n    const yScale = d3.scaleBand()\n      .domain(trace.spans.map(s => s.id))\n      .range([0, height])\n      .padding(0.1);\n\n    // Draw spans\n    const spans = g.selectAll('.span')\n      .data(trace.spans)\n      .enter().append('g')\n      .attr('class', 'span')\n      .attr('transform', d => `translate(0, ${yScale(d.id)})`);\n\n    // Span backgrounds\n    spans.append('rect')\n      .attr('x', d => timeScale(d.startTime))\n      .attr('width', d => Math.max(1, timeScale(d.startTime + d.duration) - timeScale(d.startTime)))\n      .attr('height', yScale.bandwidth())\n      .attr('fill', d => {\n        switch (d.status) {\n          case 'success': return '#10b981';\n          case 'error': return '#ef4444';\n          case 'timeout': return '#f59e0b';\n          default: return '#6b7280';\n        }\n      })\n      .attr('opacity', 0.7)\n      .attr('rx', 3)\n      .style('cursor', 'pointer')\n      .on('click', (event, d) => {\n        setSelectedSpan(d);\n        setSpanDetailModal(true);\n      });\n\n    // Span labels\n    spans.append('text')\n      .attr('x', -5)\n      .attr('y', yScale.bandwidth() / 2)\n      .attr('dy', '0.35em')\n      .attr('text-anchor', 'end')\n      .attr('font-size', '12px')\n      .attr('fill', '#374151')\n      .text(d => `${d.serviceName}: ${d.operationName}`);\n\n    // Duration labels\n    spans.append('text')\n      .attr('x', d => timeScale(d.startTime) + 5)\n      .attr('y', yScale.bandwidth() / 2)\n      .attr('dy', '0.35em')\n      .attr('font-size', '10px')\n      .attr('fill', 'white')\n      .text(d => formatDuration(d.duration));\n\n    // Time axis\n    const timeAxis = d3.axisBottom(timeScale)\n      .tickFormat(d => `+${((d as number) - minTime).toFixed(0)}ms`);\n\n    g.append('g')\n      .attr('transform', `translate(0, ${height})`)\n      .call(timeAxis);\n  };\n\n  const renderFlamegraph = (trace: Trace) => {\n    if (!flamegraphRef.current) return;\n\n    const svg = d3.select(flamegraphRef.current);\n    svg.selectAll('*').remove();\n\n    const margin = { top: 20, right: 20, bottom: 30, left: 20 };\n    const width = (flamegraphRef.current.clientWidth || 800) - margin.left - margin.right;\n    const height = 400 - margin.top - margin.bottom;\n\n    const g = svg.append('g')\n      .attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // Build hierarchy\n    const spanTree = buildSpanTree(trace.spans);\n    \n    const hierarchy = d3.hierarchy({ children: spanTree } as any, d => (d as any).children)\n      .sum(d => (d as any).duration || 0)\n      .sort((a, b) => (b.value || 0) - (a.value || 0));\n\n    const partition = d3.partition<any>()\n      .size([width, height])\n      .padding(1);\n\n    const root = partition(hierarchy);\n\n    // Color scale\n    const colorScale = d3.scaleOrdinal(d3.schemeCategory10);\n\n    // Draw rectangles\n    const cell = g.selectAll('.cell')\n      .data(root.descendants())\n      .enter().append('g')\n      .attr('class', 'cell');\n\n    cell.append('rect')\n      .attr('x', d => d.x0)\n      .attr('y', d => d.y0)\n      .attr('width', d => d.x1 - d.x0)\n      .attr('height', d => d.y1 - d.y0)\n      .attr('fill', d => d.data.serviceName ? colorScale(d.data.serviceName) : '#f3f4f6')\n      .attr('stroke', 'white')\n      .attr('stroke-width', 1)\n      .style('cursor', 'pointer')\n      .on('click', (event, d) => {\n        if (d.data.id) {\n          setSelectedSpan(d.data);\n          setSpanDetailModal(true);\n        }\n      });\n\n    // Add labels\n    cell.append('text')\n      .attr('x', d => (d.x0 + d.x1) / 2)\n      .attr('y', d => (d.y0 + d.y1) / 2)\n      .attr('dy', '0.35em')\n      .attr('text-anchor', 'middle')\n      .attr('font-size', '10px')\n      .attr('fill', 'white')\n      .text(d => {\n        const width = d.x1 - d.x0;\n        if (width < 50 || !d.data.operationName) return '';\n        return d.data.operationName.length > 15 \n          ? d.data.operationName.substring(0, 15) + '...' \n          : d.data.operationName;\n      });\n  };\n\n  useEffect(() => {\n    if (selectedTrace) {\n      if (viewMode === 'timeline') {\n        renderTimeline(selectedTrace);\n      } else if (viewMode === 'flamegraph') {\n        renderFlamegraph(selectedTrace);\n      }\n    }\n  }, [selectedTrace, viewMode]);\n\n  const filteredTraces = traces.filter(trace => {\n    if (filter.search && !trace.operationName.toLowerCase().includes(filter.search.toLowerCase()) &&\n        !trace.services.some(s => s.toLowerCase().includes(filter.search.toLowerCase()))) {\n      return false;\n    }\n    if (filter.service !== 'all' && !trace.services.includes(filter.service)) {\n      return false;\n    }\n    if (filter.status !== 'all' && trace.status !== filter.status) {\n      return false;\n    }\n    if (filter.minDuration > 0 && trace.duration < filter.minDuration) {\n      return false;\n    }\n    if (filter.maxDuration > 0 && trace.duration > filter.maxDuration) {\n      return false;\n    }\n    return true;\n  });\n\n  const allServices = [...new Set(traces.flatMap(trace => trace.services))];\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      {/* Controls */}\n      <div className=\"flex items-center justify-between mb-4\">\n        <div className=\"flex items-center space-x-2\">\n          <GitBranch className=\"h-5 w-5 text-gray-600\" />\n          <span className=\"font-semibold\">Distributed Tracing</span>\n          <Badge variant=\"outline\">{filteredTraces.length} traces</Badge>\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          <Button\n            variant={viewMode === 'list' ? 'default' : 'outline'}\n            size=\"sm\"\n            onClick={() => setViewMode('list')}\n          >\n            List\n          </Button>\n          <Button\n            variant={viewMode === 'timeline' ? 'default' : 'outline'}\n            size=\"sm\"\n            onClick={() => setViewMode('timeline')}\n          >\n            Timeline\n          </Button>\n          <Button\n            variant={viewMode === 'flamegraph' ? 'default' : 'outline'}\n            size=\"sm\"\n            onClick={() => setViewMode('flamegraph')}\n          >\n            Flamegraph\n          </Button>\n        </div>\n      </div>\n\n      {/* Search and Filters */}\n      <div className=\"grid grid-cols-1 md:grid-cols-5 gap-2 mb-4\">\n        <div className=\"relative\">\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search traces...\"\n            className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg text-sm\"\n            value={filter.search}\n            onChange={(e) => setFilter(prev => ({ ...prev, search: e.target.value }))}\n          />\n        </div>\n\n        <select\n          value={filter.service}\n          onChange={(e) => setFilter(prev => ({ ...prev, service: e.target.value }))}\n          className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm\"\n        >\n          <option value=\"all\">All Services</option>\n          {allServices.map(service => (\n            <option key={service} value={service}>{service}</option>\n          ))}\n        </select>\n\n        <select\n          value={filter.status}\n          onChange={(e) => setFilter(prev => ({ ...prev, status: e.target.value }))}\n          className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm\"\n        >\n          <option value=\"all\">All Statuses</option>\n          <option value=\"success\">Success</option>\n          <option value=\"error\">Error</option>\n          <option value=\"partial\">Partial</option>\n        </select>\n\n        <input\n          type=\"number\"\n          placeholder=\"Min duration (ms)\"\n          className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm\"\n          value={filter.minDuration || ''}\n          onChange={(e) => setFilter(prev => ({ ...prev, minDuration: Number(e.target.value) || 0 }))}\n        />\n\n        <input\n          type=\"number\"\n          placeholder=\"Max duration (ms)\"\n          className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm\"\n          value={filter.maxDuration || ''}\n          onChange={(e) => setFilter(prev => ({ ...prev, maxDuration: Number(e.target.value) || 0 }))}\n        />\n      </div>\n\n      {/* Content */}\n      <div className=\"flex-1 overflow-hidden\">\n        {viewMode === 'list' ? (\n          // List View\n          <div className=\"h-full overflow-auto space-y-2\">\n            {filteredTraces.length === 0 ? (\n              <div className=\"text-center py-8 text-gray-500\">\n                <GitBranch className=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\n                <p>No traces found</p>\n              </div>\n            ) : (\n              filteredTraces.map((trace) => (\n                <div\n                  key={trace.id}\n                  className=\"bg-white border border-gray-200 rounded-lg p-3 hover:shadow-sm transition-shadow cursor-pointer\"\n                  onClick={() => {\n                    setSelectedTrace(trace);\n                    setTraceDetailModal(true);\n                  }}\n                >\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex items-start space-x-3 flex-1\">\n                      {getStatusIcon(trace.status)}\n                      <div className=\"flex-1 min-w-0\">\n                        <div className=\"flex items-center space-x-2 mb-1\">\n                          <h4 className=\"text-sm font-medium text-gray-900 truncate\">\n                            {trace.operationName}\n                          </h4>\n                          <Badge className={getStatusColor(trace.status)}>\n                            {trace.status.toUpperCase()}\n                          </Badge>\n                          {trace.errorCount > 0 && (\n                            <Badge variant=\"destructive\">\n                              {trace.errorCount} errors\n                            </Badge>\n                          )}\n                        </div>\n                        <div className=\"flex items-center space-x-4 text-xs text-gray-500\">\n                          <span className=\"flex items-center\">\n                            <Clock className=\"h-3 w-3 mr-1\" />\n                            {formatDuration(trace.duration)}\n                          </span>\n                          <span>{trace.spans.length} spans</span>\n                          <span>{trace.services.length} services</span>\n                          <span>{formatTimestamp(trace.startTime)}</span>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex items-center space-x-2\">\n                      {trace.services.slice(0, 3).map((service, index) => (\n                        <div key={service} className=\"flex items-center space-x-1\">\n                          {getServiceIcon(service)}\n                          <span className=\"text-xs text-gray-600\">{service}</span>\n                        </div>\n                      ))}\n                      {trace.services.length > 3 && (\n                        <span className=\"text-xs text-gray-500\">+{trace.services.length - 3}</span>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        ) : (\n          // Timeline/Flamegraph View\n          <div className=\"h-full flex\">\n            {/* Trace List */}\n            <div className=\"w-1/3 border-r border-gray-200 overflow-auto\">\n              <div className=\"p-2 border-b border-gray-200\">\n                <h4 className=\"font-medium text-gray-900\">Select Trace</h4>\n              </div>\n              <div className=\"space-y-1 p-2\">\n                {filteredTraces.map((trace) => (\n                  <div\n                    key={trace.id}\n                    className={`p-2 rounded cursor-pointer transition-colors ${\n                      selectedTrace?.id === trace.id \n                        ? 'bg-blue-100 border border-blue-300' \n                        : 'hover:bg-gray-50'\n                    }`}\n                    onClick={() => setSelectedTrace(trace)}\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium truncate\">\n                        {trace.operationName}\n                      </span>\n                      {getStatusIcon(trace.status)}\n                    </div>\n                    <div className=\"text-xs text-gray-500 mt-1\">\n                      {formatDuration(trace.duration)} \u2022 {trace.spans.length} spans\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Visualization */}\n            <div className=\"flex-1 overflow-auto\">\n              {selectedTrace ? (\n                <div className=\"p-4\">\n                  <div className=\"mb-4\">\n                    <h3 className=\"text-lg font-semibold text-gray-900\">\n                      {selectedTrace.operationName}\n                    </h3>\n                    <div className=\"flex items-center space-x-4 text-sm text-gray-600\">\n                      <span>Duration: {formatDuration(selectedTrace.duration)}</span>\n                      <span>Spans: {selectedTrace.spans.length}</span>\n                      <span>Services: {selectedTrace.services.join(', ')}</span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"w-full\">\n                    {viewMode === 'timeline' ? (\n                      <svg\n                        ref={timelineRef}\n                        width=\"100%\"\n                        height={Math.max(400, selectedTrace.spans.length * 30)}\n                        className=\"border border-gray-200 rounded\"\n                      />\n                    ) : (\n                      <svg\n                        ref={flamegraphRef}\n                        width=\"100%\"\n                        height=\"400\"\n                        className=\"border border-gray-200 rounded\"\n                      />\n                    )}\n                  </div>\n                </div>\n              ) : (\n                <div className=\"flex items-center justify-center h-full text-gray-500\">\n                  <div className=\"text-center\">\n                    <GitBranch className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n                    <p>Select a trace to view details</p>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Trace Detail Modal */}\n      <Modal\n        isOpen={traceDetailModal}\n        onClose={() => {\n          setTraceDetailModal(false);\n          setSelectedTrace(null);\n        }}\n        title=\"Trace Details\"\n      >\n        {selectedTrace && (\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4 text-sm\">\n              <div>\n                <label className=\"font-medium text-gray-700\">Operation:</label>\n                <p className=\"text-gray-600\">{selectedTrace.operationName}</p>\n              </div>\n              <div>\n                <label className=\"font-medium text-gray-700\">Status:</label>\n                <Badge className={getStatusColor(selectedTrace.status)}>\n                  {selectedTrace.status.toUpperCase()}\n                </Badge>\n              </div>\n              <div>\n                <label className=\"font-medium text-gray-700\">Duration:</label>\n                <p className=\"text-gray-600\">{formatDuration(selectedTrace.duration)}</p>\n              </div>\n              <div>\n                <label className=\"font-medium text-gray-700\">Spans:</label>\n                <p className=\"text-gray-600\">{selectedTrace.spans.length}</p>\n              </div>\n              <div>\n                <label className=\"font-medium text-gray-700\">Services:</label>\n                <p className=\"text-gray-600\">{selectedTrace.services.join(', ')}</p>\n              </div>\n              <div>\n                <label className=\"font-medium text-gray-700\">Start Time:</label>\n                <p className=\"text-gray-600\">{formatTimestamp(selectedTrace.startTime)}</p>\n              </div>\n            </div>\n\n            <div>\n              <label className=\"font-medium text-gray-700 block mb-2\">Spans:</label>\n              <div className=\"max-h-64 overflow-auto space-y-2\">\n                {selectedTrace.spans.map((span) => (\n                  <div\n                    key={span.id}\n                    className=\"flex items-center justify-between p-2 bg-gray-50 rounded cursor-pointer hover:bg-gray-100\"\n                    onClick={() => {\n                      setSelectedSpan(span);\n                      setSpanDetailModal(true);\n                    }}\n                  >\n                    <div className=\"flex items-center space-x-2\">\n                      {getStatusIcon(span.status)}\n                      <span className=\"text-sm\">{span.serviceName}: {span.operationName}</span>\n                    </div>\n                    <span className=\"text-xs text-gray-500\">\n                      {formatDuration(span.duration)}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n      </Modal>\n\n      {/* Span Detail Modal */}\n      <Modal\n        isOpen={spanDetailModal}\n        onClose={() => {\n          setSpanDetailModal(false);\n          setSelectedSpan(null);\n        }}\n        title=\"Span Details\"\n      >\n        {selectedSpan && (\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4 text-sm\">\n              <div>\n                <label className=\"font-medium text-gray-700\">Operation:</label>\n                <p className=\"text-gray-600\">{selectedSpan.operationName}</p>\n              </div>\n              <div>\n                <label className=\"font-medium text-gray-700\">Service:</label>\n                <p className=\"text-gray-600\">{selectedSpan.serviceName}</p>\n              </div>\n              <div>\n                <label className=\"font-medium text-gray-700\">Status:</label>\n                <Badge className={getStatusColor(selectedSpan.status)}>\n                  {selectedSpan.status.toUpperCase()}\n                </Badge>\n              </div>\n              <div>\n                <label className=\"font-medium text-gray-700\">Duration:</label>\n                <p className=\"text-gray-600\">{formatDuration(selectedSpan.duration)}</p>\n              </div>\n              <div>\n                <label className=\"font-medium text-gray-700\">Start Time:</label>\n                <p className=\"text-gray-600\">{formatTimestamp(selectedSpan.startTime)}</p>\n              </div>\n              <div>\n                <label className=\"font-medium text-gray-700\">Span ID:</label>\n                <p className=\"text-gray-600 font-mono text-xs\">{selectedSpan.id}</p>\n              </div>\n            </div>\n\n            {Object.keys(selectedSpan.tags).length > 0 && (\n              <div>\n                <label className=\"font-medium text-gray-700 block mb-2\">Tags:</label>\n                <div className=\"bg-gray-50 rounded p-3 max-h-32 overflow-auto\">\n                  <pre className=\"text-xs text-gray-600\">\n                    {JSON.stringify(selectedSpan.tags, null, 2)}\n                  </pre>\n                </div>\n              </div>\n            )}\n\n            {selectedSpan.logs.length > 0 && (\n              <div>\n                <label className=\"font-medium text-gray-700 block mb-2\">Logs:</label>\n                <div className=\"max-h-48 overflow-auto space-y-1\">\n                  {selectedSpan.logs.map((log, index) => (\n                    <div key={index} className=\"text-xs bg-gray-50 rounded p-2\">\n                      <div className=\"flex items-center justify-between mb-1\">\n                        <Badge variant={\n                          log.level === 'error' ? 'destructive' : \n                          log.level === 'warn' ? 'secondary' : 'default'\n                        }>\n                          {log.level.toUpperCase()}\n                        </Badge>\n                        <span className=\"text-gray-500\">\n                          {formatTimestamp(log.timestamp)}\n                        </span>\n                      </div>\n                      <p className=\"text-gray-700\">{log.message}</p>\n                      {log.fields && (\n                        <pre className=\"mt-1 text-gray-600\">\n                          {JSON.stringify(log.fields, null, 2)}\n                        </pre>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </Modal>\n    </div>\n  );\n};\n\nexport default DistributedTracingViz;"],
      names: ["DistributedTracingViz", "data", "config", "isFullscreen", "traces", "setTraces", "useState", "selectedTrace", "setSelectedTrace", "selectedSpan", "setSelectedSpan", "filter", "setFilter", "search", "service", "status", "minDuration", "maxDuration", "viewMode", "setViewMode", "traceDetailModal", "setTraceDetailModal", "spanDetailModal", "setSpanDetailModal", "timelineRef", "useRef", "flamegraphRef", "useEffect", "getStatusIcon", "CheckCircle", "className", "XCircle", "Clock", "Activity", "getStatusColor", "getServiceIcon", "serviceName", "iconMap", "database", "Database", "api", "Server", "frontend", "Globe", "cache", "Zap", "serviceType", "Object", "keys", "find", "key", "toLowerCase", "includes", "formatDuration", "duration", "toFixed", "formatTimestamp", "timestamp", "Date", "toLocaleTimeString", "hour12", "hour", "minute", "second", "fractionalSecondDigits", "buildSpanTree", "spans", "spanMap", "Map", "map", "span", "id", "roots", "forEach", "parentId", "push", "parent", "get", "children", "renderTimeline", "trace", "current", "svg", "d3", "select", "selectAll", "remove", "margin", "top", "right", "bottom", "left", "width", "clientWidth", "height", "Math", "max", "length", "g", "append", "attr", "minTime", "min", "s", "startTime", "maxTime", "timeScale", "scaleLinear", "domain", "range", "yScale", "scaleBand", "padding", "enter", "d", "bandwidth", "style", "on", "event", "text", "operationName", "timeAxis", "axisBottom", "tickFormat", "call", "renderFlamegraph", "spanTree", "hierarchy", "sum", "sort", "a", "b", "value", "partition", "size", "root", "colorScale", "scaleOrdinal", "schemeCategory10", "cell", "descendants", "x0", "y0", "x1", "y1", "substring", "filteredTraces", "services", "some", "allServices", "Set", "flatMap", "div", "GitBranch", "Badge", "variant", "Button", "onClick", "Search", "input", "type", "placeholder", "onChange", "e", "prev", "target", "option", "Number", "p", "h4", "toUpperCase", "errorCount", "slice", "index", "h3", "join", "ref", "Modal", "isOpen", "onClose", "title", "label", "tags", "pre", "JSON", "stringify", "logs", "log", "level", "message", "fields"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "42270b1051619c213b6c68183e14693dd08a6d96"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_f5yijtf65 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_f5yijtf65();
cov_f5yijtf65().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_f5yijtf65().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_f5yijtf65().f[0]++;
    cov_f5yijtf65().s[2]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_f5yijtf65().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_f5yijtf65().s[4]++, _interop_require_wildcard(require("react")));
const _d3 =
/* istanbul ignore next */
(/*#__PURE__*/cov_f5yijtf65().s[5]++, _interop_require_wildcard(require("d3")));
const _Button =
/* istanbul ignore next */
(cov_f5yijtf65().s[6]++, require("../ui/Button"));
const _Badge =
/* istanbul ignore next */
(cov_f5yijtf65().s[7]++, require("../ui/Badge"));
const _Modal =
/* istanbul ignore next */
(cov_f5yijtf65().s[8]++, require("../ui/Modal"));
const _lucidereact =
/* istanbul ignore next */
(cov_f5yijtf65().s[9]++, require("lucide-react"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_f5yijtf65().f[1]++;
  cov_f5yijtf65().s[10]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_f5yijtf65().b[0][0]++;
    cov_f5yijtf65().s[11]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_f5yijtf65().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_f5yijtf65().s[12]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_f5yijtf65().s[13]++, new WeakMap());
  /* istanbul ignore next */
  cov_f5yijtf65().s[14]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_f5yijtf65().f[2]++;
    cov_f5yijtf65().s[15]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_f5yijtf65().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_f5yijtf65().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_f5yijtf65().f[3]++;
  cov_f5yijtf65().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_f5yijtf65().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_f5yijtf65().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_f5yijtf65().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_f5yijtf65().b[2][0]++;
    cov_f5yijtf65().s[17]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_f5yijtf65().b[2][1]++;
  }
  cov_f5yijtf65().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_f5yijtf65().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_f5yijtf65().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_f5yijtf65().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_f5yijtf65().b[4][0]++;
    cov_f5yijtf65().s[19]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_f5yijtf65().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_f5yijtf65().s[20]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_f5yijtf65().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_f5yijtf65().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_f5yijtf65().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_f5yijtf65().b[6][0]++;
    cov_f5yijtf65().s[22]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_f5yijtf65().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_f5yijtf65().s[23]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_f5yijtf65().s[24]++,
  /* istanbul ignore next */
  (cov_f5yijtf65().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_f5yijtf65().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_f5yijtf65().s[25]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_f5yijtf65().s[26]++;
    if (
    /* istanbul ignore next */
    (cov_f5yijtf65().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_f5yijtf65().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_f5yijtf65().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_f5yijtf65().s[27]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_f5yijtf65().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_f5yijtf65().b[11][1]++, null));
      /* istanbul ignore next */
      cov_f5yijtf65().s[28]++;
      if (
      /* istanbul ignore next */
      (cov_f5yijtf65().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_f5yijtf65().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_f5yijtf65().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_f5yijtf65().b[12][0]++;
        cov_f5yijtf65().s[29]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_f5yijtf65().b[12][1]++;
        cov_f5yijtf65().s[30]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_f5yijtf65().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_f5yijtf65().s[31]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_f5yijtf65().s[32]++;
  if (cache) {
    /* istanbul ignore next */
    cov_f5yijtf65().b[14][0]++;
    cov_f5yijtf65().s[33]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_f5yijtf65().b[14][1]++;
  }
  cov_f5yijtf65().s[34]++;
  return newObj;
}
/* istanbul ignore next */
cov_f5yijtf65().s[35]++;
const DistributedTracingViz = ({
  data,
  config =
  /* istanbul ignore next */
  (cov_f5yijtf65().b[15][0]++, {}),
  isFullscreen =
  /* istanbul ignore next */
  (cov_f5yijtf65().b[16][0]++, false)
}) => {
  /* istanbul ignore next */
  cov_f5yijtf65().f[4]++;
  const [traces, setTraces] =
  /* istanbul ignore next */
  (cov_f5yijtf65().s[36]++, (0, _react.useState)([]));
  const [selectedTrace, setSelectedTrace] =
  /* istanbul ignore next */
  (cov_f5yijtf65().s[37]++, (0, _react.useState)(null));
  const [selectedSpan, setSelectedSpan] =
  /* istanbul ignore next */
  (cov_f5yijtf65().s[38]++, (0, _react.useState)(null));
  const [filter, setFilter] =
  /* istanbul ignore next */
  (cov_f5yijtf65().s[39]++, (0, _react.useState)({
    search: "",
    service: "all",
    status: "all",
    minDuration: 0,
    maxDuration: 0
  }));
  const [viewMode, setViewMode] =
  /* istanbul ignore next */
  (cov_f5yijtf65().s[40]++, (0, _react.useState)("timeline"));
  const [traceDetailModal, setTraceDetailModal] =
  /* istanbul ignore next */
  (cov_f5yijtf65().s[41]++, (0, _react.useState)(false));
  const [spanDetailModal, setSpanDetailModal] =
  /* istanbul ignore next */
  (cov_f5yijtf65().s[42]++, (0, _react.useState)(false));
  const timelineRef =
  /* istanbul ignore next */
  (cov_f5yijtf65().s[43]++, (0, _react.useRef)(null));
  const flamegraphRef =
  /* istanbul ignore next */
  (cov_f5yijtf65().s[44]++, (0, _react.useRef)(null));
  /* istanbul ignore next */
  cov_f5yijtf65().s[45]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_f5yijtf65().f[5]++;
    cov_f5yijtf65().s[46]++;
    if (data?.traces) {
      /* istanbul ignore next */
      cov_f5yijtf65().b[17][0]++;
      cov_f5yijtf65().s[47]++;
      setTraces(data.traces);
    } else
    /* istanbul ignore next */
    {
      cov_f5yijtf65().b[17][1]++;
    }
  }, [data]);
  /* istanbul ignore next */
  cov_f5yijtf65().s[48]++;
  const getStatusIcon = status => {
    /* istanbul ignore next */
    cov_f5yijtf65().f[6]++;
    cov_f5yijtf65().s[49]++;
    switch (status) {
      case "success":
        /* istanbul ignore next */
        cov_f5yijtf65().b[18][0]++;
        cov_f5yijtf65().s[50]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.CheckCircle, {
          className: "h-4 w-4 text-green-500"
        });
      case "error":
        /* istanbul ignore next */
        cov_f5yijtf65().b[18][1]++;
        cov_f5yijtf65().s[51]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.XCircle, {
          className: "h-4 w-4 text-red-500"
        });
      case "timeout":
        /* istanbul ignore next */
        cov_f5yijtf65().b[18][2]++;
        cov_f5yijtf65().s[52]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Clock, {
          className: "h-4 w-4 text-yellow-500"
        });
      default:
        /* istanbul ignore next */
        cov_f5yijtf65().b[18][3]++;
        cov_f5yijtf65().s[53]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Activity, {
          className: "h-4 w-4 text-gray-500"
        });
    }
  };
  /* istanbul ignore next */
  cov_f5yijtf65().s[54]++;
  const getStatusColor = status => {
    /* istanbul ignore next */
    cov_f5yijtf65().f[7]++;
    cov_f5yijtf65().s[55]++;
    switch (status) {
      case "success":
        /* istanbul ignore next */
        cov_f5yijtf65().b[19][0]++;
        cov_f5yijtf65().s[56]++;
        return "bg-green-100 text-green-800";
      case "error":
        /* istanbul ignore next */
        cov_f5yijtf65().b[19][1]++;
        cov_f5yijtf65().s[57]++;
        return "bg-red-100 text-red-800";
      case "partial":
        /* istanbul ignore next */
        cov_f5yijtf65().b[19][2]++;
        cov_f5yijtf65().s[58]++;
        return "bg-yellow-100 text-yellow-800";
      default:
        /* istanbul ignore next */
        cov_f5yijtf65().b[19][3]++;
        cov_f5yijtf65().s[59]++;
        return "bg-gray-100 text-gray-800";
    }
  };
  /* istanbul ignore next */
  cov_f5yijtf65().s[60]++;
  const getServiceIcon = serviceName => {
    /* istanbul ignore next */
    cov_f5yijtf65().f[8]++;
    const iconMap =
    /* istanbul ignore next */
    (cov_f5yijtf65().s[61]++, {
      database: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Database, {
        className: "h-4 w-4"
      }),
      api: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Server, {
        className: "h-4 w-4"
      }),
      frontend: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Globe, {
        className: "h-4 w-4"
      }),
      cache: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Zap, {
        className: "h-4 w-4"
      })
    });
    const serviceType =
    /* istanbul ignore next */
    (cov_f5yijtf65().s[62]++, Object.keys(iconMap).find(key => {
      /* istanbul ignore next */
      cov_f5yijtf65().f[9]++;
      cov_f5yijtf65().s[63]++;
      return serviceName.toLowerCase().includes(key);
    }));
    /* istanbul ignore next */
    cov_f5yijtf65().s[64]++;
    return /* istanbul ignore next */(cov_f5yijtf65().b[20][0]++, iconMap[
    /* istanbul ignore next */
    (cov_f5yijtf65().b[21][0]++, serviceType) ||
    /* istanbul ignore next */
    (cov_f5yijtf65().b[21][1]++, "api")]) ||
    /* istanbul ignore next */
    (cov_f5yijtf65().b[20][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Activity, {
      className: "h-4 w-4"
    }));
  };
  /* istanbul ignore next */
  cov_f5yijtf65().s[65]++;
  const formatDuration = duration => {
    /* istanbul ignore next */
    cov_f5yijtf65().f[10]++;
    cov_f5yijtf65().s[66]++;
    if (duration >= 1000) {
      /* istanbul ignore next */
      cov_f5yijtf65().b[22][0]++;
      cov_f5yijtf65().s[67]++;
      return `${(duration / 1000).toFixed(2)}s`;
    } else
    /* istanbul ignore next */
    {
      cov_f5yijtf65().b[22][1]++;
    }
    cov_f5yijtf65().s[68]++;
    return `${duration.toFixed(1)}ms`;
  };
  /* istanbul ignore next */
  cov_f5yijtf65().s[69]++;
  const formatTimestamp = timestamp => {
    /* istanbul ignore next */
    cov_f5yijtf65().f[11]++;
    cov_f5yijtf65().s[70]++;
    return new Date(timestamp).toLocaleTimeString("en-US", {
      hour12: false,
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit",
      fractionalSecondDigits: 3
    });
  };
  /* istanbul ignore next */
  cov_f5yijtf65().s[71]++;
  const buildSpanTree = spans => {
    /* istanbul ignore next */
    cov_f5yijtf65().f[12]++;
    const spanMap =
    /* istanbul ignore next */
    (cov_f5yijtf65().s[72]++, new Map(spans.map(span => {
      /* istanbul ignore next */
      cov_f5yijtf65().f[13]++;
      cov_f5yijtf65().s[73]++;
      return [span.id, span];
    })));
    const roots =
    /* istanbul ignore next */
    (cov_f5yijtf65().s[74]++, []);
    /* istanbul ignore next */
    cov_f5yijtf65().s[75]++;
    spans.forEach(span => {
      /* istanbul ignore next */
      cov_f5yijtf65().f[14]++;
      cov_f5yijtf65().s[76]++;
      if (!span.parentId) {
        /* istanbul ignore next */
        cov_f5yijtf65().b[23][0]++;
        cov_f5yijtf65().s[77]++;
        roots.push(span);
      } else {
        /* istanbul ignore next */
        cov_f5yijtf65().b[23][1]++;
        const parent =
        /* istanbul ignore next */
        (cov_f5yijtf65().s[78]++, spanMap.get(span.parentId));
        /* istanbul ignore next */
        cov_f5yijtf65().s[79]++;
        if (parent) {
          /* istanbul ignore next */
          cov_f5yijtf65().b[24][0]++;
          cov_f5yijtf65().s[80]++;
          if (!parent.children) {
            /* istanbul ignore next */
            cov_f5yijtf65().b[25][0]++;
            cov_f5yijtf65().s[81]++;
            parent.children = [];
          } else
          /* istanbul ignore next */
          {
            cov_f5yijtf65().b[25][1]++;
          }
          cov_f5yijtf65().s[82]++;
          parent.children.push(span);
        } else
        /* istanbul ignore next */
        {
          cov_f5yijtf65().b[24][1]++;
        }
      }
    });
    /* istanbul ignore next */
    cov_f5yijtf65().s[83]++;
    return roots;
  };
  /* istanbul ignore next */
  cov_f5yijtf65().s[84]++;
  const renderTimeline = trace => {
    /* istanbul ignore next */
    cov_f5yijtf65().f[15]++;
    cov_f5yijtf65().s[85]++;
    if (!timelineRef.current) {
      /* istanbul ignore next */
      cov_f5yijtf65().b[26][0]++;
      cov_f5yijtf65().s[86]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_f5yijtf65().b[26][1]++;
    }
    const svg =
    /* istanbul ignore next */
    (cov_f5yijtf65().s[87]++, _d3.select(timelineRef.current));
    /* istanbul ignore next */
    cov_f5yijtf65().s[88]++;
    svg.selectAll("*").remove();
    const margin =
    /* istanbul ignore next */
    (cov_f5yijtf65().s[89]++, {
      top: 20,
      right: 20,
      bottom: 30,
      left: 200
    });
    const width =
    /* istanbul ignore next */
    (cov_f5yijtf65().s[90]++, (
    /* istanbul ignore next */
    (cov_f5yijtf65().b[27][0]++, timelineRef.current.clientWidth) ||
    /* istanbul ignore next */
    (cov_f5yijtf65().b[27][1]++, 800)) - margin.left - margin.right);
    const height =
    /* istanbul ignore next */
    (cov_f5yijtf65().s[91]++, Math.max(400, trace.spans.length * 30) - margin.top - margin.bottom);
    const g =
    /* istanbul ignore next */
    (cov_f5yijtf65().s[92]++, svg.append("g").attr("transform", `translate(${margin.left},${margin.top})`));
    // Time scale
    const minTime =
    /* istanbul ignore next */
    (cov_f5yijtf65().s[93]++, Math.min(...trace.spans.map(s => {
      /* istanbul ignore next */
      cov_f5yijtf65().f[16]++;
      cov_f5yijtf65().s[94]++;
      return s.startTime;
    })));
    const maxTime =
    /* istanbul ignore next */
    (cov_f5yijtf65().s[95]++, Math.max(...trace.spans.map(s => {
      /* istanbul ignore next */
      cov_f5yijtf65().f[17]++;
      cov_f5yijtf65().s[96]++;
      return s.startTime + s.duration;
    })));
    const timeScale =
    /* istanbul ignore next */
    (cov_f5yijtf65().s[97]++, _d3.scaleLinear().domain([minTime, maxTime]).range([0, width]));
    // Y scale for spans
    const yScale =
    /* istanbul ignore next */
    (cov_f5yijtf65().s[98]++, _d3.scaleBand().domain(trace.spans.map(s => {
      /* istanbul ignore next */
      cov_f5yijtf65().f[18]++;
      cov_f5yijtf65().s[99]++;
      return s.id;
    })).range([0, height]).padding(0.1));
    // Draw spans
    const spans =
    /* istanbul ignore next */
    (cov_f5yijtf65().s[100]++, g.selectAll(".span").data(trace.spans).enter().append("g").attr("class", "span").attr("transform", d => {
      /* istanbul ignore next */
      cov_f5yijtf65().f[19]++;
      cov_f5yijtf65().s[101]++;
      return `translate(0, ${yScale(d.id)})`;
    }));
    // Span backgrounds
    /* istanbul ignore next */
    cov_f5yijtf65().s[102]++;
    spans.append("rect").attr("x", d => {
      /* istanbul ignore next */
      cov_f5yijtf65().f[20]++;
      cov_f5yijtf65().s[103]++;
      return timeScale(d.startTime);
    }).attr("width", d => {
      /* istanbul ignore next */
      cov_f5yijtf65().f[21]++;
      cov_f5yijtf65().s[104]++;
      return Math.max(1, timeScale(d.startTime + d.duration) - timeScale(d.startTime));
    }).attr("height", yScale.bandwidth()).attr("fill", d => {
      /* istanbul ignore next */
      cov_f5yijtf65().f[22]++;
      cov_f5yijtf65().s[105]++;
      switch (d.status) {
        case "success":
          /* istanbul ignore next */
          cov_f5yijtf65().b[28][0]++;
          cov_f5yijtf65().s[106]++;
          return "#10b981";
        case "error":
          /* istanbul ignore next */
          cov_f5yijtf65().b[28][1]++;
          cov_f5yijtf65().s[107]++;
          return "#ef4444";
        case "timeout":
          /* istanbul ignore next */
          cov_f5yijtf65().b[28][2]++;
          cov_f5yijtf65().s[108]++;
          return "#f59e0b";
        default:
          /* istanbul ignore next */
          cov_f5yijtf65().b[28][3]++;
          cov_f5yijtf65().s[109]++;
          return "#6b7280";
      }
    }).attr("opacity", 0.7).attr("rx", 3).style("cursor", "pointer").on("click", (event, d) => {
      /* istanbul ignore next */
      cov_f5yijtf65().f[23]++;
      cov_f5yijtf65().s[110]++;
      setSelectedSpan(d);
      /* istanbul ignore next */
      cov_f5yijtf65().s[111]++;
      setSpanDetailModal(true);
    });
    // Span labels
    /* istanbul ignore next */
    cov_f5yijtf65().s[112]++;
    spans.append("text").attr("x", -5).attr("y", yScale.bandwidth() / 2).attr("dy", "0.35em").attr("text-anchor", "end").attr("font-size", "12px").attr("fill", "#374151").text(d => {
      /* istanbul ignore next */
      cov_f5yijtf65().f[24]++;
      cov_f5yijtf65().s[113]++;
      return `${d.serviceName}: ${d.operationName}`;
    });
    // Duration labels
    /* istanbul ignore next */
    cov_f5yijtf65().s[114]++;
    spans.append("text").attr("x", d => {
      /* istanbul ignore next */
      cov_f5yijtf65().f[25]++;
      cov_f5yijtf65().s[115]++;
      return timeScale(d.startTime) + 5;
    }).attr("y", yScale.bandwidth() / 2).attr("dy", "0.35em").attr("font-size", "10px").attr("fill", "white").text(d => {
      /* istanbul ignore next */
      cov_f5yijtf65().f[26]++;
      cov_f5yijtf65().s[116]++;
      return formatDuration(d.duration);
    });
    // Time axis
    const timeAxis =
    /* istanbul ignore next */
    (cov_f5yijtf65().s[117]++, _d3.axisBottom(timeScale).tickFormat(d => {
      /* istanbul ignore next */
      cov_f5yijtf65().f[27]++;
      cov_f5yijtf65().s[118]++;
      return `+${(d - minTime).toFixed(0)}ms`;
    }));
    /* istanbul ignore next */
    cov_f5yijtf65().s[119]++;
    g.append("g").attr("transform", `translate(0, ${height})`).call(timeAxis);
  };
  /* istanbul ignore next */
  cov_f5yijtf65().s[120]++;
  const renderFlamegraph = trace => {
    /* istanbul ignore next */
    cov_f5yijtf65().f[28]++;
    cov_f5yijtf65().s[121]++;
    if (!flamegraphRef.current) {
      /* istanbul ignore next */
      cov_f5yijtf65().b[29][0]++;
      cov_f5yijtf65().s[122]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_f5yijtf65().b[29][1]++;
    }
    const svg =
    /* istanbul ignore next */
    (cov_f5yijtf65().s[123]++, _d3.select(flamegraphRef.current));
    /* istanbul ignore next */
    cov_f5yijtf65().s[124]++;
    svg.selectAll("*").remove();
    const margin =
    /* istanbul ignore next */
    (cov_f5yijtf65().s[125]++, {
      top: 20,
      right: 20,
      bottom: 30,
      left: 20
    });
    const width =
    /* istanbul ignore next */
    (cov_f5yijtf65().s[126]++, (
    /* istanbul ignore next */
    (cov_f5yijtf65().b[30][0]++, flamegraphRef.current.clientWidth) ||
    /* istanbul ignore next */
    (cov_f5yijtf65().b[30][1]++, 800)) - margin.left - margin.right);
    const height =
    /* istanbul ignore next */
    (cov_f5yijtf65().s[127]++, 400 - margin.top - margin.bottom);
    const g =
    /* istanbul ignore next */
    (cov_f5yijtf65().s[128]++, svg.append("g").attr("transform", `translate(${margin.left},${margin.top})`));
    // Build hierarchy
    const spanTree =
    /* istanbul ignore next */
    (cov_f5yijtf65().s[129]++, buildSpanTree(trace.spans));
    const hierarchy =
    /* istanbul ignore next */
    (cov_f5yijtf65().s[130]++, _d3.hierarchy({
      children: spanTree
    }, d => {
      /* istanbul ignore next */
      cov_f5yijtf65().f[29]++;
      cov_f5yijtf65().s[131]++;
      return d.children;
    }).sum(d => {
      /* istanbul ignore next */
      cov_f5yijtf65().f[30]++;
      cov_f5yijtf65().s[132]++;
      return /* istanbul ignore next */(cov_f5yijtf65().b[31][0]++, d.duration) ||
      /* istanbul ignore next */
      (cov_f5yijtf65().b[31][1]++, 0);
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_f5yijtf65().f[31]++;
      cov_f5yijtf65().s[133]++;
      return (
      /* istanbul ignore next */
      (cov_f5yijtf65().b[32][0]++, b.value) ||
      /* istanbul ignore next */
      (cov_f5yijtf65().b[32][1]++, 0)) - (
      /* istanbul ignore next */
      (cov_f5yijtf65().b[33][0]++, a.value) ||
      /* istanbul ignore next */
      (cov_f5yijtf65().b[33][1]++, 0));
    }));
    const partition =
    /* istanbul ignore next */
    (cov_f5yijtf65().s[134]++, _d3.partition().size([width, height]).padding(1));
    const root =
    /* istanbul ignore next */
    (cov_f5yijtf65().s[135]++, partition(hierarchy));
    // Color scale
    const colorScale =
    /* istanbul ignore next */
    (cov_f5yijtf65().s[136]++, _d3.scaleOrdinal(_d3.schemeCategory10));
    // Draw rectangles
    const cell =
    /* istanbul ignore next */
    (cov_f5yijtf65().s[137]++, g.selectAll(".cell").data(root.descendants()).enter().append("g").attr("class", "cell"));
    /* istanbul ignore next */
    cov_f5yijtf65().s[138]++;
    cell.append("rect").attr("x", d => {
      /* istanbul ignore next */
      cov_f5yijtf65().f[32]++;
      cov_f5yijtf65().s[139]++;
      return d.x0;
    }).attr("y", d => {
      /* istanbul ignore next */
      cov_f5yijtf65().f[33]++;
      cov_f5yijtf65().s[140]++;
      return d.y0;
    }).attr("width", d => {
      /* istanbul ignore next */
      cov_f5yijtf65().f[34]++;
      cov_f5yijtf65().s[141]++;
      return d.x1 - d.x0;
    }).attr("height", d => {
      /* istanbul ignore next */
      cov_f5yijtf65().f[35]++;
      cov_f5yijtf65().s[142]++;
      return d.y1 - d.y0;
    }).attr("fill", d => {
      /* istanbul ignore next */
      cov_f5yijtf65().f[36]++;
      cov_f5yijtf65().s[143]++;
      return d.data.serviceName ?
      /* istanbul ignore next */
      (cov_f5yijtf65().b[34][0]++, colorScale(d.data.serviceName)) :
      /* istanbul ignore next */
      (cov_f5yijtf65().b[34][1]++, "#f3f4f6");
    }).attr("stroke", "white").attr("stroke-width", 1).style("cursor", "pointer").on("click", (event, d) => {
      /* istanbul ignore next */
      cov_f5yijtf65().f[37]++;
      cov_f5yijtf65().s[144]++;
      if (d.data.id) {
        /* istanbul ignore next */
        cov_f5yijtf65().b[35][0]++;
        cov_f5yijtf65().s[145]++;
        setSelectedSpan(d.data);
        /* istanbul ignore next */
        cov_f5yijtf65().s[146]++;
        setSpanDetailModal(true);
      } else
      /* istanbul ignore next */
      {
        cov_f5yijtf65().b[35][1]++;
      }
    });
    // Add labels
    /* istanbul ignore next */
    cov_f5yijtf65().s[147]++;
    cell.append("text").attr("x", d => {
      /* istanbul ignore next */
      cov_f5yijtf65().f[38]++;
      cov_f5yijtf65().s[148]++;
      return (d.x0 + d.x1) / 2;
    }).attr("y", d => {
      /* istanbul ignore next */
      cov_f5yijtf65().f[39]++;
      cov_f5yijtf65().s[149]++;
      return (d.y0 + d.y1) / 2;
    }).attr("dy", "0.35em").attr("text-anchor", "middle").attr("font-size", "10px").attr("fill", "white").text(d => {
      /* istanbul ignore next */
      cov_f5yijtf65().f[40]++;
      const width =
      /* istanbul ignore next */
      (cov_f5yijtf65().s[150]++, d.x1 - d.x0);
      /* istanbul ignore next */
      cov_f5yijtf65().s[151]++;
      if (
      /* istanbul ignore next */
      (cov_f5yijtf65().b[37][0]++, width < 50) ||
      /* istanbul ignore next */
      (cov_f5yijtf65().b[37][1]++, !d.data.operationName)) {
        /* istanbul ignore next */
        cov_f5yijtf65().b[36][0]++;
        cov_f5yijtf65().s[152]++;
        return "";
      } else
      /* istanbul ignore next */
      {
        cov_f5yijtf65().b[36][1]++;
      }
      cov_f5yijtf65().s[153]++;
      return d.data.operationName.length > 15 ?
      /* istanbul ignore next */
      (cov_f5yijtf65().b[38][0]++, d.data.operationName.substring(0, 15) + "...") :
      /* istanbul ignore next */
      (cov_f5yijtf65().b[38][1]++, d.data.operationName);
    });
  };
  /* istanbul ignore next */
  cov_f5yijtf65().s[154]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_f5yijtf65().f[41]++;
    cov_f5yijtf65().s[155]++;
    if (selectedTrace) {
      /* istanbul ignore next */
      cov_f5yijtf65().b[39][0]++;
      cov_f5yijtf65().s[156]++;
      if (viewMode === "timeline") {
        /* istanbul ignore next */
        cov_f5yijtf65().b[40][0]++;
        cov_f5yijtf65().s[157]++;
        renderTimeline(selectedTrace);
      } else {
        /* istanbul ignore next */
        cov_f5yijtf65().b[40][1]++;
        cov_f5yijtf65().s[158]++;
        if (viewMode === "flamegraph") {
          /* istanbul ignore next */
          cov_f5yijtf65().b[41][0]++;
          cov_f5yijtf65().s[159]++;
          renderFlamegraph(selectedTrace);
        } else
        /* istanbul ignore next */
        {
          cov_f5yijtf65().b[41][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_f5yijtf65().b[39][1]++;
    }
  }, [selectedTrace, viewMode]);
  const filteredTraces =
  /* istanbul ignore next */
  (cov_f5yijtf65().s[160]++, traces.filter(trace => {
    /* istanbul ignore next */
    cov_f5yijtf65().f[42]++;
    cov_f5yijtf65().s[161]++;
    if (
    /* istanbul ignore next */
    (cov_f5yijtf65().b[43][0]++, filter.search) &&
    /* istanbul ignore next */
    (cov_f5yijtf65().b[43][1]++, !trace.operationName.toLowerCase().includes(filter.search.toLowerCase())) &&
    /* istanbul ignore next */
    (cov_f5yijtf65().b[43][2]++, !trace.services.some(s => {
      /* istanbul ignore next */
      cov_f5yijtf65().f[43]++;
      cov_f5yijtf65().s[162]++;
      return s.toLowerCase().includes(filter.search.toLowerCase());
    }))) {
      /* istanbul ignore next */
      cov_f5yijtf65().b[42][0]++;
      cov_f5yijtf65().s[163]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_f5yijtf65().b[42][1]++;
    }
    cov_f5yijtf65().s[164]++;
    if (
    /* istanbul ignore next */
    (cov_f5yijtf65().b[45][0]++, filter.service !== "all") &&
    /* istanbul ignore next */
    (cov_f5yijtf65().b[45][1]++, !trace.services.includes(filter.service))) {
      /* istanbul ignore next */
      cov_f5yijtf65().b[44][0]++;
      cov_f5yijtf65().s[165]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_f5yijtf65().b[44][1]++;
    }
    cov_f5yijtf65().s[166]++;
    if (
    /* istanbul ignore next */
    (cov_f5yijtf65().b[47][0]++, filter.status !== "all") &&
    /* istanbul ignore next */
    (cov_f5yijtf65().b[47][1]++, trace.status !== filter.status)) {
      /* istanbul ignore next */
      cov_f5yijtf65().b[46][0]++;
      cov_f5yijtf65().s[167]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_f5yijtf65().b[46][1]++;
    }
    cov_f5yijtf65().s[168]++;
    if (
    /* istanbul ignore next */
    (cov_f5yijtf65().b[49][0]++, filter.minDuration > 0) &&
    /* istanbul ignore next */
    (cov_f5yijtf65().b[49][1]++, trace.duration < filter.minDuration)) {
      /* istanbul ignore next */
      cov_f5yijtf65().b[48][0]++;
      cov_f5yijtf65().s[169]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_f5yijtf65().b[48][1]++;
    }
    cov_f5yijtf65().s[170]++;
    if (
    /* istanbul ignore next */
    (cov_f5yijtf65().b[51][0]++, filter.maxDuration > 0) &&
    /* istanbul ignore next */
    (cov_f5yijtf65().b[51][1]++, trace.duration > filter.maxDuration)) {
      /* istanbul ignore next */
      cov_f5yijtf65().b[50][0]++;
      cov_f5yijtf65().s[171]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_f5yijtf65().b[50][1]++;
    }
    cov_f5yijtf65().s[172]++;
    return true;
  }));
  const allServices =
  /* istanbul ignore next */
  (cov_f5yijtf65().s[173]++, [...new Set(traces.flatMap(trace => {
    /* istanbul ignore next */
    cov_f5yijtf65().f[44]++;
    cov_f5yijtf65().s[174]++;
    return trace.services;
  }))]);
  /* istanbul ignore next */
  cov_f5yijtf65().s[175]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "h-full flex flex-col",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex items-center justify-between mb-4",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center space-x-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.GitBranch, {
          className: "h-5 w-5 text-gray-600"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
          className: "font-semibold",
          children: "Distributed Tracing"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_Badge.Badge, {
          variant: "outline",
          children: [filteredTraces.length, " traces"]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center space-x-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
          variant: viewMode === "list" ?
          /* istanbul ignore next */
          (cov_f5yijtf65().b[52][0]++, "default") :
          /* istanbul ignore next */
          (cov_f5yijtf65().b[52][1]++, "outline"),
          size: "sm",
          onClick: () => {
            /* istanbul ignore next */
            cov_f5yijtf65().f[45]++;
            cov_f5yijtf65().s[176]++;
            return setViewMode("list");
          },
          children: "List"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
          variant: viewMode === "timeline" ?
          /* istanbul ignore next */
          (cov_f5yijtf65().b[53][0]++, "default") :
          /* istanbul ignore next */
          (cov_f5yijtf65().b[53][1]++, "outline"),
          size: "sm",
          onClick: () => {
            /* istanbul ignore next */
            cov_f5yijtf65().f[46]++;
            cov_f5yijtf65().s[177]++;
            return setViewMode("timeline");
          },
          children: "Timeline"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
          variant: viewMode === "flamegraph" ?
          /* istanbul ignore next */
          (cov_f5yijtf65().b[54][0]++, "default") :
          /* istanbul ignore next */
          (cov_f5yijtf65().b[54][1]++, "outline"),
          size: "sm",
          onClick: () => {
            /* istanbul ignore next */
            cov_f5yijtf65().f[47]++;
            cov_f5yijtf65().s[178]++;
            return setViewMode("flamegraph");
          },
          children: "Flamegraph"
        })]
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "grid grid-cols-1 md:grid-cols-5 gap-2 mb-4",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "relative",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Search, {
          className: "absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
          type: "text",
          placeholder: "Search traces...",
          className: "w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg text-sm",
          value: filter.search,
          onChange: e => {
            /* istanbul ignore next */
            cov_f5yijtf65().f[48]++;
            cov_f5yijtf65().s[179]++;
            return setFilter(prev => {
              /* istanbul ignore next */
              cov_f5yijtf65().f[49]++;
              cov_f5yijtf65().s[180]++;
              return {
                ...prev,
                search: e.target.value
              };
            });
          }
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("select", {
        value: filter.service,
        onChange: e => {
          /* istanbul ignore next */
          cov_f5yijtf65().f[50]++;
          cov_f5yijtf65().s[181]++;
          return setFilter(prev => {
            /* istanbul ignore next */
            cov_f5yijtf65().f[51]++;
            cov_f5yijtf65().s[182]++;
            return {
              ...prev,
              service: e.target.value
            };
          });
        },
        className: "px-3 py-2 border border-gray-300 rounded-lg text-sm",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("option", {
          value: "all",
          children: "All Services"
        }), allServices.map(service => {
          /* istanbul ignore next */
          cov_f5yijtf65().f[52]++;
          cov_f5yijtf65().s[183]++;
          return /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
            value: service,
            children: service
          }, service);
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("select", {
        value: filter.status,
        onChange: e => {
          /* istanbul ignore next */
          cov_f5yijtf65().f[53]++;
          cov_f5yijtf65().s[184]++;
          return setFilter(prev => {
            /* istanbul ignore next */
            cov_f5yijtf65().f[54]++;
            cov_f5yijtf65().s[185]++;
            return {
              ...prev,
              status: e.target.value
            };
          });
        },
        className: "px-3 py-2 border border-gray-300 rounded-lg text-sm",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("option", {
          value: "all",
          children: "All Statuses"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
          value: "success",
          children: "Success"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
          value: "error",
          children: "Error"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
          value: "partial",
          children: "Partial"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
        type: "number",
        placeholder: "Min duration (ms)",
        className: "px-3 py-2 border border-gray-300 rounded-lg text-sm",
        value:
        /* istanbul ignore next */
        (cov_f5yijtf65().b[55][0]++, filter.minDuration) ||
        /* istanbul ignore next */
        (cov_f5yijtf65().b[55][1]++, ""),
        onChange: e => {
          /* istanbul ignore next */
          cov_f5yijtf65().f[55]++;
          cov_f5yijtf65().s[186]++;
          return setFilter(prev => {
            /* istanbul ignore next */
            cov_f5yijtf65().f[56]++;
            cov_f5yijtf65().s[187]++;
            return {
              ...prev,
              minDuration:
              /* istanbul ignore next */
              (cov_f5yijtf65().b[56][0]++, Number(e.target.value)) ||
              /* istanbul ignore next */
              (cov_f5yijtf65().b[56][1]++, 0)
            };
          });
        }
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
        type: "number",
        placeholder: "Max duration (ms)",
        className: "px-3 py-2 border border-gray-300 rounded-lg text-sm",
        value:
        /* istanbul ignore next */
        (cov_f5yijtf65().b[57][0]++, filter.maxDuration) ||
        /* istanbul ignore next */
        (cov_f5yijtf65().b[57][1]++, ""),
        onChange: e => {
          /* istanbul ignore next */
          cov_f5yijtf65().f[57]++;
          cov_f5yijtf65().s[188]++;
          return setFilter(prev => {
            /* istanbul ignore next */
            cov_f5yijtf65().f[58]++;
            cov_f5yijtf65().s[189]++;
            return {
              ...prev,
              maxDuration:
              /* istanbul ignore next */
              (cov_f5yijtf65().b[58][0]++, Number(e.target.value)) ||
              /* istanbul ignore next */
              (cov_f5yijtf65().b[58][1]++, 0)
            };
          });
        }
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "flex-1 overflow-hidden",
      children: viewMode === "list" ?
      /* istanbul ignore next */
      (// List View
      /*#__PURE__*/
      cov_f5yijtf65().b[59][0]++, (0, _jsxruntime.jsx)("div", {
        className: "h-full overflow-auto space-y-2",
        children: filteredTraces.length === 0 ?
        /* istanbul ignore next */
        (/*#__PURE__*/cov_f5yijtf65().b[60][0]++, (0, _jsxruntime.jsxs)("div", {
          className: "text-center py-8 text-gray-500",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.GitBranch, {
            className: "h-8 w-8 mx-auto mb-2 opacity-50"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            children: "No traces found"
          })]
        })) :
        /* istanbul ignore next */
        (cov_f5yijtf65().b[60][1]++, filteredTraces.map(trace => {
          /* istanbul ignore next */
          cov_f5yijtf65().f[59]++;
          cov_f5yijtf65().s[190]++;
          return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "bg-white border border-gray-200 rounded-lg p-3 hover:shadow-sm transition-shadow cursor-pointer",
            onClick: () => {
              /* istanbul ignore next */
              cov_f5yijtf65().f[60]++;
              cov_f5yijtf65().s[191]++;
              setSelectedTrace(trace);
              /* istanbul ignore next */
              cov_f5yijtf65().s[192]++;
              setTraceDetailModal(true);
            },
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-start justify-between",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-start space-x-3 flex-1",
                children: [getStatusIcon(trace.status), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex-1 min-w-0",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center space-x-2 mb-1",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
                      className: "text-sm font-medium text-gray-900 truncate",
                      children: trace.operationName
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Badge.Badge, {
                      className: getStatusColor(trace.status),
                      children: trace.status.toUpperCase()
                    }),
                    /* istanbul ignore next */
                    (cov_f5yijtf65().b[61][0]++, trace.errorCount > 0) &&
                    /* istanbul ignore next */
                    (cov_f5yijtf65().b[61][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_Badge.Badge, {
                      variant: "destructive",
                      children: [trace.errorCount, " errors"]
                    }))]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center space-x-4 text-xs text-gray-500",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                      className: "flex items-center",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Clock, {
                        className: "h-3 w-3 mr-1"
                      }), formatDuration(trace.duration)]
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                      children: [trace.spans.length, " spans"]
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                      children: [trace.services.length, " services"]
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      children: formatTimestamp(trace.startTime)
                    })]
                  })]
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center space-x-2",
                children: [trace.services.slice(0, 3).map((service, index) => {
                  /* istanbul ignore next */
                  cov_f5yijtf65().f[61]++;
                  cov_f5yijtf65().s[193]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center space-x-1",
                    children: [getServiceIcon(service), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "text-xs text-gray-600",
                      children: service
                    })]
                  }, service);
                }),
                /* istanbul ignore next */
                (cov_f5yijtf65().b[62][0]++, trace.services.length > 3) &&
                /* istanbul ignore next */
                (cov_f5yijtf65().b[62][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                  className: "text-xs text-gray-500",
                  children: ["+", trace.services.length - 3]
                }))]
              })]
            })
          }, trace.id);
        }))
      })) :
      /* istanbul ignore next */
      (// Timeline/Flamegraph View
      /*#__PURE__*/
      cov_f5yijtf65().b[59][1]++, (0, _jsxruntime.jsxs)("div", {
        className: "h-full flex",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "w-1/3 border-r border-gray-200 overflow-auto",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "p-2 border-b border-gray-200",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
              className: "font-medium text-gray-900",
              children: "Select Trace"
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "space-y-1 p-2",
            children: filteredTraces.map(trace => {
              /* istanbul ignore next */
              cov_f5yijtf65().f[62]++;
              cov_f5yijtf65().s[194]++;
              return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: `p-2 rounded cursor-pointer transition-colors ${selectedTrace?.id === trace.id ?
                /* istanbul ignore next */
                (cov_f5yijtf65().b[63][0]++, "bg-blue-100 border border-blue-300") :
                /* istanbul ignore next */
                (cov_f5yijtf65().b[63][1]++, "hover:bg-gray-50")}`,
                onClick: () => {
                  /* istanbul ignore next */
                  cov_f5yijtf65().f[63]++;
                  cov_f5yijtf65().s[195]++;
                  return setSelectedTrace(trace);
                },
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center justify-between",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                    className: "text-sm font-medium truncate",
                    children: trace.operationName
                  }), getStatusIcon(trace.status)]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "text-xs text-gray-500 mt-1",
                  children: [formatDuration(trace.duration), " • ", trace.spans.length, " spans"]
                })]
              }, trace.id);
            })
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "flex-1 overflow-auto",
          children: selectedTrace ?
          /* istanbul ignore next */
          (/*#__PURE__*/cov_f5yijtf65().b[64][0]++, (0, _jsxruntime.jsxs)("div", {
            className: "p-4",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "mb-4",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
                className: "text-lg font-semibold text-gray-900",
                children: selectedTrace.operationName
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center space-x-4 text-sm text-gray-600",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                  children: ["Duration: ", formatDuration(selectedTrace.duration)]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                  children: ["Spans: ", selectedTrace.spans.length]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                  children: ["Services: ", selectedTrace.services.join(", ")]
                })]
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "w-full",
              children: viewMode === "timeline" ?
              /* istanbul ignore next */
              (/*#__PURE__*/cov_f5yijtf65().b[65][0]++, (0, _jsxruntime.jsx)("svg", {
                ref: timelineRef,
                width: "100%",
                height: Math.max(400, selectedTrace.spans.length * 30),
                className: "border border-gray-200 rounded"
              })) :
              /* istanbul ignore next */
              (/*#__PURE__*/cov_f5yijtf65().b[65][1]++, (0, _jsxruntime.jsx)("svg", {
                ref: flamegraphRef,
                width: "100%",
                height: "400",
                className: "border border-gray-200 rounded"
              }))
            })]
          })) :
          /* istanbul ignore next */
          (/*#__PURE__*/cov_f5yijtf65().b[64][1]++, (0, _jsxruntime.jsx)("div", {
            className: "flex items-center justify-center h-full text-gray-500",
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "text-center",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.GitBranch, {
                className: "h-12 w-12 mx-auto mb-4 opacity-50"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                children: "Select a trace to view details"
              })]
            })
          }))
        })]
      }))
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Modal.Modal, {
      isOpen: traceDetailModal,
      onClose: () => {
        /* istanbul ignore next */
        cov_f5yijtf65().f[64]++;
        cov_f5yijtf65().s[196]++;
        setTraceDetailModal(false);
        /* istanbul ignore next */
        cov_f5yijtf65().s[197]++;
        setSelectedTrace(null);
      },
      title: "Trace Details",
      children:
      /* istanbul ignore next */
      (cov_f5yijtf65().b[66][0]++, selectedTrace) &&
      /* istanbul ignore next */
      (cov_f5yijtf65().b[66][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "space-y-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "grid grid-cols-2 gap-4 text-sm",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "font-medium text-gray-700",
              children: "Operation:"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-gray-600",
              children: selectedTrace.operationName
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "font-medium text-gray-700",
              children: "Status:"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Badge.Badge, {
              className: getStatusColor(selectedTrace.status),
              children: selectedTrace.status.toUpperCase()
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "font-medium text-gray-700",
              children: "Duration:"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-gray-600",
              children: formatDuration(selectedTrace.duration)
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "font-medium text-gray-700",
              children: "Spans:"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-gray-600",
              children: selectedTrace.spans.length
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "font-medium text-gray-700",
              children: "Services:"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-gray-600",
              children: selectedTrace.services.join(", ")
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "font-medium text-gray-700",
              children: "Start Time:"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-gray-600",
              children: formatTimestamp(selectedTrace.startTime)
            })]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
            className: "font-medium text-gray-700 block mb-2",
            children: "Spans:"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "max-h-64 overflow-auto space-y-2",
            children: selectedTrace.spans.map(span => {
              /* istanbul ignore next */
              cov_f5yijtf65().f[65]++;
              cov_f5yijtf65().s[198]++;
              return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-between p-2 bg-gray-50 rounded cursor-pointer hover:bg-gray-100",
                onClick: () => {
                  /* istanbul ignore next */
                  cov_f5yijtf65().f[66]++;
                  cov_f5yijtf65().s[199]++;
                  setSelectedSpan(span);
                  /* istanbul ignore next */
                  cov_f5yijtf65().s[200]++;
                  setSpanDetailModal(true);
                },
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center space-x-2",
                  children: [getStatusIcon(span.status), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                    className: "text-sm",
                    children: [span.serviceName, ": ", span.operationName]
                  })]
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  className: "text-xs text-gray-500",
                  children: formatDuration(span.duration)
                })]
              }, span.id);
            })
          })]
        })]
      }))
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Modal.Modal, {
      isOpen: spanDetailModal,
      onClose: () => {
        /* istanbul ignore next */
        cov_f5yijtf65().f[67]++;
        cov_f5yijtf65().s[201]++;
        setSpanDetailModal(false);
        /* istanbul ignore next */
        cov_f5yijtf65().s[202]++;
        setSelectedSpan(null);
      },
      title: "Span Details",
      children:
      /* istanbul ignore next */
      (cov_f5yijtf65().b[67][0]++, selectedSpan) &&
      /* istanbul ignore next */
      (cov_f5yijtf65().b[67][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "space-y-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "grid grid-cols-2 gap-4 text-sm",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "font-medium text-gray-700",
              children: "Operation:"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-gray-600",
              children: selectedSpan.operationName
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "font-medium text-gray-700",
              children: "Service:"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-gray-600",
              children: selectedSpan.serviceName
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "font-medium text-gray-700",
              children: "Status:"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Badge.Badge, {
              className: getStatusColor(selectedSpan.status),
              children: selectedSpan.status.toUpperCase()
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "font-medium text-gray-700",
              children: "Duration:"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-gray-600",
              children: formatDuration(selectedSpan.duration)
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "font-medium text-gray-700",
              children: "Start Time:"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-gray-600",
              children: formatTimestamp(selectedSpan.startTime)
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "font-medium text-gray-700",
              children: "Span ID:"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-gray-600 font-mono text-xs",
              children: selectedSpan.id
            })]
          })]
        }),
        /* istanbul ignore next */
        (cov_f5yijtf65().b[68][0]++, Object.keys(selectedSpan.tags).length > 0) &&
        /* istanbul ignore next */
        (cov_f5yijtf65().b[68][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
            className: "font-medium text-gray-700 block mb-2",
            children: "Tags:"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "bg-gray-50 rounded p-3 max-h-32 overflow-auto",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)("pre", {
              className: "text-xs text-gray-600",
              children: JSON.stringify(selectedSpan.tags, null, 2)
            })
          })]
        })),
        /* istanbul ignore next */
        (cov_f5yijtf65().b[69][0]++, selectedSpan.logs.length > 0) &&
        /* istanbul ignore next */
        (cov_f5yijtf65().b[69][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
            className: "font-medium text-gray-700 block mb-2",
            children: "Logs:"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "max-h-48 overflow-auto space-y-1",
            children: selectedSpan.logs.map((log, index) => {
              /* istanbul ignore next */
              cov_f5yijtf65().f[68]++;
              cov_f5yijtf65().s[203]++;
              return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "text-xs bg-gray-50 rounded p-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center justify-between mb-1",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Badge.Badge, {
                    variant: log.level === "error" ?
                    /* istanbul ignore next */
                    (cov_f5yijtf65().b[70][0]++, "destructive") :
                    /* istanbul ignore next */
                    (cov_f5yijtf65().b[70][1]++, log.level === "warn" ?
                    /* istanbul ignore next */
                    (cov_f5yijtf65().b[71][0]++, "secondary") :
                    /* istanbul ignore next */
                    (cov_f5yijtf65().b[71][1]++, "default")),
                    children: log.level.toUpperCase()
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                    className: "text-gray-500",
                    children: formatTimestamp(log.timestamp)
                  })]
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                  className: "text-gray-700",
                  children: log.message
                }),
                /* istanbul ignore next */
                (cov_f5yijtf65().b[72][0]++, log.fields) &&
                /* istanbul ignore next */
                (cov_f5yijtf65().b[72][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("pre", {
                  className: "mt-1 text-gray-600",
                  children: JSON.stringify(log.fields, null, 2)
                }))]
              }, index);
            })
          })]
        }))]
      }))
    })]
  });
};
const _default =
/* istanbul ignore next */
(cov_f5yijtf65().s[204]++, DistributedTracingViz);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,