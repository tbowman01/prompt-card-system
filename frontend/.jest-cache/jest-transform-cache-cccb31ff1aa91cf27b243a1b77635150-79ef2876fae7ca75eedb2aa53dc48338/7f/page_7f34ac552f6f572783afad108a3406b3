638564d60f1188e46738e89ad48dfb20
"use client";
"use strict";

/* istanbul ignore next */
function cov_efty4pyb2() {
  var path = "/workspaces/prompt-card-system/frontend/src/app/prompt-cards/page.tsx";
  var hash = "339b61f1bf630ae8bc7e2a8a9d1a6d5a414c34ed";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/prompt-card-system/frontend/src/app/prompt-cards/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 31
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 38
        },
        end: {
          line: 13,
          column: 117
        }
      },
      "5": {
        start: {
          line: 14,
          column: 40
        },
        end: {
          line: 14,
          column: 115
        }
      },
      "6": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 31
        }
      },
      "7": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 6
        }
      },
      "8": {
        start: {
          line: 22,
          column: 48
        },
        end: {
          line: 22,
          column: 71
        }
      },
      "9": {
        start: {
          line: 23,
          column: 32
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "10": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 44
        }
      },
      "11": {
        start: {
          line: 25,
          column: 34
        },
        end: {
          line: 25,
          column: 42
        }
      },
      "12": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 47,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 33
          }
        },
        loc: {
          start: {
            line: 16,
            column: 39
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "PromptCardsPage",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 24
          }
        },
        loc: {
          start: {
            line: 21,
            column: 27
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 21
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 32
          },
          end: {
            line: 23,
            column: 33
          }
        },
        loc: {
          start: {
            line: 23,
            column: 41
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 25,
            column: 26
          },
          end: {
            line: 25,
            column: 27
          }
        },
        loc: {
          start: {
            line: 25,
            column: 34
          },
          end: {
            line: 25,
            column: 42
          }
        },
        line: 25
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 19,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 35
          },
          end: {
            line: 17,
            column: 38
          }
        }, {
          start: {
            line: 17,
            column: 41
          },
          end: {
            line: 19,
            column: 5
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 14
          }
        }, {
          start: {
            line: 17,
            column: 18
          },
          end: {
            line: 17,
            column: 32
          }
        }],
        line: 17
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/workspaces/prompt-card-system/frontend/src/app/prompt-cards/page.tsx"],
      sourcesContent: ["'use client';\n\nimport PromptCardList from '@/components/PromptCard/PromptCardList';\nimport YAMLImportExport from '@/components/YAML/YAMLImportExport';\nimport { useState } from 'react';\n\nexport default function PromptCardsPage() {\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\n\n  const handleImportSuccess = (count: number) => {\n    // Trigger a refresh of the prompt cards list\n    setRefreshTrigger(prev => prev + 1);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"container mx-auto px-4 py-8\">\n        {/* YAML Import/Export Section */}\n        <div className=\"mb-8 bg-white rounded-lg border border-gray-200 p-6\">\n          <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">YAML Operations</h2>\n          <YAMLImportExport onImportSuccess={handleImportSuccess} />\n        </div>\n\n        {/* Prompt Cards List */}\n        <PromptCardList key={refreshTrigger} />\n      </div>\n    </div>\n  );\n}"],
      names: ["PromptCardsPage", "refreshTrigger", "setRefreshTrigger", "useState", "handleImportSuccess", "count", "prev", "div", "className", "h2", "YAMLImportExport", "onImportSuccess", "PromptCardList"],
      mappings: "AAAA;;;;;+BAMA;;;eAAwBA;;;;uEAJG;yEACE;uBACJ;;;;;;AAEV,SAASA;IACtB,MAAM,CAACC,gBAAgBC,kBAAkB,GAAGC,IAAAA,eAAQ,EAAC;IAErD,MAAMC,sBAAsB,CAACC;QAC3B,6CAA6C;QAC7CH,kBAAkBI,CAAAA,OAAQA,OAAO;IACnC;IAEA,qBACE,qBAACC;QAAIC,WAAU;kBACb,cAAA,sBAACD;YAAIC,WAAU;;8BAEb,sBAACD;oBAAIC,WAAU;;sCACb,qBAACC;4BAAGD,WAAU;sCAA2C;;sCACzD,qBAACE,yBAAgB;4BAACC,iBAAiBP;;;;8BAIrC,qBAACQ,uBAAc,MAAMX;;;;AAI7B"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "339b61f1bf630ae8bc7e2a8a9d1a6d5a414c34ed"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_efty4pyb2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_efty4pyb2();
cov_efty4pyb2().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_efty4pyb2().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_efty4pyb2().f[0]++;
    cov_efty4pyb2().s[2]++;
    return PromptCardsPage;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_efty4pyb2().s[3]++, require("react/jsx-runtime"));
const _PromptCardList =
/* istanbul ignore next */
(/*#__PURE__*/cov_efty4pyb2().s[4]++, _interop_require_default(require("../../components/PromptCard/PromptCardList")));
const _YAMLImportExport =
/* istanbul ignore next */
(/*#__PURE__*/cov_efty4pyb2().s[5]++, _interop_require_default(require("../../components/YAML/YAMLImportExport")));
const _react =
/* istanbul ignore next */
(cov_efty4pyb2().s[6]++, require("react"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_efty4pyb2().f[1]++;
  cov_efty4pyb2().s[7]++;
  return /* istanbul ignore next */(cov_efty4pyb2().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_efty4pyb2().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_efty4pyb2().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_efty4pyb2().b[0][1]++, {
    default: obj
  });
}
function PromptCardsPage() {
  /* istanbul ignore next */
  cov_efty4pyb2().f[2]++;
  const [refreshTrigger, setRefreshTrigger] =
  /* istanbul ignore next */
  (cov_efty4pyb2().s[8]++, (0, _react.useState)(0));
  /* istanbul ignore next */
  cov_efty4pyb2().s[9]++;
  const handleImportSuccess = count => {
    /* istanbul ignore next */
    cov_efty4pyb2().f[3]++;
    cov_efty4pyb2().s[10]++;
    // Trigger a refresh of the prompt cards list
    setRefreshTrigger(prev => {
      /* istanbul ignore next */
      cov_efty4pyb2().f[4]++;
      cov_efty4pyb2().s[11]++;
      return prev + 1;
    });
  };
  /* istanbul ignore next */
  cov_efty4pyb2().s[12]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: "min-h-screen bg-gray-50",
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "container mx-auto px-4 py-8",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "mb-8 bg-white rounded-lg border border-gray-200 p-6",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "text-lg font-semibold text-gray-900 mb-4",
          children: "YAML Operations"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_YAMLImportExport.default, {
          onImportSuccess: handleImportSuccess
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_PromptCardList.default, {}, refreshTrigger)]
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9tcHRDYXJkc1BhZ2UiLCJjb3ZfZWZ0eTRweWIyIiwiZiIsInJlZnJlc2hUcmlnZ2VyIiwic2V0UmVmcmVzaFRyaWdnZXIiLCJzIiwiX3JlYWN0IiwidXNlU3RhdGUiLCJoYW5kbGVJbXBvcnRTdWNjZXNzIiwiY291bnQiLCJwcmV2IiwiX2pzeHJ1bnRpbWUiLCJqc3giLCJjbGFzc05hbWUiLCJqc3hzIiwiX1lBTUxJbXBvcnRFeHBvcnQiLCJkZWZhdWx0Iiwib25JbXBvcnRTdWNjZXNzIiwiX1Byb21wdENhcmRMaXN0Il0sInNvdXJjZXMiOlsiL3dvcmtzcGFjZXMvcHJvbXB0LWNhcmQtc3lzdGVtL2Zyb250ZW5kL3NyYy9hcHAvcHJvbXB0LWNhcmRzL3BhZ2UudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcblxuaW1wb3J0IFByb21wdENhcmRMaXN0IGZyb20gJ0AvY29tcG9uZW50cy9Qcm9tcHRDYXJkL1Byb21wdENhcmRMaXN0JztcbmltcG9ydCBZQU1MSW1wb3J0RXhwb3J0IGZyb20gJ0AvY29tcG9uZW50cy9ZQU1ML1lBTUxJbXBvcnRFeHBvcnQnO1xuaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFByb21wdENhcmRzUGFnZSgpIHtcbiAgY29uc3QgW3JlZnJlc2hUcmlnZ2VyLCBzZXRSZWZyZXNoVHJpZ2dlcl0gPSB1c2VTdGF0ZSgwKTtcblxuICBjb25zdCBoYW5kbGVJbXBvcnRTdWNjZXNzID0gKGNvdW50OiBudW1iZXIpID0+IHtcbiAgICAvLyBUcmlnZ2VyIGEgcmVmcmVzaCBvZiB0aGUgcHJvbXB0IGNhcmRzIGxpc3RcbiAgICBzZXRSZWZyZXNoVHJpZ2dlcihwcmV2ID0+IHByZXYgKyAxKTtcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwibWluLWgtc2NyZWVuIGJnLWdyYXktNTBcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyIG14LWF1dG8gcHgtNCBweS04XCI+XG4gICAgICAgIHsvKiBZQU1MIEltcG9ydC9FeHBvcnQgU2VjdGlvbiAqL31cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYi04IGJnLXdoaXRlIHJvdW5kZWQtbGcgYm9yZGVyIGJvcmRlci1ncmF5LTIwMCBwLTZcIj5cbiAgICAgICAgICA8aDIgY2xhc3NOYW1lPVwidGV4dC1sZyBmb250LXNlbWlib2xkIHRleHQtZ3JheS05MDAgbWItNFwiPllBTUwgT3BlcmF0aW9uczwvaDI+XG4gICAgICAgICAgPFlBTUxJbXBvcnRFeHBvcnQgb25JbXBvcnRTdWNjZXNzPXtoYW5kbGVJbXBvcnRTdWNjZXNzfSAvPlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICB7LyogUHJvbXB0IENhcmRzIExpc3QgKi99XG4gICAgICAgIDxQcm9tcHRDYXJkTGlzdCBrZXk9e3JlZnJlc2hUcmlnZ2VyfSAvPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0JBTUE7Ozs7OztXQUF3QkEsZUFBQTs7Ozs7Ozs7dUVBSkc7Ozt1RUFDRTs7O2lDQUNKOzs7Ozs7Ozs7Ozs7Ozs7QUFFVixTQUFTQSxnQkFBQTtFQUFBO0VBQUFDLGFBQUEsR0FBQUMsQ0FBQTtFQUN0QixNQUFNLENBQUNDLGNBQUEsRUFBZ0JDLGlCQUFBLENBQWtCO0VBQUE7RUFBQSxDQUFBSCxhQUFBLEdBQUFJLENBQUEsT0FBRyxJQUFBQyxNQUFBLENBQUFDLFFBQVEsRUFBQztFQUFBO0VBQUFOLGFBQUEsR0FBQUksQ0FBQTtFQUVyRCxNQUFNRyxtQkFBQSxHQUF1QkMsS0FBQTtJQUFBO0lBQUFSLGFBQUEsR0FBQUMsQ0FBQTtJQUFBRCxhQUFBLEdBQUFJLENBQUE7SUFDM0I7SUFDQUQsaUJBQUEsQ0FBa0JNLElBQUEsSUFBUTtNQUFBO01BQUFULGFBQUEsR0FBQUMsQ0FBQTtNQUFBRCxhQUFBLEdBQUFJLENBQUE7TUFBQSxPQUFBSyxJQUFBLEdBQU87SUFBQTtFQUNuQztFQUFBO0VBQUFULGFBQUEsR0FBQUksQ0FBQTtFQUVBLG9CQUNFLElBQUFNLFdBQUEsQ0FBQUMsR0FBQSxFQUFDO0lBQUlDLFNBQUEsRUFBVTtjQUNiLGlCQUFBRixXQUFBLENBQUFHLElBQUEsRUFBQztNQUFJRCxTQUFBLEVBQVU7OEJBRWIsSUFBQUYsV0FBQSxDQUFBRyxJQUFBLEVBQUM7UUFBSUQsU0FBQSxFQUFVO2dDQUNiLElBQUFGLFdBQUEsQ0FBQUMsR0FBQSxFQUFDO1VBQUdDLFNBQUEsRUFBVTtvQkFBMkM7eUJBQ3pELElBQUFGLFdBQUEsQ0FBQUMsR0FBQSxFQUFDRyxpQkFBQSxDQUFBQyxPQUFnQjtVQUFDQyxlQUFBLEVBQWlCVDs7dUJBSXJDLElBQUFHLFdBQUEsQ0FBQUMsR0FBQSxFQUFDTSxlQUFBLENBQUFGLE9BQWMsTUFBTWIsY0FBQTs7O0FBSTdCIiwiaWdub3JlTGlzdCI6W119