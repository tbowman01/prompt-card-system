71276a0b21c4cc96cfe241e58804ea5a
"use client";
"use strict";

/* istanbul ignore next */
function cov_a12sw2jyo() {
  var path = "/workspaces/prompt-card-system/frontend/src/components/Analytics/CostTracker.tsx";
  var hash = "5322e3bc4fbd40963bb51e1c375efea8055f5b4c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/prompt-card-system/frontend/src/components/Analytics/CostTracker.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 27
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 24
        }
      },
      "6": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 21,
          column: 15
        },
        end: {
          line: 21,
          column: 31
        }
      },
      "8": {
        start: {
          line: 22,
          column: 24
        },
        end: {
          line: 22,
          column: 55
        }
      },
      "9": {
        start: {
          line: 23,
          column: 15
        },
        end: {
          line: 23,
          column: 37
        }
      },
      "10": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 39
        }
      },
      "11": {
        start: {
          line: 25,
          column: 20
        },
        end: {
          line: 451,
          column: 1
        }
      },
      "12": {
        start: {
          line: 26,
          column: 36
        },
        end: {
          line: 26,
          column: 62
        }
      },
      "13": {
        start: {
          line: 27,
          column: 34
        },
        end: {
          line: 27,
          column: 60
        }
      },
      "14": {
        start: {
          line: 28,
          column: 30
        },
        end: {
          line: 28,
          column: 56
        }
      },
      "15": {
        start: {
          line: 29,
          column: 54
        },
        end: {
          line: 29,
          column: 85
        }
      },
      "16": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 68,
          column: 7
        }
      },
      "17": {
        start: {
          line: 31,
          column: 30
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "18": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 63,
          column: 13
        }
      },
      "19": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 33
        }
      },
      "20": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 31
        }
      },
      "21": {
        start: {
          line: 37,
          column: 37
        },
        end: {
          line: 56,
          column: 17
        }
      },
      "22": {
        start: {
          line: 47,
          column: 32
        },
        end: {
          line: 50,
          column: 25
        }
      },
      "23": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 42
        }
      },
      "24": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 64
        }
      },
      "25": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 53
        }
      },
      "26": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 62,
          column: 34
        }
      },
      "27": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 24
        }
      },
      "28": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 76,
          column: 5
        }
      },
      "29": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 75,
          column: 11
        }
      },
      "30": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "31": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 84,
          column: 11
        }
      },
      "32": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 94,
          column: 5
        }
      },
      "33": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 93,
          column: 11
        }
      },
      "34": {
        start: {
          line: 95,
          column: 27
        },
        end: {
          line: 102,
          column: 5
        }
      },
      "35": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 101,
          column: 26
        }
      },
      "36": {
        start: {
          line: 103,
          column: 25
        },
        end: {
          line: 105,
          column: 5
        }
      },
      "37": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 58
        }
      },
      "38": {
        start: {
          line: 106,
          column: 26
        },
        end: {
          line: 118,
          column: 5
        }
      },
      "39": {
        start: {
          line: 107,
          column: 23
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "40": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 45
        }
      },
      "41": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 450,
          column: 7
        }
      },
      "42": {
        start: {
          line: 129,
          column: 42
        },
        end: {
          line: 134,
          column: 26
        }
      },
      "43": {
        start: {
          line: 132,
          column: 37
        },
        end: {
          line: 132,
          column: 61
        }
      },
      "44": {
        start: {
          line: 290,
          column: 92
        },
        end: {
          line: 290,
          column: 97
        }
      },
      "45": {
        start: {
          line: 291,
          column: 47
        },
        end: {
          line: 291,
          column: 78
        }
      },
      "46": {
        start: {
          line: 292,
          column: 28
        },
        end: {
          line: 322,
          column: 38
        }
      },
      "47": {
        start: {
          line: 337,
          column: 44
        },
        end: {
          line: 337,
          column: 95
        }
      },
      "48": {
        start: {
          line: 337,
          column: 87
        },
        end: {
          line: 337,
          column: 93
        }
      },
      "49": {
        start: {
          line: 338,
          column: 43
        },
        end: {
          line: 338,
          column: 69
        }
      },
      "50": {
        start: {
          line: 339,
          column: 28
        },
        end: {
          line: 348,
          column: 38
        }
      },
      "51": {
        start: {
          line: 388,
          column: 116
        },
        end: {
          line: 388,
          column: 121
        }
      },
      "52": {
        start: {
          line: 409,
          column: 116
        },
        end: {
          line: 409,
          column: 121
        }
      },
      "53": {
        start: {
          line: 452,
          column: 17
        },
        end: {
          line: 452,
          column: 28
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 17
          },
          end: {
            line: 13,
            column: 18
          }
        },
        loc: {
          start: {
            line: 13,
            column: 28
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 13
          },
          end: {
            line: 16,
            column: 14
          }
        },
        loc: {
          start: {
            line: 16,
            column: 24
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 25,
            column: 20
          },
          end: {
            line: 25,
            column: 21
          }
        },
        loc: {
          start: {
            line: 25,
            column: 45
          },
          end: {
            line: 451,
            column: 1
          }
        },
        line: 25
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 30,
            column: 26
          },
          end: {
            line: 30,
            column: 27
          }
        },
        loc: {
          start: {
            line: 30,
            column: 30
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 30
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 31,
            column: 30
          },
          end: {
            line: 31,
            column: 31
          }
        },
        loc: {
          start: {
            line: 31,
            column: 40
          },
          end: {
            line: 64,
            column: 9
          }
        },
        line: 31
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 47,
            column: 23
          },
          end: {
            line: 47,
            column: 24
          }
        },
        loc: {
          start: {
            line: 47,
            column: 32
          },
          end: {
            line: 50,
            column: 25
          }
        },
        line: 47
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 95,
            column: 27
          },
          end: {
            line: 95,
            column: 28
          }
        },
        loc: {
          start: {
            line: 95,
            column: 37
          },
          end: {
            line: 102,
            column: 5
          }
        },
        line: 95
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 103,
            column: 25
          },
          end: {
            line: 103,
            column: 26
          }
        },
        loc: {
          start: {
            line: 103,
            column: 32
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 103
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 106,
            column: 26
          },
          end: {
            line: 106,
            column: 27
          }
        },
        loc: {
          start: {
            line: 106,
            column: 35
          },
          end: {
            line: 118,
            column: 5
          }
        },
        line: 106
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 129,
            column: 22
          },
          end: {
            line: 129,
            column: 23
          }
        },
        loc: {
          start: {
            line: 129,
            column: 42
          },
          end: {
            line: 134,
            column: 26
          }
        },
        line: 129
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 132,
            column: 33
          },
          end: {
            line: 132,
            column: 34
          }
        },
        loc: {
          start: {
            line: 132,
            column: 37
          },
          end: {
            line: 132,
            column: 61
          }
        },
        line: 132
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 290,
            column: 76
          },
          end: {
            line: 290,
            column: 77
          }
        },
        loc: {
          start: {
            line: 290,
            column: 92
          },
          end: {
            line: 290,
            column: 97
          }
        },
        line: 290
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 290,
            column: 103
          },
          end: {
            line: 290,
            column: 104
          }
        },
        loc: {
          start: {
            line: 290,
            column: 127
          },
          end: {
            line: 323,
            column: 25
          }
        },
        line: 290
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 336,
            column: 60
          },
          end: {
            line: 336,
            column: 61
          }
        },
        loc: {
          start: {
            line: 336,
            column: 76
          },
          end: {
            line: 349,
            column: 25
          }
        },
        line: 336
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 337,
            column: 82
          },
          end: {
            line: 337,
            column: 83
          }
        },
        loc: {
          start: {
            line: 337,
            column: 87
          },
          end: {
            line: 337,
            column: 93
          }
        },
        line: 337
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 388,
            column: 100
          },
          end: {
            line: 388,
            column: 101
          }
        },
        loc: {
          start: {
            line: 388,
            column: 116
          },
          end: {
            line: 388,
            column: 121
          }
        },
        line: 388
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 409,
            column: 100
          },
          end: {
            line: 409,
            column: 101
          }
        },
        loc: {
          start: {
            line: 409,
            column: 116
          },
          end: {
            line: 409,
            column: 121
          }
        },
        line: 409
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 23
          },
          end: {
            line: 25,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 35
          },
          end: {
            line: 25,
            column: 40
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "2": {
        loc: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "3": {
        loc: {
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 94,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 94,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "4": {
        loc: {
          start: {
            line: 130,
            column: 33
          },
          end: {
            line: 130,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 130,
            column: 60
          },
          end: {
            line: 130,
            column: 69
          }
        }, {
          start: {
            line: 130,
            column: 72
          },
          end: {
            line: 130,
            column: 81
          }
        }],
        line: 130
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/workspaces/prompt-card-system/frontend/src/components/Analytics/CostTracker.tsx"],
      sourcesContent: ["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { api } from '@/lib/api';\nimport { CostData } from '@/types';\nimport { LoadingSpinner } from '@/components/ui/LoadingSpinner';\nimport { Badge } from '@/components/ui/Badge';\nimport { Button } from '@/components/ui/Button';\n\ninterface CostTrackerProps {\n  timeframe?: '24h' | '7d' | '30d' | '90d';\n}\n\nexport const CostTracker: React.FC<CostTrackerProps> = ({ timeframe = '24h' }) => {\n  const [costData, setCostData] = useState<CostData | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedTimeframe, setSelectedTimeframe] = useState(timeframe);\n\n  useEffect(() => {\n    const fetchCostData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        \n        // Since we don't have a specific cost endpoint yet, we'll simulate cost data\n        // In a real implementation, this would call api.getCostData(selectedTimeframe)\n        const mockCostData: CostData = {\n          totalCost: 24.67,\n          costByModel: {\n            'llama3.1:8b': 12.34,\n            'llama3.1:70b': 8.45,\n            'mistral:7b': 2.89,\n            'codellama:7b': 0.99,\n          },\n          costOverTime: Array.from({ length: 30 }, (_, i) => ({\n            timestamp: new Date(Date.now() - (29 - i) * 24 * 60 * 60 * 1000),\n            cost: Math.random() * 5 + 0.5,\n          })),\n          tokenUsage: {\n            totalTokens: 1234567,\n            promptTokens: 567890,\n            completionTokens: 666677,\n          },\n        };\n        \n        setCostData(mockCostData);\n      } catch (err) {\n        console.error('Error fetching cost data:', err);\n        setError('Failed to load cost data');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCostData();\n  }, [selectedTimeframe]);\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n        <p className=\"text-red-800\">{error}</p>\n      </div>\n    );\n  }\n\n  if (!costData) {\n    return (\n      <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-4\">\n        <p className=\"text-gray-600\">No cost data available</p>\n      </div>\n    );\n  }\n\n  const formatCurrency = (amount: number): string => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    }).format(amount);\n  };\n\n  const formatNumber = (num: number): string => {\n    return new Intl.NumberFormat('en-US').format(num);\n  };\n\n  const getModelColor = (index: number): string => {\n    const colors = [\n      'bg-blue-500',\n      'bg-green-500',\n      'bg-yellow-500',\n      'bg-purple-500',\n      'bg-red-500',\n      'bg-indigo-500',\n      'bg-pink-500',\n      'bg-gray-500',\n    ];\n    return colors[index % colors.length];\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Timeframe Controls */}\n      <div className=\"flex gap-2\">\n        {(['24h', '7d', '30d', '90d'] as const).map((tf) => (\n          <Button\n            key={tf}\n            variant={selectedTimeframe === tf ? 'primary' : 'outline'}\n            size=\"sm\"\n            onClick={() => setSelectedTimeframe(tf)}\n          >\n            {tf}\n          </Button>\n        ))}\n      </div>\n\n      {/* Cost Overview */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Total Cost</p>\n              <p className=\"text-2xl font-bold text-gray-900\">{formatCurrency(costData.totalCost)}</p>\n            </div>\n            <div className=\"text-green-600\">\n              <svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Total Tokens</p>\n              <p className=\"text-2xl font-bold text-gray-900\">{formatNumber(costData.tokenUsage.totalTokens)}</p>\n            </div>\n            <div className=\"text-blue-600\">\n              <svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Prompt Tokens</p>\n              <p className=\"text-2xl font-bold text-gray-900\">{formatNumber(costData.tokenUsage.promptTokens)}</p>\n            </div>\n            <div className=\"text-purple-600\">\n              <svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Completion Tokens</p>\n              <p className=\"text-2xl font-bold text-gray-900\">{formatNumber(costData.tokenUsage.completionTokens)}</p>\n            </div>\n            <div className=\"text-yellow-600\">\n              <svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Cost by Model */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Cost by Model</h3>\n        <div className=\"space-y-4\">\n          {Object.entries(costData.costByModel)\n            .sort(([, a], [, b]) => b - a)\n            .map(([model, cost], index) => {\n              const percentage = (cost / costData.totalCost) * 100;\n              return (\n                <div key={model} className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className={`w-4 h-4 rounded-full ${getModelColor(index)}`}></div>\n                    <span className=\"font-medium text-gray-900\">{model}</span>\n                    <Badge variant=\"secondary\">{percentage.toFixed(1)}%</Badge>\n                  </div>\n                  <div className=\"text-right\">\n                    <span className=\"font-semibold text-gray-900\">{formatCurrency(cost)}</span>\n                  </div>\n                </div>\n              );\n            })}\n        </div>\n      </div>\n\n      {/* Cost Over Time Chart */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Cost Over Time</h3>\n        <div className=\"h-64 flex items-end space-x-1\">\n          {costData.costOverTime.map((point, index) => {\n            const maxCost = Math.max(...costData.costOverTime.map(p => p.cost));\n            const height = (point.cost / maxCost) * 100;\n            \n            return (\n              <div\n                key={index}\n                className=\"flex-1 bg-blue-500 rounded-t-sm relative group\"\n                style={{ height: `${height}%` }}\n              >\n                <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-2 py-1 bg-gray-900 text-white text-xs rounded opacity-0 group-hover:opacity-100 transition-opacity\">\n                  {formatCurrency(point.cost)}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"mt-4 flex justify-between text-sm text-gray-500\">\n          <span>{costData.costOverTime.length} days ago</span>\n          <span>Today</span>\n        </div>\n      </div>\n\n      {/* Cost Analysis */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Cost Analysis</h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <h4 className=\"font-medium text-gray-900 mb-2\">Most Expensive Model</h4>\n            <div className=\"flex items-center justify-between p-3 bg-red-50 rounded-lg\">\n              <span className=\"text-red-800\">\n                {Object.entries(costData.costByModel).sort(([, a], [, b]) => b - a)[0][0]}\n              </span>\n              <span className=\"font-semibold text-red-900\">\n                {formatCurrency(Math.max(...Object.values(costData.costByModel)))}\n              </span>\n            </div>\n          </div>\n\n          <div>\n            <h4 className=\"font-medium text-gray-900 mb-2\">Most Efficient Model</h4>\n            <div className=\"flex items-center justify-between p-3 bg-green-50 rounded-lg\">\n              <span className=\"text-green-800\">\n                {Object.entries(costData.costByModel).sort(([, a], [, b]) => a - b)[0][0]}\n              </span>\n              <span className=\"font-semibold text-green-900\">\n                {formatCurrency(Math.min(...Object.values(costData.costByModel)))}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mt-4 p-4 bg-yellow-50 rounded-lg\">\n          <h4 className=\"font-medium text-yellow-800 mb-2\">Cost Optimization Tips</h4>\n          <ul className=\"text-sm text-yellow-700 space-y-1\">\n            <li>\u2022 Consider using smaller models for simple tasks</li>\n            <li>\u2022 Implement caching for frequently used prompts</li>\n            <li>\u2022 Monitor token usage to identify inefficient prompts</li>\n            <li>\u2022 Use batch processing for multiple similar requests</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CostTracker;"],
      names: ["CostTracker", "timeframe", "costData", "setCostData", "useState", "loading", "setLoading", "error", "setError", "selectedTimeframe", "setSelectedTimeframe", "useEffect", "fetchCostData", "mockCostData", "totalCost", "costByModel", "costOverTime", "Array", "from", "length", "_", "i", "timestamp", "Date", "now", "cost", "Math", "random", "tokenUsage", "totalTokens", "promptTokens", "completionTokens", "err", "console", "div", "className", "LoadingSpinner", "size", "p", "formatCurrency", "amount", "Intl", "NumberFormat", "style", "currency", "minimumFractionDigits", "maximumFractionDigits", "format", "formatNumber", "num", "getModelColor", "index", "colors", "map", "tf", "Button", "variant", "onClick", "svg", "fill", "stroke", "viewBox", "path", "strokeLinecap", "strokeLinejoin", "strokeWidth", "d", "h3", "Object", "entries", "sort", "a", "b", "model", "percentage", "span", "Badge", "toFixed", "point", "maxCost", "max", "height", "h4", "values", "min", "ul", "li"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5322e3bc4fbd40963bb51e1c375efea8055f5b4c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_a12sw2jyo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_a12sw2jyo();
cov_a12sw2jyo().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_a12sw2jyo().f[0]++;
  cov_a12sw2jyo().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_a12sw2jyo().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_a12sw2jyo().s[3]++;
_export(exports, {
  CostTracker: function () {
    /* istanbul ignore next */
    cov_a12sw2jyo().f[1]++;
    cov_a12sw2jyo().s[4]++;
    return CostTracker;
  },
  default: function () {
    /* istanbul ignore next */
    cov_a12sw2jyo().f[2]++;
    cov_a12sw2jyo().s[5]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_a12sw2jyo().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_a12sw2jyo().s[7]++, require("react"));
const _LoadingSpinner =
/* istanbul ignore next */
(cov_a12sw2jyo().s[8]++, require("../ui/LoadingSpinner"));
const _Badge =
/* istanbul ignore next */
(cov_a12sw2jyo().s[9]++, require("../ui/Badge"));
const _Button =
/* istanbul ignore next */
(cov_a12sw2jyo().s[10]++, require("../ui/Button"));
/* istanbul ignore next */
cov_a12sw2jyo().s[11]++;
const CostTracker = ({
  timeframe =
  /* istanbul ignore next */
  (cov_a12sw2jyo().b[0][0]++, "24h")
}) => {
  /* istanbul ignore next */
  cov_a12sw2jyo().f[3]++;
  const [costData, setCostData] =
  /* istanbul ignore next */
  (cov_a12sw2jyo().s[12]++, (0, _react.useState)(null));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_a12sw2jyo().s[13]++, (0, _react.useState)(true));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_a12sw2jyo().s[14]++, (0, _react.useState)(null));
  const [selectedTimeframe, setSelectedTimeframe] =
  /* istanbul ignore next */
  (cov_a12sw2jyo().s[15]++, (0, _react.useState)(timeframe));
  /* istanbul ignore next */
  cov_a12sw2jyo().s[16]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_a12sw2jyo().f[4]++;
    cov_a12sw2jyo().s[17]++;
    const fetchCostData = async () => {
      /* istanbul ignore next */
      cov_a12sw2jyo().f[5]++;
      cov_a12sw2jyo().s[18]++;
      try {
        /* istanbul ignore next */
        cov_a12sw2jyo().s[19]++;
        setLoading(true);
        /* istanbul ignore next */
        cov_a12sw2jyo().s[20]++;
        setError(null);
        // Since we don't have a specific cost endpoint yet, we'll simulate cost data
        // In a real implementation, this would call api.getCostData(selectedTimeframe)
        const mockCostData =
        /* istanbul ignore next */
        (cov_a12sw2jyo().s[21]++, {
          totalCost: 24.67,
          costByModel: {
            "llama3.1:8b": 12.34,
            "llama3.1:70b": 8.45,
            "mistral:7b": 2.89,
            "codellama:7b": 0.99
          },
          costOverTime: Array.from({
            length: 30
          }, (_, i) => {
            /* istanbul ignore next */
            cov_a12sw2jyo().f[6]++;
            cov_a12sw2jyo().s[22]++;
            return {
              timestamp: new Date(Date.now() - (29 - i) * 24 * 60 * 60 * 1000),
              cost: Math.random() * 5 + 0.5
            };
          }),
          tokenUsage: {
            totalTokens: 1234567,
            promptTokens: 567890,
            completionTokens: 666677
          }
        });
        /* istanbul ignore next */
        cov_a12sw2jyo().s[23]++;
        setCostData(mockCostData);
      } catch (err) {
        /* istanbul ignore next */
        cov_a12sw2jyo().s[24]++;
        console.error("Error fetching cost data:", err);
        /* istanbul ignore next */
        cov_a12sw2jyo().s[25]++;
        setError("Failed to load cost data");
      } finally {
        /* istanbul ignore next */
        cov_a12sw2jyo().s[26]++;
        setLoading(false);
      }
    };
    /* istanbul ignore next */
    cov_a12sw2jyo().s[27]++;
    fetchCostData();
  }, [selectedTimeframe]);
  /* istanbul ignore next */
  cov_a12sw2jyo().s[28]++;
  if (loading) {
    /* istanbul ignore next */
    cov_a12sw2jyo().b[1][0]++;
    cov_a12sw2jyo().s[29]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "flex justify-center items-center h-64",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_LoadingSpinner.LoadingSpinner, {
        size: "lg"
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_a12sw2jyo().b[1][1]++;
  }
  cov_a12sw2jyo().s[30]++;
  if (error) {
    /* istanbul ignore next */
    cov_a12sw2jyo().b[2][0]++;
    cov_a12sw2jyo().s[31]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "bg-red-50 border border-red-200 rounded-lg p-4",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-red-800",
        children: error
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_a12sw2jyo().b[2][1]++;
  }
  cov_a12sw2jyo().s[32]++;
  if (!costData) {
    /* istanbul ignore next */
    cov_a12sw2jyo().b[3][0]++;
    cov_a12sw2jyo().s[33]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "bg-gray-50 border border-gray-200 rounded-lg p-4",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-gray-600",
        children: "No cost data available"
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_a12sw2jyo().b[3][1]++;
  }
  cov_a12sw2jyo().s[34]++;
  const formatCurrency = amount => {
    /* istanbul ignore next */
    cov_a12sw2jyo().f[7]++;
    cov_a12sw2jyo().s[35]++;
    return new Intl.NumberFormat("en-US", {
      style: "currency",
      currency: "USD",
      minimumFractionDigits: 2,
      maximumFractionDigits: 2
    }).format(amount);
  };
  /* istanbul ignore next */
  cov_a12sw2jyo().s[36]++;
  const formatNumber = num => {
    /* istanbul ignore next */
    cov_a12sw2jyo().f[8]++;
    cov_a12sw2jyo().s[37]++;
    return new Intl.NumberFormat("en-US").format(num);
  };
  /* istanbul ignore next */
  cov_a12sw2jyo().s[38]++;
  const getModelColor = index => {
    /* istanbul ignore next */
    cov_a12sw2jyo().f[9]++;
    const colors =
    /* istanbul ignore next */
    (cov_a12sw2jyo().s[39]++, ["bg-blue-500", "bg-green-500", "bg-yellow-500", "bg-purple-500", "bg-red-500", "bg-indigo-500", "bg-pink-500", "bg-gray-500"]);
    /* istanbul ignore next */
    cov_a12sw2jyo().s[40]++;
    return colors[index % colors.length];
  };
  /* istanbul ignore next */
  cov_a12sw2jyo().s[41]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "space-y-6",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "flex gap-2",
      children: ["24h", "7d", "30d", "90d"].map(tf => {
        /* istanbul ignore next */
        cov_a12sw2jyo().f[10]++;
        cov_a12sw2jyo().s[42]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
          variant: selectedTimeframe === tf ?
          /* istanbul ignore next */
          (cov_a12sw2jyo().b[4][0]++, "primary") :
          /* istanbul ignore next */
          (cov_a12sw2jyo().b[4][1]++, "outline"),
          size: "sm",
          onClick: () => {
            /* istanbul ignore next */
            cov_a12sw2jyo().f[11]++;
            cov_a12sw2jyo().s[43]++;
            return setSelectedTimeframe(tf);
          },
          children: tf
        }, tf);
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "bg-white rounded-lg border border-gray-200 p-6",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center justify-between",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-sm font-medium text-gray-600",
              children: "Total Cost"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-2xl font-bold text-gray-900",
              children: formatCurrency(costData.totalCost)
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-green-600",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
              className: "w-8 h-8",
              fill: "none",
              stroke: "currentColor",
              viewBox: "0 0 24 24",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
                strokeLinecap: "round",
                strokeLinejoin: "round",
                strokeWidth: 2,
                d: "M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"
              })
            })
          })]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "bg-white rounded-lg border border-gray-200 p-6",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center justify-between",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-sm font-medium text-gray-600",
              children: "Total Tokens"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-2xl font-bold text-gray-900",
              children: formatNumber(costData.tokenUsage.totalTokens)
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-blue-600",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
              className: "w-8 h-8",
              fill: "none",
              stroke: "currentColor",
              viewBox: "0 0 24 24",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
                strokeLinecap: "round",
                strokeLinejoin: "round",
                strokeWidth: 2,
                d: "M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"
              })
            })
          })]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "bg-white rounded-lg border border-gray-200 p-6",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center justify-between",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-sm font-medium text-gray-600",
              children: "Prompt Tokens"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-2xl font-bold text-gray-900",
              children: formatNumber(costData.tokenUsage.promptTokens)
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-purple-600",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
              className: "w-8 h-8",
              fill: "none",
              stroke: "currentColor",
              viewBox: "0 0 24 24",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
                strokeLinecap: "round",
                strokeLinejoin: "round",
                strokeWidth: 2,
                d: "M13 10V3L4 14h7v7l9-11h-7z"
              })
            })
          })]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "bg-white rounded-lg border border-gray-200 p-6",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center justify-between",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-sm font-medium text-gray-600",
              children: "Completion Tokens"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-2xl font-bold text-gray-900",
              children: formatNumber(costData.tokenUsage.completionTokens)
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-yellow-600",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
              className: "w-8 h-8",
              fill: "none",
              stroke: "currentColor",
              viewBox: "0 0 24 24",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
                strokeLinecap: "round",
                strokeLinejoin: "round",
                strokeWidth: 2,
                d: "M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"
              })
            })
          })]
        })
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "bg-white rounded-lg border border-gray-200 p-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
        className: "text-lg font-semibold text-gray-900 mb-4",
        children: "Cost by Model"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "space-y-4",
        children: Object.entries(costData.costByModel).sort(([, a], [, b]) => {
          /* istanbul ignore next */
          cov_a12sw2jyo().f[12]++;
          cov_a12sw2jyo().s[44]++;
          return b - a;
        }).map(([model, cost], index) => {
          /* istanbul ignore next */
          cov_a12sw2jyo().f[13]++;
          const percentage =
          /* istanbul ignore next */
          (cov_a12sw2jyo().s[45]++, cost / costData.totalCost * 100);
          /* istanbul ignore next */
          cov_a12sw2jyo().s[46]++;
          return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center justify-between",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center space-x-3",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: `w-4 h-4 rounded-full ${getModelColor(index)}`
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                className: "font-medium text-gray-900",
                children: model
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_Badge.Badge, {
                variant: "secondary",
                children: [percentage.toFixed(1), "%"]
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-right",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                className: "font-semibold text-gray-900",
                children: formatCurrency(cost)
              })
            })]
          }, model);
        })
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "bg-white rounded-lg border border-gray-200 p-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
        className: "text-lg font-semibold text-gray-900 mb-4",
        children: "Cost Over Time"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "h-64 flex items-end space-x-1",
        children: costData.costOverTime.map((point, index) => {
          /* istanbul ignore next */
          cov_a12sw2jyo().f[14]++;
          const maxCost =
          /* istanbul ignore next */
          (cov_a12sw2jyo().s[47]++, Math.max(...costData.costOverTime.map(p => {
            /* istanbul ignore next */
            cov_a12sw2jyo().f[15]++;
            cov_a12sw2jyo().s[48]++;
            return p.cost;
          })));
          const height =
          /* istanbul ignore next */
          (cov_a12sw2jyo().s[49]++, point.cost / maxCost * 100);
          /* istanbul ignore next */
          cov_a12sw2jyo().s[50]++;
          return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "flex-1 bg-blue-500 rounded-t-sm relative group",
            style: {
              height: `${height}%`
            },
            children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-2 py-1 bg-gray-900 text-white text-xs rounded opacity-0 group-hover:opacity-100 transition-opacity",
              children: formatCurrency(point.cost)
            })
          }, index);
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "mt-4 flex justify-between text-sm text-gray-500",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
          children: [costData.costOverTime.length, " days ago"]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
          children: "Today"
        })]
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "bg-white rounded-lg border border-gray-200 p-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
        className: "text-lg font-semibold text-gray-900 mb-4",
        children: "Cost Analysis"
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "grid grid-cols-1 md:grid-cols-2 gap-6",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
            className: "font-medium text-gray-900 mb-2",
            children: "Most Expensive Model"
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center justify-between p-3 bg-red-50 rounded-lg",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "text-red-800",
              children: Object.entries(costData.costByModel).sort(([, a], [, b]) => {
                /* istanbul ignore next */
                cov_a12sw2jyo().f[16]++;
                cov_a12sw2jyo().s[51]++;
                return b - a;
              })[0][0]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "font-semibold text-red-900",
              children: formatCurrency(Math.max(...Object.values(costData.costByModel)))
            })]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
            className: "font-medium text-gray-900 mb-2",
            children: "Most Efficient Model"
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center justify-between p-3 bg-green-50 rounded-lg",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "text-green-800",
              children: Object.entries(costData.costByModel).sort(([, a], [, b]) => {
                /* istanbul ignore next */
                cov_a12sw2jyo().f[17]++;
                cov_a12sw2jyo().s[52]++;
                return a - b;
              })[0][0]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "font-semibold text-green-900",
              children: formatCurrency(Math.min(...Object.values(costData.costByModel)))
            })]
          })]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "mt-4 p-4 bg-yellow-50 rounded-lg",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
          className: "font-medium text-yellow-800 mb-2",
          children: "Cost Optimization Tips"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("ul", {
          className: "text-sm text-yellow-700 space-y-1",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("li", {
            children: "• Consider using smaller models for simple tasks"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
            children: "• Implement caching for frequently used prompts"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
            children: "• Monitor token usage to identify inefficient prompts"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
            children: "• Use batch processing for multiple similar requests"
          })]
        })]
      })]
    })]
  });
};
const _default =
/* istanbul ignore next */
(cov_a12sw2jyo().s[53]++, CostTracker);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,