89036237eb8b20936f04411838325a98
"use client";
"use strict";

/* istanbul ignore next */
function cov_2b5kb1hcyh() {
  var path = "/workspaces/prompt-card-system/frontend/src/components/Analytics/PerformanceCharts.tsx";
  var hash = "ec040377dc5c52103052e113e8d2c30871e6fc37";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/prompt-card-system/frontend/src/components/Analytics/PerformanceCharts.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 33
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 24
        }
      },
      "6": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 21,
          column: 15
        },
        end: {
          line: 21,
          column: 31
        }
      },
      "8": {
        start: {
          line: 22,
          column: 13
        },
        end: {
          line: 22,
          column: 37
        }
      },
      "9": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 23,
          column: 55
        }
      },
      "10": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 39
        }
      },
      "11": {
        start: {
          line: 25,
          column: 26
        },
        end: {
          line: 367,
          column: 1
        }
      },
      "12": {
        start: {
          line: 26,
          column: 34
        },
        end: {
          line: 26,
          column: 60
        }
      },
      "13": {
        start: {
          line: 27,
          column: 34
        },
        end: {
          line: 27,
          column: 60
        }
      },
      "14": {
        start: {
          line: 28,
          column: 30
        },
        end: {
          line: 28,
          column: 56
        }
      },
      "15": {
        start: {
          line: 29,
          column: 32
        },
        end: {
          line: 29,
          column: 59
        }
      },
      "16": {
        start: {
          line: 30,
          column: 46
        },
        end: {
          line: 30,
          column: 75
        }
      },
      "17": {
        start: {
          line: 31,
          column: 22
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "18": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 56,
          column: 7
        }
      },
      "19": {
        start: {
          line: 37,
          column: 28
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "20": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 51,
          column: 13
        }
      },
      "21": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 33
        }
      },
      "22": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 31
        }
      },
      "23": {
        start: {
          line: 41,
          column: 29
        },
        end: {
          line: 41,
          column: 65
        }
      },
      "24": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 45,
          column: 19
        }
      },
      "25": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 61
        }
      },
      "26": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 54
        }
      },
      "27": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 34
        }
      },
      "28": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 22
        }
      },
      "29": {
        start: {
          line: 57,
          column: 26
        },
        end: {
          line: 137,
          column: 5
        }
      },
      "30": {
        start: {
          line: 58,
          column: 20
        },
        end: {
          line: 58,
          column: 43
        }
      },
      "31": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 25
        }
      },
      "32": {
        start: {
          line: 59,
          column: 18
        },
        end: {
          line: 59,
          column: 25
        }
      },
      "33": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 57
        }
      },
      "34": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 42
        }
      },
      "35": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 31
        }
      },
      "36": {
        start: {
          line: 65,
          column: 24
        },
        end: {
          line: 65,
          column: 26
        }
      },
      "37": {
        start: {
          line: 66,
          column: 27
        },
        end: {
          line: 66,
          column: 53
        }
      },
      "38": {
        start: {
          line: 67,
          column: 28
        },
        end: {
          line: 67,
          column: 55
        }
      },
      "39": {
        start: {
          line: 69,
          column: 24
        },
        end: {
          line: 69,
          column: 70
        }
      },
      "40": {
        start: {
          line: 69,
          column: 57
        },
        end: {
          line: 69,
          column: 69
        }
      },
      "41": {
        start: {
          line: 70,
          column: 25
        },
        end: {
          line: 70,
          column: 45
        }
      },
      "42": {
        start: {
          line: 71,
          column: 25
        },
        end: {
          line: 71,
          column: 45
        }
      },
      "43": {
        start: {
          line: 72,
          column: 22
        },
        end: {
          line: 72,
          column: 46
        }
      },
      "44": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 36
        }
      },
      "45": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 26
        }
      },
      "46": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "47": {
        start: {
          line: 77,
          column: 20
        },
        end: {
          line: 77,
          column: 21
        }
      },
      "48": {
        start: {
          line: 78,
          column: 22
        },
        end: {
          line: 78,
          column: 51
        }
      },
      "49": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 28
        }
      },
      "50": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 35
        }
      },
      "51": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 48
        }
      },
      "52": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 25
        }
      },
      "53": {
        start: {
          line: 85,
          column: 22
        },
        end: {
          line: 85,
          column: 64
        }
      },
      "54": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "55": {
        start: {
          line: 86,
          column: 20
        },
        end: {
          line: 86,
          column: 21
        }
      },
      "56": {
        start: {
          line: 87,
          column: 22
        },
        end: {
          line: 87,
          column: 41
        }
      },
      "57": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 28
        }
      },
      "58": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 35
        }
      },
      "59": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 49
        }
      },
      "60": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 25
        }
      },
      "61": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 117,
          column: 11
        }
      },
      "62": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 50
        }
      },
      "63": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 30
        }
      },
      "64": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 28
        }
      },
      "65": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 106,
          column: 15
        }
      },
      "66": {
        start: {
          line: 99,
          column: 26
        },
        end: {
          line: 99,
          column: 49
        }
      },
      "67": {
        start: {
          line: 100,
          column: 26
        },
        end: {
          line: 100,
          column: 90
        }
      },
      "68": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 105,
          column: 17
        }
      },
      "69": {
        start: {
          line: 102,
          column: 20
        },
        end: {
          line: 102,
          column: 37
        }
      },
      "70": {
        start: {
          line: 104,
          column: 20
        },
        end: {
          line: 104,
          column: 37
        }
      },
      "71": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 25
        }
      },
      "72": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 48
        }
      },
      "73": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 116,
          column: 15
        }
      },
      "74": {
        start: {
          line: 111,
          column: 26
        },
        end: {
          line: 111,
          column: 49
        }
      },
      "75": {
        start: {
          line: 112,
          column: 26
        },
        end: {
          line: 112,
          column: 90
        }
      },
      "76": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 113,
          column: 32
        }
      },
      "77": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 49
        }
      },
      "78": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 115,
          column: 27
        }
      },
      "79": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 34
        }
      },
      "80": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 44
        }
      },
      "81": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 33
        }
      },
      "82": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 50
        }
      },
      "83": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 44
        }
      },
      "84": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 32
        }
      },
      "85": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "86": {
        start: {
          line: 126,
          column: 20
        },
        end: {
          line: 126,
          column: 21
        }
      },
      "87": {
        start: {
          line: 127,
          column: 22
        },
        end: {
          line: 127,
          column: 51
        }
      },
      "88": {
        start: {
          line: 128,
          column: 26
        },
        end: {
          line: 128,
          column: 50
        }
      },
      "89": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 64
        }
      },
      "90": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 33
        }
      },
      "91": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 136,
          column: 11
        }
      },
      "92": {
        start: {
          line: 134,
          column: 22
        },
        end: {
          line: 134,
          column: 45
        }
      },
      "93": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 55
        }
      },
      "94": {
        start: {
          line: 138,
          column: 24
        },
        end: {
          line: 188,
          column: 5
        }
      },
      "95": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 70
        }
      },
      "96": {
        start: {
          line: 139,
          column: 63
        },
        end: {
          line: 139,
          column: 70
        }
      },
      "97": {
        start: {
          line: 140,
          column: 23
        },
        end: {
          line: 140,
          column: 51
        }
      },
      "98": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "99": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 155,
          column: 18
        }
      },
      "100": {
        start: {
          line: 146,
          column: 66
        },
        end: {
          line: 146,
          column: 108
        }
      },
      "101": {
        start: {
          line: 150,
          column: 72
        },
        end: {
          line: 150,
          column: 79
        }
      },
      "102": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 42
        }
      },
      "103": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 157,
          column: 22
        }
      },
      "104": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 169,
          column: 18
        }
      },
      "105": {
        start: {
          line: 160,
          column: 72
        },
        end: {
          line: 160,
          column: 114
        }
      },
      "106": {
        start: {
          line: 164,
          column: 78
        },
        end: {
          line: 164,
          column: 90
        }
      },
      "107": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 170,
          column: 53
        }
      },
      "108": {
        start: {
          line: 171,
          column: 16
        },
        end: {
          line: 171,
          column: 22
        }
      },
      "109": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 183,
          column: 18
        }
      },
      "110": {
        start: {
          line: 174,
          column: 72
        },
        end: {
          line: 174,
          column: 114
        }
      },
      "111": {
        start: {
          line: 178,
          column: 78
        },
        end: {
          line: 178,
          column: 87
        }
      },
      "112": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 184,
          column: 53
        }
      },
      "113": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 185,
          column: 22
        }
      },
      "114": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 48
        }
      },
      "115": {
        start: {
          line: 189,
          column: 4
        },
        end: {
          line: 198,
          column: 7
        }
      },
      "116": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 195,
          column: 9
        }
      },
      "117": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 33
        }
      },
      "118": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 35
        }
      },
      "119": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 39
        }
      },
      "120": {
        start: {
          line: 200,
          column: 4
        },
        end: {
          line: 214,
          column: 7
        }
      },
      "121": {
        start: {
          line: 201,
          column: 29
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "122": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 208,
          column: 13
        }
      },
      "123": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 207,
          column: 24
        }
      },
      "124": {
        start: {
          line: 204,
          column: 20
        },
        end: {
          line: 204,
          column: 41
        }
      },
      "125": {
        start: {
          line: 205,
          column: 20
        },
        end: {
          line: 205,
          column: 43
        }
      },
      "126": {
        start: {
          line: 206,
          column: 20
        },
        end: {
          line: 206,
          column: 47
        }
      },
      "127": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 56
        }
      },
      "128": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 211,
          column: 70
        }
      },
      "129": {
        start: {
          line: 211,
          column: 19
        },
        end: {
          line: 211,
          column: 69
        }
      },
      "130": {
        start: {
          line: 215,
          column: 4
        },
        end: {
          line: 222,
          column: 5
        }
      },
      "131": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 221,
          column: 11
        }
      },
      "132": {
        start: {
          line: 223,
          column: 4
        },
        end: {
          line: 231,
          column: 5
        }
      },
      "133": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 230,
          column: 11
        }
      },
      "134": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 366,
          column: 7
        }
      },
      "135": {
        start: {
          line: 244,
          column: 45
        },
        end: {
          line: 244,
          column: 62
        }
      },
      "136": {
        start: {
          line: 250,
          column: 45
        },
        end: {
          line: 250,
          column: 61
        }
      },
      "137": {
        start: {
          line: 256,
          column: 45
        },
        end: {
          line: 256,
          column: 62
        }
      },
      "138": {
        start: {
          line: 262,
          column: 45
        },
        end: {
          line: 262,
          column: 63
        }
      },
      "139": {
        start: {
          line: 273,
          column: 45
        },
        end: {
          line: 273,
          column: 70
        }
      },
      "140": {
        start: {
          line: 279,
          column: 45
        },
        end: {
          line: 279,
          column: 72
        }
      },
      "141": {
        start: {
          line: 285,
          column: 45
        },
        end: {
          line: 285,
          column: 76
        }
      },
      "142": {
        start: {
          line: 308,
          column: 28
        },
        end: {
          line: 308,
          column: 73
        }
      },
      "143": {
        start: {
          line: 308,
          column: 61
        },
        end: {
          line: 308,
          column: 73
        }
      },
      "144": {
        start: {
          line: 309,
          column: 28
        },
        end: {
          line: 319,
          column: 42
        }
      },
      "145": {
        start: {
          line: 317,
          column: 49
        },
        end: {
          line: 317,
          column: 76
        }
      },
      "146": {
        start: {
          line: 368,
          column: 17
        },
        end: {
          line: 368,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 23
          },
          end: {
            line: 13,
            column: 24
          }
        },
        loc: {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 13
          },
          end: {
            line: 16,
            column: 14
          }
        },
        loc: {
          start: {
            line: 16,
            column: 24
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 25,
            column: 26
          },
          end: {
            line: 25,
            column: 27
          }
        },
        loc: {
          start: {
            line: 25,
            column: 46
          },
          end: {
            line: 367,
            column: 1
          }
        },
        line: 25
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 36,
            column: 26
          },
          end: {
            line: 36,
            column: 27
          }
        },
        loc: {
          start: {
            line: 36,
            column: 30
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 36
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 37,
            column: 28
          },
          end: {
            line: 37,
            column: 29
          }
        },
        loc: {
          start: {
            line: 37,
            column: 38
          },
          end: {
            line: 52,
            column: 9
          }
        },
        line: 37
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 57,
            column: 26
          },
          end: {
            line: 57,
            column: 27
          }
        },
        loc: {
          start: {
            line: 57,
            column: 49
          },
          end: {
            line: 137,
            column: 5
          }
        },
        line: 57
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 69,
            column: 46
          },
          end: {
            line: 69,
            column: 47
          }
        },
        loc: {
          start: {
            line: 69,
            column: 57
          },
          end: {
            line: 69,
            column: 69
          }
        },
        line: 69
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 94,
            column: 30
          },
          end: {
            line: 94,
            column: 31
          }
        },
        loc: {
          start: {
            line: 94,
            column: 55
          },
          end: {
            line: 117,
            column: 9
          }
        },
        line: 94
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 98,
            column: 33
          },
          end: {
            line: 98,
            column: 34
          }
        },
        loc: {
          start: {
            line: 98,
            column: 49
          },
          end: {
            line: 106,
            column: 13
          }
        },
        line: 98
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 110,
            column: 33
          },
          end: {
            line: 110,
            column: 34
          }
        },
        loc: {
          start: {
            line: 110,
            column: 49
          },
          end: {
            line: 116,
            column: 13
          }
        },
        line: 110
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 133,
            column: 28
          },
          end: {
            line: 133,
            column: 29
          }
        },
        loc: {
          start: {
            line: 133,
            column: 44
          },
          end: {
            line: 136,
            column: 9
          }
        },
        line: 133
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 138,
            column: 24
          },
          end: {
            line: 138,
            column: 25
          }
        },
        loc: {
          start: {
            line: 138,
            column: 37
          },
          end: {
            line: 188,
            column: 5
          }
        },
        line: 138
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 146,
            column: 61
          },
          end: {
            line: 146,
            column: 62
          }
        },
        loc: {
          start: {
            line: 146,
            column: 66
          },
          end: {
            line: 146,
            column: 108
          }
        },
        line: 146
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 150,
            column: 67
          },
          end: {
            line: 150,
            column: 68
          }
        },
        loc: {
          start: {
            line: 150,
            column: 72
          },
          end: {
            line: 150,
            column: 79
          }
        },
        line: 150
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 160,
            column: 67
          },
          end: {
            line: 160,
            column: 68
          }
        },
        loc: {
          start: {
            line: 160,
            column: 72
          },
          end: {
            line: 160,
            column: 114
          }
        },
        line: 160
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 164,
            column: 73
          },
          end: {
            line: 164,
            column: 74
          }
        },
        loc: {
          start: {
            line: 164,
            column: 78
          },
          end: {
            line: 164,
            column: 90
          }
        },
        line: 164
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 174,
            column: 67
          },
          end: {
            line: 174,
            column: 68
          }
        },
        loc: {
          start: {
            line: 174,
            column: 72
          },
          end: {
            line: 174,
            column: 114
          }
        },
        line: 174
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 178,
            column: 73
          },
          end: {
            line: 178,
            column: 74
          }
        },
        loc: {
          start: {
            line: 178,
            column: 78
          },
          end: {
            line: 178,
            column: 87
          }
        },
        line: 178
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 189,
            column: 26
          },
          end: {
            line: 189,
            column: 27
          }
        },
        loc: {
          start: {
            line: 189,
            column: 30
          },
          end: {
            line: 196,
            column: 5
          }
        },
        line: 189
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 200,
            column: 26
          },
          end: {
            line: 200,
            column: 27
          }
        },
        loc: {
          start: {
            line: 200,
            column: 30
          },
          end: {
            line: 212,
            column: 5
          }
        },
        line: 200
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 201,
            column: 29
          },
          end: {
            line: 201,
            column: 30
          }
        },
        loc: {
          start: {
            line: 201,
            column: 33
          },
          end: {
            line: 209,
            column: 9
          }
        },
        line: 201
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 203,
            column: 27
          },
          end: {
            line: 203,
            column: 28
          }
        },
        loc: {
          start: {
            line: 203,
            column: 31
          },
          end: {
            line: 207,
            column: 17
          }
        },
        line: 203
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 211,
            column: 15
          },
          end: {
            line: 211,
            column: 16
          }
        },
        loc: {
          start: {
            line: 211,
            column: 19
          },
          end: {
            line: 211,
            column: 69
          }
        },
        line: 211
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 244,
            column: 41
          },
          end: {
            line: 244,
            column: 42
          }
        },
        loc: {
          start: {
            line: 244,
            column: 45
          },
          end: {
            line: 244,
            column: 62
          }
        },
        line: 244
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 250,
            column: 41
          },
          end: {
            line: 250,
            column: 42
          }
        },
        loc: {
          start: {
            line: 250,
            column: 45
          },
          end: {
            line: 250,
            column: 61
          }
        },
        line: 250
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 256,
            column: 41
          },
          end: {
            line: 256,
            column: 42
          }
        },
        loc: {
          start: {
            line: 256,
            column: 45
          },
          end: {
            line: 256,
            column: 62
          }
        },
        line: 256
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 262,
            column: 41
          },
          end: {
            line: 262,
            column: 42
          }
        },
        loc: {
          start: {
            line: 262,
            column: 45
          },
          end: {
            line: 262,
            column: 63
          }
        },
        line: 262
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 273,
            column: 41
          },
          end: {
            line: 273,
            column: 42
          }
        },
        loc: {
          start: {
            line: 273,
            column: 45
          },
          end: {
            line: 273,
            column: 70
          }
        },
        line: 273
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 279,
            column: 41
          },
          end: {
            line: 279,
            column: 42
          }
        },
        loc: {
          start: {
            line: 279,
            column: 45
          },
          end: {
            line: 279,
            column: 72
          }
        },
        line: 279
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 285,
            column: 41
          },
          end: {
            line: 285,
            column: 42
          }
        },
        loc: {
          start: {
            line: 285,
            column: 45
          },
          end: {
            line: 285,
            column: 76
          }
        },
        line: 285
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 307,
            column: 64
          },
          end: {
            line: 307,
            column: 65
          }
        },
        loc: {
          start: {
            line: 307,
            column: 84
          },
          end: {
            line: 320,
            column: 25
          }
        },
        line: 307
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 317,
            column: 45
          },
          end: {
            line: 317,
            column: 46
          }
        },
        loc: {
          start: {
            line: 317,
            column: 49
          },
          end: {
            line: 317,
            column: 76
          }
        },
        line: 317
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 29
          },
          end: {
            line: 25,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 38
          },
          end: {
            line: 25,
            column: 41
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 59,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 59,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "2": {
        loc: {
          start: {
            line: 72,
            column: 22
          },
          end: {
            line: 72,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 22
          },
          end: {
            line: 72,
            column: 41
          }
        }, {
          start: {
            line: 72,
            column: 45
          },
          end: {
            line: 72,
            column: 46
          }
        }],
        line: 72
      },
      "3": {
        loc: {
          start: {
            line: 85,
            column: 36
          },
          end: {
            line: 85,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 36
          },
          end: {
            line: 85,
            column: 58
          }
        }, {
          start: {
            line: 85,
            column: 62
          },
          end: {
            line: 85,
            column: 63
          }
        }],
        line: 85
      },
      "4": {
        loc: {
          start: {
            line: 101,
            column: 16
          },
          end: {
            line: 105,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 16
          },
          end: {
            line: 105,
            column: 17
          }
        }, {
          start: {
            line: 103,
            column: 23
          },
          end: {
            line: 105,
            column: 17
          }
        }],
        line: 101
      },
      "5": {
        loc: {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 139,
            column: 70
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 139,
            column: 70
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "6": {
        loc: {
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 139,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 139,
            column: 28
          }
        }, {
          start: {
            line: 139,
            column: 32
          },
          end: {
            line: 139,
            column: 61
          }
        }],
        line: 139
      },
      "7": {
        loc: {
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 157,
            column: 22
          }
        }, {
          start: {
            line: 158,
            column: 12
          },
          end: {
            line: 171,
            column: 22
          }
        }, {
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 185,
            column: 22
          }
        }],
        line: 143
      },
      "8": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "9": {
        loc: {
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 208,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 208,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "10": {
        loc: {
          start: {
            line: 215,
            column: 4
          },
          end: {
            line: 222,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 4
          },
          end: {
            line: 222,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "11": {
        loc: {
          start: {
            line: 223,
            column: 4
          },
          end: {
            line: 231,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 4
          },
          end: {
            line: 231,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 223
      },
      "12": {
        loc: {
          start: {
            line: 242,
            column: 41
          },
          end: {
            line: 242,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 242,
            column: 61
          },
          end: {
            line: 242,
            column: 70
          }
        }, {
          start: {
            line: 242,
            column: 73
          },
          end: {
            line: 242,
            column: 82
          }
        }],
        line: 242
      },
      "13": {
        loc: {
          start: {
            line: 248,
            column: 41
          },
          end: {
            line: 248,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 248,
            column: 60
          },
          end: {
            line: 248,
            column: 69
          }
        }, {
          start: {
            line: 248,
            column: 72
          },
          end: {
            line: 248,
            column: 81
          }
        }],
        line: 248
      },
      "14": {
        loc: {
          start: {
            line: 254,
            column: 41
          },
          end: {
            line: 254,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 254,
            column: 61
          },
          end: {
            line: 254,
            column: 70
          }
        }, {
          start: {
            line: 254,
            column: 73
          },
          end: {
            line: 254,
            column: 82
          }
        }],
        line: 254
      },
      "15": {
        loc: {
          start: {
            line: 260,
            column: 41
          },
          end: {
            line: 260,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 260,
            column: 62
          },
          end: {
            line: 260,
            column: 71
          }
        }, {
          start: {
            line: 260,
            column: 74
          },
          end: {
            line: 260,
            column: 83
          }
        }],
        line: 260
      },
      "16": {
        loc: {
          start: {
            line: 271,
            column: 41
          },
          end: {
            line: 271,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 271,
            column: 69
          },
          end: {
            line: 271,
            column: 78
          }
        }, {
          start: {
            line: 271,
            column: 81
          },
          end: {
            line: 271,
            column: 90
          }
        }],
        line: 271
      },
      "17": {
        loc: {
          start: {
            line: 277,
            column: 41
          },
          end: {
            line: 277,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 277,
            column: 71
          },
          end: {
            line: 277,
            column: 80
          }
        }, {
          start: {
            line: 277,
            column: 83
          },
          end: {
            line: 277,
            column: 92
          }
        }],
        line: 277
      },
      "18": {
        loc: {
          start: {
            line: 283,
            column: 41
          },
          end: {
            line: 283,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 283,
            column: 75
          },
          end: {
            line: 283,
            column: 84
          }
        }, {
          start: {
            line: 283,
            column: 87
          },
          end: {
            line: 283,
            column: 96
          }
        }],
        line: 283
      },
      "19": {
        loc: {
          start: {
            line: 308,
            column: 28
          },
          end: {
            line: 308,
            column: 73
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 308,
            column: 28
          },
          end: {
            line: 308,
            column: 73
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 308
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/workspaces/prompt-card-system/frontend/src/components/Analytics/PerformanceCharts.tsx"],
      sourcesContent: ["'use client';\n\nimport { useEffect, useState, useRef } from 'react';\nimport { api } from '@/lib/api';\nimport { DashboardMetrics } from '@/types';\nimport { LoadingSpinner } from '@/components/ui/LoadingSpinner';\nimport { Button } from '@/components/ui/Button';\n\ninterface ChartData {\n  labels: string[];\n  datasets: Array<{\n    label: string;\n    data: number[];\n    borderColor: string;\n    backgroundColor: string;\n    fill?: boolean;\n  }>;\n}\n\ninterface PerformanceChartsProps {\n  height?: number;\n}\n\nexport const PerformanceCharts: React.FC<PerformanceChartsProps> = ({ height = 400 }) => {\n  const [metrics, setMetrics] = useState<DashboardMetrics | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [period, setPeriod] = useState<'hour' | 'day' | 'week' | 'month'>('day');\n  const [selectedChart, setSelectedChart] = useState<'tests' | 'success' | 'performance'>('tests');\n  \n  const chartRefs = {\n    tests: useRef<HTMLCanvasElement>(null),\n    success: useRef<HTMLCanvasElement>(null),\n    performance: useRef<HTMLCanvasElement>(null),\n  };\n\n  useEffect(() => {\n    const fetchTrends = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const data = await api.getTrends(period, 30);\n        setMetrics({ ...metrics, trends: data } as DashboardMetrics);\n      } catch (err) {\n        console.error('Error fetching trends:', err);\n        setError('Failed to load chart data');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTrends();\n  }, [period]);\n\n  const drawLineChart = (canvas: HTMLCanvasElement, data: ChartData, title: string) => {\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Set canvas size\n    canvas.width = canvas.offsetWidth;\n    canvas.height = height;\n\n    const padding = 60;\n    const chartWidth = canvas.width - padding * 2;\n    const chartHeight = canvas.height - padding * 2;\n\n    // Find data range\n    const allData = data.datasets.flatMap(dataset => dataset.data);\n    const minValue = Math.min(...allData);\n    const maxValue = Math.max(...allData);\n    const range = maxValue - minValue || 1;\n\n    // Draw grid lines\n    ctx.strokeStyle = '#e5e7eb';\n    ctx.lineWidth = 1;\n    \n    // Horizontal grid lines\n    for (let i = 0; i <= 5; i++) {\n      const y = padding + (chartHeight / 5) * i;\n      ctx.beginPath();\n      ctx.moveTo(padding, y);\n      ctx.lineTo(padding + chartWidth, y);\n      ctx.stroke();\n    }\n\n    // Vertical grid lines\n    const stepX = chartWidth / (data.labels.length - 1 || 1);\n    for (let i = 0; i < data.labels.length; i++) {\n      const x = padding + stepX * i;\n      ctx.beginPath();\n      ctx.moveTo(x, padding);\n      ctx.lineTo(x, padding + chartHeight);\n      ctx.stroke();\n    }\n\n    // Draw data lines\n    data.datasets.forEach((dataset, datasetIndex) => {\n      ctx.strokeStyle = dataset.borderColor;\n      ctx.lineWidth = 2;\n      ctx.beginPath();\n\n      dataset.data.forEach((value, index) => {\n        const x = padding + stepX * index;\n        const y = padding + chartHeight - ((value - minValue) / range) * chartHeight;\n        \n        if (index === 0) {\n          ctx.moveTo(x, y);\n        } else {\n          ctx.lineTo(x, y);\n        }\n      });\n\n      ctx.stroke();\n\n      // Draw data points\n      ctx.fillStyle = dataset.borderColor;\n      dataset.data.forEach((value, index) => {\n        const x = padding + stepX * index;\n        const y = padding + chartHeight - ((value - minValue) / range) * chartHeight;\n        \n        ctx.beginPath();\n        ctx.arc(x, y, 4, 0, 2 * Math.PI);\n        ctx.fill();\n      });\n    });\n\n    // Draw title\n    ctx.fillStyle = '#1f2937';\n    ctx.font = '16px Inter, sans-serif';\n    ctx.textAlign = 'center';\n    ctx.fillText(title, canvas.width / 2, 30);\n\n    // Draw y-axis labels\n    ctx.font = '12px Inter, sans-serif';\n    ctx.textAlign = 'right';\n    for (let i = 0; i <= 5; i++) {\n      const y = padding + (chartHeight / 5) * i;\n      const value = maxValue - (range / 5) * i;\n      ctx.fillText(value.toFixed(1), padding - 10, y + 4);\n    }\n\n    // Draw x-axis labels\n    ctx.textAlign = 'center';\n    data.labels.forEach((label, index) => {\n      const x = padding + stepX * index;\n      ctx.fillText(label, x, canvas.height - 20);\n    });\n  };\n\n  const renderChart = (chartType: 'tests' | 'success' | 'performance') => {\n    if (!metrics?.trends || !chartRefs[chartType].current) return;\n\n    const canvas = chartRefs[chartType].current;\n    let chartData: ChartData;\n    let title: string;\n\n    switch (chartType) {\n      case 'tests':\n        chartData = {\n          labels: metrics.trends.testsOverTime.map(t => \n            new Date(t.timestamp).toLocaleDateString()\n          ),\n          datasets: [{\n            label: 'Tests Count',\n            data: metrics.trends.testsOverTime.map(t => t.count),\n            borderColor: '#3b82f6',\n            backgroundColor: '#3b82f6',\n          }]\n        };\n        title = 'Tests Over Time';\n        break;\n      case 'success':\n        chartData = {\n          labels: metrics.trends.successRateOverTime.map(t => \n            new Date(t.timestamp).toLocaleDateString()\n          ),\n          datasets: [{\n            label: 'Success Rate',\n            data: metrics.trends.successRateOverTime.map(t => t.rate * 100),\n            borderColor: '#10b981',\n            backgroundColor: '#10b981',\n          }]\n        };\n        title = 'Success Rate Over Time (%)';\n        break;\n      case 'performance':\n        chartData = {\n          labels: metrics.trends.performanceOverTime.map(t => \n            new Date(t.timestamp).toLocaleDateString()\n          ),\n          datasets: [{\n            label: 'Avg Response Time',\n            data: metrics.trends.performanceOverTime.map(t => t.avgTime),\n            borderColor: '#f59e0b',\n            backgroundColor: '#f59e0b',\n          }]\n        };\n        title = 'Average Response Time (ms)';\n        break;\n    }\n\n    drawLineChart(canvas, chartData, title);\n  };\n\n  useEffect(() => {\n    if (metrics?.trends) {\n      // Render all charts\n      renderChart('tests');\n      renderChart('success');\n      renderChart('performance');\n    }\n  }, [metrics?.trends]);\n\n  // Handle window resize\n  useEffect(() => {\n    const handleResize = () => {\n      if (metrics?.trends) {\n        setTimeout(() => {\n          renderChart('tests');\n          renderChart('success');\n          renderChart('performance');\n        }, 100);\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [metrics?.trends]);\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n        <p className=\"text-red-800\">{error}</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Controls */}\n      <div className=\"flex flex-wrap gap-4 items-center justify-between\">\n        <div className=\"flex gap-2\">\n          <Button\n            variant={period === 'hour' ? 'default' : 'outline'}\n            size=\"sm\"\n            onClick={() => setPeriod('hour')}\n          >\n            Hourly\n          </Button>\n          <Button\n            variant={period === 'day' ? 'default' : 'outline'}\n            size=\"sm\"\n            onClick={() => setPeriod('day')}\n          >\n            Daily\n          </Button>\n          <Button\n            variant={period === 'week' ? 'default' : 'outline'}\n            size=\"sm\"\n            onClick={() => setPeriod('week')}\n          >\n            Weekly\n          </Button>\n          <Button\n            variant={period === 'month' ? 'default' : 'outline'}\n            size=\"sm\"\n            onClick={() => setPeriod('month')}\n          >\n            Monthly\n          </Button>\n        </div>\n\n        <div className=\"flex gap-2\">\n          <Button\n            variant={selectedChart === 'tests' ? 'default' : 'outline'}\n            size=\"sm\"\n            onClick={() => setSelectedChart('tests')}\n          >\n            Tests\n          </Button>\n          <Button\n            variant={selectedChart === 'success' ? 'default' : 'outline'}\n            size=\"sm\"\n            onClick={() => setSelectedChart('success')}\n          >\n            Success Rate\n          </Button>\n          <Button\n            variant={selectedChart === 'performance' ? 'default' : 'outline'}\n            size=\"sm\"\n            onClick={() => setSelectedChart('performance')}\n          >\n            Performance\n          </Button>\n        </div>\n      </div>\n\n      {/* Charts */}\n      <div className=\"grid grid-cols-1 gap-6\">\n        {/* Selected Chart - Large */}\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <canvas\n            ref={chartRefs[selectedChart]}\n            className=\"w-full\"\n            style={{ height: `${height}px` }}\n          />\n        </div>\n\n        {/* Other Charts - Small */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n          {Object.entries(chartRefs).map(([chartType, ref]) => {\n            if (chartType === selectedChart) return null;\n            \n            return (\n              <div key={chartType} className=\"bg-white rounded-lg border border-gray-200 p-4\">\n                <canvas\n                  ref={ref}\n                  className=\"w-full cursor-pointer\"\n                  style={{ height: `${height / 2}px` }}\n                  onClick={() => setSelectedChart(chartType as 'tests' | 'success' | 'performance')}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Chart Legend */}\n      <div className=\"bg-gray-50 rounded-lg p-4\">\n        <div className=\"flex flex-wrap gap-6 text-sm\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-4 h-4 bg-blue-500 rounded-full\"></div>\n            <span>Tests Volume</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-4 h-4 bg-green-500 rounded-full\"></div>\n            <span>Success Rate</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-4 h-4 bg-yellow-500 rounded-full\"></div>\n            <span>Response Time</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PerformanceCharts;"],
      names: ["PerformanceCharts", "height", "metrics", "setMetrics", "useState", "loading", "setLoading", "error", "setError", "period", "setPeriod", "selectedChart", "setSelectedChart", "chartRefs", "tests", "useRef", "success", "performance", "useEffect", "fetchTrends", "data", "api", "getTrends", "trends", "err", "console", "drawLineChart", "canvas", "title", "ctx", "getContext", "clearRect", "width", "offsetWidth", "padding", "chartWidth", "chartHeight", "allData", "datasets", "flatMap", "dataset", "minValue", "Math", "min", "maxValue", "max", "range", "strokeStyle", "lineWidth", "i", "y", "beginPath", "moveTo", "lineTo", "stroke", "stepX", "labels", "length", "x", "forEach", "datasetIndex", "borderColor", "value", "index", "fillStyle", "arc", "PI", "fill", "font", "textAlign", "fillText", "toFixed", "label", "renderChart", "chartType", "current", "chartData", "testsOverTime", "map", "t", "Date", "timestamp", "toLocaleDateString", "count", "backgroundColor", "successRateOverTime", "rate", "performanceOverTime", "avgTime", "handleResize", "setTimeout", "window", "addEventListener", "removeEventListener", "div", "className", "LoadingSpinner", "size", "p", "Button", "variant", "onClick", "ref", "style", "Object", "entries", "span"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ec040377dc5c52103052e113e8d2c30871e6fc37"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2b5kb1hcyh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2b5kb1hcyh();
cov_2b5kb1hcyh().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2b5kb1hcyh().f[0]++;
  cov_2b5kb1hcyh().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2b5kb1hcyh().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2b5kb1hcyh().s[3]++;
_export(exports, {
  PerformanceCharts: function () {
    /* istanbul ignore next */
    cov_2b5kb1hcyh().f[1]++;
    cov_2b5kb1hcyh().s[4]++;
    return PerformanceCharts;
  },
  default: function () {
    /* istanbul ignore next */
    cov_2b5kb1hcyh().f[2]++;
    cov_2b5kb1hcyh().s[5]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2b5kb1hcyh().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_2b5kb1hcyh().s[7]++, require("react"));
const _api =
/* istanbul ignore next */
(cov_2b5kb1hcyh().s[8]++, require("../../lib/api"));
const _LoadingSpinner =
/* istanbul ignore next */
(cov_2b5kb1hcyh().s[9]++, require("../ui/LoadingSpinner"));
const _Button =
/* istanbul ignore next */
(cov_2b5kb1hcyh().s[10]++, require("../ui/Button"));
/* istanbul ignore next */
cov_2b5kb1hcyh().s[11]++;
const PerformanceCharts = ({
  height =
  /* istanbul ignore next */
  (cov_2b5kb1hcyh().b[0][0]++, 400)
}) => {
  /* istanbul ignore next */
  cov_2b5kb1hcyh().f[3]++;
  const [metrics, setMetrics] =
  /* istanbul ignore next */
  (cov_2b5kb1hcyh().s[12]++, (0, _react.useState)(null));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_2b5kb1hcyh().s[13]++, (0, _react.useState)(true));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_2b5kb1hcyh().s[14]++, (0, _react.useState)(null));
  const [period, setPeriod] =
  /* istanbul ignore next */
  (cov_2b5kb1hcyh().s[15]++, (0, _react.useState)("day"));
  const [selectedChart, setSelectedChart] =
  /* istanbul ignore next */
  (cov_2b5kb1hcyh().s[16]++, (0, _react.useState)("tests"));
  const chartRefs =
  /* istanbul ignore next */
  (cov_2b5kb1hcyh().s[17]++, {
    tests: (0, _react.useRef)(null),
    success: (0, _react.useRef)(null),
    performance: (0, _react.useRef)(null)
  });
  /* istanbul ignore next */
  cov_2b5kb1hcyh().s[18]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2b5kb1hcyh().f[4]++;
    cov_2b5kb1hcyh().s[19]++;
    const fetchTrends = async () => {
      /* istanbul ignore next */
      cov_2b5kb1hcyh().f[5]++;
      cov_2b5kb1hcyh().s[20]++;
      try {
        /* istanbul ignore next */
        cov_2b5kb1hcyh().s[21]++;
        setLoading(true);
        /* istanbul ignore next */
        cov_2b5kb1hcyh().s[22]++;
        setError(null);
        const data =
        /* istanbul ignore next */
        (cov_2b5kb1hcyh().s[23]++, await _api.api.getTrends(period, 30));
        /* istanbul ignore next */
        cov_2b5kb1hcyh().s[24]++;
        setMetrics({
          ...metrics,
          trends: data
        });
      } catch (err) {
        /* istanbul ignore next */
        cov_2b5kb1hcyh().s[25]++;
        console.error("Error fetching trends:", err);
        /* istanbul ignore next */
        cov_2b5kb1hcyh().s[26]++;
        setError("Failed to load chart data");
      } finally {
        /* istanbul ignore next */
        cov_2b5kb1hcyh().s[27]++;
        setLoading(false);
      }
    };
    /* istanbul ignore next */
    cov_2b5kb1hcyh().s[28]++;
    fetchTrends();
  }, [period]);
  /* istanbul ignore next */
  cov_2b5kb1hcyh().s[29]++;
  const drawLineChart = (canvas, data, title) => {
    /* istanbul ignore next */
    cov_2b5kb1hcyh().f[6]++;
    const ctx =
    /* istanbul ignore next */
    (cov_2b5kb1hcyh().s[30]++, canvas.getContext("2d"));
    /* istanbul ignore next */
    cov_2b5kb1hcyh().s[31]++;
    if (!ctx) {
      /* istanbul ignore next */
      cov_2b5kb1hcyh().b[1][0]++;
      cov_2b5kb1hcyh().s[32]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2b5kb1hcyh().b[1][1]++;
    }
    // Clear canvas
    cov_2b5kb1hcyh().s[33]++;
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    // Set canvas size
    /* istanbul ignore next */
    cov_2b5kb1hcyh().s[34]++;
    canvas.width = canvas.offsetWidth;
    /* istanbul ignore next */
    cov_2b5kb1hcyh().s[35]++;
    canvas.height = height;
    const padding =
    /* istanbul ignore next */
    (cov_2b5kb1hcyh().s[36]++, 60);
    const chartWidth =
    /* istanbul ignore next */
    (cov_2b5kb1hcyh().s[37]++, canvas.width - padding * 2);
    const chartHeight =
    /* istanbul ignore next */
    (cov_2b5kb1hcyh().s[38]++, canvas.height - padding * 2);
    // Find data range
    const allData =
    /* istanbul ignore next */
    (cov_2b5kb1hcyh().s[39]++, data.datasets.flatMap(dataset => {
      /* istanbul ignore next */
      cov_2b5kb1hcyh().f[7]++;
      cov_2b5kb1hcyh().s[40]++;
      return dataset.data;
    }));
    const minValue =
    /* istanbul ignore next */
    (cov_2b5kb1hcyh().s[41]++, Math.min(...allData));
    const maxValue =
    /* istanbul ignore next */
    (cov_2b5kb1hcyh().s[42]++, Math.max(...allData));
    const range =
    /* istanbul ignore next */
    (cov_2b5kb1hcyh().s[43]++,
    /* istanbul ignore next */
    (cov_2b5kb1hcyh().b[2][0]++, maxValue - minValue) ||
    /* istanbul ignore next */
    (cov_2b5kb1hcyh().b[2][1]++, 1));
    // Draw grid lines
    /* istanbul ignore next */
    cov_2b5kb1hcyh().s[44]++;
    ctx.strokeStyle = "#e5e7eb";
    /* istanbul ignore next */
    cov_2b5kb1hcyh().s[45]++;
    ctx.lineWidth = 1;
    // Horizontal grid lines
    /* istanbul ignore next */
    cov_2b5kb1hcyh().s[46]++;
    for (let i =
    /* istanbul ignore next */
    (cov_2b5kb1hcyh().s[47]++, 0); i <= 5; i++) {
      const y =
      /* istanbul ignore next */
      (cov_2b5kb1hcyh().s[48]++, padding + chartHeight / 5 * i);
      /* istanbul ignore next */
      cov_2b5kb1hcyh().s[49]++;
      ctx.beginPath();
      /* istanbul ignore next */
      cov_2b5kb1hcyh().s[50]++;
      ctx.moveTo(padding, y);
      /* istanbul ignore next */
      cov_2b5kb1hcyh().s[51]++;
      ctx.lineTo(padding + chartWidth, y);
      /* istanbul ignore next */
      cov_2b5kb1hcyh().s[52]++;
      ctx.stroke();
    }
    // Vertical grid lines
    const stepX =
    /* istanbul ignore next */
    (cov_2b5kb1hcyh().s[53]++, chartWidth / (
    /* istanbul ignore next */
    (cov_2b5kb1hcyh().b[3][0]++, data.labels.length - 1) ||
    /* istanbul ignore next */
    (cov_2b5kb1hcyh().b[3][1]++, 1)));
    /* istanbul ignore next */
    cov_2b5kb1hcyh().s[54]++;
    for (let i =
    /* istanbul ignore next */
    (cov_2b5kb1hcyh().s[55]++, 0); i < data.labels.length; i++) {
      const x =
      /* istanbul ignore next */
      (cov_2b5kb1hcyh().s[56]++, padding + stepX * i);
      /* istanbul ignore next */
      cov_2b5kb1hcyh().s[57]++;
      ctx.beginPath();
      /* istanbul ignore next */
      cov_2b5kb1hcyh().s[58]++;
      ctx.moveTo(x, padding);
      /* istanbul ignore next */
      cov_2b5kb1hcyh().s[59]++;
      ctx.lineTo(x, padding + chartHeight);
      /* istanbul ignore next */
      cov_2b5kb1hcyh().s[60]++;
      ctx.stroke();
    }
    // Draw data lines
    /* istanbul ignore next */
    cov_2b5kb1hcyh().s[61]++;
    data.datasets.forEach((dataset, datasetIndex) => {
      /* istanbul ignore next */
      cov_2b5kb1hcyh().f[8]++;
      cov_2b5kb1hcyh().s[62]++;
      ctx.strokeStyle = dataset.borderColor;
      /* istanbul ignore next */
      cov_2b5kb1hcyh().s[63]++;
      ctx.lineWidth = 2;
      /* istanbul ignore next */
      cov_2b5kb1hcyh().s[64]++;
      ctx.beginPath();
      /* istanbul ignore next */
      cov_2b5kb1hcyh().s[65]++;
      dataset.data.forEach((value, index) => {
        /* istanbul ignore next */
        cov_2b5kb1hcyh().f[9]++;
        const x =
        /* istanbul ignore next */
        (cov_2b5kb1hcyh().s[66]++, padding + stepX * index);
        const y =
        /* istanbul ignore next */
        (cov_2b5kb1hcyh().s[67]++, padding + chartHeight - (value - minValue) / range * chartHeight);
        /* istanbul ignore next */
        cov_2b5kb1hcyh().s[68]++;
        if (index === 0) {
          /* istanbul ignore next */
          cov_2b5kb1hcyh().b[4][0]++;
          cov_2b5kb1hcyh().s[69]++;
          ctx.moveTo(x, y);
        } else {
          /* istanbul ignore next */
          cov_2b5kb1hcyh().b[4][1]++;
          cov_2b5kb1hcyh().s[70]++;
          ctx.lineTo(x, y);
        }
      });
      /* istanbul ignore next */
      cov_2b5kb1hcyh().s[71]++;
      ctx.stroke();
      // Draw data points
      /* istanbul ignore next */
      cov_2b5kb1hcyh().s[72]++;
      ctx.fillStyle = dataset.borderColor;
      /* istanbul ignore next */
      cov_2b5kb1hcyh().s[73]++;
      dataset.data.forEach((value, index) => {
        /* istanbul ignore next */
        cov_2b5kb1hcyh().f[10]++;
        const x =
        /* istanbul ignore next */
        (cov_2b5kb1hcyh().s[74]++, padding + stepX * index);
        const y =
        /* istanbul ignore next */
        (cov_2b5kb1hcyh().s[75]++, padding + chartHeight - (value - minValue) / range * chartHeight);
        /* istanbul ignore next */
        cov_2b5kb1hcyh().s[76]++;
        ctx.beginPath();
        /* istanbul ignore next */
        cov_2b5kb1hcyh().s[77]++;
        ctx.arc(x, y, 4, 0, 2 * Math.PI);
        /* istanbul ignore next */
        cov_2b5kb1hcyh().s[78]++;
        ctx.fill();
      });
    });
    // Draw title
    /* istanbul ignore next */
    cov_2b5kb1hcyh().s[79]++;
    ctx.fillStyle = "#1f2937";
    /* istanbul ignore next */
    cov_2b5kb1hcyh().s[80]++;
    ctx.font = "16px Inter, sans-serif";
    /* istanbul ignore next */
    cov_2b5kb1hcyh().s[81]++;
    ctx.textAlign = "center";
    /* istanbul ignore next */
    cov_2b5kb1hcyh().s[82]++;
    ctx.fillText(title, canvas.width / 2, 30);
    // Draw y-axis labels
    /* istanbul ignore next */
    cov_2b5kb1hcyh().s[83]++;
    ctx.font = "12px Inter, sans-serif";
    /* istanbul ignore next */
    cov_2b5kb1hcyh().s[84]++;
    ctx.textAlign = "right";
    /* istanbul ignore next */
    cov_2b5kb1hcyh().s[85]++;
    for (let i =
    /* istanbul ignore next */
    (cov_2b5kb1hcyh().s[86]++, 0); i <= 5; i++) {
      const y =
      /* istanbul ignore next */
      (cov_2b5kb1hcyh().s[87]++, padding + chartHeight / 5 * i);
      const value =
      /* istanbul ignore next */
      (cov_2b5kb1hcyh().s[88]++, maxValue - range / 5 * i);
      /* istanbul ignore next */
      cov_2b5kb1hcyh().s[89]++;
      ctx.fillText(value.toFixed(1), padding - 10, y + 4);
    }
    // Draw x-axis labels
    /* istanbul ignore next */
    cov_2b5kb1hcyh().s[90]++;
    ctx.textAlign = "center";
    /* istanbul ignore next */
    cov_2b5kb1hcyh().s[91]++;
    data.labels.forEach((label, index) => {
      /* istanbul ignore next */
      cov_2b5kb1hcyh().f[11]++;
      const x =
      /* istanbul ignore next */
      (cov_2b5kb1hcyh().s[92]++, padding + stepX * index);
      /* istanbul ignore next */
      cov_2b5kb1hcyh().s[93]++;
      ctx.fillText(label, x, canvas.height - 20);
    });
  };
  /* istanbul ignore next */
  cov_2b5kb1hcyh().s[94]++;
  const renderChart = chartType => {
    /* istanbul ignore next */
    cov_2b5kb1hcyh().f[12]++;
    cov_2b5kb1hcyh().s[95]++;
    if (
    /* istanbul ignore next */
    (cov_2b5kb1hcyh().b[6][0]++, !metrics?.trends) ||
    /* istanbul ignore next */
    (cov_2b5kb1hcyh().b[6][1]++, !chartRefs[chartType].current)) {
      /* istanbul ignore next */
      cov_2b5kb1hcyh().b[5][0]++;
      cov_2b5kb1hcyh().s[96]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2b5kb1hcyh().b[5][1]++;
    }
    const canvas =
    /* istanbul ignore next */
    (cov_2b5kb1hcyh().s[97]++, chartRefs[chartType].current);
    let chartData;
    let title;
    /* istanbul ignore next */
    cov_2b5kb1hcyh().s[98]++;
    switch (chartType) {
      case "tests":
        /* istanbul ignore next */
        cov_2b5kb1hcyh().b[7][0]++;
        cov_2b5kb1hcyh().s[99]++;
        chartData = {
          labels: metrics.trends.testsOverTime.map(t => {
            /* istanbul ignore next */
            cov_2b5kb1hcyh().f[13]++;
            cov_2b5kb1hcyh().s[100]++;
            return new Date(t.timestamp).toLocaleDateString();
          }),
          datasets: [{
            label: "Tests Count",
            data: metrics.trends.testsOverTime.map(t => {
              /* istanbul ignore next */
              cov_2b5kb1hcyh().f[14]++;
              cov_2b5kb1hcyh().s[101]++;
              return t.count;
            }),
            borderColor: "#3b82f6",
            backgroundColor: "#3b82f6"
          }]
        };
        /* istanbul ignore next */
        cov_2b5kb1hcyh().s[102]++;
        title = "Tests Over Time";
        /* istanbul ignore next */
        cov_2b5kb1hcyh().s[103]++;
        break;
      case "success":
        /* istanbul ignore next */
        cov_2b5kb1hcyh().b[7][1]++;
        cov_2b5kb1hcyh().s[104]++;
        chartData = {
          labels: metrics.trends.successRateOverTime.map(t => {
            /* istanbul ignore next */
            cov_2b5kb1hcyh().f[15]++;
            cov_2b5kb1hcyh().s[105]++;
            return new Date(t.timestamp).toLocaleDateString();
          }),
          datasets: [{
            label: "Success Rate",
            data: metrics.trends.successRateOverTime.map(t => {
              /* istanbul ignore next */
              cov_2b5kb1hcyh().f[16]++;
              cov_2b5kb1hcyh().s[106]++;
              return t.rate * 100;
            }),
            borderColor: "#10b981",
            backgroundColor: "#10b981"
          }]
        };
        /* istanbul ignore next */
        cov_2b5kb1hcyh().s[107]++;
        title = "Success Rate Over Time (%)";
        /* istanbul ignore next */
        cov_2b5kb1hcyh().s[108]++;
        break;
      case "performance":
        /* istanbul ignore next */
        cov_2b5kb1hcyh().b[7][2]++;
        cov_2b5kb1hcyh().s[109]++;
        chartData = {
          labels: metrics.trends.performanceOverTime.map(t => {
            /* istanbul ignore next */
            cov_2b5kb1hcyh().f[17]++;
            cov_2b5kb1hcyh().s[110]++;
            return new Date(t.timestamp).toLocaleDateString();
          }),
          datasets: [{
            label: "Avg Response Time",
            data: metrics.trends.performanceOverTime.map(t => {
              /* istanbul ignore next */
              cov_2b5kb1hcyh().f[18]++;
              cov_2b5kb1hcyh().s[111]++;
              return t.avgTime;
            }),
            borderColor: "#f59e0b",
            backgroundColor: "#f59e0b"
          }]
        };
        /* istanbul ignore next */
        cov_2b5kb1hcyh().s[112]++;
        title = "Average Response Time (ms)";
        /* istanbul ignore next */
        cov_2b5kb1hcyh().s[113]++;
        break;
    }
    /* istanbul ignore next */
    cov_2b5kb1hcyh().s[114]++;
    drawLineChart(canvas, chartData, title);
  };
  /* istanbul ignore next */
  cov_2b5kb1hcyh().s[115]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2b5kb1hcyh().f[19]++;
    cov_2b5kb1hcyh().s[116]++;
    if (metrics?.trends) {
      /* istanbul ignore next */
      cov_2b5kb1hcyh().b[8][0]++;
      cov_2b5kb1hcyh().s[117]++;
      // Render all charts
      renderChart("tests");
      /* istanbul ignore next */
      cov_2b5kb1hcyh().s[118]++;
      renderChart("success");
      /* istanbul ignore next */
      cov_2b5kb1hcyh().s[119]++;
      renderChart("performance");
    } else
    /* istanbul ignore next */
    {
      cov_2b5kb1hcyh().b[8][1]++;
    }
  }, [metrics?.trends]);
  // Handle window resize
  /* istanbul ignore next */
  cov_2b5kb1hcyh().s[120]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2b5kb1hcyh().f[20]++;
    cov_2b5kb1hcyh().s[121]++;
    const handleResize = () => {
      /* istanbul ignore next */
      cov_2b5kb1hcyh().f[21]++;
      cov_2b5kb1hcyh().s[122]++;
      if (metrics?.trends) {
        /* istanbul ignore next */
        cov_2b5kb1hcyh().b[9][0]++;
        cov_2b5kb1hcyh().s[123]++;
        setTimeout(() => {
          /* istanbul ignore next */
          cov_2b5kb1hcyh().f[22]++;
          cov_2b5kb1hcyh().s[124]++;
          renderChart("tests");
          /* istanbul ignore next */
          cov_2b5kb1hcyh().s[125]++;
          renderChart("success");
          /* istanbul ignore next */
          cov_2b5kb1hcyh().s[126]++;
          renderChart("performance");
        }, 100);
      } else
      /* istanbul ignore next */
      {
        cov_2b5kb1hcyh().b[9][1]++;
      }
    };
    /* istanbul ignore next */
    cov_2b5kb1hcyh().s[127]++;
    window.addEventListener("resize", handleResize);
    /* istanbul ignore next */
    cov_2b5kb1hcyh().s[128]++;
    return () => {
      /* istanbul ignore next */
      cov_2b5kb1hcyh().f[23]++;
      cov_2b5kb1hcyh().s[129]++;
      return window.removeEventListener("resize", handleResize);
    };
  }, [metrics?.trends]);
  /* istanbul ignore next */
  cov_2b5kb1hcyh().s[130]++;
  if (loading) {
    /* istanbul ignore next */
    cov_2b5kb1hcyh().b[10][0]++;
    cov_2b5kb1hcyh().s[131]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "flex justify-center items-center h-64",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_LoadingSpinner.LoadingSpinner, {
        size: "lg"
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_2b5kb1hcyh().b[10][1]++;
  }
  cov_2b5kb1hcyh().s[132]++;
  if (error) {
    /* istanbul ignore next */
    cov_2b5kb1hcyh().b[11][0]++;
    cov_2b5kb1hcyh().s[133]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "bg-red-50 border border-red-200 rounded-lg p-4",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-red-800",
        children: error
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_2b5kb1hcyh().b[11][1]++;
  }
  cov_2b5kb1hcyh().s[134]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "space-y-6",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex flex-wrap gap-4 items-center justify-between",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex gap-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
          variant: period === "hour" ?
          /* istanbul ignore next */
          (cov_2b5kb1hcyh().b[12][0]++, "default") :
          /* istanbul ignore next */
          (cov_2b5kb1hcyh().b[12][1]++, "outline"),
          size: "sm",
          onClick: () => {
            /* istanbul ignore next */
            cov_2b5kb1hcyh().f[24]++;
            cov_2b5kb1hcyh().s[135]++;
            return setPeriod("hour");
          },
          children: "Hourly"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
          variant: period === "day" ?
          /* istanbul ignore next */
          (cov_2b5kb1hcyh().b[13][0]++, "default") :
          /* istanbul ignore next */
          (cov_2b5kb1hcyh().b[13][1]++, "outline"),
          size: "sm",
          onClick: () => {
            /* istanbul ignore next */
            cov_2b5kb1hcyh().f[25]++;
            cov_2b5kb1hcyh().s[136]++;
            return setPeriod("day");
          },
          children: "Daily"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
          variant: period === "week" ?
          /* istanbul ignore next */
          (cov_2b5kb1hcyh().b[14][0]++, "default") :
          /* istanbul ignore next */
          (cov_2b5kb1hcyh().b[14][1]++, "outline"),
          size: "sm",
          onClick: () => {
            /* istanbul ignore next */
            cov_2b5kb1hcyh().f[26]++;
            cov_2b5kb1hcyh().s[137]++;
            return setPeriod("week");
          },
          children: "Weekly"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
          variant: period === "month" ?
          /* istanbul ignore next */
          (cov_2b5kb1hcyh().b[15][0]++, "default") :
          /* istanbul ignore next */
          (cov_2b5kb1hcyh().b[15][1]++, "outline"),
          size: "sm",
          onClick: () => {
            /* istanbul ignore next */
            cov_2b5kb1hcyh().f[27]++;
            cov_2b5kb1hcyh().s[138]++;
            return setPeriod("month");
          },
          children: "Monthly"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex gap-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
          variant: selectedChart === "tests" ?
          /* istanbul ignore next */
          (cov_2b5kb1hcyh().b[16][0]++, "default") :
          /* istanbul ignore next */
          (cov_2b5kb1hcyh().b[16][1]++, "outline"),
          size: "sm",
          onClick: () => {
            /* istanbul ignore next */
            cov_2b5kb1hcyh().f[28]++;
            cov_2b5kb1hcyh().s[139]++;
            return setSelectedChart("tests");
          },
          children: "Tests"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
          variant: selectedChart === "success" ?
          /* istanbul ignore next */
          (cov_2b5kb1hcyh().b[17][0]++, "default") :
          /* istanbul ignore next */
          (cov_2b5kb1hcyh().b[17][1]++, "outline"),
          size: "sm",
          onClick: () => {
            /* istanbul ignore next */
            cov_2b5kb1hcyh().f[29]++;
            cov_2b5kb1hcyh().s[140]++;
            return setSelectedChart("success");
          },
          children: "Success Rate"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
          variant: selectedChart === "performance" ?
          /* istanbul ignore next */
          (cov_2b5kb1hcyh().b[18][0]++, "default") :
          /* istanbul ignore next */
          (cov_2b5kb1hcyh().b[18][1]++, "outline"),
          size: "sm",
          onClick: () => {
            /* istanbul ignore next */
            cov_2b5kb1hcyh().f[30]++;
            cov_2b5kb1hcyh().s[141]++;
            return setSelectedChart("performance");
          },
          children: "Performance"
        })]
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "grid grid-cols-1 gap-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "bg-white rounded-lg border border-gray-200 p-6",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("canvas", {
          ref: chartRefs[selectedChart],
          className: "w-full",
          style: {
            height: `${height}px`
          }
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "grid grid-cols-1 lg:grid-cols-2 gap-4",
        children: Object.entries(chartRefs).map(([chartType, ref]) => {
          /* istanbul ignore next */
          cov_2b5kb1hcyh().f[31]++;
          cov_2b5kb1hcyh().s[142]++;
          if (chartType === selectedChart) {
            /* istanbul ignore next */
            cov_2b5kb1hcyh().b[19][0]++;
            cov_2b5kb1hcyh().s[143]++;
            return null;
          } else
          /* istanbul ignore next */
          {
            cov_2b5kb1hcyh().b[19][1]++;
          }
          cov_2b5kb1hcyh().s[144]++;
          return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "bg-white rounded-lg border border-gray-200 p-4",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)("canvas", {
              ref: ref,
              className: "w-full cursor-pointer",
              style: {
                height: `${height / 2}px`
              },
              onClick: () => {
                /* istanbul ignore next */
                cov_2b5kb1hcyh().f[32]++;
                cov_2b5kb1hcyh().s[145]++;
                return setSelectedChart(chartType);
              }
            })
          }, chartType);
        })
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "bg-gray-50 rounded-lg p-4",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex flex-wrap gap-6 text-sm",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center gap-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "w-4 h-4 bg-blue-500 rounded-full"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            children: "Tests Volume"
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center gap-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "w-4 h-4 bg-green-500 rounded-full"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            children: "Success Rate"
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center gap-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "w-4 h-4 bg-yellow-500 rounded-full"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            children: "Response Time"
          })]
        })]
      })
    })]
  });
};
const _default =
/* istanbul ignore next */
(cov_2b5kb1hcyh().s[146]++, PerformanceCharts);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,