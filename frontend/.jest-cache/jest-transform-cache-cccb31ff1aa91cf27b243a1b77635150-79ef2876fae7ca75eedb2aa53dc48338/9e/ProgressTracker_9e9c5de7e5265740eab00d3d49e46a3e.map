{"version":3,"names":["_default","ProgressTracker","executionId","onComplete","onError","onCancel","showCancelButton","cov_25cvbyma9z","b","autoStart","f","progress","setProgress","s","_react","useState","testResults","setTestResults","isFinished","setIsFinished","error","setError","cancelReason","setCancelReason","showCancelDialog","setShowCancelDialog","socket","isConnected","subscribeToTest","unsubscribeFromTest","cancelExecution","_useWebSocket","useWebSocket","useEffect","handleProgress","progressData","execution_id","status","message","handleTestResult","result","prev","handleExecutionComplete","data","results","handleExecutionError","on","off","handleCancelClick","handleCancelConfirm","trim","handleCancelCancel","formatTime","ms","seconds","Math","floor","minutes","hours","formatEstimatedTime","getStatusColor","getStatusIcon","_jsxruntime","jsxs","className","jsx","toUpperCase","onClick","disabled","round","overall_progress_percent","style","width","max","min","total_tests","completed_tests","failed_tests","current_test","test_case_id","model","Date","started_at","toLocaleTimeString","estimated_time_remaining","updated_at","length","slice","map","index","passed","execution_time_ms","type","value","onChange","e","target","placeholder"],"sources":["/workspaces/prompt-card-system/frontend/src/components/TestExecution/ProgressTracker.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useWebSocket, ExecutionProgress, TestExecutionResult } from '../../hooks/useWebSocket';\n\ninterface ProgressTrackerProps {\n  executionId: string;\n  onComplete?: (results: TestExecutionResult[]) => void;\n  onError?: (error: string) => void;\n  onCancel?: () => void;\n  showCancelButton?: boolean;\n  autoStart?: boolean;\n}\n\nconst ProgressTracker: React.FC<ProgressTrackerProps> = ({\n  executionId,\n  onComplete,\n  onError,\n  onCancel,\n  showCancelButton = true,\n  autoStart = true\n}) => {\n  const [progress, setProgress] = useState<ExecutionProgress | null>(null);\n  const [testResults, setTestResults] = useState<TestExecutionResult[]>([]);\n  const [isFinished, setIsFinished] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [cancelReason, setCancelReason] = useState('');\n  const [showCancelDialog, setShowCancelDialog] = useState(false);\n\n  const { socket, isConnected, subscribeToTest, unsubscribeFromTest, cancelExecution } = useWebSocket();\n\n  useEffect(() => {\n    if (!socket || !isConnected || !autoStart) return;\n\n    // Subscribe to test execution updates\n    subscribeToTest(executionId);\n\n    // Set up event handlers\n    const handleProgress = (progressData: ExecutionProgress) => {\n      if (progressData.execution_id === executionId) {\n        setProgress(progressData);\n        \n        if (progressData.status === 'completed') {\n          setIsFinished(true);\n        } else if (progressData.status === 'failed') {\n          setError(progressData.message);\n          setIsFinished(true);\n          onError?.(progressData.message);\n        } else if (progressData.status === 'cancelled') {\n          setIsFinished(true);\n          onCancel?.();\n        }\n      }\n    };\n\n    const handleTestResult = (result: TestExecutionResult) => {\n      setTestResults(prev => [...prev, result]);\n    };\n\n    const handleExecutionComplete = (data: { execution_id: string; results: TestExecutionResult[] }) => {\n      if (data.execution_id === executionId) {\n        setTestResults(data.results);\n        setIsFinished(true);\n        onComplete?.(data.results);\n      }\n    };\n\n    const handleExecutionError = (data: { execution_id: string; error: string }) => {\n      if (data.execution_id === executionId) {\n        setError(data.error);\n        setIsFinished(true);\n        onError?.(data.error);\n      }\n    };\n\n    socket.on('progress', handleProgress);\n    socket.on('test-result', handleTestResult);\n    socket.on('execution-complete', handleExecutionComplete);\n    socket.on('execution-error', handleExecutionError);\n\n    return () => {\n      socket.off('progress', handleProgress);\n      socket.off('test-result', handleTestResult);\n      socket.off('execution-complete', handleExecutionComplete);\n      socket.off('execution-error', handleExecutionError);\n      unsubscribeFromTest(executionId);\n    };\n  }, [socket, isConnected, executionId, autoStart, onComplete, onError, onCancel]);\n\n  const handleCancelClick = () => {\n    setShowCancelDialog(true);\n  };\n\n  const handleCancelConfirm = () => {\n    if (cancelReason.trim()) {\n      cancelExecution(executionId, cancelReason);\n      setShowCancelDialog(false);\n      setCancelReason('');\n    }\n  };\n\n  const handleCancelCancel = () => {\n    setShowCancelDialog(false);\n    setCancelReason('');\n  };\n\n  const formatTime = (ms: number): string => {\n    const seconds = Math.floor(ms / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n\n    if (hours > 0) {\n      return `${hours}h ${minutes % 60}m ${seconds % 60}s`;\n    } else if (minutes > 0) {\n      return `${minutes}m ${seconds % 60}s`;\n    } else {\n      return `${seconds}s`;\n    }\n  };\n\n  const formatEstimatedTime = (ms: number): string => {\n    if (ms <= 0) return 'Unknown';\n    \n    const seconds = Math.floor(ms / 1000);\n    const minutes = Math.floor(seconds / 60);\n    \n    if (minutes > 0) {\n      return `${minutes}m ${seconds % 60}s`;\n    } else {\n      return `${seconds}s`;\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'pending':\n        return 'text-yellow-600';\n      case 'running':\n        return 'text-blue-600';\n      case 'completed':\n        return 'text-green-600';\n      case 'failed':\n        return 'text-red-600';\n      case 'cancelled':\n        return 'text-gray-600';\n      default:\n        return 'text-gray-600';\n    }\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'pending':\n        return '‚è≥';\n      case 'running':\n        return 'üîÑ';\n      case 'completed':\n        return '‚úÖ';\n      case 'failed':\n        return '‚ùå';\n      case 'cancelled':\n        return 'üö´';\n      default:\n        return '‚ùì';\n    }\n  };\n\n  if (!progress) {\n    return (\n      <div className=\"flex items-center justify-center p-8\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n        <span className=\"ml-2\">Loading execution progress...</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md p-6\">\n      <div className=\"flex justify-between items-start mb-4\">\n        <div>\n          <h3 className=\"text-lg font-semibold mb-2\">Test Execution Progress</h3>\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-2xl\">{getStatusIcon(progress.status)}</span>\n            <span className={`font-medium ${getStatusColor(progress.status)}`}>\n              {progress.status.toUpperCase()}\n            </span>\n          </div>\n        </div>\n        {showCancelButton && !isFinished && progress.status !== 'cancelled' && (\n          <button\n            onClick={handleCancelClick}\n            className=\"bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-md text-sm font-medium\"\n            disabled={!isConnected}\n          >\n            Cancel Execution\n          </button>\n        )}\n      </div>\n\n      {/* Progress Bar */}\n      <div className=\"mb-4\">\n        <div className=\"flex justify-between text-sm text-gray-600 mb-1\">\n          <span>Progress</span>\n          <span>{Math.round(progress.overall_progress_percent)}%</span>\n        </div>\n        <div className=\"w-full bg-gray-200 rounded-full h-2\">\n          <div\n            className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n            style={{ width: `${Math.max(0, Math.min(100, progress.overall_progress_percent))}%` }}\n          ></div>\n        </div>\n      </div>\n\n      {/* Test Statistics */}\n      <div className=\"grid grid-cols-3 gap-4 mb-4\">\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-blue-600\">{progress.total_tests}</div>\n          <div className=\"text-sm text-gray-600\">Total Tests</div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-green-600\">{progress.completed_tests}</div>\n          <div className=\"text-sm text-gray-600\">Completed</div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-red-600\">{progress.failed_tests}</div>\n          <div className=\"text-sm text-gray-600\">Failed</div>\n        </div>\n      </div>\n\n      {/* Current Test Info */}\n      {progress.current_test && progress.status === 'running' && (\n        <div className=\"bg-gray-50 rounded-md p-4 mb-4\">\n          <h4 className=\"font-medium mb-2\">Currently Running:</h4>\n          <div className=\"text-sm space-y-1\">\n            <div><span className=\"font-medium\">Test Case:</span> #{progress.current_test.test_case_id}</div>\n            <div><span className=\"font-medium\">Model:</span> {progress.current_test.model}</div>\n            <div><span className=\"font-medium\">Started:</span> {new Date(progress.current_test.started_at).toLocaleTimeString()}</div>\n          </div>\n        </div>\n      )}\n\n      {/* Status Message */}\n      <div className=\"bg-gray-50 rounded-md p-4 mb-4\">\n        <p className=\"text-sm text-gray-700\">{progress.message}</p>\n      </div>\n\n      {/* Time Information */}\n      {progress.status === 'running' && progress.estimated_time_remaining > 0 && (\n        <div className=\"flex justify-between text-sm text-gray-600 mb-4\">\n          <span>Estimated Time Remaining: {formatEstimatedTime(progress.estimated_time_remaining)}</span>\n          <span>Last Updated: {new Date(progress.updated_at).toLocaleTimeString()}</span>\n        </div>\n      )}\n\n      {/* Error Display */}\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 rounded-md p-4 mb-4\">\n          <h4 className=\"font-medium text-red-800 mb-2\">Error</h4>\n          <p className=\"text-sm text-red-700\">{error}</p>\n        </div>\n      )}\n\n      {/* Real-time Test Results */}\n      {testResults.length > 0 && (\n        <div className=\"border-t pt-4\">\n          <h4 className=\"font-medium mb-2\">Recent Test Results:</h4>\n          <div className=\"space-y-2 max-h-60 overflow-y-auto\">\n            {testResults.slice(-5).map((result, index) => (\n              <div key={index} className=\"flex items-center justify-between bg-gray-50 rounded-md p-2\">\n                <span className=\"text-sm\">Test #{result.test_case_id}</span>\n                <div className=\"flex items-center space-x-2\">\n                  <span className={`text-sm font-medium ${result.passed ? 'text-green-600' : 'text-red-600'}`}>\n                    {result.passed ? '‚úÖ PASS' : '‚ùå FAIL'}\n                  </span>\n                  <span className=\"text-xs text-gray-500\">\n                    {formatTime(result.execution_time_ms)}\n                  </span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Connection Status */}\n      {!isConnected && (\n        <div className=\"bg-yellow-50 border border-yellow-200 rounded-md p-4 mt-4\">\n          <p className=\"text-sm text-yellow-700\">\n            ‚ö†Ô∏è Connection lost. Progress updates may be delayed.\n          </p>\n        </div>\n      )}\n\n      {/* Cancel Dialog */}\n      {showCancelDialog && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 max-w-md w-full mx-4\">\n            <h3 className=\"text-lg font-semibold mb-4\">Cancel Test Execution</h3>\n            <p className=\"text-sm text-gray-600 mb-4\">\n              Are you sure you want to cancel this test execution? This action cannot be undone.\n            </p>\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Reason for cancellation:\n              </label>\n              <input\n                type=\"text\"\n                value={cancelReason}\n                onChange={(e) => setCancelReason(e.target.value)}\n                className=\"w-full border border-gray-300 rounded-md px-3 py-2 text-sm\"\n                placeholder=\"e.g., Taking too long, incorrect configuration\"\n              />\n            </div>\n            <div className=\"flex justify-end space-x-2\">\n              <button\n                onClick={handleCancelCancel}\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200\"\n              >\n                Keep Running\n              </button>\n              <button\n                onClick={handleCancelConfirm}\n                disabled={!cancelReason.trim()}\n                className=\"px-4 py-2 text-sm font-medium text-white bg-red-500 rounded-md hover:bg-red-600 disabled:bg-red-300\"\n              >\n                Cancel Execution\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProgressTracker;"],"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","ignoreList":[]}