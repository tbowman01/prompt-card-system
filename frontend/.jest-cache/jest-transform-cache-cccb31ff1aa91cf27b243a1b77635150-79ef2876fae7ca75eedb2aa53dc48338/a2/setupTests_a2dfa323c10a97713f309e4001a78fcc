35fda004ab1f74a99725e6f3203f99da
"use strict";

// Mock Next.js router
/* istanbul ignore next */
function cov_byev1ls0w() {
  var path = "/workspaces/prompt-card-system/frontend/src/setupTests.ts";
  var hash = "28152517e0fb36c2803f3c91d0ec24f9bbbd1ccb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/prompt-card-system/frontend/src/setupTests.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 24,
          column: 8
        }
      },
      "1": {
        start: {
          line: 3,
          column: 30
        },
        end: {
          line: 24,
          column: 5
        }
      },
      "2": {
        start: {
          line: 5,
          column: 12
        },
        end: {
          line: 22,
          column: 14
        }
      },
      "3": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 35,
          column: 8
        }
      },
      "4": {
        start: {
          line: 26,
          column: 29
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "5": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 33,
          column: 15
        }
      },
      "6": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 38,
          column: 3
        }
      },
      "7": {
        start: {
          line: 39,
          column: 0
        },
        end: {
          line: 39,
          column: 37
        }
      },
      "8": {
        start: {
          line: 41,
          column: 0
        },
        end: {
          line: 45,
          column: 8
        }
      },
      "9": {
        start: {
          line: 41,
          column: 58
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "10": {
        start: {
          line: 47,
          column: 0
        },
        end: {
          line: 51,
          column: 8
        }
      },
      "11": {
        start: {
          line: 47,
          column: 64
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "12": {
        start: {
          line: 53,
          column: 0
        },
        end: {
          line: 65,
          column: 3
        }
      },
      "13": {
        start: {
          line: 55,
          column: 50
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "14": {
        start: {
          line: 67,
          column: 0
        },
        end: {
          line: 69,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 3,
            column: 25
          },
          end: {
            line: 3,
            column: 26
          }
        },
        loc: {
          start: {
            line: 3,
            column: 30
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 3
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 4,
            column: 8
          },
          end: {
            line: 4,
            column: 9
          }
        },
        loc: {
          start: {
            line: 4,
            column: 21
          },
          end: {
            line: 23,
            column: 9
          }
        },
        line: 4
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 26,
            column: 24
          },
          end: {
            line: 26,
            column: 25
          }
        },
        loc: {
          start: {
            line: 26,
            column: 29
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 26
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 28,
            column: 17
          },
          end: {
            line: 28,
            column: 18
          }
        },
        loc: {
          start: {
            line: 28,
            column: 26
          },
          end: {
            line: 34,
            column: 9
          }
        },
        line: 28
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 41,
            column: 53
          },
          end: {
            line: 41,
            column: 54
          }
        },
        loc: {
          start: {
            line: 41,
            column: 58
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 41
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 47,
            column: 59
          },
          end: {
            line: 47,
            column: 60
          }
        },
        loc: {
          start: {
            line: 47,
            column: 64
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 47
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 55,
            column: 40
          },
          end: {
            line: 55,
            column: 41
          }
        },
        loc: {
          start: {
            line: 55,
            column: 50
          },
          end: {
            line: 64,
            column: 9
          }
        },
        line: 55
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 21
          },
          end: {
            line: 32,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 21
          },
          end: {
            line: 32,
            column: 30
          }
        }, {
          start: {
            line: 32,
            column: 34
          },
          end: {
            line: 32,
            column: 36
          }
        }],
        line: 32
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/workspaces/prompt-card-system/frontend/src/setupTests.ts"],
      sourcesContent: ["import '@testing-library/jest-dom';\n\n// Mock Next.js router\njest.mock('next/router', () => ({\n  useRouter() {\n    return {\n      route: '/',\n      pathname: '/',\n      query: '',\n      asPath: '/',\n      push: jest.fn(),\n      pop: jest.fn(),\n      reload: jest.fn(),\n      back: jest.fn(),\n      prefetch: jest.fn().mockResolvedValue(undefined),\n      beforePopState: jest.fn(),\n      events: {\n        on: jest.fn(),\n        off: jest.fn(),\n        emit: jest.fn(),\n      },\n      isFallback: false,\n    };\n  },\n}));\n\n// Mock Next.js Image\njest.mock('next/image', () => ({\n  __esModule: true,\n  default: (props: any) => {\n    // eslint-disable-next-line @next/next/no-img-element\n    return React.createElement('img', { ...props, alt: props.alt || '' });\n  },\n}));\n\n// Mock ResizeObserver\nglobal.ResizeObserver = jest.fn().mockImplementation(() => ({\n  observe: jest.fn(),\n  unobserve: jest.fn(),\n  disconnect: jest.fn(),\n}));\n\n// Mock IntersectionObserver\nglobal.IntersectionObserver = jest.fn().mockImplementation(() => ({\n  observe: jest.fn(),\n  unobserve: jest.fn(),\n  disconnect: jest.fn(),\n}));\n\n// Mock window.matchMedia\nObject.defineProperty(window, 'matchMedia', {\n  writable: true,\n  value: jest.fn().mockImplementation(query => ({\n    matches: false,\n    media: query,\n    onchange: null,\n    addListener: jest.fn(), // deprecated\n    removeListener: jest.fn(), // deprecated\n    addEventListener: jest.fn(),\n    removeEventListener: jest.fn(),\n    dispatchEvent: jest.fn(),\n  })),\n});\n\n// Mock console methods in tests\nglobal.console = {\n  ...console,\n  // Uncomment to hide expected warning logs\n  // warn: jest.fn(),\n  // error: jest.fn(),\n};"],
      names: ["jest", "mock", "useRouter", "route", "pathname", "query", "asPath", "push", "fn", "pop", "reload", "back", "prefetch", "mockResolvedValue", "undefined", "beforePopState", "events", "on", "off", "emit", "isFallback", "__esModule", "default", "props", "React", "createElement", "alt", "global", "ResizeObserver", "mockImplementation", "observe", "unobserve", "disconnect", "IntersectionObserver", "Object", "defineProperty", "window", "writable", "value", "matches", "media", "onchange", "addListener", "removeListener", "addEventListener", "removeEventListener", "dispatchEvent", "console"],
      mappings: ";AAEA,sBAAsB;AACtBA,KAAKC,IAAI,CAAC,eAAe,IAAO,CAAA;QAC9BC;YACE,OAAO;gBACLC,OAAO;gBACPC,UAAU;gBACVC,OAAO;gBACPC,QAAQ;gBACRC,MAAMP,KAAKQ,EAAE;gBACbC,KAAKT,KAAKQ,EAAE;gBACZE,QAAQV,KAAKQ,EAAE;gBACfG,MAAMX,KAAKQ,EAAE;gBACbI,UAAUZ,KAAKQ,EAAE,GAAGK,iBAAiB,CAACC;gBACtCC,gBAAgBf,KAAKQ,EAAE;gBACvBQ,QAAQ;oBACNC,IAAIjB,KAAKQ,EAAE;oBACXU,KAAKlB,KAAKQ,EAAE;oBACZW,MAAMnB,KAAKQ,EAAE;gBACf;gBACAY,YAAY;YACd;QACF;IACF,CAAA;AAEA,qBAAqB;AACrBpB,KAAKC,IAAI,CAAC,cAAc,IAAO,CAAA;QAC7BoB,YAAY;QACZC,SAAS,CAACC;YACR,qDAAqD;YACrD,OAAOC,MAAMC,aAAa,CAAC,OAAO;gBAAE,GAAGF,KAAK;gBAAEG,KAAKH,MAAMG,GAAG,IAAI;YAAG;QACrE;IACF,CAAA;;;;QAjCO;AAmCP,sBAAsB;AACtBC,OAAOC,cAAc,GAAG5B,KAAKQ,EAAE,GAAGqB,kBAAkB,CAAC,IAAO,CAAA;QAC1DC,SAAS9B,KAAKQ,EAAE;QAChBuB,WAAW/B,KAAKQ,EAAE;QAClBwB,YAAYhC,KAAKQ,EAAE;IACrB,CAAA;AAEA,4BAA4B;AAC5BmB,OAAOM,oBAAoB,GAAGjC,KAAKQ,EAAE,GAAGqB,kBAAkB,CAAC,IAAO,CAAA;QAChEC,SAAS9B,KAAKQ,EAAE;QAChBuB,WAAW/B,KAAKQ,EAAE;QAClBwB,YAAYhC,KAAKQ,EAAE;IACrB,CAAA;AAEA,yBAAyB;AACzB0B,OAAOC,cAAc,CAACC,QAAQ,cAAc;IAC1CC,UAAU;IACVC,OAAOtC,KAAKQ,EAAE,GAAGqB,kBAAkB,CAACxB,CAAAA,QAAU,CAAA;YAC5CkC,SAAS;YACTC,OAAOnC;YACPoC,UAAU;YACVC,aAAa1C,KAAKQ,EAAE;YACpBmC,gBAAgB3C,KAAKQ,EAAE;YACvBoC,kBAAkB5C,KAAKQ,EAAE;YACzBqC,qBAAqB7C,KAAKQ,EAAE;YAC5BsC,eAAe9C,KAAKQ,EAAE;QACxB,CAAA;AACF;AAEA,gCAAgC;AAChCmB,OAAOoB,OAAO,GAAG;IACf,GAAGA,OAAO;AAIZ"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "28152517e0fb36c2803f3c91d0ec24f9bbbd1ccb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_byev1ls0w = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_byev1ls0w();
cov_byev1ls0w().s[0]++;
jest.mock("next/router", () => {
  /* istanbul ignore next */
  cov_byev1ls0w().f[0]++;
  cov_byev1ls0w().s[1]++;
  return {
    useRouter() {
      /* istanbul ignore next */
      cov_byev1ls0w().f[1]++;
      cov_byev1ls0w().s[2]++;
      return {
        route: "/",
        pathname: "/",
        query: "",
        asPath: "/",
        push: jest.fn(),
        pop: jest.fn(),
        reload: jest.fn(),
        back: jest.fn(),
        prefetch: jest.fn().mockResolvedValue(undefined),
        beforePopState: jest.fn(),
        events: {
          on: jest.fn(),
          off: jest.fn(),
          emit: jest.fn()
        },
        isFallback: false
      };
    }
  };
});
// Mock Next.js Image
/* istanbul ignore next */
cov_byev1ls0w().s[3]++;
jest.mock("next/image", () => {
  /* istanbul ignore next */
  cov_byev1ls0w().f[2]++;
  cov_byev1ls0w().s[4]++;
  return {
    __esModule: true,
    default: props => {
      /* istanbul ignore next */
      cov_byev1ls0w().f[3]++;
      cov_byev1ls0w().s[5]++;
      // eslint-disable-next-line @next/next/no-img-element
      return React.createElement("img", {
        ...props,
        alt:
        /* istanbul ignore next */
        (cov_byev1ls0w().b[0][0]++, props.alt) ||
        /* istanbul ignore next */
        (cov_byev1ls0w().b[0][1]++, "")
      });
    }
  };
});
/* istanbul ignore next */
cov_byev1ls0w().s[6]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_byev1ls0w().s[7]++;
require("@testing-library/jest-dom");
// Mock ResizeObserver
/* istanbul ignore next */
cov_byev1ls0w().s[8]++;
global.ResizeObserver = jest.fn().mockImplementation(() => {
  /* istanbul ignore next */
  cov_byev1ls0w().f[4]++;
  cov_byev1ls0w().s[9]++;
  return {
    observe: jest.fn(),
    unobserve: jest.fn(),
    disconnect: jest.fn()
  };
});
// Mock IntersectionObserver
/* istanbul ignore next */
cov_byev1ls0w().s[10]++;
global.IntersectionObserver = jest.fn().mockImplementation(() => {
  /* istanbul ignore next */
  cov_byev1ls0w().f[5]++;
  cov_byev1ls0w().s[11]++;
  return {
    observe: jest.fn(),
    unobserve: jest.fn(),
    disconnect: jest.fn()
  };
});
// Mock window.matchMedia
/* istanbul ignore next */
cov_byev1ls0w().s[12]++;
Object.defineProperty(window, "matchMedia", {
  writable: true,
  value: jest.fn().mockImplementation(query => {
    /* istanbul ignore next */
    cov_byev1ls0w().f[6]++;
    cov_byev1ls0w().s[13]++;
    return {
      matches: false,
      media: query,
      onchange: null,
      addListener: jest.fn(),
      removeListener: jest.fn(),
      addEventListener: jest.fn(),
      removeEventListener: jest.fn(),
      dispatchEvent: jest.fn()
    };
  })
});
// Mock console methods in tests
/* istanbul ignore next */
cov_byev1ls0w().s[14]++;
global.console = {
  ...console
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,