98062d840236cc1f2f1f0b77cdf738a2
"use client";
"use strict";

/* istanbul ignore next */
function cov_cq6f4iwa1() {
  var path = "/workspaces/prompt-card-system/frontend/src/components/SamplePrompts/SamplePromptGallery.tsx";
  var hash = "5e9ed9efe9329669fd250c90796dfba2f34e12a8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/prompt-card-system/frontend/src/components/SamplePrompts/SamplePromptGallery.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 35
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 46
        }
      },
      "6": {
        start: {
          line: 15,
          column: 40
        },
        end: {
          line: 15,
          column: 95
        }
      },
      "7": {
        start: {
          line: 16,
          column: 16
        },
        end: {
          line: 16,
          column: 39
        }
      },
      "8": {
        start: {
          line: 17,
          column: 24
        },
        end: {
          line: 17,
          column: 55
        }
      },
      "9": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 21,
          column: 6
        }
      },
      "10": {
        start: {
          line: 24,
          column: 19
        },
        end: {
          line: 24,
          column: 47
        }
      },
      "11": {
        start: {
          line: 25,
          column: 34
        },
        end: {
          line: 25,
          column: 58
        }
      },
      "12": {
        start: {
          line: 26,
          column: 30
        },
        end: {
          line: 26,
          column: 56
        }
      },
      "13": {
        start: {
          line: 27,
          column: 34
        },
        end: {
          line: 27,
          column: 60
        }
      },
      "14": {
        start: {
          line: 28,
          column: 44
        },
        end: {
          line: 28,
          column: 71
        }
      },
      "15": {
        start: {
          line: 29,
          column: 30
        },
        end: {
          line: 29,
          column: 56
        }
      },
      "16": {
        start: {
          line: 30,
          column: 52
        },
        end: {
          line: 30,
          column: 79
        }
      },
      "17": {
        start: {
          line: 31,
          column: 40
        },
        end: {
          line: 31,
          column: 64
        }
      },
      "18": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 35,
          column: 11
        }
      },
      "19": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 23
        }
      },
      "20": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 21
        }
      },
      "21": {
        start: {
          line: 36,
          column: 25
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "22": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "23": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 29
        }
      },
      "24": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 27
        }
      },
      "25": {
        start: {
          line: 40,
          column: 24
        },
        end: {
          line: 40,
          column: 143
        }
      },
      "26": {
        start: {
          line: 41,
          column: 29
        },
        end: {
          line: 41,
          column: 45
        }
      },
      "27": {
        start: {
          line: 42,
          column: 27
        },
        end: {
          line: 42,
          column: 48
        }
      },
      "28": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 47,
          column: 13
        }
      },
      "29": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 40
        }
      },
      "30": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 75
        }
      },
      "31": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 70
        }
      },
      "32": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 30
        }
      },
      "33": {
        start: {
          line: 54,
          column: 23
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "34": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "35": {
        start: {
          line: 56,
          column: 29
        },
        end: {
          line: 56,
          column: 69
        }
      },
      "36": {
        start: {
          line: 57,
          column: 27
        },
        end: {
          line: 57,
          column: 48
        }
      },
      "37": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 60,
          column: 13
        }
      },
      "38": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 38
        }
      },
      "39": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 57
        }
      },
      "40": {
        start: {
          line: 65,
          column: 33
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "41": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 38
        }
      },
      "42": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 31
        }
      },
      "43": {
        start: {
          line: 69,
          column: 35
        },
        end: {
          line: 91,
          column: 5
        }
      },
      "44": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "45": {
        start: {
          line: 71,
          column: 29
        },
        end: {
          line: 79,
          column: 14
        }
      },
      "46": {
        start: {
          line: 80,
          column: 27
        },
        end: {
          line: 80,
          column: 48
        }
      },
      "47": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 86,
          column: 13
        }
      },
      "48": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 83,
          column: 63
        }
      },
      "49": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 85,
          column: 80
        }
      },
      "50": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 73
        }
      },
      "51": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 94
        }
      },
      "52": {
        start: {
          line: 92,
          column: 36
        },
        end: {
          line: 117,
          column: 5
        }
      },
      "53": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "54": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 34
        }
      },
      "55": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 27
        }
      },
      "56": {
        start: {
          line: 96,
          column: 29
        },
        end: {
          line: 104,
          column: 14
        }
      },
      "57": {
        start: {
          line: 105,
          column: 27
        },
        end: {
          line: 105,
          column: 48
        }
      },
      "58": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 111,
          column: 13
        }
      },
      "59": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 107,
          column: 50
        }
      },
      "60": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 53
        }
      },
      "61": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 80
        }
      },
      "62": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 75
        }
      },
      "63": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 35
        }
      },
      "64": {
        start: {
          line: 118,
          column: 28
        },
        end: {
          line: 122,
          column: 6
        }
      },
      "65": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 37
        }
      },
      "66": {
        start: {
          line: 119,
          column: 25
        },
        end: {
          line: 119,
          column: 37
        }
      },
      "67": {
        start: {
          line: 120,
          column: 28
        },
        end: {
          line: 120,
          column: 52
        }
      },
      "68": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 190
        }
      },
      "69": {
        start: {
          line: 121,
          column: 149
        },
        end: {
          line: 121,
          column: 188
        }
      },
      "70": {
        start: {
          line: 123,
          column: 23
        },
        end: {
          line: 123,
          column: 55
        }
      },
      "71": {
        start: {
          line: 124,
          column: 26
        },
        end: {
          line: 130,
          column: 5
        }
      },
      "72": {
        start: {
          line: 131,
          column: 4
        },
        end: {
          line: 136,
          column: 5
        }
      },
      "73": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 135,
          column: 11
        }
      },
      "74": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 302,
          column: 7
        }
      },
      "75": {
        start: {
          line: 242,
          column: 93
        },
        end: {
          line: 251,
          column: 44
        }
      },
      "76": {
        start: {
          line: 243,
          column: 49
        },
        end: {
          line: 243,
          column: 79
        }
      },
      "77": {
        start: {
          line: 259,
          column: 47
        },
        end: {
          line: 259,
          column: 76
        }
      },
      "78": {
        start: {
          line: 284,
          column: 70
        },
        end: {
          line: 287,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 18,
            column: 33
          }
        },
        loc: {
          start: {
            line: 18,
            column: 39
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 18
      },
      "2": {
        name: "SamplePromptGallery",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 28
          }
        },
        loc: {
          start: {
            line: 23,
            column: 31
          },
          end: {
            line: 303,
            column: 1
          }
        },
        line: 23
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 32,
            column: 26
          },
          end: {
            line: 32,
            column: 27
          }
        },
        loc: {
          start: {
            line: 32,
            column: 30
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 32
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 36,
            column: 25
          },
          end: {
            line: 36,
            column: 26
          }
        },
        loc: {
          start: {
            line: 36,
            column: 43
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 36
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 54,
            column: 23
          },
          end: {
            line: 54,
            column: 24
          }
        },
        loc: {
          start: {
            line: 54,
            column: 33
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 54
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 65,
            column: 33
          },
          end: {
            line: 65,
            column: 34
          }
        },
        loc: {
          start: {
            line: 65,
            column: 45
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 65
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 69,
            column: 35
          },
          end: {
            line: 69,
            column: 36
          }
        },
        loc: {
          start: {
            line: 69,
            column: 68
          },
          end: {
            line: 91,
            column: 5
          }
        },
        line: 69
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 92,
            column: 36
          },
          end: {
            line: 92,
            column: 37
          }
        },
        loc: {
          start: {
            line: 92,
            column: 46
          },
          end: {
            line: 117,
            column: 5
          }
        },
        line: 92
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 118,
            column: 43
          },
          end: {
            line: 118,
            column: 44
          }
        },
        loc: {
          start: {
            line: 118,
            column: 53
          },
          end: {
            line: 122,
            column: 5
          }
        },
        line: 118
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 121,
            column: 142
          },
          end: {
            line: 121,
            column: 143
          }
        },
        loc: {
          start: {
            line: 121,
            column: 149
          },
          end: {
            line: 121,
            column: 188
          }
        },
        line: 121
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 242,
            column: 56
          },
          end: {
            line: 242,
            column: 57
          }
        },
        loc: {
          start: {
            line: 242,
            column: 93
          },
          end: {
            line: 251,
            column: 44
          }
        },
        line: 242
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 243,
            column: 45
          },
          end: {
            line: 243,
            column: 46
          }
        },
        loc: {
          start: {
            line: 243,
            column: 49
          },
          end: {
            line: 243,
            column: 79
          }
        },
        line: 243
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 259,
            column: 42
          },
          end: {
            line: 259,
            column: 43
          }
        },
        loc: {
          start: {
            line: 259,
            column: 47
          },
          end: {
            line: 259,
            column: 76
          }
        },
        line: 259
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 284,
            column: 46
          },
          end: {
            line: 284,
            column: 47
          }
        },
        loc: {
          start: {
            line: 284,
            column: 70
          },
          end: {
            line: 287,
            column: 36
          }
        },
        line: 284
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 11
          },
          end: {
            line: 21,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 19,
            column: 35
          },
          end: {
            line: 19,
            column: 38
          }
        }, {
          start: {
            line: 19,
            column: 41
          },
          end: {
            line: 21,
            column: 5
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 11
          },
          end: {
            line: 19,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 11
          },
          end: {
            line: 19,
            column: 14
          }
        }, {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 32
          }
        }],
        line: 19
      },
      "2": {
        loc: {
          start: {
            line: 40,
            column: 24
          },
          end: {
            line: 40,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 57
          },
          end: {
            line: 40,
            column: 119
          }
        }, {
          start: {
            line: 40,
            column: 122
          },
          end: {
            line: 40,
            column: 143
          }
        }],
        line: 40
      },
      "3": {
        loc: {
          start: {
            line: 40,
            column: 24
          },
          end: {
            line: 40,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 24
          },
          end: {
            line: 40,
            column: 32
          }
        }, {
          start: {
            line: 40,
            column: 36
          },
          end: {
            line: 40,
            column: 54
          }
        }],
        line: 40
      },
      "4": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 47,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 47,
            column: 13
          }
        }, {
          start: {
            line: 45,
            column: 19
          },
          end: {
            line: 47,
            column: 13
          }
        }],
        line: 43
      },
      "5": {
        loc: {
          start: {
            line: 46,
            column: 25
          },
          end: {
            line: 46,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 25
          },
          end: {
            line: 46,
            column: 37
          }
        }, {
          start: {
            line: 46,
            column: 41
          },
          end: {
            line: 46,
            column: 73
          }
        }],
        line: 46
      },
      "6": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "7": {
        loc: {
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 86,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 86,
            column: 13
          }
        }, {
          start: {
            line: 84,
            column: 19
          },
          end: {
            line: 86,
            column: 13
          }
        }],
        line: 81
      },
      "8": {
        loc: {
          start: {
            line: 85,
            column: 32
          },
          end: {
            line: 85,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 32
          },
          end: {
            line: 85,
            column: 44
          }
        }, {
          start: {
            line: 85,
            column: 48
          },
          end: {
            line: 85,
            column: 78
          }
        }],
        line: 85
      },
      "9": {
        loc: {
          start: {
            line: 89,
            column: 21
          },
          end: {
            line: 89,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 89,
            column: 46
          },
          end: {
            line: 89,
            column: 59
          }
        }, {
          start: {
            line: 89,
            column: 62
          },
          end: {
            line: 89,
            column: 92
          }
        }],
        line: 89
      },
      "10": {
        loc: {
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        }, {
          start: {
            line: 109,
            column: 19
          },
          end: {
            line: 111,
            column: 13
          }
        }],
        line: 106
      },
      "11": {
        loc: {
          start: {
            line: 110,
            column: 25
          },
          end: {
            line: 110,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 25
          },
          end: {
            line: 110,
            column: 37
          }
        }, {
          start: {
            line: 110,
            column: 41
          },
          end: {
            line: 110,
            column: 78
          }
        }],
        line: 110
      },
      "12": {
        loc: {
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 119,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 119,
            column: 37
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "13": {
        loc: {
          start: {
            line: 121,
            column: 15
          },
          end: {
            line: 121,
            column: 189
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 15
          },
          end: {
            line: 121,
            column: 63
          }
        }, {
          start: {
            line: 121,
            column: 67
          },
          end: {
            line: 121,
            column: 121
          }
        }, {
          start: {
            line: 121,
            column: 125
          },
          end: {
            line: 121,
            column: 189
          }
        }],
        line: 121
      },
      "14": {
        loc: {
          start: {
            line: 123,
            column: 23
          },
          end: {
            line: 123,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 23
          },
          end: {
            line: 123,
            column: 49
          }
        }, {
          start: {
            line: 123,
            column: 53
          },
          end: {
            line: 123,
            column: 55
          }
        }],
        line: 123
      },
      "15": {
        loc: {
          start: {
            line: 127,
            column: 19
          },
          end: {
            line: 127,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 19
          },
          end: {
            line: 127,
            column: 38
          }
        }, {
          start: {
            line: 127,
            column: 42
          },
          end: {
            line: 127,
            column: 43
          }
        }],
        line: 127
      },
      "16": {
        loc: {
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 136,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 136,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "17": {
        loc: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 131,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 131,
            column: 15
          }
        }, {
          start: {
            line: 131,
            column: 19
          },
          end: {
            line: 131,
            column: 39
          }
        }],
        line: 131
      },
      "18": {
        loc: {
          start: {
            line: 163,
            column: 42
          },
          end: {
            line: 165,
            column: 57
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 163,
            column: 71
          },
          end: {
            line: 165,
            column: 34
          }
        }, {
          start: {
            line: 165,
            column: 37
          },
          end: {
            line: 165,
            column: 57
          }
        }],
        line: 163
      },
      "19": {
        loc: {
          start: {
            line: 169,
            column: 20
          },
          end: {
            line: 225,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 169,
            column: 20
          },
          end: {
            line: 169,
            column: 25
          }
        }, {
          start: {
            line: 169,
            column: 43
          },
          end: {
            line: 225,
            column: 22
          }
        }],
        line: 169
      },
      "20": {
        loc: {
          start: {
            line: 228,
            column: 12
          },
          end: {
            line: 234,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 228,
            column: 12
          },
          end: {
            line: 228,
            column: 17
          }
        }, {
          start: {
            line: 228,
            column: 35
          },
          end: {
            line: 234,
            column: 14
          }
        }],
        line: 228
      },
      "21": {
        loc: {
          start: {
            line: 244,
            column: 116
          },
          end: {
            line: 244,
            column: 248
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 244,
            column: 148
          },
          end: {
            line: 244,
            column: 188
          }
        }, {
          start: {
            line: 244,
            column: 191
          },
          end: {
            line: 244,
            column: 248
          }
        }],
        line: 244
      },
      "22": {
        loc: {
          start: {
            line: 246,
            column: 40
          },
          end: {
            line: 246,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 246,
            column: 61
          },
          end: {
            line: 246,
            column: 66
          }
        }, {
          start: {
            line: 246,
            column: 69
          },
          end: {
            line: 246,
            column: 77
          }
        }],
        line: 246
      },
      "23": {
        loc: {
          start: {
            line: 266,
            column: 12
          },
          end: {
            line: 288,
            column: 14
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 266,
            column: 36
          },
          end: {
            line: 269,
            column: 14
          }
        }, {
          start: {
            line: 269,
            column: 17
          },
          end: {
            line: 288,
            column: 14
          }
        }],
        line: 266
      },
      "24": {
        loc: {
          start: {
            line: 269,
            column: 17
          },
          end: {
            line: 288,
            column: 14
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 269,
            column: 62
          },
          end: {
            line: 282,
            column: 14
          }
        }, {
          start: {
            line: 282,
            column: 31
          },
          end: {
            line: 288,
            column: 14
          }
        }],
        line: 269
      },
      "25": {
        loc: {
          start: {
            line: 274,
            column: 34
          },
          end: {
            line: 274,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 274,
            column: 47
          },
          end: {
            line: 274,
            column: 86
          }
        }, {
          start: {
            line: 274,
            column: 89
          },
          end: {
            line: 274,
            column: 118
          }
        }],
        line: 274
      },
      "26": {
        loc: {
          start: {
            line: 276,
            column: 20
          },
          end: {
            line: 280,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 276,
            column: 20
          },
          end: {
            line: 276,
            column: 31
          }
        }, {
          start: {
            line: 276,
            column: 49
          },
          end: {
            line: 280,
            column: 22
          }
        }],
        line: 276
      },
      "27": {
        loc: {
          start: {
            line: 279,
            column: 34
          },
          end: {
            line: 279,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 279,
            column: 49
          },
          end: {
            line: 279,
            column: 66
          }
        }, {
          start: {
            line: 279,
            column: 69
          },
          end: {
            line: 279,
            column: 96
          }
        }],
        line: 279
      },
      "28": {
        loc: {
          start: {
            line: 289,
            column: 12
          },
          end: {
            line: 300,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 289,
            column: 12
          },
          end: {
            line: 289,
            column: 38
          }
        }, {
          start: {
            line: 289,
            column: 56
          },
          end: {
            line: 300,
            column: 14
          }
        }],
        line: 289
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/workspaces/prompt-card-system/frontend/src/components/SamplePrompts/SamplePromptGallery.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport SamplePromptCard from './SamplePromptCard';\nimport { Button } from '@/components/ui/Button';\nimport { LoadingSpinner } from '@/components/ui/LoadingSpinner';\n\ninterface SamplePrompt {\n  title: string;\n  description: string;\n  prompt_template: string;\n  variables: string[];\n  category: string;\n  tags: string[];\n}\n\ninterface SamplePromptStats {\n  totalSamples: number;\n  categories: number;\n  categoriesBreakdown: Array<{\n    category: string;\n    count: number;\n  }>;\n  averageVariables: number;\n  totalVariables: number;\n}\n\nexport default function SamplePromptGallery() {\n  const router = useRouter();\n  const [samples, setSamples] = useState<SamplePrompt[]>([]);\n  const [stats, setStats] = useState<SamplePromptStats | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [initializing, setInitializing] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedCategory, setSelectedCategory] = useState<string>('all');\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    fetchSamples();\n    fetchStats();\n  }, []);\n\n  const fetchSamples = async (category?: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const url = category && category !== 'all' \n        ? `/api/sample-prompts?category=${encodeURIComponent(category)}`\n        : '/api/sample-prompts';\n      \n      const response = await fetch(url);\n      const result = await response.json();\n      \n      if (result.success) {\n        setSamples(result.data);\n      } else {\n        setError(result.error || 'Failed to fetch sample prompts');\n      }\n    } catch (err) {\n      setError('Network error: Failed to fetch sample prompts');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchStats = async () => {\n    try {\n      const response = await fetch('/api/sample-prompts/stats');\n      const result = await response.json();\n      \n      if (result.success) {\n        setStats(result.data);\n      }\n    } catch (err) {\n      console.error('Failed to fetch stats:', err);\n    }\n  };\n\n  const handleCategoryChange = (category: string) => {\n    setSelectedCategory(category);\n    fetchSamples(category);\n  };\n\n  const handleCreateFromSample = async (title: string, includeTestCases: boolean) => {\n    try {\n      const response = await fetch(`/api/sample-prompts/${encodeURIComponent(title)}/create`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ includeTestCases })\n      });\n\n      const result = await response.json();\n\n      if (result.success) {\n        // Navigate to the newly created prompt card\n        router.push(`/prompt-cards/${result.data.id}`);\n      } else {\n        throw new Error(result.error || 'Failed to create prompt card');\n      }\n    } catch (error) {\n      console.error('Failed to create prompt from sample:', error);\n      setError(error instanceof Error ? error.message : 'Failed to create prompt card');\n    }\n  };\n\n  const handleInitializeSamples = async () => {\n    try {\n      setInitializing(true);\n      setError(null);\n\n      const response = await fetch('/api/sample-prompts/initialize', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ includeTestCases: true })\n      });\n\n      const result = await response.json();\n\n      if (result.success) {\n        setStats(result.data.promptStats);\n        await fetchSamples(selectedCategory);\n      } else {\n        setError(result.error || 'Failed to initialize sample prompts');\n      }\n    } catch (err) {\n      setError('Network error: Failed to initialize sample prompts');\n    } finally {\n      setInitializing(false);\n    }\n  };\n\n  const filteredSamples = samples.filter(sample => {\n    if (!searchTerm) return true;\n    \n    const searchLower = searchTerm.toLowerCase();\n    return (\n      sample.title.toLowerCase().includes(searchLower) ||\n      sample.description.toLowerCase().includes(searchLower) ||\n      sample.tags.some(tag => tag.toLowerCase().includes(searchLower))\n    );\n  });\n\n  const categories = stats?.categoriesBreakdown || [];\n  const allCategories = [\n    { category: 'all', count: stats?.totalSamples || 0 },\n    ...categories\n  ];\n\n  if (loading && samples.length === 0) {\n    return (\n      <div className=\"flex justify-center items-center min-h-64\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-7xl mx-auto\">\n      {/* Header */}\n      <div className=\"mb-8\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900\">Sample Prompts</h1>\n            <p className=\"text-gray-600 mt-2\">\n              Explore our collection of high-quality prompt templates for various use cases\n            </p>\n          </div>\n          <Button\n            onClick={handleInitializeSamples}\n            disabled={initializing}\n            variant=\"outline\"\n            className=\"min-w-32\"\n          >\n            {initializing ? <LoadingSpinner size=\"sm\" /> : 'Initialize Samples'}\n          </Button>\n        </div>\n\n        {/* Stats */}\n        {stats && (\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n              <div className=\"text-2xl font-bold text-blue-900\">{stats.totalSamples}</div>\n              <div className=\"text-sm text-blue-700\">Total Samples</div>\n            </div>\n            <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\n              <div className=\"text-2xl font-bold text-green-900\">{stats.categories}</div>\n              <div className=\"text-sm text-green-700\">Categories</div>\n            </div>\n            <div className=\"bg-purple-50 border border-purple-200 rounded-lg p-4\">\n              <div className=\"text-2xl font-bold text-purple-900\">{stats.averageVariables}</div>\n              <div className=\"text-sm text-purple-700\">Avg Variables</div>\n            </div>\n            <div className=\"bg-orange-50 border border-orange-200 rounded-lg p-4\">\n              <div className=\"text-2xl font-bold text-orange-900\">{stats.totalVariables}</div>\n              <div className=\"text-sm text-orange-700\">Total Variables</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 rounded-md p-4 mb-6\">\n          <p className=\"text-red-800\">{error}</p>\n        </div>\n      )}\n\n      {/* Filters */}\n      <div className=\"mb-8\">\n        <div className=\"flex flex-col md:flex-row gap-4 items-start md:items-center justify-between\">\n          {/* Category Filter */}\n          <div className=\"flex flex-wrap gap-2\">\n            {allCategories.map(({ category, count }) => (\n              <button\n                key={category}\n                onClick={() => handleCategoryChange(category)}\n                className={`px-3 py-2 text-sm font-medium rounded-md border transition-colors ${\n                  selectedCategory === category\n                    ? 'bg-blue-600 text-white border-blue-600'\n                    : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'\n                }`}\n              >\n                {category === 'all' ? 'All' : category} ({count})\n              </button>\n            ))}\n          </div>\n\n          {/* Search */}\n          <div className=\"w-full md:w-80\">\n            <input\n              type=\"text\"\n              placeholder=\"Search prompts, descriptions, or tags...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Sample Cards */}\n      {loading ? (\n        <div className=\"flex justify-center items-center min-h-32\">\n          <LoadingSpinner />\n        </div>\n      ) : filteredSamples.length === 0 ? (\n        <div className=\"text-center py-12\">\n          <div className=\"text-gray-500 mb-4\">\n            {searchTerm ? 'No samples match your search criteria' : 'No sample prompts available'}\n          </div>\n          {!searchTerm && (\n            <Button\n              onClick={handleInitializeSamples}\n              disabled={initializing}\n            >\n              {initializing ? 'Initializing...' : 'Initialize Sample Prompts'}\n            </Button>\n          )}\n        </div>\n      ) : (\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {filteredSamples.map((sample) => (\n            <SamplePromptCard\n              key={sample.title}\n              prompt={sample}\n              onCreateFromSample={handleCreateFromSample}\n            />\n          ))}\n        </div>\n      )}\n\n      {/* Footer Info */}\n      {filteredSamples.length > 0 && (\n        <div className=\"mt-8 p-4 bg-blue-50 border border-blue-200 rounded-md\">\n          <p className=\"text-blue-800 text-sm\">\n            <strong>Tip:</strong> Each sample prompt comes with pre-configured test cases to help you validate your AI responses. \n            Click \"Create with Tests\" to get started immediately, or \"Create Only\" if you prefer to add your own test cases.\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}"],
      names: ["SamplePromptGallery", "router", "useRouter", "samples", "setSamples", "useState", "stats", "setStats", "loading", "setLoading", "initializing", "setInitializing", "error", "setError", "selectedCategory", "setSelectedCategory", "searchTerm", "setSearchTerm", "useEffect", "fetchSamples", "fetchStats", "category", "url", "encodeURIComponent", "response", "fetch", "result", "json", "success", "data", "err", "console", "handleCategoryChange", "handleCreateFromSample", "title", "includeTestCases", "method", "headers", "body", "JSON", "stringify", "push", "id", "Error", "message", "handleInitializeSamples", "promptStats", "filteredSamples", "filter", "sample", "searchLower", "toLowerCase", "includes", "description", "tags", "some", "tag", "categories", "categoriesBreakdown", "allCategories", "count", "totalSamples", "length", "div", "className", "LoadingSpinner", "h1", "p", "Button", "onClick", "disabled", "variant", "size", "averageVariables", "totalVariables", "map", "button", "input", "type", "placeholder", "value", "onChange", "e", "target", "SamplePromptCard", "prompt", "onCreateFromSample", "strong"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5e9ed9efe9329669fd250c90796dfba2f34e12a8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_cq6f4iwa1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_cq6f4iwa1();
cov_cq6f4iwa1().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_cq6f4iwa1().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_cq6f4iwa1().f[0]++;
    cov_cq6f4iwa1().s[2]++;
    return SamplePromptGallery;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_cq6f4iwa1().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_cq6f4iwa1().s[4]++, require("react"));
const _navigation =
/* istanbul ignore next */
(cov_cq6f4iwa1().s[5]++, require("next/navigation"));
const _SamplePromptCard =
/* istanbul ignore next */
(/*#__PURE__*/cov_cq6f4iwa1().s[6]++, _interop_require_default(require("./SamplePromptCard")));
const _Button =
/* istanbul ignore next */
(cov_cq6f4iwa1().s[7]++, require("../ui/Button"));
const _LoadingSpinner =
/* istanbul ignore next */
(cov_cq6f4iwa1().s[8]++, require("../ui/LoadingSpinner"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_cq6f4iwa1().f[1]++;
  cov_cq6f4iwa1().s[9]++;
  return /* istanbul ignore next */(cov_cq6f4iwa1().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_cq6f4iwa1().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_cq6f4iwa1().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_cq6f4iwa1().b[0][1]++, {
    default: obj
  });
}
function SamplePromptGallery() {
  /* istanbul ignore next */
  cov_cq6f4iwa1().f[2]++;
  const router =
  /* istanbul ignore next */
  (cov_cq6f4iwa1().s[10]++, (0, _navigation.useRouter)());
  const [samples, setSamples] =
  /* istanbul ignore next */
  (cov_cq6f4iwa1().s[11]++, (0, _react.useState)([]));
  const [stats, setStats] =
  /* istanbul ignore next */
  (cov_cq6f4iwa1().s[12]++, (0, _react.useState)(null));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_cq6f4iwa1().s[13]++, (0, _react.useState)(true));
  const [initializing, setInitializing] =
  /* istanbul ignore next */
  (cov_cq6f4iwa1().s[14]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_cq6f4iwa1().s[15]++, (0, _react.useState)(null));
  const [selectedCategory, setSelectedCategory] =
  /* istanbul ignore next */
  (cov_cq6f4iwa1().s[16]++, (0, _react.useState)("all"));
  const [searchTerm, setSearchTerm] =
  /* istanbul ignore next */
  (cov_cq6f4iwa1().s[17]++, (0, _react.useState)(""));
  /* istanbul ignore next */
  cov_cq6f4iwa1().s[18]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_cq6f4iwa1().f[3]++;
    cov_cq6f4iwa1().s[19]++;
    fetchSamples();
    /* istanbul ignore next */
    cov_cq6f4iwa1().s[20]++;
    fetchStats();
  }, []);
  /* istanbul ignore next */
  cov_cq6f4iwa1().s[21]++;
  const fetchSamples = async category => {
    /* istanbul ignore next */
    cov_cq6f4iwa1().f[4]++;
    cov_cq6f4iwa1().s[22]++;
    try {
      /* istanbul ignore next */
      cov_cq6f4iwa1().s[23]++;
      setLoading(true);
      /* istanbul ignore next */
      cov_cq6f4iwa1().s[24]++;
      setError(null);
      const url =
      /* istanbul ignore next */
      (cov_cq6f4iwa1().s[25]++,
      /* istanbul ignore next */
      (cov_cq6f4iwa1().b[3][0]++, category) &&
      /* istanbul ignore next */
      (cov_cq6f4iwa1().b[3][1]++, category !== "all") ?
      /* istanbul ignore next */
      (cov_cq6f4iwa1().b[2][0]++, `/api/sample-prompts?category=${encodeURIComponent(category)}`) :
      /* istanbul ignore next */
      (cov_cq6f4iwa1().b[2][1]++, "/api/sample-prompts"));
      const response =
      /* istanbul ignore next */
      (cov_cq6f4iwa1().s[26]++, await fetch(url));
      const result =
      /* istanbul ignore next */
      (cov_cq6f4iwa1().s[27]++, await response.json());
      /* istanbul ignore next */
      cov_cq6f4iwa1().s[28]++;
      if (result.success) {
        /* istanbul ignore next */
        cov_cq6f4iwa1().b[4][0]++;
        cov_cq6f4iwa1().s[29]++;
        setSamples(result.data);
      } else {
        /* istanbul ignore next */
        cov_cq6f4iwa1().b[4][1]++;
        cov_cq6f4iwa1().s[30]++;
        setError(
        /* istanbul ignore next */
        (cov_cq6f4iwa1().b[5][0]++, result.error) ||
        /* istanbul ignore next */
        (cov_cq6f4iwa1().b[5][1]++, "Failed to fetch sample prompts"));
      }
    } catch (err) {
      /* istanbul ignore next */
      cov_cq6f4iwa1().s[31]++;
      setError("Network error: Failed to fetch sample prompts");
    } finally {
      /* istanbul ignore next */
      cov_cq6f4iwa1().s[32]++;
      setLoading(false);
    }
  };
  /* istanbul ignore next */
  cov_cq6f4iwa1().s[33]++;
  const fetchStats = async () => {
    /* istanbul ignore next */
    cov_cq6f4iwa1().f[5]++;
    cov_cq6f4iwa1().s[34]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_cq6f4iwa1().s[35]++, await fetch("/api/sample-prompts/stats"));
      const result =
      /* istanbul ignore next */
      (cov_cq6f4iwa1().s[36]++, await response.json());
      /* istanbul ignore next */
      cov_cq6f4iwa1().s[37]++;
      if (result.success) {
        /* istanbul ignore next */
        cov_cq6f4iwa1().b[6][0]++;
        cov_cq6f4iwa1().s[38]++;
        setStats(result.data);
      } else
      /* istanbul ignore next */
      {
        cov_cq6f4iwa1().b[6][1]++;
      }
    } catch (err) {
      /* istanbul ignore next */
      cov_cq6f4iwa1().s[39]++;
      console.error("Failed to fetch stats:", err);
    }
  };
  /* istanbul ignore next */
  cov_cq6f4iwa1().s[40]++;
  const handleCategoryChange = category => {
    /* istanbul ignore next */
    cov_cq6f4iwa1().f[6]++;
    cov_cq6f4iwa1().s[41]++;
    setSelectedCategory(category);
    /* istanbul ignore next */
    cov_cq6f4iwa1().s[42]++;
    fetchSamples(category);
  };
  /* istanbul ignore next */
  cov_cq6f4iwa1().s[43]++;
  const handleCreateFromSample = async (title, includeTestCases) => {
    /* istanbul ignore next */
    cov_cq6f4iwa1().f[7]++;
    cov_cq6f4iwa1().s[44]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_cq6f4iwa1().s[45]++, await fetch(`/api/sample-prompts/${encodeURIComponent(title)}/create`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({
          includeTestCases
        })
      }));
      const result =
      /* istanbul ignore next */
      (cov_cq6f4iwa1().s[46]++, await response.json());
      /* istanbul ignore next */
      cov_cq6f4iwa1().s[47]++;
      if (result.success) {
        /* istanbul ignore next */
        cov_cq6f4iwa1().b[7][0]++;
        cov_cq6f4iwa1().s[48]++;
        // Navigate to the newly created prompt card
        router.push(`/prompt-cards/${result.data.id}`);
      } else {
        /* istanbul ignore next */
        cov_cq6f4iwa1().b[7][1]++;
        cov_cq6f4iwa1().s[49]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_cq6f4iwa1().b[8][0]++, result.error) ||
        /* istanbul ignore next */
        (cov_cq6f4iwa1().b[8][1]++, "Failed to create prompt card"));
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_cq6f4iwa1().s[50]++;
      console.error("Failed to create prompt from sample:", error);
      /* istanbul ignore next */
      cov_cq6f4iwa1().s[51]++;
      setError(error instanceof Error ?
      /* istanbul ignore next */
      (cov_cq6f4iwa1().b[9][0]++, error.message) :
      /* istanbul ignore next */
      (cov_cq6f4iwa1().b[9][1]++, "Failed to create prompt card"));
    }
  };
  /* istanbul ignore next */
  cov_cq6f4iwa1().s[52]++;
  const handleInitializeSamples = async () => {
    /* istanbul ignore next */
    cov_cq6f4iwa1().f[8]++;
    cov_cq6f4iwa1().s[53]++;
    try {
      /* istanbul ignore next */
      cov_cq6f4iwa1().s[54]++;
      setInitializing(true);
      /* istanbul ignore next */
      cov_cq6f4iwa1().s[55]++;
      setError(null);
      const response =
      /* istanbul ignore next */
      (cov_cq6f4iwa1().s[56]++, await fetch("/api/sample-prompts/initialize", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({
          includeTestCases: true
        })
      }));
      const result =
      /* istanbul ignore next */
      (cov_cq6f4iwa1().s[57]++, await response.json());
      /* istanbul ignore next */
      cov_cq6f4iwa1().s[58]++;
      if (result.success) {
        /* istanbul ignore next */
        cov_cq6f4iwa1().b[10][0]++;
        cov_cq6f4iwa1().s[59]++;
        setStats(result.data.promptStats);
        /* istanbul ignore next */
        cov_cq6f4iwa1().s[60]++;
        await fetchSamples(selectedCategory);
      } else {
        /* istanbul ignore next */
        cov_cq6f4iwa1().b[10][1]++;
        cov_cq6f4iwa1().s[61]++;
        setError(
        /* istanbul ignore next */
        (cov_cq6f4iwa1().b[11][0]++, result.error) ||
        /* istanbul ignore next */
        (cov_cq6f4iwa1().b[11][1]++, "Failed to initialize sample prompts"));
      }
    } catch (err) {
      /* istanbul ignore next */
      cov_cq6f4iwa1().s[62]++;
      setError("Network error: Failed to initialize sample prompts");
    } finally {
      /* istanbul ignore next */
      cov_cq6f4iwa1().s[63]++;
      setInitializing(false);
    }
  };
  const filteredSamples =
  /* istanbul ignore next */
  (cov_cq6f4iwa1().s[64]++, samples.filter(sample => {
    /* istanbul ignore next */
    cov_cq6f4iwa1().f[9]++;
    cov_cq6f4iwa1().s[65]++;
    if (!searchTerm) {
      /* istanbul ignore next */
      cov_cq6f4iwa1().b[12][0]++;
      cov_cq6f4iwa1().s[66]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_cq6f4iwa1().b[12][1]++;
    }
    const searchLower =
    /* istanbul ignore next */
    (cov_cq6f4iwa1().s[67]++, searchTerm.toLowerCase());
    /* istanbul ignore next */
    cov_cq6f4iwa1().s[68]++;
    return /* istanbul ignore next */(cov_cq6f4iwa1().b[13][0]++, sample.title.toLowerCase().includes(searchLower)) ||
    /* istanbul ignore next */
    (cov_cq6f4iwa1().b[13][1]++, sample.description.toLowerCase().includes(searchLower)) ||
    /* istanbul ignore next */
    (cov_cq6f4iwa1().b[13][2]++, sample.tags.some(tag => {
      /* istanbul ignore next */
      cov_cq6f4iwa1().f[10]++;
      cov_cq6f4iwa1().s[69]++;
      return tag.toLowerCase().includes(searchLower);
    }));
  }));
  const categories =
  /* istanbul ignore next */
  (cov_cq6f4iwa1().s[70]++,
  /* istanbul ignore next */
  (cov_cq6f4iwa1().b[14][0]++, stats?.categoriesBreakdown) ||
  /* istanbul ignore next */
  (cov_cq6f4iwa1().b[14][1]++, []));
  const allCategories =
  /* istanbul ignore next */
  (cov_cq6f4iwa1().s[71]++, [{
    category: "all",
    count:
    /* istanbul ignore next */
    (cov_cq6f4iwa1().b[15][0]++, stats?.totalSamples) ||
    /* istanbul ignore next */
    (cov_cq6f4iwa1().b[15][1]++, 0)
  }, ...categories]);
  /* istanbul ignore next */
  cov_cq6f4iwa1().s[72]++;
  if (
  /* istanbul ignore next */
  (cov_cq6f4iwa1().b[17][0]++, loading) &&
  /* istanbul ignore next */
  (cov_cq6f4iwa1().b[17][1]++, samples.length === 0)) {
    /* istanbul ignore next */
    cov_cq6f4iwa1().b[16][0]++;
    cov_cq6f4iwa1().s[73]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "flex justify-center items-center min-h-64",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_LoadingSpinner.LoadingSpinner, {})
    });
  } else
  /* istanbul ignore next */
  {
    cov_cq6f4iwa1().b[16][1]++;
  }
  cov_cq6f4iwa1().s[74]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "max-w-7xl mx-auto",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "mb-8",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center justify-between mb-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
            className: "text-3xl font-bold text-gray-900",
            children: "Sample Prompts"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "text-gray-600 mt-2",
            children: "Explore our collection of high-quality prompt templates for various use cases"
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
          onClick: handleInitializeSamples,
          disabled: initializing,
          variant: "outline",
          className: "min-w-32",
          children: initializing ?
          /* istanbul ignore next */
          (/*#__PURE__*/cov_cq6f4iwa1().b[18][0]++, (0, _jsxruntime.jsx)(_LoadingSpinner.LoadingSpinner, {
            size: "sm"
          })) :
          /* istanbul ignore next */
          (cov_cq6f4iwa1().b[18][1]++, "Initialize Samples")
        })]
      }),
      /* istanbul ignore next */
      (cov_cq6f4iwa1().b[19][0]++, stats) &&
      /* istanbul ignore next */
      (cov_cq6f4iwa1().b[19][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "grid grid-cols-1 md:grid-cols-4 gap-4 mb-6",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "bg-blue-50 border border-blue-200 rounded-lg p-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-2xl font-bold text-blue-900",
            children: stats.totalSamples
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-sm text-blue-700",
            children: "Total Samples"
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "bg-green-50 border border-green-200 rounded-lg p-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-2xl font-bold text-green-900",
            children: stats.categories
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-sm text-green-700",
            children: "Categories"
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "bg-purple-50 border border-purple-200 rounded-lg p-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-2xl font-bold text-purple-900",
            children: stats.averageVariables
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-sm text-purple-700",
            children: "Avg Variables"
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "bg-orange-50 border border-orange-200 rounded-lg p-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-2xl font-bold text-orange-900",
            children: stats.totalVariables
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-sm text-orange-700",
            children: "Total Variables"
          })]
        })]
      }))]
    }),
    /* istanbul ignore next */
    (cov_cq6f4iwa1().b[20][0]++, error) &&
    /* istanbul ignore next */
    (cov_cq6f4iwa1().b[20][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "bg-red-50 border border-red-200 rounded-md p-4 mb-6",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-red-800",
        children: error
      })
    })), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "mb-8",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex flex-col md:flex-row gap-4 items-start md:items-center justify-between",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "flex flex-wrap gap-2",
          children: allCategories.map(({
            category,
            count
          }) => {
            /* istanbul ignore next */
            cov_cq6f4iwa1().f[11]++;
            cov_cq6f4iwa1().s[75]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)("button", {
              onClick: () => {
                /* istanbul ignore next */
                cov_cq6f4iwa1().f[12]++;
                cov_cq6f4iwa1().s[76]++;
                return handleCategoryChange(category);
              },
              className: `px-3 py-2 text-sm font-medium rounded-md border transition-colors ${selectedCategory === category ?
              /* istanbul ignore next */
              (cov_cq6f4iwa1().b[21][0]++, "bg-blue-600 text-white border-blue-600") :
              /* istanbul ignore next */
              (cov_cq6f4iwa1().b[21][1]++, "bg-white text-gray-700 border-gray-300 hover:bg-gray-50")}`,
              children: [category === "all" ?
              /* istanbul ignore next */
              (cov_cq6f4iwa1().b[22][0]++, "All") :
              /* istanbul ignore next */
              (cov_cq6f4iwa1().b[22][1]++, category), " (", count, ")"]
            }, category);
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "w-full md:w-80",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
            type: "text",
            placeholder: "Search prompts, descriptions, or tags...",
            value: searchTerm,
            onChange: e => {
              /* istanbul ignore next */
              cov_cq6f4iwa1().f[13]++;
              cov_cq6f4iwa1().s[77]++;
              return setSearchTerm(e.target.value);
            },
            className: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
          })
        })]
      })
    }), loading ?
    /* istanbul ignore next */
    (/*#__PURE__*/cov_cq6f4iwa1().b[23][0]++, (0, _jsxruntime.jsx)("div", {
      className: "flex justify-center items-center min-h-32",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_LoadingSpinner.LoadingSpinner, {})
    })) :
    /* istanbul ignore next */
    (cov_cq6f4iwa1().b[23][1]++, filteredSamples.length === 0 ?
    /* istanbul ignore next */
    (/*#__PURE__*/cov_cq6f4iwa1().b[24][0]++, (0, _jsxruntime.jsxs)("div", {
      className: "text-center py-12",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "text-gray-500 mb-4",
        children: searchTerm ?
        /* istanbul ignore next */
        (cov_cq6f4iwa1().b[25][0]++, "No samples match your search criteria") :
        /* istanbul ignore next */
        (cov_cq6f4iwa1().b[25][1]++, "No sample prompts available")
      }),
      /* istanbul ignore next */
      (cov_cq6f4iwa1().b[26][0]++, !searchTerm) &&
      /* istanbul ignore next */
      (cov_cq6f4iwa1().b[26][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
        onClick: handleInitializeSamples,
        disabled: initializing,
        children: initializing ?
        /* istanbul ignore next */
        (cov_cq6f4iwa1().b[27][0]++, "Initializing...") :
        /* istanbul ignore next */
        (cov_cq6f4iwa1().b[27][1]++, "Initialize Sample Prompts")
      }))]
    })) :
    /* istanbul ignore next */
    (/*#__PURE__*/cov_cq6f4iwa1().b[24][1]++, (0, _jsxruntime.jsx)("div", {
      className: "grid grid-cols-1 lg:grid-cols-2 gap-6",
      children: filteredSamples.map(sample => {
        /* istanbul ignore next */
        cov_cq6f4iwa1().f[14]++;
        cov_cq6f4iwa1().s[78]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_SamplePromptCard.default, {
          prompt: sample,
          onCreateFromSample: handleCreateFromSample
        }, sample.title);
      })
    }))),
    /* istanbul ignore next */
    (cov_cq6f4iwa1().b[28][0]++, filteredSamples.length > 0) &&
    /* istanbul ignore next */
    (cov_cq6f4iwa1().b[28][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "mt-8 p-4 bg-blue-50 border border-blue-200 rounded-md",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
        className: "text-blue-800 text-sm",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
          children: "Tip:"
        }), ' Each sample prompt comes with pre-configured test cases to help you validate your AI responses. Click "Create with Tests" to get started immediately, or "Create Only" if you prefer to add your own test cases.']
      })
    }))]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,