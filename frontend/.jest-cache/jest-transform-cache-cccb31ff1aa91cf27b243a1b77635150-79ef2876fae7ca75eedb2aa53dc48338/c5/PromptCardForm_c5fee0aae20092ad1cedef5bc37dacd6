ffc3b3ac047626c4265bab5fb186923b
"use client";
"use strict";

/* istanbul ignore next */
function cov_25cy5zt3dq() {
  var path = "/workspaces/prompt-card-system/frontend/src/components/PromptCard/PromptCardForm.tsx";
  var hash = "1853d960f33ba1cfaa6d284980b3c4807ce0eeb0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/prompt-card-system/frontend/src/components/PromptCard/PromptCardForm.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 30
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 46
        }
      },
      "6": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 39
        }
      },
      "7": {
        start: {
          line: 16,
          column: 24
        },
        end: {
          line: 16,
          column: 55
        }
      },
      "8": {
        start: {
          line: 17,
          column: 38
        },
        end: {
          line: 17,
          column: 101
        }
      },
      "9": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 21,
          column: 6
        }
      },
      "10": {
        start: {
          line: 24,
          column: 19
        },
        end: {
          line: 24,
          column: 47
        }
      },
      "11": {
        start: {
          line: 25,
          column: 34
        },
        end: {
          line: 25,
          column: 61
        }
      },
      "12": {
        start: {
          line: 26,
          column: 30
        },
        end: {
          line: 26,
          column: 56
        }
      },
      "13": {
        start: {
          line: 27,
          column: 36
        },
        end: {
          line: 32,
          column: 6
        }
      },
      "14": {
        start: {
          line: 33,
          column: 38
        },
        end: {
          line: 33,
          column: 62
        }
      },
      "15": {
        start: {
          line: 35,
          column: 29
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "16": {
        start: {
          line: 36,
          column: 24
        },
        end: {
          line: 36,
          column: 62
        }
      },
      "17": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 39,
          column: 10
        }
      },
      "18": {
        start: {
          line: 38,
          column: 44
        },
        end: {
          line: 38,
          column: 75
        }
      },
      "19": {
        start: {
          line: 42,
          column: 33
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "20": {
        start: {
          line: 43,
          column: 26
        },
        end: {
          line: 43,
          column: 52
        }
      },
      "21": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 48,
          column: 16
        }
      },
      "22": {
        start: {
          line: 44,
          column: 29
        },
        end: {
          line: 48,
          column: 13
        }
      },
      "23": {
        start: {
          line: 50,
          column: 25
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "24": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 27
        }
      },
      "25": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "26": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 63
        }
      },
      "27": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 19
        }
      },
      "28": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "29": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 29
        }
      },
      "30": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 27
        }
      },
      "31": {
        start: {
          line: 59,
          column: 24
        },
        end: {
          line: 59,
          column: 84
        }
      },
      "32": {
        start: {
          line: 60,
          column: 27
        },
        end: {
          line: 60,
          column: 50
        }
      },
      "33": {
        start: {
          line: 61,
          column: 29
        },
        end: {
          line: 67,
          column: 14
        }
      },
      "34": {
        start: {
          line: 68,
          column: 27
        },
        end: {
          line: 68,
          column: 48
        }
      },
      "35": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 73,
          column: 13
        }
      },
      "36": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 45
        }
      },
      "37": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 72,
          column: 71
        }
      },
      "38": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 66
        }
      },
      "39": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 30
        }
      },
      "40": {
        start: {
          line: 80,
          column: 25
        },
        end: {
          line: 82,
          column: 5
        }
      },
      "41": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 37
        }
      },
      "42": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 123,
          column: 7
        }
      },
      "43": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "44": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 91,
          column: 15
        }
      },
      "45": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 55
        }
      },
      "46": {
        start: {
          line: 93,
          column: 15
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "47": {
        start: {
          line: 95,
          column: 30
        },
        end: {
          line: 117,
          column: 13
        }
      },
      "48": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 116,
          column: 17
        }
      },
      "49": {
        start: {
          line: 97,
          column: 20
        },
        end: {
          line: 97,
          column: 37
        }
      },
      "50": {
        start: {
          line: 98,
          column: 37
        },
        end: {
          line: 98,
          column: 79
        }
      },
      "51": {
        start: {
          line: 99,
          column: 35
        },
        end: {
          line: 99,
          column: 56
        }
      },
      "52": {
        start: {
          line: 100,
          column: 20
        },
        end: {
          line: 111,
          column: 21
        }
      },
      "53": {
        start: {
          line: 101,
          column: 37
        },
        end: {
          line: 101,
          column: 48
        }
      },
      "54": {
        start: {
          line: 102,
          column: 24
        },
        end: {
          line: 107,
          column: 27
        }
      },
      "55": {
        start: {
          line: 108,
          column: 24
        },
        end: {
          line: 108,
          column: 60
        }
      },
      "56": {
        start: {
          line: 110,
          column: 24
        },
        end: {
          line: 110,
          column: 79
        }
      },
      "57": {
        start: {
          line: 113,
          column: 20
        },
        end: {
          line: 113,
          column: 74
        }
      },
      "58": {
        start: {
          line: 115,
          column: 20
        },
        end: {
          line: 115,
          column: 38
        }
      },
      "59": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 24
        }
      },
      "60": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "61": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 128,
          column: 11
        }
      },
      "62": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 337,
          column: 7
        }
      },
      "63": {
        start: {
          line: 178,
          column: 63
        },
        end: {
          line: 181,
          column: 59
        }
      },
      "64": {
        start: {
          line: 178,
          column: 84
        },
        end: {
          line: 181,
          column: 57
        }
      },
      "65": {
        start: {
          line: 198,
          column: 63
        },
        end: {
          line: 201,
          column: 59
        }
      },
      "66": {
        start: {
          line: 198,
          column: 84
        },
        end: {
          line: 201,
          column: 57
        }
      },
      "67": {
        start: {
          line: 243,
          column: 63
        },
        end: {
          line: 243,
          column: 99
        }
      },
      "68": {
        start: {
          line: 259,
          column: 107
        },
        end: {
          line: 262,
          column: 64
        }
      },
      "69": {
        start: {
          line: 291,
          column: 45
        },
        end: {
          line: 291,
          column: 88
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 18,
            column: 33
          }
        },
        loc: {
          start: {
            line: 18,
            column: 39
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 18
      },
      "2": {
        name: "PromptCardForm",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 23
          }
        },
        loc: {
          start: {
            line: 23,
            column: 49
          },
          end: {
            line: 338,
            column: 1
          }
        },
        line: 23
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 35,
            column: 29
          },
          end: {
            line: 35,
            column: 30
          }
        },
        loc: {
          start: {
            line: 35,
            column: 41
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 35
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 38,
            column: 35
          },
          end: {
            line: 38,
            column: 36
          }
        },
        loc: {
          start: {
            line: 38,
            column: 44
          },
          end: {
            line: 38,
            column: 75
          }
        },
        line: 38
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 42,
            column: 33
          },
          end: {
            line: 42,
            column: 34
          }
        },
        loc: {
          start: {
            line: 42,
            column: 45
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 42
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 44,
            column: 20
          },
          end: {
            line: 44,
            column: 21
          }
        },
        loc: {
          start: {
            line: 44,
            column: 29
          },
          end: {
            line: 48,
            column: 13
          }
        },
        line: 44
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 50,
            column: 25
          },
          end: {
            line: 50,
            column: 26
          }
        },
        loc: {
          start: {
            line: 50,
            column: 36
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 50
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 80,
            column: 25
          },
          end: {
            line: 80,
            column: 26
          }
        },
        loc: {
          start: {
            line: 80,
            column: 29
          },
          end: {
            line: 82,
            column: 5
          }
        },
        line: 80
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 84,
            column: 26
          },
          end: {
            line: 84,
            column: 27
          }
        },
        loc: {
          start: {
            line: 84,
            column: 30
          },
          end: {
            line: 120,
            column: 5
          }
        },
        line: 84
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 95,
            column: 30
          },
          end: {
            line: 95,
            column: 31
          }
        },
        loc: {
          start: {
            line: 95,
            column: 40
          },
          end: {
            line: 117,
            column: 13
          }
        },
        line: 95
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 178,
            column: 58
          },
          end: {
            line: 178,
            column: 59
          }
        },
        loc: {
          start: {
            line: 178,
            column: 63
          },
          end: {
            line: 181,
            column: 59
          }
        },
        line: 178
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 178,
            column: 75
          },
          end: {
            line: 178,
            column: 76
          }
        },
        loc: {
          start: {
            line: 178,
            column: 84
          },
          end: {
            line: 181,
            column: 57
          }
        },
        line: 178
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 198,
            column: 58
          },
          end: {
            line: 198,
            column: 59
          }
        },
        loc: {
          start: {
            line: 198,
            column: 63
          },
          end: {
            line: 201,
            column: 59
          }
        },
        line: 198
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 198,
            column: 75
          },
          end: {
            line: 198,
            column: 76
          }
        },
        loc: {
          start: {
            line: 198,
            column: 84
          },
          end: {
            line: 201,
            column: 57
          }
        },
        line: 198
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 243,
            column: 58
          },
          end: {
            line: 243,
            column: 59
          }
        },
        loc: {
          start: {
            line: 243,
            column: 63
          },
          end: {
            line: 243,
            column: 99
          }
        },
        line: 243
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 259,
            column: 81
          },
          end: {
            line: 259,
            column: 82
          }
        },
        loc: {
          start: {
            line: 259,
            column: 107
          },
          end: {
            line: 262,
            column: 64
          }
        },
        line: 259
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 291,
            column: 41
          },
          end: {
            line: 291,
            column: 42
          }
        },
        loc: {
          start: {
            line: 291,
            column: 45
          },
          end: {
            line: 291,
            column: 88
          }
        },
        line: 291
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 11
          },
          end: {
            line: 21,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 19,
            column: 35
          },
          end: {
            line: 19,
            column: 38
          }
        }, {
          start: {
            line: 19,
            column: 41
          },
          end: {
            line: 21,
            column: 5
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 11
          },
          end: {
            line: 19,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 11
          },
          end: {
            line: 19,
            column: 14
          }
        }, {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 32
          }
        }],
        line: 19
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 36,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 36,
            column: 56
          }
        }, {
          start: {
            line: 36,
            column: 60
          },
          end: {
            line: 36,
            column: 62
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "4": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 52,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 52,
            column: 34
          }
        }, {
          start: {
            line: 52,
            column: 38
          },
          end: {
            line: 52,
            column: 70
          }
        }],
        line: 52
      },
      "5": {
        loc: {
          start: {
            line: 59,
            column: 24
          },
          end: {
            line: 59,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 59,
            column: 33
          },
          end: {
            line: 59,
            column: 62
          }
        }, {
          start: {
            line: 59,
            column: 65
          },
          end: {
            line: 59,
            column: 84
          }
        }],
        line: 59
      },
      "6": {
        loc: {
          start: {
            line: 60,
            column: 27
          },
          end: {
            line: 60,
            column: 50
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 60,
            column: 36
          },
          end: {
            line: 60,
            column: 41
          }
        }, {
          start: {
            line: 60,
            column: 44
          },
          end: {
            line: 60,
            column: 50
          }
        }],
        line: 60
      },
      "7": {
        loc: {
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 73,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 73,
            column: 13
          }
        }, {
          start: {
            line: 71,
            column: 19
          },
          end: {
            line: 73,
            column: 13
          }
        }],
        line: 69
      },
      "8": {
        loc: {
          start: {
            line: 72,
            column: 25
          },
          end: {
            line: 72,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 25
          },
          end: {
            line: 72,
            column: 37
          }
        }, {
          start: {
            line: 72,
            column: 41
          },
          end: {
            line: 72,
            column: 69
          }
        }],
        line: 72
      },
      "9": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        }, {
          start: {
            line: 93,
            column: 15
          },
          end: {
            line: 119,
            column: 9
          }
        }],
        line: 85
      },
      "10": {
        loc: {
          start: {
            line: 88,
            column: 29
          },
          end: {
            line: 88,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 29
          },
          end: {
            line: 88,
            column: 52
          }
        }, {
          start: {
            line: 88,
            column: 56
          },
          end: {
            line: 88,
            column: 58
          }
        }],
        line: 88
      },
      "11": {
        loc: {
          start: {
            line: 90,
            column: 27
          },
          end: {
            line: 90,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 27
          },
          end: {
            line: 90,
            column: 48
          }
        }, {
          start: {
            line: 90,
            column: 52
          },
          end: {
            line: 90,
            column: 54
          }
        }],
        line: 90
      },
      "12": {
        loc: {
          start: {
            line: 92,
            column: 25
          },
          end: {
            line: 92,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 25
          },
          end: {
            line: 92,
            column: 47
          }
        }, {
          start: {
            line: 92,
            column: 51
          },
          end: {
            line: 92,
            column: 53
          }
        }],
        line: 92
      },
      "13": {
        loc: {
          start: {
            line: 93,
            column: 15
          },
          end: {
            line: 119,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 15
          },
          end: {
            line: 119,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "14": {
        loc: {
          start: {
            line: 100,
            column: 20
          },
          end: {
            line: 111,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 20
          },
          end: {
            line: 111,
            column: 21
          }
        }, {
          start: {
            line: 109,
            column: 27
          },
          end: {
            line: 111,
            column: 21
          }
        }],
        line: 100
      },
      "15": {
        loc: {
          start: {
            line: 104,
            column: 41
          },
          end: {
            line: 104,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 41
          },
          end: {
            line: 104,
            column: 57
          }
        }, {
          start: {
            line: 104,
            column: 61
          },
          end: {
            line: 104,
            column: 63
          }
        }],
        line: 104
      },
      "16": {
        loc: {
          start: {
            line: 106,
            column: 39
          },
          end: {
            line: 106,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 39
          },
          end: {
            line: 106,
            column: 53
          }
        }, {
          start: {
            line: 106,
            column: 57
          },
          end: {
            line: 106,
            column: 59
          }
        }],
        line: 106
      },
      "17": {
        loc: {
          start: {
            line: 108,
            column: 37
          },
          end: {
            line: 108,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 37
          },
          end: {
            line: 108,
            column: 52
          }
        }, {
          start: {
            line: 108,
            column: 56
          },
          end: {
            line: 108,
            column: 58
          }
        }],
        line: 108
      },
      "18": {
        loc: {
          start: {
            line: 110,
            column: 33
          },
          end: {
            line: 110,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 33
          },
          end: {
            line: 110,
            column: 45
          }
        }, {
          start: {
            line: 110,
            column: 49
          },
          end: {
            line: 110,
            column: 77
          }
        }],
        line: 110
      },
      "19": {
        loc: {
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "20": {
        loc: {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 124,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 124,
            column: 15
          }
        }, {
          start: {
            line: 124,
            column: 19
          },
          end: {
            line: 124,
            column: 34
          }
        }],
        line: 124
      },
      "21": {
        loc: {
          start: {
            line: 138,
            column: 34
          },
          end: {
            line: 138,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 138,
            column: 43
          },
          end: {
            line: 138,
            column: 61
          }
        }, {
          start: {
            line: 138,
            column: 64
          },
          end: {
            line: 138,
            column: 88
          }
        }],
        line: 138
      },
      "22": {
        loc: {
          start: {
            line: 142,
            column: 34
          },
          end: {
            line: 142,
            column: 136
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 142,
            column: 43
          },
          end: {
            line: 142,
            column: 87
          }
        }, {
          start: {
            line: 142,
            column: 90
          },
          end: {
            line: 142,
            column: 136
          }
        }],
        line: 142
      },
      "23": {
        loc: {
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 152,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 146,
            column: 17
          }
        }, {
          start: {
            line: 146,
            column: 35
          },
          end: {
            line: 152,
            column: 14
          }
        }],
        line: 146
      },
      "24": {
        loc: {
          start: {
            line: 251,
            column: 36
          },
          end: {
            line: 265,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 251,
            column: 36
          },
          end: {
            line: 251,
            column: 65
          }
        }, {
          start: {
            line: 251,
            column: 83
          },
          end: {
            line: 265,
            column: 38
          }
        }],
        line: 251
      },
      "25": {
        loc: {
          start: {
            line: 270,
            column: 20
          },
          end: {
            line: 284,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 270,
            column: 20
          },
          end: {
            line: 270,
            column: 26
          }
        }, {
          start: {
            line: 270,
            column: 44
          },
          end: {
            line: 284,
            column: 22
          }
        }],
        line: 270
      },
      "26": {
        loc: {
          start: {
            line: 288,
            column: 28
          },
          end: {
            line: 299,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 288,
            column: 28
          },
          end: {
            line: 288,
            column: 34
          }
        }, {
          start: {
            line: 288,
            column: 38
          },
          end: {
            line: 288,
            column: 58
          }
        }, {
          start: {
            line: 288,
            column: 76
          },
          end: {
            line: 299,
            column: 30
          }
        }],
        line: 288
      },
      "27": {
        loc: {
          start: {
            line: 314,
            column: 50
          },
          end: {
            line: 316,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 314,
            column: 74
          },
          end: {
            line: 316,
            column: 42
          }
        }, {
          start: {
            line: 316,
            column: 45
          },
          end: {
            line: 316,
            column: 83
          }
        }],
        line: 314
      },
      "28": {
        loc: {
          start: {
            line: 316,
            column: 45
          },
          end: {
            line: 316,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 316,
            column: 54
          },
          end: {
            line: 316,
            column: 67
          }
        }, {
          start: {
            line: 316,
            column: 70
          },
          end: {
            line: 316,
            column: 83
          }
        }],
        line: 316
      },
      "29": {
        loc: {
          start: {
            line: 324,
            column: 12
          },
          end: {
            line: 335,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 324,
            column: 12
          },
          end: {
            line: 324,
            column: 19
          }
        }, {
          start: {
            line: 324,
            column: 37
          },
          end: {
            line: 335,
            column: 14
          }
        }],
        line: 324
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/workspaces/prompt-card-system/frontend/src/components/PromptCard/PromptCardForm.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { PromptCard, CreatePromptCardRequest, TestCase } from '@/types';\nimport { Button } from '@/components/ui/Button';\nimport { LoadingSpinner } from '@/components/ui/LoadingSpinner';\nimport TestCaseEditor from '@/components/TestCase/TestCaseEditor';\n\ninterface PromptCardFormProps {\n  cardId?: number;\n  initialData?: PromptCard;\n}\n\nexport default function PromptCardForm({ cardId, initialData }: PromptCardFormProps) {\n  const router = useRouter();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [formData, setFormData] = useState<CreatePromptCardRequest>({\n    title: '',\n    description: '',\n    prompt_template: '',\n    variables: []\n  });\n  const [testCases, setTestCases] = useState<TestCase[]>([]);\n\n  // Extract variables from prompt template\n  const extractVariables = (template: string): string[] => {\n    const matches = template.match(/\\{\\{(\\w+)\\}\\}/g) || [];\n    return [...new Set(matches.map(match => match.replace(/\\{\\{|\\}\\}/g, '')))];\n  };\n\n  // Update variables when prompt template changes\n  const handleTemplateChange = (template: string) => {\n    const variables = extractVariables(template);\n    setFormData(prev => ({\n      ...prev,\n      prompt_template: template,\n      variables\n    }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!formData.title.trim() || !formData.prompt_template.trim()) {\n      setError('Title and prompt template are required');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      const url = cardId ? `/api/prompt-cards/${cardId}` : '/api/prompt-cards';\n      const method = cardId ? 'PUT' : 'POST';\n\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n\n      const result = await response.json();\n\n      if (result.success) {\n        router.push('/prompt-cards');\n      } else {\n        setError(result.error || 'Failed to save prompt card');\n      }\n    } catch (err) {\n      setError('Network error: Failed to save prompt card');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCancel = () => {\n    router.push('/prompt-cards');\n  };\n\n  // Load existing data if editing\n  useEffect(() => {\n    if (initialData) {\n      setFormData({\n        title: initialData.title,\n        description: initialData.description || '',\n        prompt_template: initialData.prompt_template,\n        variables: initialData.variables || []\n      });\n      setTestCases(initialData.test_cases || []);\n    } else if (cardId) {\n      // Fetch card data\n      const fetchCard = async () => {\n        try {\n          setLoading(true);\n          const response = await fetch(`/api/prompt-cards/${cardId}`);\n          const result = await response.json();\n\n          if (result.success) {\n            const card = result.data;\n            setFormData({\n              title: card.title,\n              description: card.description || '',\n              prompt_template: card.prompt_template,\n              variables: card.variables || []\n            });\n            setTestCases(card.test_cases || []);\n          } else {\n            setError(result.error || 'Failed to load prompt card');\n          }\n        } catch (err) {\n          setError('Network error: Failed to load prompt card');\n        } finally {\n          setLoading(false);\n        }\n      };\n\n      fetchCard();\n    }\n  }, [cardId, initialData]);\n\n  if (loading && !formData.title) {\n    return (\n      <div className=\"flex justify-center items-center min-h-64\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-4xl mx-auto\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900\">\n          {cardId ? 'Edit Prompt Card' : 'Create New Prompt Card'}\n        </h1>\n        <p className=\"text-gray-600 mt-2\">\n          {cardId ? 'Update your prompt template and test cases' : 'Create a new prompt template with test cases'}\n        </p>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 rounded-md p-4 mb-6\">\n          <p className=\"text-red-800\">{error}</p>\n        </div>\n      )}\n\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\n        {/* Basic Information */}\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Basic Information</h2>\n          \n          <div className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"title\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Title *\n              </label>\n              <input\n                type=\"text\"\n                id=\"title\"\n                value={formData.title}\n                onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"Enter a descriptive title for your prompt\"\n                required\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Description\n              </label>\n              <textarea\n                id=\"description\"\n                value={formData.description}\n                onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n                rows={3}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"Describe what this prompt does and when to use it\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Prompt Template */}\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Prompt Template</h2>\n          \n          <div className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"template\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Template *\n              </label>\n              <p className=\"text-sm text-gray-500 mb-2\">\n                Use <code className=\"bg-gray-100 px-1 rounded\">{'{{variable_name}}'}</code> for variables that will be replaced during testing.\n              </p>\n              <textarea\n                id=\"template\"\n                value={formData.prompt_template}\n                onChange={(e) => handleTemplateChange(e.target.value)}\n                rows={6}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 font-mono text-sm\"\n                placeholder=\"Enter your prompt template here. Use {{variable_name}} for dynamic content.\"\n                required\n              />\n            </div>\n\n            {formData.variables.length > 0 && (\n              <div>\n                <h3 className=\"text-sm font-medium text-gray-700 mb-2\">Detected Variables:</h3>\n                <div className=\"flex flex-wrap gap-2\">\n                  {formData.variables.map((variable) => (\n                    <span \n                      key={variable}\n                      className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\"\n                    >\n                      {variable}\n                    </span>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Test Cases */}\n        {cardId && (\n          <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n            <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Test Cases</h2>\n            <TestCaseEditor \n              promptCardId={cardId}\n              testCases={testCases}\n              variables={formData.variables}\n              onTestCasesChange={setTestCases}\n            />\n          </div>\n        )}\n\n        {/* Form Actions */}\n        <div className=\"flex justify-between items-center pt-6 border-t border-gray-200\">\n          {/* Test Runner Button (only for existing cards with test cases) */}\n          {cardId && testCases.length > 0 && (\n            <Button \n              type=\"button\" \n              variant=\"outline\" \n              onClick={() => router.push(`/prompt-cards/${cardId}/test`)}\n              disabled={loading}\n              className=\"text-blue-600 border-blue-200 hover:bg-blue-50\"\n            >\n              Run Tests ({testCases.length})\n            </Button>\n          )}\n          \n          {/* Main Form Actions */}\n          <div className=\"flex space-x-4 ml-auto\">\n            <Button \n              type=\"button\" \n              variant=\"outline\" \n              onClick={handleCancel}\n              disabled={loading}\n            >\n              Cancel\n            </Button>\n            <Button \n              type=\"submit\" \n              disabled={loading}\n              className=\"min-w-24\"\n            >\n              {loading ? <LoadingSpinner size=\"sm\" /> : (cardId ? 'Update Card' : 'Create Card')}\n            </Button>\n          </div>\n        </div>\n      </form>\n\n      {!cardId && (\n        <div className=\"mt-6 p-4 bg-blue-50 border border-blue-200 rounded-md\">\n          <p className=\"text-blue-800 text-sm\">\n            <strong>Tip:</strong> After creating the prompt card, you'll be able to add test cases to validate your prompt's behavior.\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}"],
      names: ["PromptCardForm", "cardId", "initialData", "router", "useRouter", "loading", "setLoading", "useState", "error", "setError", "formData", "setFormData", "title", "description", "prompt_template", "variables", "testCases", "setTestCases", "extractVariables", "template", "matches", "match", "Set", "map", "replace", "handleTemplateChange", "prev", "handleSubmit", "e", "preventDefault", "trim", "url", "method", "response", "fetch", "headers", "body", "JSON", "stringify", "result", "json", "success", "push", "err", "handleCancel", "useEffect", "test_cases", "fetchCard", "card", "data", "div", "className", "LoadingSpinner", "h1", "p", "form", "onSubmit", "h2", "label", "htmlFor", "input", "type", "id", "value", "onChange", "target", "placeholder", "required", "textarea", "rows", "code", "length", "h3", "variable", "span", "TestCaseEditor", "promptCardId", "onTestCasesChange", "Button", "variant", "onClick", "disabled", "size", "strong"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1853d960f33ba1cfaa6d284980b3c4807ce0eeb0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_25cy5zt3dq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_25cy5zt3dq();
cov_25cy5zt3dq().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_25cy5zt3dq().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_25cy5zt3dq().f[0]++;
    cov_25cy5zt3dq().s[2]++;
    return PromptCardForm;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_25cy5zt3dq().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_25cy5zt3dq().s[4]++, require("react"));
const _navigation =
/* istanbul ignore next */
(cov_25cy5zt3dq().s[5]++, require("next/navigation"));
const _Button =
/* istanbul ignore next */
(cov_25cy5zt3dq().s[6]++, require("../ui/Button"));
const _LoadingSpinner =
/* istanbul ignore next */
(cov_25cy5zt3dq().s[7]++, require("../ui/LoadingSpinner"));
const _TestCaseEditor =
/* istanbul ignore next */
(/*#__PURE__*/cov_25cy5zt3dq().s[8]++, _interop_require_default(require("../TestCase/TestCaseEditor")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_25cy5zt3dq().f[1]++;
  cov_25cy5zt3dq().s[9]++;
  return /* istanbul ignore next */(cov_25cy5zt3dq().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_25cy5zt3dq().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_25cy5zt3dq().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_25cy5zt3dq().b[0][1]++, {
    default: obj
  });
}
function PromptCardForm({
  cardId,
  initialData
}) {
  /* istanbul ignore next */
  cov_25cy5zt3dq().f[2]++;
  const router =
  /* istanbul ignore next */
  (cov_25cy5zt3dq().s[10]++, (0, _navigation.useRouter)());
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_25cy5zt3dq().s[11]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_25cy5zt3dq().s[12]++, (0, _react.useState)(null));
  const [formData, setFormData] =
  /* istanbul ignore next */
  (cov_25cy5zt3dq().s[13]++, (0, _react.useState)({
    title: "",
    description: "",
    prompt_template: "",
    variables: []
  }));
  const [testCases, setTestCases] =
  /* istanbul ignore next */
  (cov_25cy5zt3dq().s[14]++, (0, _react.useState)([]));
  // Extract variables from prompt template
  /* istanbul ignore next */
  cov_25cy5zt3dq().s[15]++;
  const extractVariables = template => {
    /* istanbul ignore next */
    cov_25cy5zt3dq().f[3]++;
    const matches =
    /* istanbul ignore next */
    (cov_25cy5zt3dq().s[16]++,
    /* istanbul ignore next */
    (cov_25cy5zt3dq().b[2][0]++, template.match(/\{\{(\w+)\}\}/g)) ||
    /* istanbul ignore next */
    (cov_25cy5zt3dq().b[2][1]++, []));
    /* istanbul ignore next */
    cov_25cy5zt3dq().s[17]++;
    return [...new Set(matches.map(match => {
      /* istanbul ignore next */
      cov_25cy5zt3dq().f[4]++;
      cov_25cy5zt3dq().s[18]++;
      return match.replace(/\{\{|\}\}/g, "");
    }))];
  };
  // Update variables when prompt template changes
  /* istanbul ignore next */
  cov_25cy5zt3dq().s[19]++;
  const handleTemplateChange = template => {
    /* istanbul ignore next */
    cov_25cy5zt3dq().f[5]++;
    const variables =
    /* istanbul ignore next */
    (cov_25cy5zt3dq().s[20]++, extractVariables(template));
    /* istanbul ignore next */
    cov_25cy5zt3dq().s[21]++;
    setFormData(prev => {
      /* istanbul ignore next */
      cov_25cy5zt3dq().f[6]++;
      cov_25cy5zt3dq().s[22]++;
      return {
        ...prev,
        prompt_template: template,
        variables
      };
    });
  };
  /* istanbul ignore next */
  cov_25cy5zt3dq().s[23]++;
  const handleSubmit = async e => {
    /* istanbul ignore next */
    cov_25cy5zt3dq().f[7]++;
    cov_25cy5zt3dq().s[24]++;
    e.preventDefault();
    /* istanbul ignore next */
    cov_25cy5zt3dq().s[25]++;
    if (
    /* istanbul ignore next */
    (cov_25cy5zt3dq().b[4][0]++, !formData.title.trim()) ||
    /* istanbul ignore next */
    (cov_25cy5zt3dq().b[4][1]++, !formData.prompt_template.trim())) {
      /* istanbul ignore next */
      cov_25cy5zt3dq().b[3][0]++;
      cov_25cy5zt3dq().s[26]++;
      setError("Title and prompt template are required");
      /* istanbul ignore next */
      cov_25cy5zt3dq().s[27]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_25cy5zt3dq().b[3][1]++;
    }
    cov_25cy5zt3dq().s[28]++;
    try {
      /* istanbul ignore next */
      cov_25cy5zt3dq().s[29]++;
      setLoading(true);
      /* istanbul ignore next */
      cov_25cy5zt3dq().s[30]++;
      setError(null);
      const url =
      /* istanbul ignore next */
      (cov_25cy5zt3dq().s[31]++, cardId ?
      /* istanbul ignore next */
      (cov_25cy5zt3dq().b[5][0]++, `/api/prompt-cards/${cardId}`) :
      /* istanbul ignore next */
      (cov_25cy5zt3dq().b[5][1]++, "/api/prompt-cards"));
      const method =
      /* istanbul ignore next */
      (cov_25cy5zt3dq().s[32]++, cardId ?
      /* istanbul ignore next */
      (cov_25cy5zt3dq().b[6][0]++, "PUT") :
      /* istanbul ignore next */
      (cov_25cy5zt3dq().b[6][1]++, "POST"));
      const response =
      /* istanbul ignore next */
      (cov_25cy5zt3dq().s[33]++, await fetch(url, {
        method,
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify(formData)
      }));
      const result =
      /* istanbul ignore next */
      (cov_25cy5zt3dq().s[34]++, await response.json());
      /* istanbul ignore next */
      cov_25cy5zt3dq().s[35]++;
      if (result.success) {
        /* istanbul ignore next */
        cov_25cy5zt3dq().b[7][0]++;
        cov_25cy5zt3dq().s[36]++;
        router.push("/prompt-cards");
      } else {
        /* istanbul ignore next */
        cov_25cy5zt3dq().b[7][1]++;
        cov_25cy5zt3dq().s[37]++;
        setError(
        /* istanbul ignore next */
        (cov_25cy5zt3dq().b[8][0]++, result.error) ||
        /* istanbul ignore next */
        (cov_25cy5zt3dq().b[8][1]++, "Failed to save prompt card"));
      }
    } catch (err) {
      /* istanbul ignore next */
      cov_25cy5zt3dq().s[38]++;
      setError("Network error: Failed to save prompt card");
    } finally {
      /* istanbul ignore next */
      cov_25cy5zt3dq().s[39]++;
      setLoading(false);
    }
  };
  /* istanbul ignore next */
  cov_25cy5zt3dq().s[40]++;
  const handleCancel = () => {
    /* istanbul ignore next */
    cov_25cy5zt3dq().f[8]++;
    cov_25cy5zt3dq().s[41]++;
    router.push("/prompt-cards");
  };
  // Load existing data if editing
  /* istanbul ignore next */
  cov_25cy5zt3dq().s[42]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_25cy5zt3dq().f[9]++;
    cov_25cy5zt3dq().s[43]++;
    if (initialData) {
      /* istanbul ignore next */
      cov_25cy5zt3dq().b[9][0]++;
      cov_25cy5zt3dq().s[44]++;
      setFormData({
        title: initialData.title,
        description:
        /* istanbul ignore next */
        (cov_25cy5zt3dq().b[10][0]++, initialData.description) ||
        /* istanbul ignore next */
        (cov_25cy5zt3dq().b[10][1]++, ""),
        prompt_template: initialData.prompt_template,
        variables:
        /* istanbul ignore next */
        (cov_25cy5zt3dq().b[11][0]++, initialData.variables) ||
        /* istanbul ignore next */
        (cov_25cy5zt3dq().b[11][1]++, [])
      });
      /* istanbul ignore next */
      cov_25cy5zt3dq().s[45]++;
      setTestCases(
      /* istanbul ignore next */
      (cov_25cy5zt3dq().b[12][0]++, initialData.test_cases) ||
      /* istanbul ignore next */
      (cov_25cy5zt3dq().b[12][1]++, []));
    } else {
      /* istanbul ignore next */
      cov_25cy5zt3dq().b[9][1]++;
      cov_25cy5zt3dq().s[46]++;
      if (cardId) {
        /* istanbul ignore next */
        cov_25cy5zt3dq().b[13][0]++;
        cov_25cy5zt3dq().s[47]++;
        // Fetch card data
        const fetchCard = async () => {
          /* istanbul ignore next */
          cov_25cy5zt3dq().f[10]++;
          cov_25cy5zt3dq().s[48]++;
          try {
            /* istanbul ignore next */
            cov_25cy5zt3dq().s[49]++;
            setLoading(true);
            const response =
            /* istanbul ignore next */
            (cov_25cy5zt3dq().s[50]++, await fetch(`/api/prompt-cards/${cardId}`));
            const result =
            /* istanbul ignore next */
            (cov_25cy5zt3dq().s[51]++, await response.json());
            /* istanbul ignore next */
            cov_25cy5zt3dq().s[52]++;
            if (result.success) {
              /* istanbul ignore next */
              cov_25cy5zt3dq().b[14][0]++;
              const card =
              /* istanbul ignore next */
              (cov_25cy5zt3dq().s[53]++, result.data);
              /* istanbul ignore next */
              cov_25cy5zt3dq().s[54]++;
              setFormData({
                title: card.title,
                description:
                /* istanbul ignore next */
                (cov_25cy5zt3dq().b[15][0]++, card.description) ||
                /* istanbul ignore next */
                (cov_25cy5zt3dq().b[15][1]++, ""),
                prompt_template: card.prompt_template,
                variables:
                /* istanbul ignore next */
                (cov_25cy5zt3dq().b[16][0]++, card.variables) ||
                /* istanbul ignore next */
                (cov_25cy5zt3dq().b[16][1]++, [])
              });
              /* istanbul ignore next */
              cov_25cy5zt3dq().s[55]++;
              setTestCases(
              /* istanbul ignore next */
              (cov_25cy5zt3dq().b[17][0]++, card.test_cases) ||
              /* istanbul ignore next */
              (cov_25cy5zt3dq().b[17][1]++, []));
            } else {
              /* istanbul ignore next */
              cov_25cy5zt3dq().b[14][1]++;
              cov_25cy5zt3dq().s[56]++;
              setError(
              /* istanbul ignore next */
              (cov_25cy5zt3dq().b[18][0]++, result.error) ||
              /* istanbul ignore next */
              (cov_25cy5zt3dq().b[18][1]++, "Failed to load prompt card"));
            }
          } catch (err) {
            /* istanbul ignore next */
            cov_25cy5zt3dq().s[57]++;
            setError("Network error: Failed to load prompt card");
          } finally {
            /* istanbul ignore next */
            cov_25cy5zt3dq().s[58]++;
            setLoading(false);
          }
        };
        /* istanbul ignore next */
        cov_25cy5zt3dq().s[59]++;
        fetchCard();
      } else
      /* istanbul ignore next */
      {
        cov_25cy5zt3dq().b[13][1]++;
      }
    }
  }, [cardId, initialData]);
  /* istanbul ignore next */
  cov_25cy5zt3dq().s[60]++;
  if (
  /* istanbul ignore next */
  (cov_25cy5zt3dq().b[20][0]++, loading) &&
  /* istanbul ignore next */
  (cov_25cy5zt3dq().b[20][1]++, !formData.title)) {
    /* istanbul ignore next */
    cov_25cy5zt3dq().b[19][0]++;
    cov_25cy5zt3dq().s[61]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "flex justify-center items-center min-h-64",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_LoadingSpinner.LoadingSpinner, {})
    });
  } else
  /* istanbul ignore next */
  {
    cov_25cy5zt3dq().b[19][1]++;
  }
  cov_25cy5zt3dq().s[62]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "max-w-4xl mx-auto",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "mb-8",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
        className: "text-3xl font-bold text-gray-900",
        children: cardId ?
        /* istanbul ignore next */
        (cov_25cy5zt3dq().b[21][0]++, "Edit Prompt Card") :
        /* istanbul ignore next */
        (cov_25cy5zt3dq().b[21][1]++, "Create New Prompt Card")
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-gray-600 mt-2",
        children: cardId ?
        /* istanbul ignore next */
        (cov_25cy5zt3dq().b[22][0]++, "Update your prompt template and test cases") :
        /* istanbul ignore next */
        (cov_25cy5zt3dq().b[22][1]++, "Create a new prompt template with test cases")
      })]
    }),
    /* istanbul ignore next */
    (cov_25cy5zt3dq().b[23][0]++, error) &&
    /* istanbul ignore next */
    (cov_25cy5zt3dq().b[23][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "bg-red-50 border border-red-200 rounded-md p-4 mb-6",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-red-800",
        children: error
      })
    })), /*#__PURE__*/(0, _jsxruntime.jsxs)("form", {
      onSubmit: handleSubmit,
      className: "space-y-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-white rounded-lg border border-gray-200 p-6",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "text-lg font-semibold text-gray-900 mb-4",
          children: "Basic Information"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "space-y-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              htmlFor: "title",
              className: "block text-sm font-medium text-gray-700 mb-1",
              children: "Title *"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
              type: "text",
              id: "title",
              value: formData.title,
              onChange: e => {
                /* istanbul ignore next */
                cov_25cy5zt3dq().f[11]++;
                cov_25cy5zt3dq().s[63]++;
                return setFormData(prev => {
                  /* istanbul ignore next */
                  cov_25cy5zt3dq().f[12]++;
                  cov_25cy5zt3dq().s[64]++;
                  return {
                    ...prev,
                    title: e.target.value
                  };
                });
              },
              className: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",
              placeholder: "Enter a descriptive title for your prompt",
              required: true
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              htmlFor: "description",
              className: "block text-sm font-medium text-gray-700 mb-1",
              children: "Description"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("textarea", {
              id: "description",
              value: formData.description,
              onChange: e => {
                /* istanbul ignore next */
                cov_25cy5zt3dq().f[13]++;
                cov_25cy5zt3dq().s[65]++;
                return setFormData(prev => {
                  /* istanbul ignore next */
                  cov_25cy5zt3dq().f[14]++;
                  cov_25cy5zt3dq().s[66]++;
                  return {
                    ...prev,
                    description: e.target.value
                  };
                });
              },
              rows: 3,
              className: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",
              placeholder: "Describe what this prompt does and when to use it"
            })]
          })]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-white rounded-lg border border-gray-200 p-6",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "text-lg font-semibold text-gray-900 mb-4",
          children: "Prompt Template"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "space-y-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              htmlFor: "template",
              className: "block text-sm font-medium text-gray-700 mb-1",
              children: "Template *"
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
              className: "text-sm text-gray-500 mb-2",
              children: ["Use ", /*#__PURE__*/(0, _jsxruntime.jsx)("code", {
                className: "bg-gray-100 px-1 rounded",
                children: "{{variable_name}}"
              }), " for variables that will be replaced during testing."]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("textarea", {
              id: "template",
              value: formData.prompt_template,
              onChange: e => {
                /* istanbul ignore next */
                cov_25cy5zt3dq().f[15]++;
                cov_25cy5zt3dq().s[67]++;
                return handleTemplateChange(e.target.value);
              },
              rows: 6,
              className: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 font-mono text-sm",
              placeholder: "Enter your prompt template here. Use {{variable_name}} for dynamic content.",
              required: true
            })]
          }),
          /* istanbul ignore next */
          (cov_25cy5zt3dq().b[24][0]++, formData.variables.length > 0) &&
          /* istanbul ignore next */
          (cov_25cy5zt3dq().b[24][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
              className: "text-sm font-medium text-gray-700 mb-2",
              children: "Detected Variables:"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "flex flex-wrap gap-2",
              children: formData.variables.map(variable => {
                /* istanbul ignore next */
                cov_25cy5zt3dq().f[16]++;
                cov_25cy5zt3dq().s[68]++;
                return /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  className: "inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800",
                  children: variable
                }, variable);
              })
            })]
          }))]
        })]
      }),
      /* istanbul ignore next */
      (cov_25cy5zt3dq().b[25][0]++, cardId) &&
      /* istanbul ignore next */
      (cov_25cy5zt3dq().b[25][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-white rounded-lg border border-gray-200 p-6",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "text-lg font-semibold text-gray-900 mb-4",
          children: "Test Cases"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_TestCaseEditor.default, {
          promptCardId: cardId,
          testCases: testCases,
          variables: formData.variables,
          onTestCasesChange: setTestCases
        })]
      })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex justify-between items-center pt-6 border-t border-gray-200",
        children: [
        /* istanbul ignore next */
        (cov_25cy5zt3dq().b[26][0]++, cardId) &&
        /* istanbul ignore next */
        (cov_25cy5zt3dq().b[26][1]++, testCases.length > 0) &&
        /* istanbul ignore next */
        (cov_25cy5zt3dq().b[26][2]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_Button.Button, {
          type: "button",
          variant: "outline",
          onClick: () => {
            /* istanbul ignore next */
            cov_25cy5zt3dq().f[17]++;
            cov_25cy5zt3dq().s[69]++;
            return router.push(`/prompt-cards/${cardId}/test`);
          },
          disabled: loading,
          className: "text-blue-600 border-blue-200 hover:bg-blue-50",
          children: ["Run Tests (", testCases.length, ")"]
        })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex space-x-4 ml-auto",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
            type: "button",
            variant: "outline",
            onClick: handleCancel,
            disabled: loading,
            children: "Cancel"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
            type: "submit",
            disabled: loading,
            className: "min-w-24",
            children: loading ?
            /* istanbul ignore next */
            (/*#__PURE__*/cov_25cy5zt3dq().b[27][0]++, (0, _jsxruntime.jsx)(_LoadingSpinner.LoadingSpinner, {
              size: "sm"
            })) :
            /* istanbul ignore next */
            (cov_25cy5zt3dq().b[27][1]++, cardId ?
            /* istanbul ignore next */
            (cov_25cy5zt3dq().b[28][0]++, "Update Card") :
            /* istanbul ignore next */
            (cov_25cy5zt3dq().b[28][1]++, "Create Card"))
          })]
        })]
      })]
    }),
    /* istanbul ignore next */
    (cov_25cy5zt3dq().b[29][0]++, !cardId) &&
    /* istanbul ignore next */
    (cov_25cy5zt3dq().b[29][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "mt-6 p-4 bg-blue-50 border border-blue-200 rounded-md",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
        className: "text-blue-800 text-sm",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
          children: "Tip:"
        }), " After creating the prompt card, you'll be able to add test cases to validate your prompt's behavior."]
      })
    }))]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,