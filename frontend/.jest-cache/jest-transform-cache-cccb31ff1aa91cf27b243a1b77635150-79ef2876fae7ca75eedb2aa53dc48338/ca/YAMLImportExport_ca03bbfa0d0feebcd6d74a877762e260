de573eb96ab1dbf2a24b0fa4b67d4be4
"use client";
"use strict";

/* istanbul ignore next */
function cov_2lozpbqg3d() {
  var path = "/workspaces/prompt-card-system/frontend/src/components/YAML/YAMLImportExport.tsx";
  var hash = "1e8c6a78d3a7795b76d9dad124954ad2ad31d1fb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/prompt-card-system/frontend/src/components/YAML/YAMLImportExport.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 32
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 39
        }
      },
      "6": {
        start: {
          line: 15,
          column: 24
        },
        end: {
          line: 15,
          column: 55
        }
      },
      "7": {
        start: {
          line: 16,
          column: 15
        },
        end: {
          line: 16,
          column: 37
        }
      },
      "8": {
        start: {
          line: 18,
          column: 50
        },
        end: {
          line: 18,
          column: 77
        }
      },
      "9": {
        start: {
          line: 19,
          column: 42
        },
        end: {
          line: 19,
          column: 66
        }
      },
      "10": {
        start: {
          line: 20,
          column: 34
        },
        end: {
          line: 20,
          column: 61
        }
      },
      "11": {
        start: {
          line: 21,
          column: 30
        },
        end: {
          line: 21,
          column: 56
        }
      },
      "12": {
        start: {
          line: 22,
          column: 34
        },
        end: {
          line: 22,
          column: 60
        }
      },
      "13": {
        start: {
          line: 23,
          column: 25
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "14": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 27,
          column: 9
        }
      },
      "15": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 50
        }
      },
      "16": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 19
        }
      },
      "17": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "18": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 29
        }
      },
      "19": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 27
        }
      },
      "20": {
        start: {
          line: 31,
          column: 29
        },
        end: {
          line: 39,
          column: 14
        }
      },
      "21": {
        start: {
          line: 40,
          column: 27
        },
        end: {
          line: 40,
          column: 48
        }
      },
      "22": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 51,
          column: 13
        }
      },
      "23": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 43
        }
      },
      "24": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 35
        }
      },
      "25": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 54
        }
      },
      "26": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 48,
          column: 25
        }
      },
      "27": {
        start: {
          line: 46,
          column: 20
        },
        end: {
          line: 46,
          column: 46
        }
      },
      "28": {
        start: {
          line: 47,
          column: 20
        },
        end: {
          line: 47,
          column: 37
        }
      },
      "29": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 66
        }
      },
      "30": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 61
        }
      },
      "31": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 30
        }
      },
      "32": {
        start: {
          line: 58,
          column: 27
        },
        end: {
          line: 86,
          column: 5
        }
      },
      "33": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "34": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 50
        }
      },
      "35": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 19
        }
      },
      "36": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "37": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 29
        }
      },
      "38": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 27
        }
      },
      "39": {
        start: {
          line: 66,
          column: 29
        },
        end: {
          line: 74,
          column: 14
        }
      },
      "40": {
        start: {
          line: 75,
          column: 27
        },
        end: {
          line: 75,
          column: 48
        }
      },
      "41": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 80,
          column: 13
        }
      },
      "42": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 77,
          column: 120
        }
      },
      "43": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 67
        }
      },
      "44": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 63
        }
      },
      "45": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 30
        }
      },
      "46": {
        start: {
          line: 87,
          column: 28
        },
        end: {
          line: 111,
          column: 5
        }
      },
      "47": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "48": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 29
        }
      },
      "49": {
        start: {
          line: 90,
          column: 29
        },
        end: {
          line: 90,
          column: 60
        }
      },
      "50": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 105,
          column: 13
        }
      },
      "51": {
        start: {
          line: 92,
          column: 29
        },
        end: {
          line: 92,
          column: 50
        }
      },
      "52": {
        start: {
          line: 93,
          column: 28
        },
        end: {
          line: 93,
          column: 60
        }
      },
      "53": {
        start: {
          line: 94,
          column: 26
        },
        end: {
          line: 94,
          column: 53
        }
      },
      "54": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 95,
          column: 29
        }
      },
      "55": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 96,
          column: 70
        }
      },
      "56": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 45
        }
      },
      "57": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 98,
          column: 26
        }
      },
      "58": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 99,
          column: 48
        }
      },
      "59": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 100,
          column: 45
        }
      },
      "60": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 101,
          column: 61
        }
      },
      "61": {
        start: {
          line: 103,
          column: 31
        },
        end: {
          line: 103,
          column: 52
        }
      },
      "62": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 104,
          column: 66
        }
      },
      "63": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 61
        }
      },
      "64": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 30
        }
      },
      "65": {
        start: {
          line: 112,
          column: 23
        },
        end: {
          line: 117,
          column: 5
        }
      },
      "66": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 27
        }
      },
      "67": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 23
        }
      },
      "68": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 25
        }
      },
      "69": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 34
        }
      },
      "70": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 282,
          column: 7
        }
      },
      "71": {
        start: {
          line: 132,
          column: 37
        },
        end: {
          line: 132,
          column: 61
        }
      },
      "72": {
        start: {
          line: 162,
          column: 51
        },
        end: {
          line: 162,
          column: 81
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "YAMLImportExport",
        decl: {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 17,
            column: 25
          }
        },
        loc: {
          start: {
            line: 17,
            column: 47
          },
          end: {
            line: 283,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 23,
            column: 25
          },
          end: {
            line: 23,
            column: 26
          }
        },
        loc: {
          start: {
            line: 23,
            column: 35
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 23
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 45,
            column: 27
          },
          end: {
            line: 45,
            column: 28
          }
        },
        loc: {
          start: {
            line: 45,
            column: 31
          },
          end: {
            line: 48,
            column: 17
          }
        },
        line: 45
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 58,
            column: 27
          },
          end: {
            line: 58,
            column: 28
          }
        },
        loc: {
          start: {
            line: 58,
            column: 37
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 58
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 87,
            column: 28
          },
          end: {
            line: 87,
            column: 29
          }
        },
        loc: {
          start: {
            line: 87,
            column: 38
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 87
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 112,
            column: 23
          },
          end: {
            line: 112,
            column: 24
          }
        },
        loc: {
          start: {
            line: 112,
            column: 27
          },
          end: {
            line: 117,
            column: 5
          }
        },
        line: 112
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 132,
            column: 33
          },
          end: {
            line: 132,
            column: 34
          }
        },
        loc: {
          start: {
            line: 132,
            column: 37
          },
          end: {
            line: 132,
            column: 61
          }
        },
        line: 132
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 162,
            column: 46
          },
          end: {
            line: 162,
            column: 47
          }
        },
        loc: {
          start: {
            line: 162,
            column: 51
          },
          end: {
            line: 162,
            column: 81
          }
        },
        line: 162
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        }, {
          start: {
            line: 49,
            column: 19
          },
          end: {
            line: 51,
            column: 13
          }
        }],
        line: 41
      },
      "2": {
        loc: {
          start: {
            line: 50,
            column: 25
          },
          end: {
            line: 50,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 25
          },
          end: {
            line: 50,
            column: 37
          }
        }, {
          start: {
            line: 50,
            column: 41
          },
          end: {
            line: 50,
            column: 64
          }
        }],
        line: 50
      },
      "3": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "4": {
        loc: {
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 80,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 80,
            column: 13
          }
        }, {
          start: {
            line: 78,
            column: 19
          },
          end: {
            line: 80,
            column: 13
          }
        }],
        line: 76
      },
      "5": {
        loc: {
          start: {
            line: 77,
            column: 82
          },
          end: {
            line: 77,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 77,
            column: 107
          },
          end: {
            line: 77,
            column: 110
          }
        }, {
          start: {
            line: 77,
            column: 113
          },
          end: {
            line: 77,
            column: 115
          }
        }],
        line: 77
      },
      "6": {
        loc: {
          start: {
            line: 79,
            column: 25
          },
          end: {
            line: 79,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 25
          },
          end: {
            line: 79,
            column: 37
          }
        }, {
          start: {
            line: 79,
            column: 41
          },
          end: {
            line: 79,
            column: 65
          }
        }],
        line: 79
      },
      "7": {
        loc: {
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 105,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 105,
            column: 13
          }
        }, {
          start: {
            line: 102,
            column: 19
          },
          end: {
            line: 105,
            column: 13
          }
        }],
        line: 91
      },
      "8": {
        loc: {
          start: {
            line: 104,
            column: 25
          },
          end: {
            line: 104,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 25
          },
          end: {
            line: 104,
            column: 37
          }
        }, {
          start: {
            line: 104,
            column: 41
          },
          end: {
            line: 104,
            column: 64
          }
        }],
        line: 104
      },
      "9": {
        loc: {
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 127,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 13
          },
          end: {
            line: 121,
            column: 18
          }
        }, {
          start: {
            line: 121,
            column: 22
          },
          end: {
            line: 121,
            column: 29
          }
        }, {
          start: {
            line: 121,
            column: 48
          },
          end: {
            line: 127,
            column: 14
          }
        }],
        line: 121
      },
      "10": {
        loc: {
          start: {
            line: 122,
            column: 45
          },
          end: {
            line: 122,
            column: 126
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 122,
            column: 53
          },
          end: {
            line: 122,
            column: 86
          }
        }, {
          start: {
            line: 122,
            column: 89
          },
          end: {
            line: 122,
            column: 126
          }
        }],
        line: 122
      },
      "11": {
        loc: {
          start: {
            line: 124,
            column: 31
          },
          end: {
            line: 124,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 124,
            column: 39
          },
          end: {
            line: 124,
            column: 53
          }
        }, {
          start: {
            line: 124,
            column: 56
          },
          end: {
            line: 124,
            column: 72
          }
        }],
        line: 124
      },
      "12": {
        loc: {
          start: {
            line: 125,
            column: 30
          },
          end: {
            line: 125,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 30
          },
          end: {
            line: 125,
            column: 35
          }
        }, {
          start: {
            line: 125,
            column: 39
          },
          end: {
            line: 125,
            column: 46
          }
        }],
        line: 125
      },
      "13": {
        loc: {
          start: {
            line: 140,
            column: 34
          },
          end: {
            line: 142,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 140,
            column: 58
          },
          end: {
            line: 142,
            column: 26
          }
        }, {
          start: {
            line: 142,
            column: 29
          },
          end: {
            line: 142,
            column: 49
          }
        }],
        line: 140
      },
      "14": {
        loc: {
          start: {
            line: 181,
            column: 24
          },
          end: {
            line: 187,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 181,
            column: 24
          },
          end: {
            line: 181,
            column: 29
          }
        }, {
          start: {
            line: 181,
            column: 47
          },
          end: {
            line: 187,
            column: 26
          }
        }],
        line: 181
      },
      "15": {
        loc: {
          start: {
            line: 188,
            column: 24
          },
          end: {
            line: 194,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 188,
            column: 24
          },
          end: {
            line: 188,
            column: 31
          }
        }, {
          start: {
            line: 188,
            column: 49
          },
          end: {
            line: 194,
            column: 26
          }
        }],
        line: 188
      },
      "16": {
        loc: {
          start: {
            line: 204,
            column: 50
          },
          end: {
            line: 206,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 204,
            column: 74
          },
          end: {
            line: 206,
            column: 42
          }
        }, {
          start: {
            line: 206,
            column: 45
          },
          end: {
            line: 206,
            column: 55
          }
        }],
        line: 204
      },
      "17": {
        loc: {
          start: {
            line: 220,
            column: 54
          },
          end: {
            line: 220,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 220,
            column: 54
          },
          end: {
            line: 220,
            column: 61
          }
        }, {
          start: {
            line: 220,
            column: 65
          },
          end: {
            line: 220,
            column: 84
          }
        }],
        line: 220
      },
      "18": {
        loc: {
          start: {
            line: 221,
            column: 54
          },
          end: {
            line: 223,
            column: 57
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 221,
            column: 78
          },
          end: {
            line: 223,
            column: 46
          }
        }, {
          start: {
            line: 223,
            column: 49
          },
          end: {
            line: 223,
            column: 57
          }
        }],
        line: 221
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/workspaces/prompt-card-system/frontend/src/components/YAML/YAMLImportExport.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState } from 'react';\nimport { Button } from '@/components/ui/Button';\nimport { LoadingSpinner } from '@/components/ui/LoadingSpinner';\nimport { Modal } from '@/components/ui/Modal';\n\ninterface YAMLImportExportProps {\n  onImportSuccess?: (count: number) => void;\n}\n\nexport default function YAMLImportExport({ onImportSuccess }: YAMLImportExportProps) {\n  const [showImportModal, setShowImportModal] = useState(false);\n  const [yamlContent, setYamlContent] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n\n  const handleImport = async () => {\n    if (!yamlContent.trim()) {\n      setError('Please enter YAML content');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      const response = await fetch('/api/yaml/import', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ yamlContent })\n      });\n\n      const result = await response.json();\n\n      if (result.success) {\n        setSuccess(result.message);\n        setYamlContent('');\n        onImportSuccess?.(result.data.length);\n        setTimeout(() => {\n          setShowImportModal(false);\n          setSuccess(null);\n        }, 2000);\n      } else {\n        setError(result.error || 'Failed to import YAML');\n      }\n    } catch (err) {\n      setError('Network error: Failed to import YAML');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleValidate = async () => {\n    if (!yamlContent.trim()) {\n      setError('Please enter YAML content');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      const response = await fetch('/api/yaml/validate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ yamlContent })\n      });\n\n      const result = await response.json();\n\n      if (result.success) {\n        setSuccess(`\u2713 YAML is valid (${result.configCount} configuration${result.configCount > 1 ? 's' : ''})`);\n      } else {\n        setError(result.error || 'YAML validation failed');\n      }\n    } catch (err) {\n      setError('Network error: Failed to validate YAML');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleExportAll = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/yaml/export');\n      \n      if (response.ok) {\n        const blob = await response.blob();\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = `prompt-cards-export-${Date.now()}.yaml`;\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n        setSuccess('Export downloaded successfully');\n      } else {\n        const result = await response.json();\n        setError(result.error || 'Failed to export YAML');\n      }\n    } catch (err) {\n      setError('Network error: Failed to export YAML');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const resetModal = () => {\n    setYamlContent('');\n    setError(null);\n    setSuccess(null);\n    setShowImportModal(false);\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      {(error || success) && (\n        <div className={`p-4 rounded-md ${error ? 'bg-red-50 border border-red-200' : 'bg-green-50 border border-green-200'}`}>\n          <p className={error ? 'text-red-800' : 'text-green-800'}>\n            {error || success}\n          </p>\n        </div>\n      )}\n\n      <div className=\"flex space-x-4\">\n        <Button onClick={() => setShowImportModal(true)} variant=\"outline\">\n          Import YAML\n        </Button>\n        <Button onClick={handleExportAll} disabled={loading} variant=\"outline\">\n          {loading ? <LoadingSpinner size=\"sm\" /> : 'Export All to YAML'}\n        </Button>\n      </div>\n\n      <Modal \n        isOpen={showImportModal} \n        onClose={resetModal}\n        title=\"Import Prompt Cards from YAML\"\n        size=\"lg\"\n      >\n        <div className=\"space-y-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Promptfoo YAML Configuration\n            </label>\n            <textarea\n              value={yamlContent}\n              onChange={(e) => setYamlContent(e.target.value)}\n              rows={12}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 font-mono text-sm\"\n              placeholder={`Paste your Promptfoo YAML configuration here:\n\nprompts:\n  - \"Translate the following text to French: {{input}}\"\nproviders:\n  - ollama:chat:llama2:7b\ntests:\n  - vars:\n      input: \"Hello world\"\n    assert:\n      - type: contains\n        value: \"Bonjour\"\ndescription: \"Translation prompt example\"`}\n            />\n          </div>\n\n          {error && (\n            <div className=\"bg-red-50 border border-red-200 rounded-md p-3\">\n              <p className=\"text-red-800 text-sm\">{error}</p>\n            </div>\n          )}\n\n          {success && (\n            <div className=\"bg-green-50 border border-green-200 rounded-md p-3\">\n              <p className=\"text-green-800 text-sm\">{success}</p>\n            </div>\n          )}\n\n          <div className=\"flex justify-between pt-4 border-t border-gray-200\">\n            <div className=\"space-x-2\">\n              <Button \n                onClick={handleValidate}\n                variant=\"outline\"\n                disabled={loading}\n              >\n                {loading ? <LoadingSpinner size=\"sm\" /> : 'Validate'}\n              </Button>\n            </div>\n            <div className=\"space-x-2\">\n              <Button \n                onClick={resetModal}\n                variant=\"outline\"\n                disabled={loading}\n              >\n                Cancel\n              </Button>\n              <Button \n                onClick={handleImport}\n                disabled={loading || !yamlContent.trim()}\n              >\n                {loading ? <LoadingSpinner size=\"sm\" /> : 'Import'}\n              </Button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n\n      <div className=\"text-sm text-gray-600 bg-gray-50 p-4 rounded-md\">\n        <h4 className=\"font-medium mb-2\">YAML Import/Export</h4>\n        <ul className=\"space-y-1 text-sm\">\n          <li>\u2022 <strong>Import:</strong> Paste Promptfoo-compatible YAML to create prompt cards with test cases</li>\n          <li>\u2022 <strong>Export:</strong> Download all prompt cards as Promptfoo YAML configuration</li>\n          <li>\u2022 <strong>Format:</strong> Compatible with <a href=\"https://github.com/promptfoo/promptfoo\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-600 hover:underline\">Promptfoo</a> evaluation framework</li>\n        </ul>\n      </div>\n    </div>\n  );\n}"],
      names: ["YAMLImportExport", "onImportSuccess", "showImportModal", "setShowImportModal", "useState", "yamlContent", "setYamlContent", "loading", "setLoading", "error", "setError", "success", "setSuccess", "handleImport", "trim", "response", "fetch", "method", "headers", "body", "JSON", "stringify", "result", "json", "message", "data", "length", "setTimeout", "err", "handleValidate", "configCount", "handleExportAll", "ok", "blob", "url", "window", "URL", "createObjectURL", "a", "document", "createElement", "href", "download", "Date", "now", "appendChild", "click", "revokeObjectURL", "removeChild", "resetModal", "div", "className", "p", "Button", "onClick", "variant", "disabled", "LoadingSpinner", "size", "Modal", "isOpen", "onClose", "title", "label", "textarea", "value", "onChange", "e", "target", "rows", "placeholder", "h4", "ul", "li", "strong", "rel"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1e8c6a78d3a7795b76d9dad124954ad2ad31d1fb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2lozpbqg3d = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2lozpbqg3d();
cov_2lozpbqg3d().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2lozpbqg3d().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2lozpbqg3d().f[0]++;
    cov_2lozpbqg3d().s[2]++;
    return YAMLImportExport;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2lozpbqg3d().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_2lozpbqg3d().s[4]++, require("react"));
const _Button =
/* istanbul ignore next */
(cov_2lozpbqg3d().s[5]++, require("../ui/Button"));
const _LoadingSpinner =
/* istanbul ignore next */
(cov_2lozpbqg3d().s[6]++, require("../ui/LoadingSpinner"));
const _Modal =
/* istanbul ignore next */
(cov_2lozpbqg3d().s[7]++, require("../ui/Modal"));
function YAMLImportExport({
  onImportSuccess
}) {
  /* istanbul ignore next */
  cov_2lozpbqg3d().f[1]++;
  const [showImportModal, setShowImportModal] =
  /* istanbul ignore next */
  (cov_2lozpbqg3d().s[8]++, (0, _react.useState)(false));
  const [yamlContent, setYamlContent] =
  /* istanbul ignore next */
  (cov_2lozpbqg3d().s[9]++, (0, _react.useState)(""));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_2lozpbqg3d().s[10]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_2lozpbqg3d().s[11]++, (0, _react.useState)(null));
  const [success, setSuccess] =
  /* istanbul ignore next */
  (cov_2lozpbqg3d().s[12]++, (0, _react.useState)(null));
  /* istanbul ignore next */
  cov_2lozpbqg3d().s[13]++;
  const handleImport = async () => {
    /* istanbul ignore next */
    cov_2lozpbqg3d().f[2]++;
    cov_2lozpbqg3d().s[14]++;
    if (!yamlContent.trim()) {
      /* istanbul ignore next */
      cov_2lozpbqg3d().b[0][0]++;
      cov_2lozpbqg3d().s[15]++;
      setError("Please enter YAML content");
      /* istanbul ignore next */
      cov_2lozpbqg3d().s[16]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2lozpbqg3d().b[0][1]++;
    }
    cov_2lozpbqg3d().s[17]++;
    try {
      /* istanbul ignore next */
      cov_2lozpbqg3d().s[18]++;
      setLoading(true);
      /* istanbul ignore next */
      cov_2lozpbqg3d().s[19]++;
      setError(null);
      const response =
      /* istanbul ignore next */
      (cov_2lozpbqg3d().s[20]++, await fetch("/api/yaml/import", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({
          yamlContent
        })
      }));
      const result =
      /* istanbul ignore next */
      (cov_2lozpbqg3d().s[21]++, await response.json());
      /* istanbul ignore next */
      cov_2lozpbqg3d().s[22]++;
      if (result.success) {
        /* istanbul ignore next */
        cov_2lozpbqg3d().b[1][0]++;
        cov_2lozpbqg3d().s[23]++;
        setSuccess(result.message);
        /* istanbul ignore next */
        cov_2lozpbqg3d().s[24]++;
        setYamlContent("");
        /* istanbul ignore next */
        cov_2lozpbqg3d().s[25]++;
        onImportSuccess?.(result.data.length);
        /* istanbul ignore next */
        cov_2lozpbqg3d().s[26]++;
        setTimeout(() => {
          /* istanbul ignore next */
          cov_2lozpbqg3d().f[3]++;
          cov_2lozpbqg3d().s[27]++;
          setShowImportModal(false);
          /* istanbul ignore next */
          cov_2lozpbqg3d().s[28]++;
          setSuccess(null);
        }, 2000);
      } else {
        /* istanbul ignore next */
        cov_2lozpbqg3d().b[1][1]++;
        cov_2lozpbqg3d().s[29]++;
        setError(
        /* istanbul ignore next */
        (cov_2lozpbqg3d().b[2][0]++, result.error) ||
        /* istanbul ignore next */
        (cov_2lozpbqg3d().b[2][1]++, "Failed to import YAML"));
      }
    } catch (err) {
      /* istanbul ignore next */
      cov_2lozpbqg3d().s[30]++;
      setError("Network error: Failed to import YAML");
    } finally {
      /* istanbul ignore next */
      cov_2lozpbqg3d().s[31]++;
      setLoading(false);
    }
  };
  /* istanbul ignore next */
  cov_2lozpbqg3d().s[32]++;
  const handleValidate = async () => {
    /* istanbul ignore next */
    cov_2lozpbqg3d().f[4]++;
    cov_2lozpbqg3d().s[33]++;
    if (!yamlContent.trim()) {
      /* istanbul ignore next */
      cov_2lozpbqg3d().b[3][0]++;
      cov_2lozpbqg3d().s[34]++;
      setError("Please enter YAML content");
      /* istanbul ignore next */
      cov_2lozpbqg3d().s[35]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2lozpbqg3d().b[3][1]++;
    }
    cov_2lozpbqg3d().s[36]++;
    try {
      /* istanbul ignore next */
      cov_2lozpbqg3d().s[37]++;
      setLoading(true);
      /* istanbul ignore next */
      cov_2lozpbqg3d().s[38]++;
      setError(null);
      const response =
      /* istanbul ignore next */
      (cov_2lozpbqg3d().s[39]++, await fetch("/api/yaml/validate", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({
          yamlContent
        })
      }));
      const result =
      /* istanbul ignore next */
      (cov_2lozpbqg3d().s[40]++, await response.json());
      /* istanbul ignore next */
      cov_2lozpbqg3d().s[41]++;
      if (result.success) {
        /* istanbul ignore next */
        cov_2lozpbqg3d().b[4][0]++;
        cov_2lozpbqg3d().s[42]++;
        setSuccess(`✓ YAML is valid (${result.configCount} configuration${result.configCount > 1 ?
        /* istanbul ignore next */
        (cov_2lozpbqg3d().b[5][0]++, "s") :
        /* istanbul ignore next */
        (cov_2lozpbqg3d().b[5][1]++, "")})`);
      } else {
        /* istanbul ignore next */
        cov_2lozpbqg3d().b[4][1]++;
        cov_2lozpbqg3d().s[43]++;
        setError(
        /* istanbul ignore next */
        (cov_2lozpbqg3d().b[6][0]++, result.error) ||
        /* istanbul ignore next */
        (cov_2lozpbqg3d().b[6][1]++, "YAML validation failed"));
      }
    } catch (err) {
      /* istanbul ignore next */
      cov_2lozpbqg3d().s[44]++;
      setError("Network error: Failed to validate YAML");
    } finally {
      /* istanbul ignore next */
      cov_2lozpbqg3d().s[45]++;
      setLoading(false);
    }
  };
  /* istanbul ignore next */
  cov_2lozpbqg3d().s[46]++;
  const handleExportAll = async () => {
    /* istanbul ignore next */
    cov_2lozpbqg3d().f[5]++;
    cov_2lozpbqg3d().s[47]++;
    try {
      /* istanbul ignore next */
      cov_2lozpbqg3d().s[48]++;
      setLoading(true);
      const response =
      /* istanbul ignore next */
      (cov_2lozpbqg3d().s[49]++, await fetch("/api/yaml/export"));
      /* istanbul ignore next */
      cov_2lozpbqg3d().s[50]++;
      if (response.ok) {
        /* istanbul ignore next */
        cov_2lozpbqg3d().b[7][0]++;
        const blob =
        /* istanbul ignore next */
        (cov_2lozpbqg3d().s[51]++, await response.blob());
        const url =
        /* istanbul ignore next */
        (cov_2lozpbqg3d().s[52]++, window.URL.createObjectURL(blob));
        const a =
        /* istanbul ignore next */
        (cov_2lozpbqg3d().s[53]++, document.createElement("a"));
        /* istanbul ignore next */
        cov_2lozpbqg3d().s[54]++;
        a.href = url;
        /* istanbul ignore next */
        cov_2lozpbqg3d().s[55]++;
        a.download = `prompt-cards-export-${Date.now()}.yaml`;
        /* istanbul ignore next */
        cov_2lozpbqg3d().s[56]++;
        document.body.appendChild(a);
        /* istanbul ignore next */
        cov_2lozpbqg3d().s[57]++;
        a.click();
        /* istanbul ignore next */
        cov_2lozpbqg3d().s[58]++;
        window.URL.revokeObjectURL(url);
        /* istanbul ignore next */
        cov_2lozpbqg3d().s[59]++;
        document.body.removeChild(a);
        /* istanbul ignore next */
        cov_2lozpbqg3d().s[60]++;
        setSuccess("Export downloaded successfully");
      } else {
        /* istanbul ignore next */
        cov_2lozpbqg3d().b[7][1]++;
        const result =
        /* istanbul ignore next */
        (cov_2lozpbqg3d().s[61]++, await response.json());
        /* istanbul ignore next */
        cov_2lozpbqg3d().s[62]++;
        setError(
        /* istanbul ignore next */
        (cov_2lozpbqg3d().b[8][0]++, result.error) ||
        /* istanbul ignore next */
        (cov_2lozpbqg3d().b[8][1]++, "Failed to export YAML"));
      }
    } catch (err) {
      /* istanbul ignore next */
      cov_2lozpbqg3d().s[63]++;
      setError("Network error: Failed to export YAML");
    } finally {
      /* istanbul ignore next */
      cov_2lozpbqg3d().s[64]++;
      setLoading(false);
    }
  };
  /* istanbul ignore next */
  cov_2lozpbqg3d().s[65]++;
  const resetModal = () => {
    /* istanbul ignore next */
    cov_2lozpbqg3d().f[6]++;
    cov_2lozpbqg3d().s[66]++;
    setYamlContent("");
    /* istanbul ignore next */
    cov_2lozpbqg3d().s[67]++;
    setError(null);
    /* istanbul ignore next */
    cov_2lozpbqg3d().s[68]++;
    setSuccess(null);
    /* istanbul ignore next */
    cov_2lozpbqg3d().s[69]++;
    setShowImportModal(false);
  };
  /* istanbul ignore next */
  cov_2lozpbqg3d().s[70]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "space-y-4",
    children: [(
    /* istanbul ignore next */
    (cov_2lozpbqg3d().b[9][0]++, error) ||
    /* istanbul ignore next */
    (cov_2lozpbqg3d().b[9][1]++, success)) &&
    /* istanbul ignore next */
    (cov_2lozpbqg3d().b[9][2]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: `p-4 rounded-md ${error ?
      /* istanbul ignore next */
      (cov_2lozpbqg3d().b[10][0]++, "bg-red-50 border border-red-200") :
      /* istanbul ignore next */
      (cov_2lozpbqg3d().b[10][1]++, "bg-green-50 border border-green-200")}`,
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: error ?
        /* istanbul ignore next */
        (cov_2lozpbqg3d().b[11][0]++, "text-red-800") :
        /* istanbul ignore next */
        (cov_2lozpbqg3d().b[11][1]++, "text-green-800"),
        children:
        /* istanbul ignore next */
        (cov_2lozpbqg3d().b[12][0]++, error) ||
        /* istanbul ignore next */
        (cov_2lozpbqg3d().b[12][1]++, success)
      })
    })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex space-x-4",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
        onClick: () => {
          /* istanbul ignore next */
          cov_2lozpbqg3d().f[7]++;
          cov_2lozpbqg3d().s[71]++;
          return setShowImportModal(true);
        },
        variant: "outline",
        children: "Import YAML"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
        onClick: handleExportAll,
        disabled: loading,
        variant: "outline",
        children: loading ?
        /* istanbul ignore next */
        (/*#__PURE__*/cov_2lozpbqg3d().b[13][0]++, (0, _jsxruntime.jsx)(_LoadingSpinner.LoadingSpinner, {
          size: "sm"
        })) :
        /* istanbul ignore next */
        (cov_2lozpbqg3d().b[13][1]++, "Export All to YAML")
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Modal.Modal, {
      isOpen: showImportModal,
      onClose: resetModal,
      title: "Import Prompt Cards from YAML",
      size: "lg",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "space-y-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
            className: "block text-sm font-medium text-gray-700 mb-2",
            children: "Promptfoo YAML Configuration"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("textarea", {
            value: yamlContent,
            onChange: e => {
              /* istanbul ignore next */
              cov_2lozpbqg3d().f[8]++;
              cov_2lozpbqg3d().s[72]++;
              return setYamlContent(e.target.value);
            },
            rows: 12,
            className: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 font-mono text-sm",
            placeholder: `Paste your Promptfoo YAML configuration here:

prompts:
  - "Translate the following text to French: {{input}}"
providers:
  - ollama:chat:llama2:7b
tests:
  - vars:
      input: "Hello world"
    assert:
      - type: contains
        value: "Bonjour"
description: "Translation prompt example"`
          })]
        }),
        /* istanbul ignore next */
        (cov_2lozpbqg3d().b[14][0]++, error) &&
        /* istanbul ignore next */
        (cov_2lozpbqg3d().b[14][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "bg-red-50 border border-red-200 rounded-md p-3",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "text-red-800 text-sm",
            children: error
          })
        })),
        /* istanbul ignore next */
        (cov_2lozpbqg3d().b[15][0]++, success) &&
        /* istanbul ignore next */
        (cov_2lozpbqg3d().b[15][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "bg-green-50 border border-green-200 rounded-md p-3",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "text-green-800 text-sm",
            children: success
          })
        })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex justify-between pt-4 border-t border-gray-200",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "space-x-2",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
              onClick: handleValidate,
              variant: "outline",
              disabled: loading,
              children: loading ?
              /* istanbul ignore next */
              (/*#__PURE__*/cov_2lozpbqg3d().b[16][0]++, (0, _jsxruntime.jsx)(_LoadingSpinner.LoadingSpinner, {
                size: "sm"
              })) :
              /* istanbul ignore next */
              (cov_2lozpbqg3d().b[16][1]++, "Validate")
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "space-x-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
              onClick: resetModal,
              variant: "outline",
              disabled: loading,
              children: "Cancel"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
              onClick: handleImport,
              disabled:
              /* istanbul ignore next */
              (cov_2lozpbqg3d().b[17][0]++, loading) ||
              /* istanbul ignore next */
              (cov_2lozpbqg3d().b[17][1]++, !yamlContent.trim()),
              children: loading ?
              /* istanbul ignore next */
              (/*#__PURE__*/cov_2lozpbqg3d().b[18][0]++, (0, _jsxruntime.jsx)(_LoadingSpinner.LoadingSpinner, {
                size: "sm"
              })) :
              /* istanbul ignore next */
              (cov_2lozpbqg3d().b[18][1]++, "Import")
            })]
          })]
        })]
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "text-sm text-gray-600 bg-gray-50 p-4 rounded-md",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
        className: "font-medium mb-2",
        children: "YAML Import/Export"
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("ul", {
        className: "space-y-1 text-sm",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("li", {
          children: ["• ", /*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
            children: "Import:"
          }), " Paste Promptfoo-compatible YAML to create prompt cards with test cases"]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("li", {
          children: ["• ", /*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
            children: "Export:"
          }), " Download all prompt cards as Promptfoo YAML configuration"]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("li", {
          children: ["• ", /*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
            children: "Format:"
          }), " Compatible with ", /*#__PURE__*/(0, _jsxruntime.jsx)("a", {
            href: "https://github.com/promptfoo/promptfoo",
            target: "_blank",
            rel: "noopener noreferrer",
            className: "text-blue-600 hover:underline",
            children: "Promptfoo"
          }), " evaluation framework"]
        })]
      })]
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,