b9948b1c904a88490976362ae281055e
"use strict";

/* istanbul ignore next */
function cov_1u845ww06n() {
  var path = "/workspaces/prompt-card-system/frontend/src/hooks/useWebSocket.ts";
  var hash = "d8f20b699570106b0cf4da23625d234729a19bc5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/prompt-card-system/frontend/src/hooks/useWebSocket.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 24
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 28
        }
      },
      "6": {
        start: {
          line: 19,
          column: 15
        },
        end: {
          line: 19,
          column: 31
        }
      },
      "7": {
        start: {
          line: 20,
          column: 24
        },
        end: {
          line: 20,
          column: 51
        }
      },
      "8": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 159,
          column: 1
        }
      },
      "9": {
        start: {
          line: 22,
          column: 42
        },
        end: {
          line: 22,
          column: 69
        }
      },
      "10": {
        start: {
          line: 23,
          column: 22
        },
        end: {
          line: 23,
          column: 46
        }
      },
      "11": {
        start: {
          line: 24,
          column: 32
        },
        end: {
          line: 24,
          column: 56
        }
      },
      "12": {
        start: {
          line: 25,
          column: 108
        },
        end: {
          line: 25,
          column: 114
        }
      },
      "13": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 77,
          column: 5
        }
      },
      "14": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 29,
          column: 9
        }
      },
      "15": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 19
        }
      },
      "16": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 60
        }
      },
      "17": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 36,
          column: 11
        }
      },
      "18": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 46,
          column: 11
        }
      },
      "19": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 47
        }
      },
      "20": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 33
        }
      },
      "21": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 45,
          column: 13
        }
      },
      "22": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 58
        }
      },
      "23": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 51
        }
      },
      "24": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 59,
          column: 11
        }
      },
      "25": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 59
        }
      },
      "26": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 34
        }
      },
      "27": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "28": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 57,
          column: 17
        }
      },
      "29": {
        start: {
          line: 54,
          column: 20
        },
        end: {
          line: 56,
          column: 42
        }
      },
      "30": {
        start: {
          line: 55,
          column: 24
        },
        end: {
          line: 55,
          column: 34
        }
      },
      "31": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 63,
          column: 11
        }
      },
      "32": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 64
        }
      },
      "33": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 34
        }
      },
      "34": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 67,
          column: 11
        }
      },
      "35": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 82
        }
      },
      "36": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 33
        }
      },
      "37": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 70,
          column: 11
        }
      },
      "38": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 66
        }
      },
      "39": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 74,
          column: 11
        }
      },
      "40": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 59
        }
      },
      "41": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 34
        }
      },
      "42": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 36
        }
      },
      "43": {
        start: {
          line: 78,
          column: 23
        },
        end: {
          line: 89,
          column: 5
        }
      },
      "44": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "45": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 63
        }
      },
      "46": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 43
        }
      },
      "47": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 37
        }
      },
      "48": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 34
        }
      },
      "49": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "50": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 54
        }
      },
      "51": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 47
        }
      },
      "52": {
        start: {
          line: 90,
          column: 28
        },
        end: {
          line: 95,
          column: 5
        }
      },
      "53": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "54": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 71
        }
      },
      "55": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 66
        }
      },
      "56": {
        start: {
          line: 96,
          column: 32
        },
        end: {
          line: 101,
          column: 5
        }
      },
      "57": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "58": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 75
        }
      },
      "59": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 68
        }
      },
      "60": {
        start: {
          line: 102,
          column: 32
        },
        end: {
          line: 107,
          column: 5
        }
      },
      "61": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 106,
          column: 9
        }
      },
      "62": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 59
        }
      },
      "63": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 57
        }
      },
      "64": {
        start: {
          line: 108,
          column: 36
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "65": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "66": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 63
        }
      },
      "67": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 59
        }
      },
      "68": {
        start: {
          line: 114,
          column: 28
        },
        end: {
          line: 124,
          column: 5
        }
      },
      "69": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 123,
          column: 9
        }
      },
      "70": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 81
        }
      },
      "71": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 122,
          column: 15
        }
      },
      "72": {
        start: {
          line: 125,
          column: 24
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "73": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 128,
          column: 9
        }
      },
      "74": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 64
        }
      },
      "75": {
        start: {
          line: 130,
          column: 32
        },
        end: {
          line: 134,
          column: 5
        }
      },
      "76": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "77": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 60
        }
      },
      "78": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 145,
          column: 7
        }
      },
      "79": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 139,
          column: 9
        }
      },
      "80": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 22
        }
      },
      "81": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 142,
          column: 10
        }
      },
      "82": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 25
        }
      },
      "83": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 158,
          column: 6
        }
      },
      "84": {
        start: {
          line: 160,
          column: 17
        },
        end: {
          line: 160,
          column: 29
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 13
          },
          end: {
            line: 12,
            column: 14
          }
        },
        loc: {
          start: {
            line: 12,
            column: 24
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 19
          }
        },
        loc: {
          start: {
            line: 15,
            column: 29
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 21
          },
          end: {
            line: 21,
            column: 22
          }
        },
        loc: {
          start: {
            line: 21,
            column: 108
          },
          end: {
            line: 159,
            column: 1
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 20
          },
          end: {
            line: 26,
            column: 21
          }
        },
        loc: {
          start: {
            line: 26,
            column: 24
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 38,
            column: 40
          },
          end: {
            line: 38,
            column: 41
          }
        },
        loc: {
          start: {
            line: 38,
            column: 44
          },
          end: {
            line: 46,
            column: 9
          }
        },
        line: 38
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 47,
            column: 43
          },
          end: {
            line: 47,
            column: 44
          }
        },
        loc: {
          start: {
            line: 47,
            column: 53
          },
          end: {
            line: 59,
            column: 9
          }
        },
        line: 47
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 54,
            column: 61
          },
          end: {
            line: 54,
            column: 62
          }
        },
        loc: {
          start: {
            line: 54,
            column: 65
          },
          end: {
            line: 56,
            column: 21
          }
        },
        line: 54
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 60,
            column: 46
          },
          end: {
            line: 60,
            column: 47
          }
        },
        loc: {
          start: {
            line: 60,
            column: 55
          },
          end: {
            line: 63,
            column: 9
          }
        },
        line: 60
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 64,
            column: 42
          },
          end: {
            line: 64,
            column: 43
          }
        },
        loc: {
          start: {
            line: 64,
            column: 59
          },
          end: {
            line: 67,
            column: 9
          }
        },
        line: 64
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 68,
            column: 48
          },
          end: {
            line: 68,
            column: 49
          }
        },
        loc: {
          start: {
            line: 68,
            column: 57
          },
          end: {
            line: 70,
            column: 9
          }
        },
        line: 68
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 71,
            column: 49
          },
          end: {
            line: 71,
            column: 50
          }
        },
        loc: {
          start: {
            line: 71,
            column: 53
          },
          end: {
            line: 74,
            column: 9
          }
        },
        line: 71
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 78,
            column: 23
          },
          end: {
            line: 78,
            column: 24
          }
        },
        loc: {
          start: {
            line: 78,
            column: 27
          },
          end: {
            line: 89,
            column: 5
          }
        },
        line: 78
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 90,
            column: 28
          },
          end: {
            line: 90,
            column: 29
          }
        },
        loc: {
          start: {
            line: 90,
            column: 43
          },
          end: {
            line: 95,
            column: 5
          }
        },
        line: 90
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 96,
            column: 32
          },
          end: {
            line: 96,
            column: 33
          }
        },
        loc: {
          start: {
            line: 96,
            column: 47
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 96
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 102,
            column: 32
          },
          end: {
            line: 102,
            column: 33
          }
        },
        loc: {
          start: {
            line: 102,
            column: 36
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 102
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 108,
            column: 36
          },
          end: {
            line: 108,
            column: 37
          }
        },
        loc: {
          start: {
            line: 108,
            column: 40
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 108
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 114,
            column: 28
          },
          end: {
            line: 114,
            column: 29
          }
        },
        loc: {
          start: {
            line: 114,
            column: 51
          },
          end: {
            line: 124,
            column: 5
          }
        },
        line: 114
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 125,
            column: 24
          },
          end: {
            line: 125,
            column: 25
          }
        },
        loc: {
          start: {
            line: 125,
            column: 39
          },
          end: {
            line: 129,
            column: 5
          }
        },
        line: 125
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 130,
            column: 32
          },
          end: {
            line: 130,
            column: 33
          }
        },
        loc: {
          start: {
            line: 130,
            column: 36
          },
          end: {
            line: 134,
            column: 5
          }
        },
        line: 130
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 136,
            column: 26
          },
          end: {
            line: 136,
            column: 27
          }
        },
        loc: {
          start: {
            line: 136,
            column: 30
          },
          end: {
            line: 143,
            column: 5
          }
        },
        line: 136
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 140,
            column: 15
          },
          end: {
            line: 140,
            column: 16
          }
        },
        loc: {
          start: {
            line: 140,
            column: 19
          },
          end: {
            line: 142,
            column: 9
          }
        },
        line: 140
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 22
          },
          end: {
            line: 21,
            column: 92
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 21,
            column: 28
          },
          end: {
            line: 21,
            column: 92
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 28
          },
          end: {
            line: 21,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 28
          },
          end: {
            line: 21,
            column: 65
          }
        }, {
          start: {
            line: 21,
            column: 69
          },
          end: {
            line: 21,
            column: 92
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 21,
            column: 94
          },
          end: {
            line: 21,
            column: 105
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 21,
            column: 103
          },
          end: {
            line: 21,
            column: 105
          }
        }],
        line: 21
      },
      "3": {
        loc: {
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 25,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 26
          },
          end: {
            line: 25,
            column: 30
          }
        }],
        line: 25
      },
      "4": {
        loc: {
          start: {
            line: 25,
            column: 32
          },
          end: {
            line: 25,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 47
          },
          end: {
            line: 25,
            column: 51
          }
        }],
        line: 25
      },
      "5": {
        loc: {
          start: {
            line: 25,
            column: 53
          },
          end: {
            line: 25,
            column: 77
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 76
          },
          end: {
            line: 25,
            column: 77
          }
        }],
        line: 25
      },
      "6": {
        loc: {
          start: {
            line: 25,
            column: 79
          },
          end: {
            line: 25,
            column: 103
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 99
          },
          end: {
            line: 25,
            column: 103
          }
        }],
        line: 25
      },
      "7": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "8": {
        loc: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 29
          }
        }, {
          start: {
            line: 27,
            column: 33
          },
          end: {
            line: 27,
            column: 60
          }
        }],
        line: 27
      },
      "9": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "10": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "11": {
        loc: {
          start: {
            line: 53,
            column: 16
          },
          end: {
            line: 57,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 16
          },
          end: {
            line: 57,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "12": {
        loc: {
          start: {
            line: 53,
            column: 20
          },
          end: {
            line: 53,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 20
          },
          end: {
            line: 53,
            column: 32
          }
        }, {
          start: {
            line: 53,
            column: 36
          },
          end: {
            line: 53,
            column: 60
          }
        }],
        line: 53
      },
      "13": {
        loc: {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "14": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "15": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "16": {
        loc: {
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 91,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 91,
            column: 29
          }
        }, {
          start: {
            line: 91,
            column: 33
          },
          end: {
            line: 91,
            column: 44
          }
        }],
        line: 91
      },
      "17": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "18": {
        loc: {
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 97,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 97,
            column: 29
          }
        }, {
          start: {
            line: 97,
            column: 33
          },
          end: {
            line: 97,
            column: 44
          }
        }],
        line: 97
      },
      "19": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "20": {
        loc: {
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 103,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 103,
            column: 29
          }
        }, {
          start: {
            line: 103,
            column: 33
          },
          end: {
            line: 103,
            column: 44
          }
        }],
        line: 103
      },
      "21": {
        loc: {
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "22": {
        loc: {
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 109,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 109,
            column: 29
          }
        }, {
          start: {
            line: 109,
            column: 33
          },
          end: {
            line: 109,
            column: 44
          }
        }],
        line: 109
      },
      "23": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "24": {
        loc: {
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 115,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 115,
            column: 29
          }
        }, {
          start: {
            line: 115,
            column: 33
          },
          end: {
            line: 115,
            column: 44
          }
        }],
        line: 115
      },
      "25": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "26": {
        loc: {
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 126,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 126,
            column: 29
          }
        }, {
          start: {
            line: 126,
            column: 33
          },
          end: {
            line: 126,
            column: 44
          }
        }],
        line: 126
      },
      "27": {
        loc: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "28": {
        loc: {
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 131,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 131,
            column: 29
          }
        }, {
          start: {
            line: 131,
            column: 33
          },
          end: {
            line: 131,
            column: 44
          }
        }],
        line: 131
      },
      "29": {
        loc: {
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 139,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 139,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/workspaces/prompt-card-system/frontend/src/hooks/useWebSocket.ts"],
      sourcesContent: ["import { useEffect, useRef, useState } from 'react';\nimport { io, Socket } from 'socket.io-client';\n\nexport interface ExecutionProgress {\n  job_id: string;\n  execution_id: string;\n  total_tests: number;\n  completed_tests: number;\n  failed_tests: number;\n  current_test?: {\n    test_case_id: number;\n    model: string;\n    started_at: Date;\n    estimated_completion: Date;\n  };\n  overall_progress_percent: number;\n  estimated_time_remaining: number;\n  message: string;\n  status: 'pending' | 'running' | 'completed' | 'failed' | 'cancelled';\n  updated_at: Date;\n}\n\nexport interface TestExecutionResult {\n  test_case_id: number;\n  prompt: string;\n  model: string;\n  response: string;\n  passed: boolean;\n  assertions: Array<{\n    type: string;\n    passed: boolean;\n    message?: string;\n  }>;\n  execution_time_ms: number;\n  error?: string;\n}\n\nexport interface WebSocketConfig {\n  autoConnect?: boolean;\n  reconnection?: boolean;\n  reconnectionAttempts?: number;\n  reconnectionDelay?: number;\n}\n\nexport interface UseWebSocketReturn {\n  socket: Socket | null;\n  isConnected: boolean;\n  connect: () => void;\n  disconnect: () => void;\n  subscribeToTest: (executionId: string) => void;\n  unsubscribeFromTest: (executionId: string) => void;\n  subscribeToProgress: () => void;\n  unsubscribeFromProgress: () => void;\n  cancelExecution: (executionId: string, reason: string) => void;\n  getProgress: (executionId: string) => void;\n  getActiveExecutions: () => void;\n}\n\nexport const useWebSocket = (\n  url: string = process.env.NEXT_PUBLIC_WEBSOCKET_URL || 'http://localhost:3001',\n  config: WebSocketConfig = {}\n): UseWebSocketReturn => {\n  const [isConnected, setIsConnected] = useState(false);\n  const socketRef = useRef<Socket | null>(null);\n  const reconnectTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  const {\n    autoConnect = true,\n    reconnection = true,\n    reconnectionAttempts = 5,\n    reconnectionDelay = 1000\n  } = config;\n\n  const connect = () => {\n    if (socketRef.current && socketRef.current.connected) {\n      return;\n    }\n\n    console.log('Connecting to WebSocket server:', url);\n\n    socketRef.current = io(url, {\n      autoConnect: false,\n      reconnection,\n      reconnectionAttempts,\n      reconnectionDelay\n    });\n\n    // Connection event handlers\n    socketRef.current.on('connect', () => {\n      console.log('WebSocket connected');\n      setIsConnected(true);\n      \n      // Clear any pending reconnection timeout\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n        reconnectTimeoutRef.current = null;\n      }\n    });\n\n    socketRef.current.on('disconnect', (reason) => {\n      console.log('WebSocket disconnected:', reason);\n      setIsConnected(false);\n      \n      // Attempt to reconnect if not explicitly disconnected\n      if (reason === 'io server disconnect') {\n        // Server initiated disconnect, try to reconnect\n        if (reconnection && reconnectionAttempts > 0) {\n          reconnectTimeoutRef.current = setTimeout(() => {\n            connect();\n          }, reconnectionDelay);\n        }\n      }\n    });\n\n    socketRef.current.on('connect_error', (error) => {\n      console.error('WebSocket connection error:', error);\n      setIsConnected(false);\n    });\n\n    socketRef.current.on('reconnect', (attemptNumber) => {\n      console.log('WebSocket reconnected after', attemptNumber, 'attempts');\n      setIsConnected(true);\n    });\n\n    socketRef.current.on('reconnect_error', (error) => {\n      console.error('WebSocket reconnection error:', error);\n    });\n\n    socketRef.current.on('reconnect_failed', () => {\n      console.error('WebSocket reconnection failed');\n      setIsConnected(false);\n    });\n\n    // Connect\n    socketRef.current.connect();\n  };\n\n  const disconnect = () => {\n    if (socketRef.current) {\n      console.log('Disconnecting from WebSocket server');\n      socketRef.current.disconnect();\n      socketRef.current = null;\n      setIsConnected(false);\n    }\n\n    if (reconnectTimeoutRef.current) {\n      clearTimeout(reconnectTimeoutRef.current);\n      reconnectTimeoutRef.current = null;\n    }\n  };\n\n  const subscribeToTest = (executionId: string) => {\n    if (socketRef.current && isConnected) {\n      console.log('Subscribing to test execution:', executionId);\n      socketRef.current.emit('subscribe-test', executionId);\n    }\n  };\n\n  const unsubscribeFromTest = (executionId: string) => {\n    if (socketRef.current && isConnected) {\n      console.log('Unsubscribing from test execution:', executionId);\n      socketRef.current.emit('unsubscribe-test', executionId);\n    }\n  };\n\n  const subscribeToProgress = () => {\n    if (socketRef.current && isConnected) {\n      console.log('Subscribing to progress updates');\n      socketRef.current.emit('subscribe-progress');\n    }\n  };\n\n  const unsubscribeFromProgress = () => {\n    if (socketRef.current && isConnected) {\n      console.log('Unsubscribing from progress updates');\n      socketRef.current.emit('unsubscribe-progress');\n    }\n  };\n\n  const cancelExecution = (executionId: string, reason: string) => {\n    if (socketRef.current && isConnected) {\n      console.log('Cancelling execution:', executionId, 'reason:', reason);\n      socketRef.current.emit('cancel-execution', {\n        execution_id: executionId,\n        reason,\n        cleanup_partial_results: true,\n        notify_stakeholders: true\n      });\n    }\n  };\n\n  const getProgress = (executionId: string) => {\n    if (socketRef.current && isConnected) {\n      socketRef.current.emit('get-progress', executionId);\n    }\n  };\n\n  const getActiveExecutions = () => {\n    if (socketRef.current && isConnected) {\n      socketRef.current.emit('get-active-executions');\n    }\n  };\n\n  // Auto-connect on mount if enabled\n  useEffect(() => {\n    if (autoConnect) {\n      connect();\n    }\n\n    return () => {\n      disconnect();\n    };\n  }, [autoConnect]);\n\n  return {\n    socket: socketRef.current,\n    isConnected,\n    connect,\n    disconnect,\n    subscribeToTest,\n    unsubscribeFromTest,\n    subscribeToProgress,\n    unsubscribeFromProgress,\n    cancelExecution,\n    getProgress,\n    getActiveExecutions\n  };\n};\n\nexport default useWebSocket;"],
      names: ["useWebSocket", "url", "process", "env", "NEXT_PUBLIC_WEBSOCKET_URL", "config", "isConnected", "setIsConnected", "useState", "socketRef", "useRef", "reconnectTimeoutRef", "autoConnect", "reconnection", "reconnectionAttempts", "reconnectionDelay", "connect", "current", "connected", "console", "log", "io", "on", "clearTimeout", "reason", "setTimeout", "error", "attemptNumber", "disconnect", "subscribeToTest", "executionId", "emit", "unsubscribeFromTest", "subscribeToProgress", "unsubscribeFromProgress", "cancelExecution", "execution_id", "cleanup_partial_results", "notify_stakeholders", "getProgress", "getActiveExecutions", "useEffect", "socket"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d8f20b699570106b0cf4da23625d234729a19bc5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1u845ww06n = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1u845ww06n();
cov_1u845ww06n().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1u845ww06n().f[0]++;
  cov_1u845ww06n().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1u845ww06n().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1u845ww06n().s[3]++;
_export(exports, {
  default: function () {
    /* istanbul ignore next */
    cov_1u845ww06n().f[1]++;
    cov_1u845ww06n().s[4]++;
    return _default;
  },
  useWebSocket: function () {
    /* istanbul ignore next */
    cov_1u845ww06n().f[2]++;
    cov_1u845ww06n().s[5]++;
    return useWebSocket;
  }
});
const _react =
/* istanbul ignore next */
(cov_1u845ww06n().s[6]++, require("react"));
const _socketioclient =
/* istanbul ignore next */
(cov_1u845ww06n().s[7]++, require("socket.io-client"));
/* istanbul ignore next */
cov_1u845ww06n().s[8]++;
const useWebSocket = (url =
/* istanbul ignore next */
(cov_1u845ww06n().b[0][0]++,
/* istanbul ignore next */
(cov_1u845ww06n().b[1][0]++, process.env.NEXT_PUBLIC_WEBSOCKET_URL) ||
/* istanbul ignore next */
(cov_1u845ww06n().b[1][1]++, "http://localhost:3001")), config =
/* istanbul ignore next */
(cov_1u845ww06n().b[2][0]++, {})) => {
  /* istanbul ignore next */
  cov_1u845ww06n().f[3]++;
  const [isConnected, setIsConnected] =
  /* istanbul ignore next */
  (cov_1u845ww06n().s[9]++, (0, _react.useState)(false));
  const socketRef =
  /* istanbul ignore next */
  (cov_1u845ww06n().s[10]++, (0, _react.useRef)(null));
  const reconnectTimeoutRef =
  /* istanbul ignore next */
  (cov_1u845ww06n().s[11]++, (0, _react.useRef)(null));
  const {
    autoConnect =
    /* istanbul ignore next */
    (cov_1u845ww06n().b[3][0]++, true),
    reconnection =
    /* istanbul ignore next */
    (cov_1u845ww06n().b[4][0]++, true),
    reconnectionAttempts =
    /* istanbul ignore next */
    (cov_1u845ww06n().b[5][0]++, 5),
    reconnectionDelay =
    /* istanbul ignore next */
    (cov_1u845ww06n().b[6][0]++, 1000)
  } =
  /* istanbul ignore next */
  (cov_1u845ww06n().s[12]++, config);
  /* istanbul ignore next */
  cov_1u845ww06n().s[13]++;
  const connect = () => {
    /* istanbul ignore next */
    cov_1u845ww06n().f[4]++;
    cov_1u845ww06n().s[14]++;
    if (
    /* istanbul ignore next */
    (cov_1u845ww06n().b[8][0]++, socketRef.current) &&
    /* istanbul ignore next */
    (cov_1u845ww06n().b[8][1]++, socketRef.current.connected)) {
      /* istanbul ignore next */
      cov_1u845ww06n().b[7][0]++;
      cov_1u845ww06n().s[15]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1u845ww06n().b[7][1]++;
    }
    cov_1u845ww06n().s[16]++;
    console.log("Connecting to WebSocket server:", url);
    /* istanbul ignore next */
    cov_1u845ww06n().s[17]++;
    socketRef.current = (0, _socketioclient.io)(url, {
      autoConnect: false,
      reconnection,
      reconnectionAttempts,
      reconnectionDelay
    });
    // Connection event handlers
    /* istanbul ignore next */
    cov_1u845ww06n().s[18]++;
    socketRef.current.on("connect", () => {
      /* istanbul ignore next */
      cov_1u845ww06n().f[5]++;
      cov_1u845ww06n().s[19]++;
      console.log("WebSocket connected");
      /* istanbul ignore next */
      cov_1u845ww06n().s[20]++;
      setIsConnected(true);
      // Clear any pending reconnection timeout
      /* istanbul ignore next */
      cov_1u845ww06n().s[21]++;
      if (reconnectTimeoutRef.current) {
        /* istanbul ignore next */
        cov_1u845ww06n().b[9][0]++;
        cov_1u845ww06n().s[22]++;
        clearTimeout(reconnectTimeoutRef.current);
        /* istanbul ignore next */
        cov_1u845ww06n().s[23]++;
        reconnectTimeoutRef.current = null;
      } else
      /* istanbul ignore next */
      {
        cov_1u845ww06n().b[9][1]++;
      }
    });
    /* istanbul ignore next */
    cov_1u845ww06n().s[24]++;
    socketRef.current.on("disconnect", reason => {
      /* istanbul ignore next */
      cov_1u845ww06n().f[6]++;
      cov_1u845ww06n().s[25]++;
      console.log("WebSocket disconnected:", reason);
      /* istanbul ignore next */
      cov_1u845ww06n().s[26]++;
      setIsConnected(false);
      // Attempt to reconnect if not explicitly disconnected
      /* istanbul ignore next */
      cov_1u845ww06n().s[27]++;
      if (reason === "io server disconnect") {
        /* istanbul ignore next */
        cov_1u845ww06n().b[10][0]++;
        cov_1u845ww06n().s[28]++;
        // Server initiated disconnect, try to reconnect
        if (
        /* istanbul ignore next */
        (cov_1u845ww06n().b[12][0]++, reconnection) &&
        /* istanbul ignore next */
        (cov_1u845ww06n().b[12][1]++, reconnectionAttempts > 0)) {
          /* istanbul ignore next */
          cov_1u845ww06n().b[11][0]++;
          cov_1u845ww06n().s[29]++;
          reconnectTimeoutRef.current = setTimeout(() => {
            /* istanbul ignore next */
            cov_1u845ww06n().f[7]++;
            cov_1u845ww06n().s[30]++;
            connect();
          }, reconnectionDelay);
        } else
        /* istanbul ignore next */
        {
          cov_1u845ww06n().b[11][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1u845ww06n().b[10][1]++;
      }
    });
    /* istanbul ignore next */
    cov_1u845ww06n().s[31]++;
    socketRef.current.on("connect_error", error => {
      /* istanbul ignore next */
      cov_1u845ww06n().f[8]++;
      cov_1u845ww06n().s[32]++;
      console.error("WebSocket connection error:", error);
      /* istanbul ignore next */
      cov_1u845ww06n().s[33]++;
      setIsConnected(false);
    });
    /* istanbul ignore next */
    cov_1u845ww06n().s[34]++;
    socketRef.current.on("reconnect", attemptNumber => {
      /* istanbul ignore next */
      cov_1u845ww06n().f[9]++;
      cov_1u845ww06n().s[35]++;
      console.log("WebSocket reconnected after", attemptNumber, "attempts");
      /* istanbul ignore next */
      cov_1u845ww06n().s[36]++;
      setIsConnected(true);
    });
    /* istanbul ignore next */
    cov_1u845ww06n().s[37]++;
    socketRef.current.on("reconnect_error", error => {
      /* istanbul ignore next */
      cov_1u845ww06n().f[10]++;
      cov_1u845ww06n().s[38]++;
      console.error("WebSocket reconnection error:", error);
    });
    /* istanbul ignore next */
    cov_1u845ww06n().s[39]++;
    socketRef.current.on("reconnect_failed", () => {
      /* istanbul ignore next */
      cov_1u845ww06n().f[11]++;
      cov_1u845ww06n().s[40]++;
      console.error("WebSocket reconnection failed");
      /* istanbul ignore next */
      cov_1u845ww06n().s[41]++;
      setIsConnected(false);
    });
    // Connect
    /* istanbul ignore next */
    cov_1u845ww06n().s[42]++;
    socketRef.current.connect();
  };
  /* istanbul ignore next */
  cov_1u845ww06n().s[43]++;
  const disconnect = () => {
    /* istanbul ignore next */
    cov_1u845ww06n().f[12]++;
    cov_1u845ww06n().s[44]++;
    if (socketRef.current) {
      /* istanbul ignore next */
      cov_1u845ww06n().b[13][0]++;
      cov_1u845ww06n().s[45]++;
      console.log("Disconnecting from WebSocket server");
      /* istanbul ignore next */
      cov_1u845ww06n().s[46]++;
      socketRef.current.disconnect();
      /* istanbul ignore next */
      cov_1u845ww06n().s[47]++;
      socketRef.current = null;
      /* istanbul ignore next */
      cov_1u845ww06n().s[48]++;
      setIsConnected(false);
    } else
    /* istanbul ignore next */
    {
      cov_1u845ww06n().b[13][1]++;
    }
    cov_1u845ww06n().s[49]++;
    if (reconnectTimeoutRef.current) {
      /* istanbul ignore next */
      cov_1u845ww06n().b[14][0]++;
      cov_1u845ww06n().s[50]++;
      clearTimeout(reconnectTimeoutRef.current);
      /* istanbul ignore next */
      cov_1u845ww06n().s[51]++;
      reconnectTimeoutRef.current = null;
    } else
    /* istanbul ignore next */
    {
      cov_1u845ww06n().b[14][1]++;
    }
  };
  /* istanbul ignore next */
  cov_1u845ww06n().s[52]++;
  const subscribeToTest = executionId => {
    /* istanbul ignore next */
    cov_1u845ww06n().f[13]++;
    cov_1u845ww06n().s[53]++;
    if (
    /* istanbul ignore next */
    (cov_1u845ww06n().b[16][0]++, socketRef.current) &&
    /* istanbul ignore next */
    (cov_1u845ww06n().b[16][1]++, isConnected)) {
      /* istanbul ignore next */
      cov_1u845ww06n().b[15][0]++;
      cov_1u845ww06n().s[54]++;
      console.log("Subscribing to test execution:", executionId);
      /* istanbul ignore next */
      cov_1u845ww06n().s[55]++;
      socketRef.current.emit("subscribe-test", executionId);
    } else
    /* istanbul ignore next */
    {
      cov_1u845ww06n().b[15][1]++;
    }
  };
  /* istanbul ignore next */
  cov_1u845ww06n().s[56]++;
  const unsubscribeFromTest = executionId => {
    /* istanbul ignore next */
    cov_1u845ww06n().f[14]++;
    cov_1u845ww06n().s[57]++;
    if (
    /* istanbul ignore next */
    (cov_1u845ww06n().b[18][0]++, socketRef.current) &&
    /* istanbul ignore next */
    (cov_1u845ww06n().b[18][1]++, isConnected)) {
      /* istanbul ignore next */
      cov_1u845ww06n().b[17][0]++;
      cov_1u845ww06n().s[58]++;
      console.log("Unsubscribing from test execution:", executionId);
      /* istanbul ignore next */
      cov_1u845ww06n().s[59]++;
      socketRef.current.emit("unsubscribe-test", executionId);
    } else
    /* istanbul ignore next */
    {
      cov_1u845ww06n().b[17][1]++;
    }
  };
  /* istanbul ignore next */
  cov_1u845ww06n().s[60]++;
  const subscribeToProgress = () => {
    /* istanbul ignore next */
    cov_1u845ww06n().f[15]++;
    cov_1u845ww06n().s[61]++;
    if (
    /* istanbul ignore next */
    (cov_1u845ww06n().b[20][0]++, socketRef.current) &&
    /* istanbul ignore next */
    (cov_1u845ww06n().b[20][1]++, isConnected)) {
      /* istanbul ignore next */
      cov_1u845ww06n().b[19][0]++;
      cov_1u845ww06n().s[62]++;
      console.log("Subscribing to progress updates");
      /* istanbul ignore next */
      cov_1u845ww06n().s[63]++;
      socketRef.current.emit("subscribe-progress");
    } else
    /* istanbul ignore next */
    {
      cov_1u845ww06n().b[19][1]++;
    }
  };
  /* istanbul ignore next */
  cov_1u845ww06n().s[64]++;
  const unsubscribeFromProgress = () => {
    /* istanbul ignore next */
    cov_1u845ww06n().f[16]++;
    cov_1u845ww06n().s[65]++;
    if (
    /* istanbul ignore next */
    (cov_1u845ww06n().b[22][0]++, socketRef.current) &&
    /* istanbul ignore next */
    (cov_1u845ww06n().b[22][1]++, isConnected)) {
      /* istanbul ignore next */
      cov_1u845ww06n().b[21][0]++;
      cov_1u845ww06n().s[66]++;
      console.log("Unsubscribing from progress updates");
      /* istanbul ignore next */
      cov_1u845ww06n().s[67]++;
      socketRef.current.emit("unsubscribe-progress");
    } else
    /* istanbul ignore next */
    {
      cov_1u845ww06n().b[21][1]++;
    }
  };
  /* istanbul ignore next */
  cov_1u845ww06n().s[68]++;
  const cancelExecution = (executionId, reason) => {
    /* istanbul ignore next */
    cov_1u845ww06n().f[17]++;
    cov_1u845ww06n().s[69]++;
    if (
    /* istanbul ignore next */
    (cov_1u845ww06n().b[24][0]++, socketRef.current) &&
    /* istanbul ignore next */
    (cov_1u845ww06n().b[24][1]++, isConnected)) {
      /* istanbul ignore next */
      cov_1u845ww06n().b[23][0]++;
      cov_1u845ww06n().s[70]++;
      console.log("Cancelling execution:", executionId, "reason:", reason);
      /* istanbul ignore next */
      cov_1u845ww06n().s[71]++;
      socketRef.current.emit("cancel-execution", {
        execution_id: executionId,
        reason,
        cleanup_partial_results: true,
        notify_stakeholders: true
      });
    } else
    /* istanbul ignore next */
    {
      cov_1u845ww06n().b[23][1]++;
    }
  };
  /* istanbul ignore next */
  cov_1u845ww06n().s[72]++;
  const getProgress = executionId => {
    /* istanbul ignore next */
    cov_1u845ww06n().f[18]++;
    cov_1u845ww06n().s[73]++;
    if (
    /* istanbul ignore next */
    (cov_1u845ww06n().b[26][0]++, socketRef.current) &&
    /* istanbul ignore next */
    (cov_1u845ww06n().b[26][1]++, isConnected)) {
      /* istanbul ignore next */
      cov_1u845ww06n().b[25][0]++;
      cov_1u845ww06n().s[74]++;
      socketRef.current.emit("get-progress", executionId);
    } else
    /* istanbul ignore next */
    {
      cov_1u845ww06n().b[25][1]++;
    }
  };
  /* istanbul ignore next */
  cov_1u845ww06n().s[75]++;
  const getActiveExecutions = () => {
    /* istanbul ignore next */
    cov_1u845ww06n().f[19]++;
    cov_1u845ww06n().s[76]++;
    if (
    /* istanbul ignore next */
    (cov_1u845ww06n().b[28][0]++, socketRef.current) &&
    /* istanbul ignore next */
    (cov_1u845ww06n().b[28][1]++, isConnected)) {
      /* istanbul ignore next */
      cov_1u845ww06n().b[27][0]++;
      cov_1u845ww06n().s[77]++;
      socketRef.current.emit("get-active-executions");
    } else
    /* istanbul ignore next */
    {
      cov_1u845ww06n().b[27][1]++;
    }
  };
  // Auto-connect on mount if enabled
  /* istanbul ignore next */
  cov_1u845ww06n().s[78]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1u845ww06n().f[20]++;
    cov_1u845ww06n().s[79]++;
    if (autoConnect) {
      /* istanbul ignore next */
      cov_1u845ww06n().b[29][0]++;
      cov_1u845ww06n().s[80]++;
      connect();
    } else
    /* istanbul ignore next */
    {
      cov_1u845ww06n().b[29][1]++;
    }
    cov_1u845ww06n().s[81]++;
    return () => {
      /* istanbul ignore next */
      cov_1u845ww06n().f[21]++;
      cov_1u845ww06n().s[82]++;
      disconnect();
    };
  }, [autoConnect]);
  /* istanbul ignore next */
  cov_1u845ww06n().s[83]++;
  return {
    socket: socketRef.current,
    isConnected,
    connect,
    disconnect,
    subscribeToTest,
    unsubscribeFromTest,
    subscribeToProgress,
    unsubscribeFromProgress,
    cancelExecution,
    getProgress,
    getActiveExecutions
  };
};
const _default =
/* istanbul ignore next */
(cov_1u845ww06n().s[84]++, useWebSocket);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,