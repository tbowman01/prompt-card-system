{"version":3,"names":["default","cov_1u845ww06n","f","s","_default","useWebSocket","url","b","process","env","NEXT_PUBLIC_WEBSOCKET_URL","config","isConnected","setIsConnected","_react","useState","socketRef","useRef","reconnectTimeoutRef","autoConnect","reconnection","reconnectionAttempts","reconnectionDelay","connect","current","connected","console","log","_socketioclient","io","on","clearTimeout","reason","setTimeout","error","attemptNumber","disconnect","subscribeToTest","executionId","emit","unsubscribeFromTest","subscribeToProgress","unsubscribeFromProgress","cancelExecution","execution_id","cleanup_partial_results","notify_stakeholders","getProgress","getActiveExecutions","useEffect","socket"],"sources":["/workspaces/prompt-card-system/frontend/src/hooks/useWebSocket.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { io, Socket } from 'socket.io-client';\n\nexport interface ExecutionProgress {\n  job_id: string;\n  execution_id: string;\n  total_tests: number;\n  completed_tests: number;\n  failed_tests: number;\n  current_test?: {\n    test_case_id: number;\n    model: string;\n    started_at: Date;\n    estimated_completion: Date;\n  };\n  overall_progress_percent: number;\n  estimated_time_remaining: number;\n  message: string;\n  status: 'pending' | 'running' | 'completed' | 'failed' | 'cancelled';\n  updated_at: Date;\n}\n\nexport interface TestExecutionResult {\n  test_case_id: number;\n  prompt: string;\n  model: string;\n  response: string;\n  passed: boolean;\n  assertions: Array<{\n    type: string;\n    passed: boolean;\n    message?: string;\n  }>;\n  execution_time_ms: number;\n  error?: string;\n}\n\nexport interface WebSocketConfig {\n  autoConnect?: boolean;\n  reconnection?: boolean;\n  reconnectionAttempts?: number;\n  reconnectionDelay?: number;\n}\n\nexport interface UseWebSocketReturn {\n  socket: Socket | null;\n  isConnected: boolean;\n  connect: () => void;\n  disconnect: () => void;\n  subscribeToTest: (executionId: string) => void;\n  unsubscribeFromTest: (executionId: string) => void;\n  subscribeToProgress: () => void;\n  unsubscribeFromProgress: () => void;\n  cancelExecution: (executionId: string, reason: string) => void;\n  getProgress: (executionId: string) => void;\n  getActiveExecutions: () => void;\n}\n\nexport const useWebSocket = (\n  url: string = process.env.NEXT_PUBLIC_WEBSOCKET_URL || 'http://localhost:3001',\n  config: WebSocketConfig = {}\n): UseWebSocketReturn => {\n  const [isConnected, setIsConnected] = useState(false);\n  const socketRef = useRef<Socket | null>(null);\n  const reconnectTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  const {\n    autoConnect = true,\n    reconnection = true,\n    reconnectionAttempts = 5,\n    reconnectionDelay = 1000\n  } = config;\n\n  const connect = () => {\n    if (socketRef.current && socketRef.current.connected) {\n      return;\n    }\n\n    console.log('Connecting to WebSocket server:', url);\n\n    socketRef.current = io(url, {\n      autoConnect: false,\n      reconnection,\n      reconnectionAttempts,\n      reconnectionDelay\n    });\n\n    // Connection event handlers\n    socketRef.current.on('connect', () => {\n      console.log('WebSocket connected');\n      setIsConnected(true);\n      \n      // Clear any pending reconnection timeout\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n        reconnectTimeoutRef.current = null;\n      }\n    });\n\n    socketRef.current.on('disconnect', (reason) => {\n      console.log('WebSocket disconnected:', reason);\n      setIsConnected(false);\n      \n      // Attempt to reconnect if not explicitly disconnected\n      if (reason === 'io server disconnect') {\n        // Server initiated disconnect, try to reconnect\n        if (reconnection && reconnectionAttempts > 0) {\n          reconnectTimeoutRef.current = setTimeout(() => {\n            connect();\n          }, reconnectionDelay);\n        }\n      }\n    });\n\n    socketRef.current.on('connect_error', (error) => {\n      console.error('WebSocket connection error:', error);\n      setIsConnected(false);\n    });\n\n    socketRef.current.on('reconnect', (attemptNumber) => {\n      console.log('WebSocket reconnected after', attemptNumber, 'attempts');\n      setIsConnected(true);\n    });\n\n    socketRef.current.on('reconnect_error', (error) => {\n      console.error('WebSocket reconnection error:', error);\n    });\n\n    socketRef.current.on('reconnect_failed', () => {\n      console.error('WebSocket reconnection failed');\n      setIsConnected(false);\n    });\n\n    // Connect\n    socketRef.current.connect();\n  };\n\n  const disconnect = () => {\n    if (socketRef.current) {\n      console.log('Disconnecting from WebSocket server');\n      socketRef.current.disconnect();\n      socketRef.current = null;\n      setIsConnected(false);\n    }\n\n    if (reconnectTimeoutRef.current) {\n      clearTimeout(reconnectTimeoutRef.current);\n      reconnectTimeoutRef.current = null;\n    }\n  };\n\n  const subscribeToTest = (executionId: string) => {\n    if (socketRef.current && isConnected) {\n      console.log('Subscribing to test execution:', executionId);\n      socketRef.current.emit('subscribe-test', executionId);\n    }\n  };\n\n  const unsubscribeFromTest = (executionId: string) => {\n    if (socketRef.current && isConnected) {\n      console.log('Unsubscribing from test execution:', executionId);\n      socketRef.current.emit('unsubscribe-test', executionId);\n    }\n  };\n\n  const subscribeToProgress = () => {\n    if (socketRef.current && isConnected) {\n      console.log('Subscribing to progress updates');\n      socketRef.current.emit('subscribe-progress');\n    }\n  };\n\n  const unsubscribeFromProgress = () => {\n    if (socketRef.current && isConnected) {\n      console.log('Unsubscribing from progress updates');\n      socketRef.current.emit('unsubscribe-progress');\n    }\n  };\n\n  const cancelExecution = (executionId: string, reason: string) => {\n    if (socketRef.current && isConnected) {\n      console.log('Cancelling execution:', executionId, 'reason:', reason);\n      socketRef.current.emit('cancel-execution', {\n        execution_id: executionId,\n        reason,\n        cleanup_partial_results: true,\n        notify_stakeholders: true\n      });\n    }\n  };\n\n  const getProgress = (executionId: string) => {\n    if (socketRef.current && isConnected) {\n      socketRef.current.emit('get-progress', executionId);\n    }\n  };\n\n  const getActiveExecutions = () => {\n    if (socketRef.current && isConnected) {\n      socketRef.current.emit('get-active-executions');\n    }\n  };\n\n  // Auto-connect on mount if enabled\n  useEffect(() => {\n    if (autoConnect) {\n      connect();\n    }\n\n    return () => {\n      disconnect();\n    };\n  }, [autoConnect]);\n\n  return {\n    socket: socketRef.current,\n    isConnected,\n    connect,\n    disconnect,\n    subscribeToTest,\n    unsubscribeFromTest,\n    subscribeToProgress,\n    unsubscribeFromProgress,\n    cancelExecution,\n    getProgress,\n    getActiveExecutions\n  };\n};\n\nexport default useWebSocket;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}