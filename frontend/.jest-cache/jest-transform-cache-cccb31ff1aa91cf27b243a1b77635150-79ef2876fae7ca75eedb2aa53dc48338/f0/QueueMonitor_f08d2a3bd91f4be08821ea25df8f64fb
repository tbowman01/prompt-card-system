8ad7a9b8163c9dbf1823092e4b5062ab
"use strict";

/* istanbul ignore next */
function cov_1g35m22jqq() {
  var path = "/workspaces/prompt-card-system/frontend/src/components/TestExecution/QueueMonitor.tsx";
  var hash = "3c0c1d32714f2c4ff7fab26bce4fb75b2f2afcb3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/prompt-card-system/frontend/src/components/TestExecution/QueueMonitor.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "4": {
        start: {
          line: 12,
          column: 29
        },
        end: {
          line: 12,
          column: 72
        }
      },
      "5": {
        start: {
          line: 13,
          column: 22
        },
        end: {
          line: 13,
          column: 57
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 51
        }
      },
      "7": {
        start: {
          line: 15,
          column: 39
        },
        end: {
          line: 15,
          column: 51
        }
      },
      "8": {
        start: {
          line: 16,
          column: 28
        },
        end: {
          line: 16,
          column: 41
        }
      },
      "9": {
        start: {
          line: 17,
          column: 27
        },
        end: {
          line: 17,
          column: 40
        }
      },
      "10": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 20,
          column: 20
        }
      },
      "11": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 66
        }
      },
      "12": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "13": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 19
        }
      },
      "14": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "15": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 29,
          column: 10
        }
      },
      "16": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 53
        }
      },
      "17": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "18": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 30
        }
      },
      "19": {
        start: {
          line: 35,
          column: 17
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "20": {
        start: {
          line: 38,
          column: 32
        },
        end: {
          line: 38,
          column: 88
        }
      },
      "21": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "22": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "23": {
        start: {
          line: 41,
          column: 23
        },
        end: {
          line: 41,
          column: 95
        }
      },
      "24": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 46,
          column: 13
        }
      },
      "25": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 57
        }
      },
      "26": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 39
        }
      },
      "27": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 25
        }
      },
      "28": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "29": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 31
        }
      },
      "30": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 18
        }
      },
      "31": {
        start: {
          line: 55,
          column: 21
        },
        end: {
          line: 465,
          column: 1
        }
      },
      "32": {
        start: {
          line: 56,
          column: 40
        },
        end: {
          line: 56,
          column: 66
        }
      },
      "33": {
        start: {
          line: 57,
          column: 52
        },
        end: {
          line: 57,
          column: 76
        }
      },
      "34": {
        start: {
          line: 58,
          column: 38
        },
        end: {
          line: 58,
          column: 64
        }
      },
      "35": {
        start: {
          line: 59,
          column: 30
        },
        end: {
          line: 59,
          column: 56
        }
      },
      "36": {
        start: {
          line: 60,
          column: 103
        },
        end: {
          line: 60,
          column: 136
        }
      },
      "37": {
        start: {
          line: 61,
          column: 28
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "38": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "39": {
        start: {
          line: 63,
          column: 29
        },
        end: {
          line: 63,
          column: 71
        }
      },
      "40": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 66,
          column: 13
        }
      },
      "41": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 68
        }
      },
      "42": {
        start: {
          line: 67,
          column: 25
        },
        end: {
          line: 67,
          column: 46
        }
      },
      "43": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 37
        }
      },
      "44": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 62
        }
      },
      "45": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 94
        }
      },
      "46": {
        start: {
          line: 74,
          column: 34
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "47": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "48": {
        start: {
          line: 76,
          column: 29
        },
        end: {
          line: 76,
          column: 77
        }
      },
      "49": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 79,
          column: 13
        }
      },
      "50": {
        start: {
          line: 78,
          column: 16
        },
        end: {
          line: 78,
          column: 69
        }
      },
      "51": {
        start: {
          line: 80,
          column: 25
        },
        end: {
          line: 80,
          column: 46
        }
      },
      "52": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 43
        }
      },
      "53": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 68
        }
      },
      "54": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 95
        }
      },
      "55": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 32
        }
      },
      "56": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 105,
          column: 7
        }
      },
      "57": {
        start: {
          line: 90,
          column: 27
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "58": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 94,
          column: 15
        }
      },
      "59": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 32
        }
      },
      "60": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 21
        }
      },
      "61": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "62": {
        start: {
          line: 99,
          column: 29
        },
        end: {
          line: 99,
          column: 74
        }
      },
      "63": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 47
        }
      },
      "64": {
        start: {
          line: 100,
          column: 23
        },
        end: {
          line: 100,
          column: 46
        }
      },
      "65": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 138,
          column: 7
        }
      },
      "66": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 44
        }
      },
      "67": {
        start: {
          line: 107,
          column: 37
        },
        end: {
          line: 107,
          column: 44
        }
      },
      "68": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 30
        }
      },
      "69": {
        start: {
          line: 111,
          column: 31
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "70": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 121,
          column: 15
        }
      },
      "71": {
        start: {
          line: 113,
          column: 33
        },
        end: {
          line: 113,
          column: 91
        }
      },
      "72": {
        start: {
          line: 113,
          column: 50
        },
        end: {
          line: 113,
          column: 90
        }
      },
      "73": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 119,
          column: 17
        }
      },
      "74": {
        start: {
          line: 115,
          column: 20
        },
        end: {
          line: 118,
          column: 22
        }
      },
      "75": {
        start: {
          line: 120,
          column: 16
        },
        end: {
          line: 120,
          column: 32
        }
      },
      "76": {
        start: {
          line: 123,
          column: 39
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "77": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 44
        }
      },
      "78": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 46
        }
      },
      "79": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 63
        }
      },
      "80": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 30
        }
      },
      "81": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 134,
          column: 10
        }
      },
      "82": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 51
        }
      },
      "83": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 68
        }
      },
      "84": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 38
        }
      },
      "85": {
        start: {
          line: 139,
          column: 27
        },
        end: {
          line: 154,
          column: 5
        }
      },
      "86": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 153,
          column: 9
        }
      },
      "87": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 142,
          column: 55
        }
      },
      "88": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 144,
          column: 51
        }
      },
      "89": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 53
        }
      },
      "90": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 148,
          column: 49
        }
      },
      "91": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 150,
          column: 51
        }
      },
      "92": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 152,
          column: 51
        }
      },
      "93": {
        start: {
          line: 155,
          column: 23
        },
        end: {
          line: 158,
          column: 5
        }
      },
      "94": {
        start: {
          line: 156,
          column: 21
        },
        end: {
          line: 156,
          column: 41
        }
      },
      "95": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 41
        }
      },
      "96": {
        start: {
          line: 159,
          column: 27
        },
        end: {
          line: 170,
          column: 5
        }
      },
      "97": {
        start: {
          line: 160,
          column: 24
        },
        end: {
          line: 160,
          column: 45
        }
      },
      "98": {
        start: {
          line: 161,
          column: 24
        },
        end: {
          line: 161,
          column: 48
        }
      },
      "99": {
        start: {
          line: 162,
          column: 22
        },
        end: {
          line: 162,
          column: 46
        }
      },
      "100": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "101": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 48
        }
      },
      "102": {
        start: {
          line: 165,
          column: 15
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "103": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 50
        }
      },
      "104": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 33
        }
      },
      "105": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 187,
          column: 5
        }
      },
      "106": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 186,
          column: 11
        }
      },
      "107": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 210,
          column: 5
        }
      },
      "108": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 209,
          column: 11
        }
      },
      "109": {
        start: {
          line: 203,
          column: 37
        },
        end: {
          line: 203,
          column: 61
        }
      },
      "110": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 464,
          column: 7
        }
      },
      "111": {
        start: {
          line: 330,
          column: 82
        },
        end: {
          line: 459,
          column: 54
        }
      },
      "112": {
        start: {
          line: 466,
          column: 17
        },
        end: {
          line: 466,
          column: 29
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 33
          }
        },
        loc: {
          start: {
            line: 14,
            column: 47
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 39
          },
          end: {
            line: 18,
            column: 40
          }
        },
        loc: {
          start: {
            line: 18,
            column: 61
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 34
          }
        },
        loc: {
          start: {
            line: 22,
            column: 53
          },
          end: {
            line: 54,
            column: 1
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 55,
            column: 21
          },
          end: {
            line: 55,
            column: 22
          }
        },
        loc: {
          start: {
            line: 55,
            column: 71
          },
          end: {
            line: 465,
            column: 1
          }
        },
        line: 55
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 61,
            column: 28
          },
          end: {
            line: 61,
            column: 29
          }
        },
        loc: {
          start: {
            line: 61,
            column: 38
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 61
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 74,
            column: 34
          },
          end: {
            line: 74,
            column: 35
          }
        },
        loc: {
          start: {
            line: 74,
            column: 44
          },
          end: {
            line: 88,
            column: 5
          }
        },
        line: 74
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 89,
            column: 26
          },
          end: {
            line: 89,
            column: 27
          }
        },
        loc: {
          start: {
            line: 89,
            column: 30
          },
          end: {
            line: 102,
            column: 5
          }
        },
        line: 89
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 90,
            column: 27
          },
          end: {
            line: 90,
            column: 28
          }
        },
        loc: {
          start: {
            line: 90,
            column: 37
          },
          end: {
            line: 96,
            column: 9
          }
        },
        line: 90
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 100,
            column: 19
          },
          end: {
            line: 100,
            column: 20
          }
        },
        loc: {
          start: {
            line: 100,
            column: 23
          },
          end: {
            line: 100,
            column: 46
          }
        },
        line: 100
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 106,
            column: 26
          },
          end: {
            line: 106,
            column: 27
          }
        },
        loc: {
          start: {
            line: 106,
            column: 30
          },
          end: {
            line: 135,
            column: 5
          }
        },
        line: 106
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 111,
            column: 31
          },
          end: {
            line: 111,
            column: 32
          }
        },
        loc: {
          start: {
            line: 111,
            column: 43
          },
          end: {
            line: 122,
            column: 9
          }
        },
        line: 111
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 112,
            column: 32
          },
          end: {
            line: 112,
            column: 33
          }
        },
        loc: {
          start: {
            line: 112,
            column: 40
          },
          end: {
            line: 121,
            column: 13
          }
        },
        line: 112
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 113,
            column: 45
          },
          end: {
            line: 113,
            column: 46
          }
        },
        loc: {
          start: {
            line: 113,
            column: 50
          },
          end: {
            line: 113,
            column: 90
          }
        },
        line: 113
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 123,
            column: 39
          },
          end: {
            line: 123,
            column: 40
          }
        },
        loc: {
          start: {
            line: 123,
            column: 53
          },
          end: {
            line: 125,
            column: 9
          }
        },
        line: 123
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 130,
            column: 15
          },
          end: {
            line: 130,
            column: 16
          }
        },
        loc: {
          start: {
            line: 130,
            column: 19
          },
          end: {
            line: 134,
            column: 9
          }
        },
        line: 130
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 139,
            column: 27
          },
          end: {
            line: 139,
            column: 28
          }
        },
        loc: {
          start: {
            line: 139,
            column: 37
          },
          end: {
            line: 154,
            column: 5
          }
        },
        line: 139
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 155,
            column: 23
          },
          end: {
            line: 155,
            column: 24
          }
        },
        loc: {
          start: {
            line: 155,
            column: 37
          },
          end: {
            line: 158,
            column: 5
          }
        },
        line: 155
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 159,
            column: 27
          },
          end: {
            line: 159,
            column: 28
          }
        },
        loc: {
          start: {
            line: 159,
            column: 33
          },
          end: {
            line: 170,
            column: 5
          }
        },
        line: 159
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 203,
            column: 33
          },
          end: {
            line: 203,
            column: 34
          }
        },
        loc: {
          start: {
            line: 203,
            column: 37
          },
          end: {
            line: 203,
            column: 61
          }
        },
        line: 203
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 330,
            column: 55
          },
          end: {
            line: 330,
            column: 56
          }
        },
        loc: {
          start: {
            line: 330,
            column: 82
          },
          end: {
            line: 459,
            column: 54
          }
        },
        line: 330
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 19,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 19,
            column: 29
          },
          end: {
            line: 19,
            column: 45
          }
        }, {
          start: {
            line: 19,
            column: 48
          },
          end: {
            line: 19,
            column: 65
          }
        }],
        line: 19
      },
      "2": {
        loc: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "3": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 23,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 23,
            column: 20
          }
        }, {
          start: {
            line: 23,
            column: 24
          },
          end: {
            line: 23,
            column: 27
          }
        }, {
          start: {
            line: 23,
            column: 31
          },
          end: {
            line: 23,
            column: 45
          }
        }],
        line: 23
      },
      "4": {
        loc: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "5": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 26,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 26,
            column: 20
          }
        }, {
          start: {
            line: 26,
            column: 24
          },
          end: {
            line: 26,
            column: 47
          }
        }, {
          start: {
            line: 26,
            column: 51
          },
          end: {
            line: 26,
            column: 76
          }
        }],
        line: 26
      },
      "6": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "7": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 13
          }
        }, {
          start: {
            line: 32,
            column: 17
          },
          end: {
            line: 32,
            column: 31
          }
        }],
        line: 32
      },
      "8": {
        loc: {
          start: {
            line: 38,
            column: 32
          },
          end: {
            line: 38,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 32
          },
          end: {
            line: 38,
            column: 53
          }
        }, {
          start: {
            line: 38,
            column: 57
          },
          end: {
            line: 38,
            column: 88
          }
        }],
        line: 38
      },
      "9": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "10": {
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 29
          }
        }, {
          start: {
            line: 40,
            column: 33
          },
          end: {
            line: 40,
            column: 79
          }
        }],
        line: 40
      },
      "11": {
        loc: {
          start: {
            line: 41,
            column: 23
          },
          end: {
            line: 41,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 41,
            column: 47
          },
          end: {
            line: 41,
            column: 88
          }
        }, {
          start: {
            line: 41,
            column: 91
          },
          end: {
            line: 41,
            column: 95
          }
        }],
        line: 41
      },
      "12": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        }, {
          start: {
            line: 44,
            column: 19
          },
          end: {
            line: 46,
            column: 13
          }
        }],
        line: 42
      },
      "13": {
        loc: {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 42,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 42,
            column: 20
          }
        }, {
          start: {
            line: 42,
            column: 25
          },
          end: {
            line: 42,
            column: 33
          }
        }, {
          start: {
            line: 42,
            column: 37
          },
          end: {
            line: 42,
            column: 45
          }
        }],
        line: 42
      },
      "14": {
        loc: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "15": {
        loc: {
          start: {
            line: 55,
            column: 24
          },
          end: {
            line: 55,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 55,
            column: 38
          },
          end: {
            line: 55,
            column: 42
          }
        }],
        line: 55
      },
      "16": {
        loc: {
          start: {
            line: 55,
            column: 44
          },
          end: {
            line: 55,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 55,
            column: 62
          },
          end: {
            line: 55,
            column: 66
          }
        }],
        line: 55
      },
      "17": {
        loc: {
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "18": {
        loc: {
          start: {
            line: 71,
            column: 21
          },
          end: {
            line: 71,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 71,
            column: 44
          },
          end: {
            line: 71,
            column: 55
          }
        }, {
          start: {
            line: 71,
            column: 58
          },
          end: {
            line: 71,
            column: 92
          }
        }],
        line: 71
      },
      "19": {
        loc: {
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 79,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 79,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "20": {
        loc: {
          start: {
            line: 84,
            column: 21
          },
          end: {
            line: 84,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 84,
            column: 44
          },
          end: {
            line: 84,
            column: 55
          }
        }, {
          start: {
            line: 84,
            column: 58
          },
          end: {
            line: 84,
            column: 93
          }
        }],
        line: 84
      },
      "21": {
        loc: {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "22": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 107,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 107,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "23": {
        loc: {
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 107,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 107,
            column: 19
          }
        }, {
          start: {
            line: 107,
            column: 23
          },
          end: {
            line: 107,
            column: 35
          }
        }],
        line: 107
      },
      "24": {
        loc: {
          start: {
            line: 114,
            column: 16
          },
          end: {
            line: 119,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 16
          },
          end: {
            line: 119,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "25": {
        loc: {
          start: {
            line: 114,
            column: 20
          },
          end: {
            line: 114,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 20
          },
          end: {
            line: 114,
            column: 49
          }
        }, {
          start: {
            line: 114,
            column: 53
          },
          end: {
            line: 114,
            column: 82
          }
        }],
        line: 114
      },
      "26": {
        loc: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 142,
            column: 55
          }
        }, {
          start: {
            line: 143,
            column: 12
          },
          end: {
            line: 144,
            column: 51
          }
        }, {
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 146,
            column: 53
          }
        }, {
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 148,
            column: 49
          }
        }, {
          start: {
            line: 149,
            column: 12
          },
          end: {
            line: 150,
            column: 51
          }
        }, {
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 152,
            column: 51
          }
        }],
        line: 140
      },
      "27": {
        loc: {
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        }, {
          start: {
            line: 165,
            column: 15
          },
          end: {
            line: 169,
            column: 9
          }
        }],
        line: 163
      },
      "28": {
        loc: {
          start: {
            line: 165,
            column: 15
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 15
          },
          end: {
            line: 169,
            column: 9
          }
        }, {
          start: {
            line: 167,
            column: 15
          },
          end: {
            line: 169,
            column: 9
          }
        }],
        line: 165
      },
      "29": {
        loc: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 187,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 187,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "30": {
        loc: {
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 210,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 210,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "31": {
        loc: {
          start: {
            line: 228,
            column: 75
          },
          end: {
            line: 228,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 228,
            column: 89
          },
          end: {
            line: 228,
            column: 103
          }
        }, {
          start: {
            line: 228,
            column: 106
          },
          end: {
            line: 228,
            column: 118
          }
        }],
        line: 228
      },
      "32": {
        loc: {
          start: {
            line: 232,
            column: 50
          },
          end: {
            line: 232,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 232,
            column: 64
          },
          end: {
            line: 232,
            column: 75
          }
        }, {
          start: {
            line: 232,
            column: 78
          },
          end: {
            line: 232,
            column: 92
          }
        }],
        line: 232
      },
      "33": {
        loc: {
          start: {
            line: 238,
            column: 20
          },
          end: {
            line: 307,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 238,
            column: 20
          },
          end: {
            line: 238,
            column: 30
          }
        }, {
          start: {
            line: 238,
            column: 48
          },
          end: {
            line: 307,
            column: 22
          }
        }],
        line: 238
      },
      "34": {
        loc: {
          start: {
            line: 317,
            column: 20
          },
          end: {
            line: 460,
            column: 22
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 317,
            column: 66
          },
          end: {
            line: 328,
            column: 22
          }
        }, {
          start: {
            line: 328,
            column: 39
          },
          end: {
            line: 460,
            column: 22
          }
        }],
        line: 317
      },
      "35": {
        loc: {
          start: {
            line: 404,
            column: 52
          },
          end: {
            line: 410,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 404,
            column: 52
          },
          end: {
            line: 404,
            column: 78
          }
        }, {
          start: {
            line: 404,
            column: 96
          },
          end: {
            line: 410,
            column: 54
          }
        }],
        line: 404
      },
      "36": {
        loc: {
          start: {
            line: 413,
            column: 44
          },
          end: {
            line: 419,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 413,
            column: 44
          },
          end: {
            line: 413,
            column: 82
          }
        }, {
          start: {
            line: 413,
            column: 100
          },
          end: {
            line: 419,
            column: 46
          }
        }],
        line: 413
      },
      "37": {
        loc: {
          start: {
            line: 426,
            column: 36
          },
          end: {
            line: 457,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 426,
            column: 36
          },
          end: {
            line: 426,
            column: 58
          }
        }, {
          start: {
            line: 426,
            column: 76
          },
          end: {
            line: 457,
            column: 38
          }
        }],
        line: 426
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0, 0, 0, 0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/workspaces/prompt-card-system/frontend/src/components/TestExecution/QueueMonitor.tsx"],
      sourcesContent: ["import React, { useEffect, useState } from 'react';\nimport { useWebSocket, ExecutionProgress } from '../../hooks/useWebSocket';\n\ninterface QueueStats {\n  waiting: number;\n  active: number;\n  completed: number;\n  failed: number;\n  delayed: number;\n}\n\ninterface QueueMonitorProps {\n  autoRefresh?: boolean;\n  refreshInterval?: number;\n}\n\nconst QueueMonitor: React.FC<QueueMonitorProps> = ({\n  autoRefresh = true,\n  refreshInterval = 5000\n}) => {\n  const [queueStats, setQueueStats] = useState<QueueStats | null>(null);\n  const [activeExecutions, setActiveExecutions] = useState<ExecutionProgress[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const { socket, isConnected, subscribeToProgress, unsubscribeFromProgress, getActiveExecutions } = useWebSocket();\n\n  const fetchQueueStats = async () => {\n    try {\n      const response = await fetch('/api/test-cases/queue/stats');\n      if (!response.ok) {\n        throw new Error('Failed to fetch queue statistics');\n      }\n      const data = await response.json();\n      setQueueStats(data.data);\n    } catch (err) {\n      console.error('Error fetching queue stats:', err);\n      setError(err instanceof Error ? err.message : 'Failed to fetch queue statistics');\n    }\n  };\n\n  const fetchActiveExecutions = async () => {\n    try {\n      const response = await fetch('/api/test-cases/executions/active');\n      if (!response.ok) {\n        throw new Error('Failed to fetch active executions');\n      }\n      const data = await response.json();\n      setActiveExecutions(data.data);\n    } catch (err) {\n      console.error('Error fetching active executions:', err);\n      setError(err instanceof Error ? err.message : 'Failed to fetch active executions');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const initialize = async () => {\n      await Promise.all([fetchQueueStats(), fetchActiveExecutions()]);\n      setIsLoading(false);\n    };\n\n    initialize();\n\n    if (autoRefresh) {\n      const interval = setInterval(fetchQueueStats, refreshInterval);\n      return () => clearInterval(interval);\n    }\n  }, [autoRefresh, refreshInterval]);\n\n  useEffect(() => {\n    if (!socket || !isConnected) return;\n\n    // Subscribe to general progress updates\n    subscribeToProgress();\n\n    // Handle real-time updates\n    const handleProgress = (progress: ExecutionProgress) => {\n      setActiveExecutions(prev => {\n        const filtered = prev.filter(p => p.execution_id !== progress.execution_id);\n        if (progress.status === 'running' || progress.status === 'pending') {\n          return [...filtered, progress];\n        }\n        return filtered;\n      });\n    };\n\n    const handleActiveExecutions = (executions: ExecutionProgress[]) => {\n      setActiveExecutions(executions);\n    };\n\n    socket.on('progress', handleProgress);\n    socket.on('active-executions', handleActiveExecutions);\n\n    // Get initial active executions\n    getActiveExecutions();\n\n    return () => {\n      socket.off('progress', handleProgress);\n      socket.off('active-executions', handleActiveExecutions);\n      unsubscribeFromProgress();\n    };\n  }, [socket, isConnected]);\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'running':\n        return 'bg-blue-100 text-blue-800';\n      case 'completed':\n        return 'bg-green-100 text-green-800';\n      case 'failed':\n        return 'bg-red-100 text-red-800';\n      case 'cancelled':\n        return 'bg-gray-100 text-gray-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const formatTime = (dateString: string): string => {\n    const date = new Date(dateString);\n    return date.toLocaleTimeString();\n  };\n\n  const formatDuration = (ms: number): string => {\n    const seconds = Math.floor(ms / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n\n    if (hours > 0) {\n      return `${hours}h ${minutes % 60}m`;\n    } else if (minutes > 0) {\n      return `${minutes}m ${seconds % 60}s`;\n    } else {\n      return `${seconds}s`;\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n          <span className=\"ml-2\">Loading queue information...</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\n        <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n          <h3 className=\"text-lg font-semibold text-red-800 mb-2\">Error</h3>\n          <p className=\"text-sm text-red-700\">{error}</p>\n          <button\n            onClick={() => window.location.reload()}\n            className=\"mt-2 px-4 py-2 bg-red-600 text-white rounded-md text-sm hover:bg-red-700\"\n          >\n            Retry\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Queue Statistics */}\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-lg font-semibold\">Queue Statistics</h3>\n          <div className=\"flex items-center space-x-2\">\n            <div className={`w-3 h-3 rounded-full ${isConnected ? 'bg-green-500' : 'bg-red-500'}`}></div>\n            <span className=\"text-sm text-gray-600\">\n              {isConnected ? 'Connected' : 'Disconnected'}\n            </span>\n          </div>\n        </div>\n\n        {queueStats && (\n          <div className=\"grid grid-cols-5 gap-4\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-yellow-600\">{queueStats.waiting}</div>\n              <div className=\"text-sm text-gray-600\">Waiting</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-blue-600\">{queueStats.active}</div>\n              <div className=\"text-sm text-gray-600\">Active</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">{queueStats.completed}</div>\n              <div className=\"text-sm text-gray-600\">Completed</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-red-600\">{queueStats.failed}</div>\n              <div className=\"text-sm text-gray-600\">Failed</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-gray-600\">{queueStats.delayed}</div>\n              <div className=\"text-sm text-gray-600\">Delayed</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Active Executions */}\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\n        <h3 className=\"text-lg font-semibold mb-4\">Active Executions</h3>\n        \n        {activeExecutions.length === 0 ? (\n          <div className=\"text-center py-8 text-gray-500\">\n            <div className=\"text-4xl mb-2\">\uD83C\uDF89</div>\n            <p>No active test executions</p>\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            {activeExecutions.map((execution) => (\n              <div\n                key={execution.execution_id}\n                className=\"border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow\"\n              >\n                <div className=\"flex items-center justify-between mb-2\">\n                  <div className=\"flex items-center space-x-3\">\n                    <span className=\"font-mono text-sm text-gray-600\">\n                      {execution.execution_id.substring(0, 8)}...\n                    </span>\n                    <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(execution.status)}`}>\n                      {execution.status.toUpperCase()}\n                    </span>\n                  </div>\n                  <div className=\"text-sm text-gray-500\">\n                    Updated: {formatTime(execution.updated_at.toString())}\n                  </div>\n                </div>\n\n                <div className=\"mb-3\">\n                  <div className=\"flex justify-between text-sm text-gray-600 mb-1\">\n                    <span>Progress</span>\n                    <span>{Math.round(execution.overall_progress_percent)}%</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div\n                      className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                      style={{ width: `${Math.max(0, Math.min(100, execution.overall_progress_percent))}%` }}\n                    ></div>\n                  </div>\n                </div>\n\n                <div className=\"flex justify-between items-center text-sm\">\n                  <div className=\"flex space-x-4\">\n                    <span className=\"text-gray-600\">\n                      Tests: {execution.completed_tests}/{execution.total_tests}\n                    </span>\n                    {execution.failed_tests > 0 && (\n                      <span className=\"text-red-600\">\n                        Failed: {execution.failed_tests}\n                      </span>\n                    )}\n                  </div>\n                  {execution.estimated_time_remaining > 0 && (\n                    <span className=\"text-gray-500\">\n                      ETA: {formatDuration(execution.estimated_time_remaining)}\n                    </span>\n                  )}\n                </div>\n\n                <div className=\"mt-2 text-sm text-gray-600\">\n                  {execution.message}\n                </div>\n\n                {execution.current_test && (\n                  <div className=\"mt-3 p-3 bg-gray-50 rounded-md\">\n                    <div className=\"text-sm font-medium mb-1\">Currently Running:</div>\n                    <div className=\"text-sm text-gray-600 space-y-1\">\n                      <div>Test Case #{execution.current_test.test_case_id}</div>\n                      <div>Model: {execution.current_test.model}</div>\n                      <div>Started: {formatTime(execution.current_test.started_at.toString())}</div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default QueueMonitor;"],
      names: ["QueueMonitor", "autoRefresh", "refreshInterval", "queueStats", "setQueueStats", "useState", "activeExecutions", "setActiveExecutions", "isLoading", "setIsLoading", "error", "setError", "socket", "isConnected", "subscribeToProgress", "unsubscribeFromProgress", "getActiveExecutions", "useWebSocket", "fetchQueueStats", "response", "fetch", "ok", "Error", "data", "json", "err", "console", "message", "fetchActiveExecutions", "useEffect", "initialize", "Promise", "all", "interval", "setInterval", "clearInterval", "handleProgress", "progress", "prev", "filtered", "filter", "p", "execution_id", "status", "handleActiveExecutions", "executions", "on", "off", "getStatusColor", "formatTime", "dateString", "date", "Date", "toLocaleTimeString", "formatDuration", "ms", "seconds", "Math", "floor", "minutes", "hours", "div", "className", "span", "h3", "button", "onClick", "window", "location", "reload", "waiting", "active", "completed", "failed", "delayed", "length", "map", "execution", "substring", "toUpperCase", "updated_at", "toString", "round", "overall_progress_percent", "style", "width", "max", "min", "completed_tests", "total_tests", "failed_tests", "estimated_time_remaining", "current_test", "test_case_id", "model", "started_at"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3c0c1d32714f2c4ff7fab26bce4fb75b2f2afcb3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1g35m22jqq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1g35m22jqq();
cov_1g35m22jqq().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1g35m22jqq().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1g35m22jqq().f[0]++;
    cov_1g35m22jqq().s[2]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1g35m22jqq().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1g35m22jqq().s[4]++, _interop_require_wildcard(require("react")));
const _useWebSocket =
/* istanbul ignore next */
(cov_1g35m22jqq().s[5]++, require("../../hooks/useWebSocket"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1g35m22jqq().f[1]++;
  cov_1g35m22jqq().s[6]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1g35m22jqq().b[0][0]++;
    cov_1g35m22jqq().s[7]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1g35m22jqq().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1g35m22jqq().s[8]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1g35m22jqq().s[9]++, new WeakMap());
  /* istanbul ignore next */
  cov_1g35m22jqq().s[10]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1g35m22jqq().f[2]++;
    cov_1g35m22jqq().s[11]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1g35m22jqq().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1g35m22jqq().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1g35m22jqq().f[3]++;
  cov_1g35m22jqq().s[12]++;
  if (
  /* istanbul ignore next */
  (cov_1g35m22jqq().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1g35m22jqq().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1g35m22jqq().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1g35m22jqq().b[2][0]++;
    cov_1g35m22jqq().s[13]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1g35m22jqq().b[2][1]++;
  }
  cov_1g35m22jqq().s[14]++;
  if (
  /* istanbul ignore next */
  (cov_1g35m22jqq().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1g35m22jqq().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1g35m22jqq().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1g35m22jqq().b[4][0]++;
    cov_1g35m22jqq().s[15]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1g35m22jqq().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1g35m22jqq().s[16]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1g35m22jqq().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_1g35m22jqq().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1g35m22jqq().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1g35m22jqq().b[6][0]++;
    cov_1g35m22jqq().s[18]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1g35m22jqq().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1g35m22jqq().s[19]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1g35m22jqq().s[20]++,
  /* istanbul ignore next */
  (cov_1g35m22jqq().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1g35m22jqq().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1g35m22jqq().s[21]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1g35m22jqq().s[22]++;
    if (
    /* istanbul ignore next */
    (cov_1g35m22jqq().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1g35m22jqq().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1g35m22jqq().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1g35m22jqq().s[23]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1g35m22jqq().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1g35m22jqq().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1g35m22jqq().s[24]++;
      if (
      /* istanbul ignore next */
      (cov_1g35m22jqq().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1g35m22jqq().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1g35m22jqq().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1g35m22jqq().b[12][0]++;
        cov_1g35m22jqq().s[25]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1g35m22jqq().b[12][1]++;
        cov_1g35m22jqq().s[26]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1g35m22jqq().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1g35m22jqq().s[27]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1g35m22jqq().s[28]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1g35m22jqq().b[14][0]++;
    cov_1g35m22jqq().s[29]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1g35m22jqq().b[14][1]++;
  }
  cov_1g35m22jqq().s[30]++;
  return newObj;
}
/* istanbul ignore next */
cov_1g35m22jqq().s[31]++;
const QueueMonitor = ({
  autoRefresh =
  /* istanbul ignore next */
  (cov_1g35m22jqq().b[15][0]++, true),
  refreshInterval =
  /* istanbul ignore next */
  (cov_1g35m22jqq().b[16][0]++, 5000)
}) => {
  /* istanbul ignore next */
  cov_1g35m22jqq().f[4]++;
  const [queueStats, setQueueStats] =
  /* istanbul ignore next */
  (cov_1g35m22jqq().s[32]++, (0, _react.useState)(null));
  const [activeExecutions, setActiveExecutions] =
  /* istanbul ignore next */
  (cov_1g35m22jqq().s[33]++, (0, _react.useState)([]));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_1g35m22jqq().s[34]++, (0, _react.useState)(true));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_1g35m22jqq().s[35]++, (0, _react.useState)(null));
  const {
    socket,
    isConnected,
    subscribeToProgress,
    unsubscribeFromProgress,
    getActiveExecutions
  } =
  /* istanbul ignore next */
  (cov_1g35m22jqq().s[36]++, (0, _useWebSocket.useWebSocket)());
  /* istanbul ignore next */
  cov_1g35m22jqq().s[37]++;
  const fetchQueueStats = async () => {
    /* istanbul ignore next */
    cov_1g35m22jqq().f[5]++;
    cov_1g35m22jqq().s[38]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1g35m22jqq().s[39]++, await fetch("/api/test-cases/queue/stats"));
      /* istanbul ignore next */
      cov_1g35m22jqq().s[40]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1g35m22jqq().b[17][0]++;
        cov_1g35m22jqq().s[41]++;
        throw new Error("Failed to fetch queue statistics");
      } else
      /* istanbul ignore next */
      {
        cov_1g35m22jqq().b[17][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_1g35m22jqq().s[42]++, await response.json());
      /* istanbul ignore next */
      cov_1g35m22jqq().s[43]++;
      setQueueStats(data.data);
    } catch (err) {
      /* istanbul ignore next */
      cov_1g35m22jqq().s[44]++;
      console.error("Error fetching queue stats:", err);
      /* istanbul ignore next */
      cov_1g35m22jqq().s[45]++;
      setError(err instanceof Error ?
      /* istanbul ignore next */
      (cov_1g35m22jqq().b[18][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1g35m22jqq().b[18][1]++, "Failed to fetch queue statistics"));
    }
  };
  /* istanbul ignore next */
  cov_1g35m22jqq().s[46]++;
  const fetchActiveExecutions = async () => {
    /* istanbul ignore next */
    cov_1g35m22jqq().f[6]++;
    cov_1g35m22jqq().s[47]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1g35m22jqq().s[48]++, await fetch("/api/test-cases/executions/active"));
      /* istanbul ignore next */
      cov_1g35m22jqq().s[49]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1g35m22jqq().b[19][0]++;
        cov_1g35m22jqq().s[50]++;
        throw new Error("Failed to fetch active executions");
      } else
      /* istanbul ignore next */
      {
        cov_1g35m22jqq().b[19][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_1g35m22jqq().s[51]++, await response.json());
      /* istanbul ignore next */
      cov_1g35m22jqq().s[52]++;
      setActiveExecutions(data.data);
    } catch (err) {
      /* istanbul ignore next */
      cov_1g35m22jqq().s[53]++;
      console.error("Error fetching active executions:", err);
      /* istanbul ignore next */
      cov_1g35m22jqq().s[54]++;
      setError(err instanceof Error ?
      /* istanbul ignore next */
      (cov_1g35m22jqq().b[20][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1g35m22jqq().b[20][1]++, "Failed to fetch active executions"));
    } finally {
      /* istanbul ignore next */
      cov_1g35m22jqq().s[55]++;
      setIsLoading(false);
    }
  };
  /* istanbul ignore next */
  cov_1g35m22jqq().s[56]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1g35m22jqq().f[7]++;
    cov_1g35m22jqq().s[57]++;
    const initialize = async () => {
      /* istanbul ignore next */
      cov_1g35m22jqq().f[8]++;
      cov_1g35m22jqq().s[58]++;
      await Promise.all([fetchQueueStats(), fetchActiveExecutions()]);
      /* istanbul ignore next */
      cov_1g35m22jqq().s[59]++;
      setIsLoading(false);
    };
    /* istanbul ignore next */
    cov_1g35m22jqq().s[60]++;
    initialize();
    /* istanbul ignore next */
    cov_1g35m22jqq().s[61]++;
    if (autoRefresh) {
      /* istanbul ignore next */
      cov_1g35m22jqq().b[21][0]++;
      const interval =
      /* istanbul ignore next */
      (cov_1g35m22jqq().s[62]++, setInterval(fetchQueueStats, refreshInterval));
      /* istanbul ignore next */
      cov_1g35m22jqq().s[63]++;
      return () => {
        /* istanbul ignore next */
        cov_1g35m22jqq().f[9]++;
        cov_1g35m22jqq().s[64]++;
        return clearInterval(interval);
      };
    } else
    /* istanbul ignore next */
    {
      cov_1g35m22jqq().b[21][1]++;
    }
  }, [autoRefresh, refreshInterval]);
  /* istanbul ignore next */
  cov_1g35m22jqq().s[65]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1g35m22jqq().f[10]++;
    cov_1g35m22jqq().s[66]++;
    if (
    /* istanbul ignore next */
    (cov_1g35m22jqq().b[23][0]++, !socket) ||
    /* istanbul ignore next */
    (cov_1g35m22jqq().b[23][1]++, !isConnected)) {
      /* istanbul ignore next */
      cov_1g35m22jqq().b[22][0]++;
      cov_1g35m22jqq().s[67]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1g35m22jqq().b[22][1]++;
    }
    // Subscribe to general progress updates
    cov_1g35m22jqq().s[68]++;
    subscribeToProgress();
    // Handle real-time updates
    /* istanbul ignore next */
    cov_1g35m22jqq().s[69]++;
    const handleProgress = progress => {
      /* istanbul ignore next */
      cov_1g35m22jqq().f[11]++;
      cov_1g35m22jqq().s[70]++;
      setActiveExecutions(prev => {
        /* istanbul ignore next */
        cov_1g35m22jqq().f[12]++;
        const filtered =
        /* istanbul ignore next */
        (cov_1g35m22jqq().s[71]++, prev.filter(p => {
          /* istanbul ignore next */
          cov_1g35m22jqq().f[13]++;
          cov_1g35m22jqq().s[72]++;
          return p.execution_id !== progress.execution_id;
        }));
        /* istanbul ignore next */
        cov_1g35m22jqq().s[73]++;
        if (
        /* istanbul ignore next */
        (cov_1g35m22jqq().b[25][0]++, progress.status === "running") ||
        /* istanbul ignore next */
        (cov_1g35m22jqq().b[25][1]++, progress.status === "pending")) {
          /* istanbul ignore next */
          cov_1g35m22jqq().b[24][0]++;
          cov_1g35m22jqq().s[74]++;
          return [...filtered, progress];
        } else
        /* istanbul ignore next */
        {
          cov_1g35m22jqq().b[24][1]++;
        }
        cov_1g35m22jqq().s[75]++;
        return filtered;
      });
    };
    /* istanbul ignore next */
    cov_1g35m22jqq().s[76]++;
    const handleActiveExecutions = executions => {
      /* istanbul ignore next */
      cov_1g35m22jqq().f[14]++;
      cov_1g35m22jqq().s[77]++;
      setActiveExecutions(executions);
    };
    /* istanbul ignore next */
    cov_1g35m22jqq().s[78]++;
    socket.on("progress", handleProgress);
    /* istanbul ignore next */
    cov_1g35m22jqq().s[79]++;
    socket.on("active-executions", handleActiveExecutions);
    // Get initial active executions
    /* istanbul ignore next */
    cov_1g35m22jqq().s[80]++;
    getActiveExecutions();
    /* istanbul ignore next */
    cov_1g35m22jqq().s[81]++;
    return () => {
      /* istanbul ignore next */
      cov_1g35m22jqq().f[15]++;
      cov_1g35m22jqq().s[82]++;
      socket.off("progress", handleProgress);
      /* istanbul ignore next */
      cov_1g35m22jqq().s[83]++;
      socket.off("active-executions", handleActiveExecutions);
      /* istanbul ignore next */
      cov_1g35m22jqq().s[84]++;
      unsubscribeFromProgress();
    };
  }, [socket, isConnected]);
  /* istanbul ignore next */
  cov_1g35m22jqq().s[85]++;
  const getStatusColor = status => {
    /* istanbul ignore next */
    cov_1g35m22jqq().f[16]++;
    cov_1g35m22jqq().s[86]++;
    switch (status) {
      case "pending":
        /* istanbul ignore next */
        cov_1g35m22jqq().b[26][0]++;
        cov_1g35m22jqq().s[87]++;
        return "bg-yellow-100 text-yellow-800";
      case "running":
        /* istanbul ignore next */
        cov_1g35m22jqq().b[26][1]++;
        cov_1g35m22jqq().s[88]++;
        return "bg-blue-100 text-blue-800";
      case "completed":
        /* istanbul ignore next */
        cov_1g35m22jqq().b[26][2]++;
        cov_1g35m22jqq().s[89]++;
        return "bg-green-100 text-green-800";
      case "failed":
        /* istanbul ignore next */
        cov_1g35m22jqq().b[26][3]++;
        cov_1g35m22jqq().s[90]++;
        return "bg-red-100 text-red-800";
      case "cancelled":
        /* istanbul ignore next */
        cov_1g35m22jqq().b[26][4]++;
        cov_1g35m22jqq().s[91]++;
        return "bg-gray-100 text-gray-800";
      default:
        /* istanbul ignore next */
        cov_1g35m22jqq().b[26][5]++;
        cov_1g35m22jqq().s[92]++;
        return "bg-gray-100 text-gray-800";
    }
  };
  /* istanbul ignore next */
  cov_1g35m22jqq().s[93]++;
  const formatTime = dateString => {
    /* istanbul ignore next */
    cov_1g35m22jqq().f[17]++;
    const date =
    /* istanbul ignore next */
    (cov_1g35m22jqq().s[94]++, new Date(dateString));
    /* istanbul ignore next */
    cov_1g35m22jqq().s[95]++;
    return date.toLocaleTimeString();
  };
  /* istanbul ignore next */
  cov_1g35m22jqq().s[96]++;
  const formatDuration = ms => {
    /* istanbul ignore next */
    cov_1g35m22jqq().f[18]++;
    const seconds =
    /* istanbul ignore next */
    (cov_1g35m22jqq().s[97]++, Math.floor(ms / 1000));
    const minutes =
    /* istanbul ignore next */
    (cov_1g35m22jqq().s[98]++, Math.floor(seconds / 60));
    const hours =
    /* istanbul ignore next */
    (cov_1g35m22jqq().s[99]++, Math.floor(minutes / 60));
    /* istanbul ignore next */
    cov_1g35m22jqq().s[100]++;
    if (hours > 0) {
      /* istanbul ignore next */
      cov_1g35m22jqq().b[27][0]++;
      cov_1g35m22jqq().s[101]++;
      return `${hours}h ${minutes % 60}m`;
    } else {
      /* istanbul ignore next */
      cov_1g35m22jqq().b[27][1]++;
      cov_1g35m22jqq().s[102]++;
      if (minutes > 0) {
        /* istanbul ignore next */
        cov_1g35m22jqq().b[28][0]++;
        cov_1g35m22jqq().s[103]++;
        return `${minutes}m ${seconds % 60}s`;
      } else {
        /* istanbul ignore next */
        cov_1g35m22jqq().b[28][1]++;
        cov_1g35m22jqq().s[104]++;
        return `${seconds}s`;
      }
    }
  };
  /* istanbul ignore next */
  cov_1g35m22jqq().s[105]++;
  if (isLoading) {
    /* istanbul ignore next */
    cov_1g35m22jqq().b[29][0]++;
    cov_1g35m22jqq().s[106]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "bg-white rounded-lg shadow-md p-6",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center justify-center h-64",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
          className: "ml-2",
          children: "Loading queue information..."
        })]
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_1g35m22jqq().b[29][1]++;
  }
  cov_1g35m22jqq().s[107]++;
  if (error) {
    /* istanbul ignore next */
    cov_1g35m22jqq().b[30][0]++;
    cov_1g35m22jqq().s[108]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "bg-white rounded-lg shadow-md p-6",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-red-50 border border-red-200 rounded-md p-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
          className: "text-lg font-semibold text-red-800 mb-2",
          children: "Error"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-sm text-red-700",
          children: error
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          onClick: () => {
            /* istanbul ignore next */
            cov_1g35m22jqq().f[19]++;
            cov_1g35m22jqq().s[109]++;
            return window.location.reload();
          },
          className: "mt-2 px-4 py-2 bg-red-600 text-white rounded-md text-sm hover:bg-red-700",
          children: "Retry"
        })]
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_1g35m22jqq().b[30][1]++;
  }
  cov_1g35m22jqq().s[110]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "space-y-6",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "bg-white rounded-lg shadow-md p-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center justify-between mb-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
          className: "text-lg font-semibold",
          children: "Queue Statistics"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center space-x-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: `w-3 h-3 rounded-full ${isConnected ?
            /* istanbul ignore next */
            (cov_1g35m22jqq().b[31][0]++, "bg-green-500") :
            /* istanbul ignore next */
            (cov_1g35m22jqq().b[31][1]++, "bg-red-500")}`
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: "text-sm text-gray-600",
            children: isConnected ?
            /* istanbul ignore next */
            (cov_1g35m22jqq().b[32][0]++, "Connected") :
            /* istanbul ignore next */
            (cov_1g35m22jqq().b[32][1]++, "Disconnected")
          })]
        })]
      }),
      /* istanbul ignore next */
      (cov_1g35m22jqq().b[33][0]++, queueStats) &&
      /* istanbul ignore next */
      (cov_1g35m22jqq().b[33][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "grid grid-cols-5 gap-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "text-center",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-2xl font-bold text-yellow-600",
            children: queueStats.waiting
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-sm text-gray-600",
            children: "Waiting"
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "text-center",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-2xl font-bold text-blue-600",
            children: queueStats.active
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-sm text-gray-600",
            children: "Active"
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "text-center",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-2xl font-bold text-green-600",
            children: queueStats.completed
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-sm text-gray-600",
            children: "Completed"
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "text-center",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-2xl font-bold text-red-600",
            children: queueStats.failed
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-sm text-gray-600",
            children: "Failed"
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "text-center",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-2xl font-bold text-gray-600",
            children: queueStats.delayed
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-sm text-gray-600",
            children: "Delayed"
          })]
        })]
      }))]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "bg-white rounded-lg shadow-md p-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
        className: "text-lg font-semibold mb-4",
        children: "Active Executions"
      }), activeExecutions.length === 0 ?
      /* istanbul ignore next */
      (/*#__PURE__*/cov_1g35m22jqq().b[34][0]++, (0, _jsxruntime.jsxs)("div", {
        className: "text-center py-8 text-gray-500",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "text-4xl mb-2",
          children: "\uD83C\uDF89"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          children: "No active test executions"
        })]
      })) :
      /* istanbul ignore next */
      (/*#__PURE__*/cov_1g35m22jqq().b[34][1]++, (0, _jsxruntime.jsx)("div", {
        className: "space-y-4",
        children: activeExecutions.map(execution => {
          /* istanbul ignore next */
          cov_1g35m22jqq().f[20]++;
          cov_1g35m22jqq().s[111]++;
          return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center justify-between mb-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center space-x-3",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                  className: "font-mono text-sm text-gray-600",
                  children: [execution.execution_id.substring(0, 8), "..."]
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  className: `px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(execution.status)}`,
                  children: execution.status.toUpperCase()
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "text-sm text-gray-500",
                children: ["Updated: ", formatTime(execution.updated_at.toString())]
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "mb-3",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex justify-between text-sm text-gray-600 mb-1",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  children: "Progress"
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                  children: [Math.round(execution.overall_progress_percent), "%"]
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "w-full bg-gray-200 rounded-full h-2",
                children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "bg-blue-600 h-2 rounded-full transition-all duration-300",
                  style: {
                    width: `${Math.max(0, Math.min(100, execution.overall_progress_percent))}%`
                  }
                })
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex justify-between items-center text-sm",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex space-x-4",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                  className: "text-gray-600",
                  children: ["Tests: ", execution.completed_tests, "/", execution.total_tests]
                }),
                /* istanbul ignore next */
                (cov_1g35m22jqq().b[35][0]++, execution.failed_tests > 0) &&
                /* istanbul ignore next */
                (cov_1g35m22jqq().b[35][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                  className: "text-red-600",
                  children: ["Failed: ", execution.failed_tests]
                }))]
              }),
              /* istanbul ignore next */
              (cov_1g35m22jqq().b[36][0]++, execution.estimated_time_remaining > 0) &&
              /* istanbul ignore next */
              (cov_1g35m22jqq().b[36][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                className: "text-gray-500",
                children: ["ETA: ", formatDuration(execution.estimated_time_remaining)]
              }))]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "mt-2 text-sm text-gray-600",
              children: execution.message
            }),
            /* istanbul ignore next */
            (cov_1g35m22jqq().b[37][0]++, execution.current_test) &&
            /* istanbul ignore next */
            (cov_1g35m22jqq().b[37][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "mt-3 p-3 bg-gray-50 rounded-md",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "text-sm font-medium mb-1",
                children: "Currently Running:"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "text-sm text-gray-600 space-y-1",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: ["Test Case #", execution.current_test.test_case_id]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: ["Model: ", execution.current_test.model]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: ["Started: ", formatTime(execution.current_test.started_at.toString())]
                })]
              })]
            }))]
          }, execution.execution_id);
        })
      }))]
    })]
  });
};
const _default =
/* istanbul ignore next */
(cov_1g35m22jqq().s[112]++, QueueMonitor);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,