{"version":3,"names":["_default","QueueMonitor","autoRefresh","cov_1g35m22jqq","b","refreshInterval","f","queueStats","setQueueStats","s","_react","useState","activeExecutions","setActiveExecutions","isLoading","setIsLoading","error","setError","socket","isConnected","subscribeToProgress","unsubscribeFromProgress","getActiveExecutions","_useWebSocket","useWebSocket","fetchQueueStats","response","fetch","ok","Error","data","json","err","console","message","fetchActiveExecutions","useEffect","initialize","Promise","all","interval","setInterval","clearInterval","handleProgress","progress","prev","filtered","filter","p","execution_id","status","handleActiveExecutions","executions","on","off","getStatusColor","formatTime","dateString","date","Date","toLocaleTimeString","formatDuration","ms","seconds","Math","floor","minutes","hours","_jsxruntime","jsx","className","jsxs","onClick","window","location","reload","waiting","active","completed","failed","delayed","length","map","execution","substring","toUpperCase","updated_at","toString","round","overall_progress_percent","style","width","max","min","completed_tests","total_tests","failed_tests","estimated_time_remaining","current_test","test_case_id","model","started_at"],"sources":["/workspaces/prompt-card-system/frontend/src/components/TestExecution/QueueMonitor.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useWebSocket, ExecutionProgress } from '../../hooks/useWebSocket';\n\ninterface QueueStats {\n  waiting: number;\n  active: number;\n  completed: number;\n  failed: number;\n  delayed: number;\n}\n\ninterface QueueMonitorProps {\n  autoRefresh?: boolean;\n  refreshInterval?: number;\n}\n\nconst QueueMonitor: React.FC<QueueMonitorProps> = ({\n  autoRefresh = true,\n  refreshInterval = 5000\n}) => {\n  const [queueStats, setQueueStats] = useState<QueueStats | null>(null);\n  const [activeExecutions, setActiveExecutions] = useState<ExecutionProgress[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const { socket, isConnected, subscribeToProgress, unsubscribeFromProgress, getActiveExecutions } = useWebSocket();\n\n  const fetchQueueStats = async () => {\n    try {\n      const response = await fetch('/api/test-cases/queue/stats');\n      if (!response.ok) {\n        throw new Error('Failed to fetch queue statistics');\n      }\n      const data = await response.json();\n      setQueueStats(data.data);\n    } catch (err) {\n      console.error('Error fetching queue stats:', err);\n      setError(err instanceof Error ? err.message : 'Failed to fetch queue statistics');\n    }\n  };\n\n  const fetchActiveExecutions = async () => {\n    try {\n      const response = await fetch('/api/test-cases/executions/active');\n      if (!response.ok) {\n        throw new Error('Failed to fetch active executions');\n      }\n      const data = await response.json();\n      setActiveExecutions(data.data);\n    } catch (err) {\n      console.error('Error fetching active executions:', err);\n      setError(err instanceof Error ? err.message : 'Failed to fetch active executions');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const initialize = async () => {\n      await Promise.all([fetchQueueStats(), fetchActiveExecutions()]);\n      setIsLoading(false);\n    };\n\n    initialize();\n\n    if (autoRefresh) {\n      const interval = setInterval(fetchQueueStats, refreshInterval);\n      return () => clearInterval(interval);\n    }\n  }, [autoRefresh, refreshInterval]);\n\n  useEffect(() => {\n    if (!socket || !isConnected) return;\n\n    // Subscribe to general progress updates\n    subscribeToProgress();\n\n    // Handle real-time updates\n    const handleProgress = (progress: ExecutionProgress) => {\n      setActiveExecutions(prev => {\n        const filtered = prev.filter(p => p.execution_id !== progress.execution_id);\n        if (progress.status === 'running' || progress.status === 'pending') {\n          return [...filtered, progress];\n        }\n        return filtered;\n      });\n    };\n\n    const handleActiveExecutions = (executions: ExecutionProgress[]) => {\n      setActiveExecutions(executions);\n    };\n\n    socket.on('progress', handleProgress);\n    socket.on('active-executions', handleActiveExecutions);\n\n    // Get initial active executions\n    getActiveExecutions();\n\n    return () => {\n      socket.off('progress', handleProgress);\n      socket.off('active-executions', handleActiveExecutions);\n      unsubscribeFromProgress();\n    };\n  }, [socket, isConnected]);\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'running':\n        return 'bg-blue-100 text-blue-800';\n      case 'completed':\n        return 'bg-green-100 text-green-800';\n      case 'failed':\n        return 'bg-red-100 text-red-800';\n      case 'cancelled':\n        return 'bg-gray-100 text-gray-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const formatTime = (dateString: string): string => {\n    const date = new Date(dateString);\n    return date.toLocaleTimeString();\n  };\n\n  const formatDuration = (ms: number): string => {\n    const seconds = Math.floor(ms / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n\n    if (hours > 0) {\n      return `${hours}h ${minutes % 60}m`;\n    } else if (minutes > 0) {\n      return `${minutes}m ${seconds % 60}s`;\n    } else {\n      return `${seconds}s`;\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n          <span className=\"ml-2\">Loading queue information...</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\n        <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n          <h3 className=\"text-lg font-semibold text-red-800 mb-2\">Error</h3>\n          <p className=\"text-sm text-red-700\">{error}</p>\n          <button\n            onClick={() => window.location.reload()}\n            className=\"mt-2 px-4 py-2 bg-red-600 text-white rounded-md text-sm hover:bg-red-700\"\n          >\n            Retry\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Queue Statistics */}\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-lg font-semibold\">Queue Statistics</h3>\n          <div className=\"flex items-center space-x-2\">\n            <div className={`w-3 h-3 rounded-full ${isConnected ? 'bg-green-500' : 'bg-red-500'}`}></div>\n            <span className=\"text-sm text-gray-600\">\n              {isConnected ? 'Connected' : 'Disconnected'}\n            </span>\n          </div>\n        </div>\n\n        {queueStats && (\n          <div className=\"grid grid-cols-5 gap-4\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-yellow-600\">{queueStats.waiting}</div>\n              <div className=\"text-sm text-gray-600\">Waiting</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-blue-600\">{queueStats.active}</div>\n              <div className=\"text-sm text-gray-600\">Active</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">{queueStats.completed}</div>\n              <div className=\"text-sm text-gray-600\">Completed</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-red-600\">{queueStats.failed}</div>\n              <div className=\"text-sm text-gray-600\">Failed</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-gray-600\">{queueStats.delayed}</div>\n              <div className=\"text-sm text-gray-600\">Delayed</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Active Executions */}\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\n        <h3 className=\"text-lg font-semibold mb-4\">Active Executions</h3>\n        \n        {activeExecutions.length === 0 ? (\n          <div className=\"text-center py-8 text-gray-500\">\n            <div className=\"text-4xl mb-2\">ðŸŽ‰</div>\n            <p>No active test executions</p>\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            {activeExecutions.map((execution) => (\n              <div\n                key={execution.execution_id}\n                className=\"border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow\"\n              >\n                <div className=\"flex items-center justify-between mb-2\">\n                  <div className=\"flex items-center space-x-3\">\n                    <span className=\"font-mono text-sm text-gray-600\">\n                      {execution.execution_id.substring(0, 8)}...\n                    </span>\n                    <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(execution.status)}`}>\n                      {execution.status.toUpperCase()}\n                    </span>\n                  </div>\n                  <div className=\"text-sm text-gray-500\">\n                    Updated: {formatTime(execution.updated_at.toString())}\n                  </div>\n                </div>\n\n                <div className=\"mb-3\">\n                  <div className=\"flex justify-between text-sm text-gray-600 mb-1\">\n                    <span>Progress</span>\n                    <span>{Math.round(execution.overall_progress_percent)}%</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div\n                      className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                      style={{ width: `${Math.max(0, Math.min(100, execution.overall_progress_percent))}%` }}\n                    ></div>\n                  </div>\n                </div>\n\n                <div className=\"flex justify-between items-center text-sm\">\n                  <div className=\"flex space-x-4\">\n                    <span className=\"text-gray-600\">\n                      Tests: {execution.completed_tests}/{execution.total_tests}\n                    </span>\n                    {execution.failed_tests > 0 && (\n                      <span className=\"text-red-600\">\n                        Failed: {execution.failed_tests}\n                      </span>\n                    )}\n                  </div>\n                  {execution.estimated_time_remaining > 0 && (\n                    <span className=\"text-gray-500\">\n                      ETA: {formatDuration(execution.estimated_time_remaining)}\n                    </span>\n                  )}\n                </div>\n\n                <div className=\"mt-2 text-sm text-gray-600\">\n                  {execution.message}\n                </div>\n\n                {execution.current_test && (\n                  <div className=\"mt-3 p-3 bg-gray-50 rounded-md\">\n                    <div className=\"text-sm font-medium mb-1\">Currently Running:</div>\n                    <div className=\"text-sm text-gray-600 space-y-1\">\n                      <div>Test Case #{execution.current_test.test_case_id}</div>\n                      <div>Model: {execution.current_test.model}</div>\n                      <div>Started: {formatTime(execution.current_test.started_at.toString())}</div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default QueueMonitor;"],"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","ignoreList":[]}