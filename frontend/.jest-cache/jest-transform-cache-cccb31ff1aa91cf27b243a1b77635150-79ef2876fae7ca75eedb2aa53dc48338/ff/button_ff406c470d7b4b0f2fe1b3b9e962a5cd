0296d448f1d1272831201c066e399150
"use strict";

/* istanbul ignore next */
function cov_1lhpdh43vt() {
  var path = "/workspaces/prompt-card-system/frontend/src/components/ui/button.tsx";
  var hash = "d36a04385f6f650f0e52c040dccfd3a88e949746";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/prompt-card-system/frontend/src/components/ui/button.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 22
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "4": {
        start: {
          line: 12,
          column: 29
        },
        end: {
          line: 12,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 51
        }
      },
      "6": {
        start: {
          line: 14,
          column: 39
        },
        end: {
          line: 14,
          column: 51
        }
      },
      "7": {
        start: {
          line: 15,
          column: 28
        },
        end: {
          line: 15,
          column: 41
        }
      },
      "8": {
        start: {
          line: 16,
          column: 27
        },
        end: {
          line: 16,
          column: 40
        }
      },
      "9": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 20
        }
      },
      "10": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 66
        }
      },
      "11": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 24,
          column: 5
        }
      },
      "12": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 19
        }
      },
      "13": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "14": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 28,
          column: 10
        }
      },
      "15": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 53
        }
      },
      "16": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "17": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 30
        }
      },
      "18": {
        start: {
          line: 34,
          column: 17
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "19": {
        start: {
          line: 37,
          column: 32
        },
        end: {
          line: 37,
          column: 88
        }
      },
      "20": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "21": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "22": {
        start: {
          line: 40,
          column: 23
        },
        end: {
          line: 40,
          column: 95
        }
      },
      "23": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 45,
          column: 13
        }
      },
      "24": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 57
        }
      },
      "25": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 39
        }
      },
      "26": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 25
        }
      },
      "27": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "28": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 31
        }
      },
      "29": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 18
        }
      },
      "30": {
        start: {
          line: 54,
          column: 15
        },
        end: {
          line: 72,
          column: 1
        }
      },
      "31": {
        start: {
          line: 55,
          column: 24
        },
        end: {
          line: 55,
          column: 259
        }
      },
      "32": {
        start: {
          line: 56,
          column: 27
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "33": {
        start: {
          line: 62,
          column: 24
        },
        end: {
          line: 66,
          column: 5
        }
      },
      "34": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 71,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 33
          }
        },
        loc: {
          start: {
            line: 13,
            column: 47
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 39
          },
          end: {
            line: 17,
            column: 40
          }
        },
        loc: {
          start: {
            line: 17,
            column: 61
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 34
          }
        },
        loc: {
          start: {
            line: 21,
            column: 53
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 54,
            column: 15
          },
          end: {
            line: 54,
            column: 16
          }
        },
        loc: {
          start: {
            line: 54,
            column: 117
          },
          end: {
            line: 72,
            column: 1
          }
        },
        line: 54
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 18,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 18,
            column: 29
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 48
          },
          end: {
            line: 18,
            column: 65
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 22,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 22,
            column: 20
          }
        }, {
          start: {
            line: 22,
            column: 24
          },
          end: {
            line: 22,
            column: 27
          }
        }, {
          start: {
            line: 22,
            column: 31
          },
          end: {
            line: 22,
            column: 45
          }
        }],
        line: 22
      },
      "4": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "5": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 20
          }
        }, {
          start: {
            line: 25,
            column: 24
          },
          end: {
            line: 25,
            column: 47
          }
        }, {
          start: {
            line: 25,
            column: 51
          },
          end: {
            line: 25,
            column: 76
          }
        }],
        line: 25
      },
      "6": {
        loc: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "7": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 13
          }
        }, {
          start: {
            line: 31,
            column: 17
          },
          end: {
            line: 31,
            column: 31
          }
        }],
        line: 31
      },
      "8": {
        loc: {
          start: {
            line: 37,
            column: 32
          },
          end: {
            line: 37,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 32
          },
          end: {
            line: 37,
            column: 53
          }
        }, {
          start: {
            line: 37,
            column: 57
          },
          end: {
            line: 37,
            column: 88
          }
        }],
        line: 37
      },
      "9": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "10": {
        loc: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 29
          }
        }, {
          start: {
            line: 39,
            column: 33
          },
          end: {
            line: 39,
            column: 79
          }
        }],
        line: 39
      },
      "11": {
        loc: {
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 40,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 47
          },
          end: {
            line: 40,
            column: 88
          }
        }, {
          start: {
            line: 40,
            column: 91
          },
          end: {
            line: 40,
            column: 95
          }
        }],
        line: 40
      },
      "12": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        }, {
          start: {
            line: 43,
            column: 19
          },
          end: {
            line: 45,
            column: 13
          }
        }],
        line: 41
      },
      "13": {
        loc: {
          start: {
            line: 41,
            column: 16
          },
          end: {
            line: 41,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 16
          },
          end: {
            line: 41,
            column: 20
          }
        }, {
          start: {
            line: 41,
            column: 25
          },
          end: {
            line: 41,
            column: 33
          }
        }, {
          start: {
            line: 41,
            column: 37
          },
          end: {
            line: 41,
            column: 45
          }
        }],
        line: 41
      },
      "14": {
        loc: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "15": {
        loc: {
          start: {
            line: 54,
            column: 18
          },
          end: {
            line: 54,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 54,
            column: 28
          },
          end: {
            line: 54,
            column: 37
          }
        }],
        line: 54
      },
      "16": {
        loc: {
          start: {
            line: 54,
            column: 39
          },
          end: {
            line: 54,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 54,
            column: 46
          },
          end: {
            line: 54,
            column: 50
          }
        }],
        line: 54
      },
      "17": {
        loc: {
          start: {
            line: 54,
            column: 56
          },
          end: {
            line: 54,
            column: 76
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 54,
            column: 68
          },
          end: {
            line: 54,
            column: 76
          }
        }],
        line: 54
      },
      "18": {
        loc: {
          start: {
            line: 54,
            column: 78
          },
          end: {
            line: 54,
            column: 92
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 54,
            column: 90
          },
          end: {
            line: 54,
            column: 92
          }
        }],
        line: 54
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0],
      "17": [0],
      "18": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/workspaces/prompt-card-system/frontend/src/components/ui/button.tsx"],
      sourcesContent: ["import * as React from \"react\";\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: 'default' | 'outline' | 'ghost' | 'destructive';\n  size?: 'sm' | 'md' | 'lg';\n  as?: React.ElementType;\n  children: React.ReactNode;\n}\n\nexport const Button: React.FC<ButtonProps> = ({ \n  variant = 'default', \n  size = 'md',\n  as: Component = 'button',\n  className = \"\", \n  children,\n  ...props \n}) => {\n  const baseClasses = \"inline-flex items-center justify-center rounded-md font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none\";\n  \n  const variantClasses = {\n    default: \"bg-blue-600 text-white hover:bg-blue-700\",\n    outline: \"border border-gray-300 bg-white text-gray-700 hover:bg-gray-50\",\n    ghost: \"text-gray-700 hover:bg-gray-100\",\n    destructive: \"bg-red-600 text-white hover:bg-red-700\"\n  };\n\n  const sizeClasses = {\n    sm: \"px-3 py-1.5 text-sm\",\n    md: \"px-4 py-2 text-sm\", \n    lg: \"px-6 py-3 text-base\"\n  };\n\n  return (\n    <Component \n      className={`${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`}\n      {...props}\n    >\n      {children}\n    </Component>\n  );\n};"],
      names: ["Button", "variant", "size", "as", "Component", "className", "children", "props", "baseClasses", "variantClasses", "default", "outline", "ghost", "destructive", "sizeClasses", "sm", "md", "lg"],
      mappings: ";;;;+BASaA;;;eAAAA;;;;+DATU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAShB,MAAMA,SAAgC,CAAC,EAC5CC,UAAU,SAAS,EACnBC,OAAO,IAAI,EACXC,IAAIC,YAAY,QAAQ,EACxBC,YAAY,EAAE,EACdC,QAAQ,EACR,GAAGC,OACJ;IACC,MAAMC,cAAc;IAEpB,MAAMC,iBAAiB;QACrBC,SAAS;QACTC,SAAS;QACTC,OAAO;QACPC,aAAa;IACf;IAEA,MAAMC,cAAc;QAClBC,IAAI;QACJC,IAAI;QACJC,IAAI;IACN;IAEA,qBACE,qBAACb;QACCC,WAAW,CAAC,EAAEG,YAAY,CAAC,EAAEC,cAAc,CAACR,QAAQ,CAAC,CAAC,EAAEa,WAAW,CAACZ,KAAK,CAAC,CAAC,EAAEG,UAAU,CAAC;QACvF,GAAGE,KAAK;kBAERD;;AAGP"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d36a04385f6f650f0e52c040dccfd3a88e949746"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1lhpdh43vt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1lhpdh43vt();
cov_1lhpdh43vt().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1lhpdh43vt().s[1]++;
Object.defineProperty(exports, "Button", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1lhpdh43vt().f[0]++;
    cov_1lhpdh43vt().s[2]++;
    return Button;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1lhpdh43vt().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1lhpdh43vt().s[4]++, _interop_require_wildcard(require("react")));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1lhpdh43vt().f[1]++;
  cov_1lhpdh43vt().s[5]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1lhpdh43vt().b[0][0]++;
    cov_1lhpdh43vt().s[6]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1lhpdh43vt().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1lhpdh43vt().s[7]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1lhpdh43vt().s[8]++, new WeakMap());
  /* istanbul ignore next */
  cov_1lhpdh43vt().s[9]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1lhpdh43vt().f[2]++;
    cov_1lhpdh43vt().s[10]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1lhpdh43vt().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1lhpdh43vt().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1lhpdh43vt().f[3]++;
  cov_1lhpdh43vt().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_1lhpdh43vt().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1lhpdh43vt().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1lhpdh43vt().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1lhpdh43vt().b[2][0]++;
    cov_1lhpdh43vt().s[12]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1lhpdh43vt().b[2][1]++;
  }
  cov_1lhpdh43vt().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_1lhpdh43vt().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1lhpdh43vt().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1lhpdh43vt().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1lhpdh43vt().b[4][0]++;
    cov_1lhpdh43vt().s[14]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1lhpdh43vt().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1lhpdh43vt().s[15]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1lhpdh43vt().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_1lhpdh43vt().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1lhpdh43vt().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1lhpdh43vt().b[6][0]++;
    cov_1lhpdh43vt().s[17]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1lhpdh43vt().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1lhpdh43vt().s[18]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1lhpdh43vt().s[19]++,
  /* istanbul ignore next */
  (cov_1lhpdh43vt().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1lhpdh43vt().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1lhpdh43vt().s[20]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1lhpdh43vt().s[21]++;
    if (
    /* istanbul ignore next */
    (cov_1lhpdh43vt().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1lhpdh43vt().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1lhpdh43vt().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1lhpdh43vt().s[22]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1lhpdh43vt().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1lhpdh43vt().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1lhpdh43vt().s[23]++;
      if (
      /* istanbul ignore next */
      (cov_1lhpdh43vt().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1lhpdh43vt().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1lhpdh43vt().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1lhpdh43vt().b[12][0]++;
        cov_1lhpdh43vt().s[24]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1lhpdh43vt().b[12][1]++;
        cov_1lhpdh43vt().s[25]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1lhpdh43vt().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1lhpdh43vt().s[26]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1lhpdh43vt().s[27]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1lhpdh43vt().b[14][0]++;
    cov_1lhpdh43vt().s[28]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1lhpdh43vt().b[14][1]++;
  }
  cov_1lhpdh43vt().s[29]++;
  return newObj;
}
/* istanbul ignore next */
cov_1lhpdh43vt().s[30]++;
const Button = ({
  variant =
  /* istanbul ignore next */
  (cov_1lhpdh43vt().b[15][0]++, "default"),
  size =
  /* istanbul ignore next */
  (cov_1lhpdh43vt().b[16][0]++, "md"),
  as: Component =
  /* istanbul ignore next */
  (cov_1lhpdh43vt().b[17][0]++, "button"),
  className =
  /* istanbul ignore next */
  (cov_1lhpdh43vt().b[18][0]++, ""),
  children,
  ...props
}) => {
  /* istanbul ignore next */
  cov_1lhpdh43vt().f[4]++;
  const baseClasses =
  /* istanbul ignore next */
  (cov_1lhpdh43vt().s[31]++, "inline-flex items-center justify-center rounded-md font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none");
  const variantClasses =
  /* istanbul ignore next */
  (cov_1lhpdh43vt().s[32]++, {
    default: "bg-blue-600 text-white hover:bg-blue-700",
    outline: "border border-gray-300 bg-white text-gray-700 hover:bg-gray-50",
    ghost: "text-gray-700 hover:bg-gray-100",
    destructive: "bg-red-600 text-white hover:bg-red-700"
  });
  const sizeClasses =
  /* istanbul ignore next */
  (cov_1lhpdh43vt().s[33]++, {
    sm: "px-3 py-1.5 text-sm",
    md: "px-4 py-2 text-sm",
    lg: "px-6 py-3 text-base"
  });
  /* istanbul ignore next */
  cov_1lhpdh43vt().s[34]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(Component, {
    className: `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`,
    ...props,
    children: children
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCdXR0b24iLCJ2YXJpYW50IiwiY292XzFsaHBkaDQzdnQiLCJiIiwic2l6ZSIsImFzIiwiQ29tcG9uZW50IiwiY2xhc3NOYW1lIiwiY2hpbGRyZW4iLCJwcm9wcyIsImYiLCJiYXNlQ2xhc3NlcyIsInMiLCJ2YXJpYW50Q2xhc3NlcyIsImRlZmF1bHQiLCJvdXRsaW5lIiwiZ2hvc3QiLCJkZXN0cnVjdGl2ZSIsInNpemVDbGFzc2VzIiwic20iLCJtZCIsImxnIiwiX2pzeHJ1bnRpbWUiLCJqc3giXSwic291cmNlcyI6WyIvd29ya3NwYWNlcy9wcm9tcHQtY2FyZC1zeXN0ZW0vZnJvbnRlbmQvc3JjL2NvbXBvbmVudHMvdWkvYnV0dG9uLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuaW50ZXJmYWNlIEJ1dHRvblByb3BzIGV4dGVuZHMgUmVhY3QuQnV0dG9uSFRNTEF0dHJpYnV0ZXM8SFRNTEJ1dHRvbkVsZW1lbnQ+IHtcbiAgdmFyaWFudD86ICdkZWZhdWx0JyB8ICdvdXRsaW5lJyB8ICdnaG9zdCcgfCAnZGVzdHJ1Y3RpdmUnO1xuICBzaXplPzogJ3NtJyB8ICdtZCcgfCAnbGcnO1xuICBhcz86IFJlYWN0LkVsZW1lbnRUeXBlO1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xufVxuXG5leHBvcnQgY29uc3QgQnV0dG9uOiBSZWFjdC5GQzxCdXR0b25Qcm9wcz4gPSAoeyBcbiAgdmFyaWFudCA9ICdkZWZhdWx0JywgXG4gIHNpemUgPSAnbWQnLFxuICBhczogQ29tcG9uZW50ID0gJ2J1dHRvbicsXG4gIGNsYXNzTmFtZSA9IFwiXCIsIFxuICBjaGlsZHJlbixcbiAgLi4ucHJvcHMgXG59KSA9PiB7XG4gIGNvbnN0IGJhc2VDbGFzc2VzID0gXCJpbmxpbmUtZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgcm91bmRlZC1tZCBmb250LW1lZGl1bSB0cmFuc2l0aW9uLWNvbG9ycyBmb2N1cy12aXNpYmxlOm91dGxpbmUtbm9uZSBmb2N1cy12aXNpYmxlOnJpbmctMiBmb2N1cy12aXNpYmxlOnJpbmctYmx1ZS01MDAgZm9jdXMtdmlzaWJsZTpyaW5nLW9mZnNldC0yIGRpc2FibGVkOm9wYWNpdHktNTAgZGlzYWJsZWQ6cG9pbnRlci1ldmVudHMtbm9uZVwiO1xuICBcbiAgY29uc3QgdmFyaWFudENsYXNzZXMgPSB7XG4gICAgZGVmYXVsdDogXCJiZy1ibHVlLTYwMCB0ZXh0LXdoaXRlIGhvdmVyOmJnLWJsdWUtNzAwXCIsXG4gICAgb3V0bGluZTogXCJib3JkZXIgYm9yZGVyLWdyYXktMzAwIGJnLXdoaXRlIHRleHQtZ3JheS03MDAgaG92ZXI6YmctZ3JheS01MFwiLFxuICAgIGdob3N0OiBcInRleHQtZ3JheS03MDAgaG92ZXI6YmctZ3JheS0xMDBcIixcbiAgICBkZXN0cnVjdGl2ZTogXCJiZy1yZWQtNjAwIHRleHQtd2hpdGUgaG92ZXI6YmctcmVkLTcwMFwiXG4gIH07XG5cbiAgY29uc3Qgc2l6ZUNsYXNzZXMgPSB7XG4gICAgc206IFwicHgtMyBweS0xLjUgdGV4dC1zbVwiLFxuICAgIG1kOiBcInB4LTQgcHktMiB0ZXh0LXNtXCIsIFxuICAgIGxnOiBcInB4LTYgcHktMyB0ZXh0LWJhc2VcIlxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPENvbXBvbmVudCBcbiAgICAgIGNsYXNzTmFtZT17YCR7YmFzZUNsYXNzZXN9ICR7dmFyaWFudENsYXNzZXNbdmFyaWFudF19ICR7c2l6ZUNsYXNzZXNbc2l6ZV19ICR7Y2xhc3NOYW1lfWB9XG4gICAgICB7Li4ucHJvcHN9XG4gICAgPlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvQ29tcG9uZW50PlxuICApO1xufTsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytCQVNhOzs7Ozs7V0FBQUEsTUFBQTs7Ozs7Ozs7eUVBVFU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVNoQixNQUFNQSxNQUFBLEdBQWdDQSxDQUFDO0VBQzVDQyxPQUFBO0VBQUE7RUFBQSxDQUFBQyxjQUFBLEdBQUFDLENBQUEsV0FBVSxTQUFTO0VBQ25CQyxJQUFBO0VBQUE7RUFBQSxDQUFBRixjQUFBLEdBQUFDLENBQUEsV0FBTyxJQUFJO0VBQ1hFLEVBQUEsRUFBSUMsU0FBQTtFQUFBO0VBQUEsQ0FBQUosY0FBQSxHQUFBQyxDQUFBLFdBQVksUUFBUTtFQUN4QkksU0FBQTtFQUFBO0VBQUEsQ0FBQUwsY0FBQSxHQUFBQyxDQUFBLFdBQVksRUFBRTtFQUNkSyxRQUFRO0VBQ1IsR0FBR0M7QUFBQSxDQUNKO0VBQUE7RUFBQVAsY0FBQSxHQUFBUSxDQUFBO0VBQ0MsTUFBTUMsV0FBQTtFQUFBO0VBQUEsQ0FBQVQsY0FBQSxHQUFBVSxDQUFBLFFBQWM7RUFFcEIsTUFBTUMsY0FBQTtFQUFBO0VBQUEsQ0FBQVgsY0FBQSxHQUFBVSxDQUFBLFFBQWlCO0lBQ3JCRSxPQUFBLEVBQVM7SUFDVEMsT0FBQSxFQUFTO0lBQ1RDLEtBQUEsRUFBTztJQUNQQyxXQUFBLEVBQWE7RUFDZjtFQUVBLE1BQU1DLFdBQUE7RUFBQTtFQUFBLENBQUFoQixjQUFBLEdBQUFVLENBQUEsUUFBYztJQUNsQk8sRUFBQSxFQUFJO0lBQ0pDLEVBQUEsRUFBSTtJQUNKQyxFQUFBLEVBQUk7RUFDTjtFQUFBO0VBQUFuQixjQUFBLEdBQUFVLENBQUE7RUFFQSxvQkFDRSxJQUFBVSxXQUFBLENBQUFDLEdBQUEsRUFBQ2pCLFNBQUE7SUFDQ0MsU0FBQSxFQUFXLEdBQUdJLFdBQUEsSUFBZUUsY0FBYyxDQUFDWixPQUFBLENBQVEsSUFBSWlCLFdBQVcsQ0FBQ2QsSUFBQSxDQUFLLElBQUlHLFNBQUEsRUFBVztJQUN2RixHQUFHRSxLQUFLO2NBRVJEOztBQUdQIiwiaWdub3JlTGlzdCI6W119