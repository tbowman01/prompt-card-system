# Prometheus Configuration for GHCR Monitoring

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'ghcr-monitoring'
    replica: 'prometheus-1'

rule_files:
  - "alerts.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager-ghcr:9093

scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: '/metrics'

  # GHCR Metrics Exporter
  - job_name: 'ghcr-exporter'
    static_configs:
      - targets: ['ghcr-exporter:9100']
    scrape_interval: 30s
    metrics_path: '/metrics'
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'ghcr-node'

  # Docker Registry Metrics
  - job_name: 'registry-exporter'
    static_configs:
      - targets: ['registry-exporter:9101']
    scrape_interval: 60s
    scrape_timeout: 30s
    metrics_path: '/metrics'
    relabel_configs:
      - source_labels: [__address__]
        target_label: registry
        replacement: 'ghcr.io'

  # Docker Daemon Metrics (if available)
  - job_name: 'docker'
    static_configs:
      - targets: ['host.docker.internal:9323']
    scrape_interval: 30s
    metrics_path: '/metrics'
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'docker-daemon'

  # Application metrics from services (if they expose metrics)
  - job_name: 'prompt-card-backend'
    static_configs:
      - targets: ['backend:9090']  # Adjust port as needed
    scrape_interval: 30s
    metrics_path: '/metrics'
    scrape_timeout: 10s

  # Custom GHCR health check metrics
  - job_name: 'ghcr-health'
    static_configs:
      - targets: ['ghcr-health-checker:8080']
    scrape_interval: 300s  # Every 5 minutes
    metrics_path: '/metrics'
    scrape_timeout: 30s

# Storage configuration
storage:
  tsdb:
    retention.time: 90d
    retention.size: 10GB
    wal-compression: true